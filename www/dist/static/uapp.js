System.registerDynamic('npm:react-dom@15.6.1/lib/ARIADOMPropertyConfig.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ARIADOMPropertyConfig = {
    Properties: {
      // Global States and Properties
      'aria-current': 0, // state
      'aria-details': 0,
      'aria-disabled': 0, // state
      'aria-hidden': 0, // state
      'aria-invalid': 0, // state
      'aria-keyshortcuts': 0,
      'aria-label': 0,
      'aria-roledescription': 0,
      // Widget Attributes
      'aria-autocomplete': 0,
      'aria-checked': 0,
      'aria-expanded': 0,
      'aria-haspopup': 0,
      'aria-level': 0,
      'aria-modal': 0,
      'aria-multiline': 0,
      'aria-multiselectable': 0,
      'aria-orientation': 0,
      'aria-placeholder': 0,
      'aria-pressed': 0,
      'aria-readonly': 0,
      'aria-required': 0,
      'aria-selected': 0,
      'aria-sort': 0,
      'aria-valuemax': 0,
      'aria-valuemin': 0,
      'aria-valuenow': 0,
      'aria-valuetext': 0,
      // Live Region Attributes
      'aria-atomic': 0,
      'aria-busy': 0,
      'aria-live': 0,
      'aria-relevant': 0,
      // Drag-and-Drop Attributes
      'aria-dropeffect': 0,
      'aria-grabbed': 0,
      // Relationship Attributes
      'aria-activedescendant': 0,
      'aria-colcount': 0,
      'aria-colindex': 0,
      'aria-colspan': 0,
      'aria-controls': 0,
      'aria-describedby': 0,
      'aria-errormessage': 0,
      'aria-flowto': 0,
      'aria-labelledby': 0,
      'aria-owns': 0,
      'aria-posinset': 0,
      'aria-rowcount': 0,
      'aria-rowindex': 0,
      'aria-rowspan': 0,
      'aria-setsize': 0
    },
    DOMAttributeNames: {},
    DOMPropertyNames: {}
  };

  module.exports = ARIADOMPropertyConfig;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/FallbackCompositionState.js', ['npm:object-assign@4.1.1.js', 'npm:react-dom@15.6.1/lib/PooledClass.js', 'npm:react-dom@15.6.1/lib/getTextContentAccessor.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var _assign = $__require('npm:object-assign@4.1.1.js');
  var PooledClass = $__require('npm:react-dom@15.6.1/lib/PooledClass.js');
  var getTextContentAccessor = $__require('npm:react-dom@15.6.1/lib/getTextContentAccessor.js');
  function FallbackCompositionState(root) {
    this._root = root;
    this._startText = this.getText();
    this._fallbackText = null;
  }
  _assign(FallbackCompositionState.prototype, {
    destructor: function () {
      this._root = null;
      this._startText = null;
      this._fallbackText = null;
    },
    getText: function () {
      if ('value' in this._root) {
        return this._root.value;
      }
      return this._root[getTextContentAccessor()];
    },
    getData: function () {
      if (this._fallbackText) {
        return this._fallbackText;
      }
      var start;
      var startValue = this._startText;
      var startLength = startValue.length;
      var end;
      var endValue = this.getText();
      var endLength = endValue.length;
      for (start = 0; start < startLength; start++) {
        if (startValue[start] !== endValue[start]) {
          break;
        }
      }
      var minEnd = startLength - start;
      for (end = 1; end <= minEnd; end++) {
        if (startValue[startLength - end] !== endValue[endLength - end]) {
          break;
        }
      }
      var sliceTail = end > 1 ? 1 - end : undefined;
      this._fallbackText = endValue.slice(start, sliceTail);
      return this._fallbackText;
    }
  });
  PooledClass.addPoolingTo(FallbackCompositionState);
  module.exports = FallbackCompositionState;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/SyntheticCompositionEvent.js', ['npm:react-dom@15.6.1/lib/SyntheticEvent.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var SyntheticEvent = $__require('npm:react-dom@15.6.1/lib/SyntheticEvent.js');
  var CompositionEventInterface = { data: null };
  function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);
  module.exports = SyntheticCompositionEvent;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/SyntheticInputEvent.js', ['npm:react-dom@15.6.1/lib/SyntheticEvent.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var SyntheticEvent = $__require('npm:react-dom@15.6.1/lib/SyntheticEvent.js');
  var InputEventInterface = { data: null };
  function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);
  module.exports = SyntheticInputEvent;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/BeforeInputEventPlugin.js', ['npm:react-dom@15.6.1/lib/EventPropagators.js', 'npm:fbjs@0.8.16/lib/ExecutionEnvironment.js', 'npm:react-dom@15.6.1/lib/FallbackCompositionState.js', 'npm:react-dom@15.6.1/lib/SyntheticCompositionEvent.js', 'npm:react-dom@15.6.1/lib/SyntheticInputEvent.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var EventPropagators = $__require('npm:react-dom@15.6.1/lib/EventPropagators.js');
  var ExecutionEnvironment = $__require('npm:fbjs@0.8.16/lib/ExecutionEnvironment.js');
  var FallbackCompositionState = $__require('npm:react-dom@15.6.1/lib/FallbackCompositionState.js');
  var SyntheticCompositionEvent = $__require('npm:react-dom@15.6.1/lib/SyntheticCompositionEvent.js');
  var SyntheticInputEvent = $__require('npm:react-dom@15.6.1/lib/SyntheticInputEvent.js');
  var END_KEYCODES = [9, 13, 27, 32];
  var START_KEYCODE = 229;
  var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;
  var documentMode = null;
  if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
    documentMode = document.documentMode;
  }
  var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();
  var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
  function isPresto() {
    var opera = window.opera;
    return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
  }
  var SPACEBAR_CODE = 32;
  var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
  var eventTypes = {
    beforeInput: {
      phasedRegistrationNames: {
        bubbled: 'onBeforeInput',
        captured: 'onBeforeInputCapture'
      },
      dependencies: ['topCompositionEnd', 'topKeyPress', 'topTextInput', 'topPaste']
    },
    compositionEnd: {
      phasedRegistrationNames: {
        bubbled: 'onCompositionEnd',
        captured: 'onCompositionEndCapture'
      },
      dependencies: ['topBlur', 'topCompositionEnd', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
    },
    compositionStart: {
      phasedRegistrationNames: {
        bubbled: 'onCompositionStart',
        captured: 'onCompositionStartCapture'
      },
      dependencies: ['topBlur', 'topCompositionStart', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
    },
    compositionUpdate: {
      phasedRegistrationNames: {
        bubbled: 'onCompositionUpdate',
        captured: 'onCompositionUpdateCapture'
      },
      dependencies: ['topBlur', 'topCompositionUpdate', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
    }
  };
  var hasSpaceKeypress = false;
  function isKeypressCommand(nativeEvent) {
    return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) && !(nativeEvent.ctrlKey && nativeEvent.altKey);
  }
  function getCompositionEventType(topLevelType) {
    switch (topLevelType) {
      case 'topCompositionStart':
        return eventTypes.compositionStart;
      case 'topCompositionEnd':
        return eventTypes.compositionEnd;
      case 'topCompositionUpdate':
        return eventTypes.compositionUpdate;
    }
  }
  function isFallbackCompositionStart(topLevelType, nativeEvent) {
    return topLevelType === 'topKeyDown' && nativeEvent.keyCode === START_KEYCODE;
  }
  function isFallbackCompositionEnd(topLevelType, nativeEvent) {
    switch (topLevelType) {
      case 'topKeyUp':
        return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
      case 'topKeyDown':
        return nativeEvent.keyCode !== START_KEYCODE;
      case 'topKeyPress':
      case 'topMouseDown':
      case 'topBlur':
        return true;
      default:
        return false;
    }
  }
  function getDataFromCustomEvent(nativeEvent) {
    var detail = nativeEvent.detail;
    if (typeof detail === 'object' && 'data' in detail) {
      return detail.data;
    }
    return null;
  }
  var currentComposition = null;
  function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var eventType;
    var fallbackData;
    if (canUseCompositionEvent) {
      eventType = getCompositionEventType(topLevelType);
    } else if (!currentComposition) {
      if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
        eventType = eventTypes.compositionStart;
      }
    } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
      eventType = eventTypes.compositionEnd;
    }
    if (!eventType) {
      return null;
    }
    if (useFallbackCompositionData) {
      if (!currentComposition && eventType === eventTypes.compositionStart) {
        currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
      } else if (eventType === eventTypes.compositionEnd) {
        if (currentComposition) {
          fallbackData = currentComposition.getData();
        }
      }
    }
    var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);
    if (fallbackData) {
      event.data = fallbackData;
    } else {
      var customData = getDataFromCustomEvent(nativeEvent);
      if (customData !== null) {
        event.data = customData;
      }
    }
    EventPropagators.accumulateTwoPhaseDispatches(event);
    return event;
  }
  function getNativeBeforeInputChars(topLevelType, nativeEvent) {
    switch (topLevelType) {
      case 'topCompositionEnd':
        return getDataFromCustomEvent(nativeEvent);
      case 'topKeyPress':
        var which = nativeEvent.which;
        if (which !== SPACEBAR_CODE) {
          return null;
        }
        hasSpaceKeypress = true;
        return SPACEBAR_CHAR;
      case 'topTextInput':
        var chars = nativeEvent.data;
        if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
          return null;
        }
        return chars;
      default:
        return null;
    }
  }
  function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
    if (currentComposition) {
      if (topLevelType === 'topCompositionEnd' || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
        var chars = currentComposition.getData();
        FallbackCompositionState.release(currentComposition);
        currentComposition = null;
        return chars;
      }
      return null;
    }
    switch (topLevelType) {
      case 'topPaste':
        return null;
      case 'topKeyPress':
        if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
          return String.fromCharCode(nativeEvent.which);
        }
        return null;
      case 'topCompositionEnd':
        return useFallbackCompositionData ? null : nativeEvent.data;
      default:
        return null;
    }
  }
  function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var chars;
    if (canUseTextInputEvent) {
      chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
    } else {
      chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
    }
    if (!chars) {
      return null;
    }
    var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);
    event.data = chars;
    EventPropagators.accumulateTwoPhaseDispatches(event);
    return event;
  }
  var BeforeInputEventPlugin = {
    eventTypes: eventTypes,
    extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
    }
  };
  module.exports = BeforeInputEventPlugin;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ChangeEventPlugin.js', ['npm:react-dom@15.6.1/lib/EventPluginHub.js', 'npm:react-dom@15.6.1/lib/EventPropagators.js', 'npm:fbjs@0.8.16/lib/ExecutionEnvironment.js', 'npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js', 'npm:react-dom@15.6.1/lib/ReactUpdates.js', 'npm:react-dom@15.6.1/lib/SyntheticEvent.js', 'npm:react-dom@15.6.1/lib/inputValueTracking.js', 'npm:react-dom@15.6.1/lib/getEventTarget.js', 'npm:react-dom@15.6.1/lib/isEventSupported.js', 'npm:react-dom@15.6.1/lib/isTextInputElement.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var EventPluginHub = $__require('npm:react-dom@15.6.1/lib/EventPluginHub.js');
    var EventPropagators = $__require('npm:react-dom@15.6.1/lib/EventPropagators.js');
    var ExecutionEnvironment = $__require('npm:fbjs@0.8.16/lib/ExecutionEnvironment.js');
    var ReactDOMComponentTree = $__require('npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js');
    var ReactUpdates = $__require('npm:react-dom@15.6.1/lib/ReactUpdates.js');
    var SyntheticEvent = $__require('npm:react-dom@15.6.1/lib/SyntheticEvent.js');
    var inputValueTracking = $__require('npm:react-dom@15.6.1/lib/inputValueTracking.js');
    var getEventTarget = $__require('npm:react-dom@15.6.1/lib/getEventTarget.js');
    var isEventSupported = $__require('npm:react-dom@15.6.1/lib/isEventSupported.js');
    var isTextInputElement = $__require('npm:react-dom@15.6.1/lib/isTextInputElement.js');
    var eventTypes = { change: {
        phasedRegistrationNames: {
          bubbled: 'onChange',
          captured: 'onChangeCapture'
        },
        dependencies: ['topBlur', 'topChange', 'topClick', 'topFocus', 'topInput', 'topKeyDown', 'topKeyUp', 'topSelectionChange']
      } };
    function createAndAccumulateChangeEvent(inst, nativeEvent, target) {
      var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, target);
      event.type = 'change';
      EventPropagators.accumulateTwoPhaseDispatches(event);
      return event;
    }
    var activeElement = null;
    var activeElementInst = null;
    function shouldUseChangeEvent(elem) {
      var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
      return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
    }
    var doesChangeEventBubble = false;
    if (ExecutionEnvironment.canUseDOM) {
      doesChangeEventBubble = isEventSupported('change') && (!document.documentMode || document.documentMode > 8);
    }
    function manualDispatchChangeEvent(nativeEvent) {
      var event = createAndAccumulateChangeEvent(activeElementInst, nativeEvent, getEventTarget(nativeEvent));
      ReactUpdates.batchedUpdates(runEventInBatch, event);
    }
    function runEventInBatch(event) {
      EventPluginHub.enqueueEvents(event);
      EventPluginHub.processEventQueue(false);
    }
    function startWatchingForChangeEventIE8(target, targetInst) {
      activeElement = target;
      activeElementInst = targetInst;
      activeElement.attachEvent('onchange', manualDispatchChangeEvent);
    }
    function stopWatchingForChangeEventIE8() {
      if (!activeElement) {
        return;
      }
      activeElement.detachEvent('onchange', manualDispatchChangeEvent);
      activeElement = null;
      activeElementInst = null;
    }
    function getInstIfValueChanged(targetInst, nativeEvent) {
      var updated = inputValueTracking.updateValueIfChanged(targetInst);
      var simulated = nativeEvent.simulated === true && ChangeEventPlugin._allowSimulatedPassThrough;
      if (updated || simulated) {
        return targetInst;
      }
    }
    function getTargetInstForChangeEvent(topLevelType, targetInst) {
      if (topLevelType === 'topChange') {
        return targetInst;
      }
    }
    function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
      if (topLevelType === 'topFocus') {
        stopWatchingForChangeEventIE8();
        startWatchingForChangeEventIE8(target, targetInst);
      } else if (topLevelType === 'topBlur') {
        stopWatchingForChangeEventIE8();
      }
    }
    var isInputEventSupported = false;
    if (ExecutionEnvironment.canUseDOM) {
      isInputEventSupported = isEventSupported('input') && (!('documentMode' in document) || document.documentMode > 9);
    }
    function startWatchingForValueChange(target, targetInst) {
      activeElement = target;
      activeElementInst = targetInst;
      activeElement.attachEvent('onpropertychange', handlePropertyChange);
    }
    function stopWatchingForValueChange() {
      if (!activeElement) {
        return;
      }
      activeElement.detachEvent('onpropertychange', handlePropertyChange);
      activeElement = null;
      activeElementInst = null;
    }
    function handlePropertyChange(nativeEvent) {
      if (nativeEvent.propertyName !== 'value') {
        return;
      }
      if (getInstIfValueChanged(activeElementInst, nativeEvent)) {
        manualDispatchChangeEvent(nativeEvent);
      }
    }
    function handleEventsForInputEventPolyfill(topLevelType, target, targetInst) {
      if (topLevelType === 'topFocus') {
        stopWatchingForValueChange();
        startWatchingForValueChange(target, targetInst);
      } else if (topLevelType === 'topBlur') {
        stopWatchingForValueChange();
      }
    }
    function getTargetInstForInputEventPolyfill(topLevelType, targetInst, nativeEvent) {
      if (topLevelType === 'topSelectionChange' || topLevelType === 'topKeyUp' || topLevelType === 'topKeyDown') {
        return getInstIfValueChanged(activeElementInst, nativeEvent);
      }
    }
    function shouldUseClickEvent(elem) {
      var nodeName = elem.nodeName;
      return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
    }
    function getTargetInstForClickEvent(topLevelType, targetInst, nativeEvent) {
      if (topLevelType === 'topClick') {
        return getInstIfValueChanged(targetInst, nativeEvent);
      }
    }
    function getTargetInstForInputOrChangeEvent(topLevelType, targetInst, nativeEvent) {
      if (topLevelType === 'topInput' || topLevelType === 'topChange') {
        return getInstIfValueChanged(targetInst, nativeEvent);
      }
    }
    function handleControlledInputBlur(inst, node) {
      if (inst == null) {
        return;
      }
      var state = inst._wrapperState || node._wrapperState;
      if (!state || !state.controlled || node.type !== 'number') {
        return;
      }
      var value = '' + node.value;
      if (node.getAttribute('value') !== value) {
        node.setAttribute('value', value);
      }
    }
    var ChangeEventPlugin = {
      eventTypes: eventTypes,
      _allowSimulatedPassThrough: true,
      _isInputEventSupported: isInputEventSupported,
      extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;
        var getTargetInstFunc, handleEventFunc;
        if (shouldUseChangeEvent(targetNode)) {
          if (doesChangeEventBubble) {
            getTargetInstFunc = getTargetInstForChangeEvent;
          } else {
            handleEventFunc = handleEventsForChangeEventIE8;
          }
        } else if (isTextInputElement(targetNode)) {
          if (isInputEventSupported) {
            getTargetInstFunc = getTargetInstForInputOrChangeEvent;
          } else {
            getTargetInstFunc = getTargetInstForInputEventPolyfill;
            handleEventFunc = handleEventsForInputEventPolyfill;
          }
        } else if (shouldUseClickEvent(targetNode)) {
          getTargetInstFunc = getTargetInstForClickEvent;
        }
        if (getTargetInstFunc) {
          var inst = getTargetInstFunc(topLevelType, targetInst, nativeEvent);
          if (inst) {
            var event = createAndAccumulateChangeEvent(inst, nativeEvent, nativeEventTarget);
            return event;
          }
        }
        if (handleEventFunc) {
          handleEventFunc(topLevelType, targetNode, targetInst);
        }
        if (topLevelType === 'topBlur') {
          handleControlledInputBlur(targetInst, targetNode);
        }
      }
    };
    module.exports = ChangeEventPlugin;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/DefaultEventPluginOrder.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  /**
   * Module that is injectable into `EventPluginHub`, that specifies a
   * deterministic ordering of `EventPlugin`s. A convenient way to reason about
   * plugins, without having to package every one of them. This is better than
   * having plugins be ordered in the same order that they are injected because
   * that ordering would be influenced by the packaging order.
   * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
   * preventing default on events is convenient in `SimpleEventPlugin` handlers.
   */

  var global = this || self,
      GLOBAL = global;
  var DefaultEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'TapEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];

  module.exports = DefaultEventPluginOrder;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/EnterLeaveEventPlugin.js', ['npm:react-dom@15.6.1/lib/EventPropagators.js', 'npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js', 'npm:react-dom@15.6.1/lib/SyntheticMouseEvent.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var EventPropagators = $__require('npm:react-dom@15.6.1/lib/EventPropagators.js');
  var ReactDOMComponentTree = $__require('npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js');
  var SyntheticMouseEvent = $__require('npm:react-dom@15.6.1/lib/SyntheticMouseEvent.js');
  var eventTypes = {
    mouseEnter: {
      registrationName: 'onMouseEnter',
      dependencies: ['topMouseOut', 'topMouseOver']
    },
    mouseLeave: {
      registrationName: 'onMouseLeave',
      dependencies: ['topMouseOut', 'topMouseOver']
    }
  };
  var EnterLeaveEventPlugin = {
    eventTypes: eventTypes,
    extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      if (topLevelType === 'topMouseOver' && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
        return null;
      }
      if (topLevelType !== 'topMouseOut' && topLevelType !== 'topMouseOver') {
        return null;
      }
      var win;
      if (nativeEventTarget.window === nativeEventTarget) {
        win = nativeEventTarget;
      } else {
        var doc = nativeEventTarget.ownerDocument;
        if (doc) {
          win = doc.defaultView || doc.parentWindow;
        } else {
          win = window;
        }
      }
      var from;
      var to;
      if (topLevelType === 'topMouseOut') {
        from = targetInst;
        var related = nativeEvent.relatedTarget || nativeEvent.toElement;
        to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
      } else {
        from = null;
        to = targetInst;
      }
      if (from === to) {
        return null;
      }
      var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
      var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);
      var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
      leave.type = 'mouseleave';
      leave.target = fromNode;
      leave.relatedTarget = toNode;
      var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
      enter.type = 'mouseenter';
      enter.target = toNode;
      enter.relatedTarget = fromNode;
      EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);
      return [leave, enter];
    }
  };
  module.exports = EnterLeaveEventPlugin;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/HTMLDOMPropertyConfig.js', ['npm:react-dom@15.6.1/lib/DOMProperty.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var DOMProperty = $__require('npm:react-dom@15.6.1/lib/DOMProperty.js');
  var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
  var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
  var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
  var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
  var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;
  var HTMLDOMPropertyConfig = {
    isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
    Properties: {
      accept: 0,
      acceptCharset: 0,
      accessKey: 0,
      action: 0,
      allowFullScreen: HAS_BOOLEAN_VALUE,
      allowTransparency: 0,
      alt: 0,
      as: 0,
      async: HAS_BOOLEAN_VALUE,
      autoComplete: 0,
      autoPlay: HAS_BOOLEAN_VALUE,
      capture: HAS_BOOLEAN_VALUE,
      cellPadding: 0,
      cellSpacing: 0,
      charSet: 0,
      challenge: 0,
      checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
      cite: 0,
      classID: 0,
      className: 0,
      cols: HAS_POSITIVE_NUMERIC_VALUE,
      colSpan: 0,
      content: 0,
      contentEditable: 0,
      contextMenu: 0,
      controls: HAS_BOOLEAN_VALUE,
      coords: 0,
      crossOrigin: 0,
      data: 0,
      dateTime: 0,
      'default': HAS_BOOLEAN_VALUE,
      defer: HAS_BOOLEAN_VALUE,
      dir: 0,
      disabled: HAS_BOOLEAN_VALUE,
      download: HAS_OVERLOADED_BOOLEAN_VALUE,
      draggable: 0,
      encType: 0,
      form: 0,
      formAction: 0,
      formEncType: 0,
      formMethod: 0,
      formNoValidate: HAS_BOOLEAN_VALUE,
      formTarget: 0,
      frameBorder: 0,
      headers: 0,
      height: 0,
      hidden: HAS_BOOLEAN_VALUE,
      high: 0,
      href: 0,
      hrefLang: 0,
      htmlFor: 0,
      httpEquiv: 0,
      icon: 0,
      id: 0,
      inputMode: 0,
      integrity: 0,
      is: 0,
      keyParams: 0,
      keyType: 0,
      kind: 0,
      label: 0,
      lang: 0,
      list: 0,
      loop: HAS_BOOLEAN_VALUE,
      low: 0,
      manifest: 0,
      marginHeight: 0,
      marginWidth: 0,
      max: 0,
      maxLength: 0,
      media: 0,
      mediaGroup: 0,
      method: 0,
      min: 0,
      minLength: 0,
      multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
      muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
      name: 0,
      nonce: 0,
      noValidate: HAS_BOOLEAN_VALUE,
      open: HAS_BOOLEAN_VALUE,
      optimum: 0,
      pattern: 0,
      placeholder: 0,
      playsInline: HAS_BOOLEAN_VALUE,
      poster: 0,
      preload: 0,
      profile: 0,
      radioGroup: 0,
      readOnly: HAS_BOOLEAN_VALUE,
      referrerPolicy: 0,
      rel: 0,
      required: HAS_BOOLEAN_VALUE,
      reversed: HAS_BOOLEAN_VALUE,
      role: 0,
      rows: HAS_POSITIVE_NUMERIC_VALUE,
      rowSpan: HAS_NUMERIC_VALUE,
      sandbox: 0,
      scope: 0,
      scoped: HAS_BOOLEAN_VALUE,
      scrolling: 0,
      seamless: HAS_BOOLEAN_VALUE,
      selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
      shape: 0,
      size: HAS_POSITIVE_NUMERIC_VALUE,
      sizes: 0,
      span: HAS_POSITIVE_NUMERIC_VALUE,
      spellCheck: 0,
      src: 0,
      srcDoc: 0,
      srcLang: 0,
      srcSet: 0,
      start: HAS_NUMERIC_VALUE,
      step: 0,
      style: 0,
      summary: 0,
      tabIndex: 0,
      target: 0,
      title: 0,
      type: 0,
      useMap: 0,
      value: 0,
      width: 0,
      wmode: 0,
      wrap: 0,
      about: 0,
      datatype: 0,
      inlist: 0,
      prefix: 0,
      property: 0,
      resource: 0,
      'typeof': 0,
      vocab: 0,
      autoCapitalize: 0,
      autoCorrect: 0,
      autoSave: 0,
      color: 0,
      itemProp: 0,
      itemScope: HAS_BOOLEAN_VALUE,
      itemType: 0,
      itemID: 0,
      itemRef: 0,
      results: 0,
      security: 0,
      unselectable: 0
    },
    DOMAttributeNames: {
      acceptCharset: 'accept-charset',
      className: 'class',
      htmlFor: 'for',
      httpEquiv: 'http-equiv'
    },
    DOMPropertyNames: {},
    DOMMutationMethods: { value: function (node, value) {
        if (value == null) {
          return node.removeAttribute('value');
        }
        if (node.type !== 'number' || node.hasAttribute('value') === false) {
          node.setAttribute('value', '' + value);
        } else if (node.validity && !node.validity.badInput && node.ownerDocument.activeElement !== node) {
          node.setAttribute('value', '' + value);
        }
      } }
  };
  module.exports = HTMLDOMPropertyConfig;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactDOMIDOperations.js', ['npm:react-dom@15.6.1/lib/DOMChildrenOperations.js', 'npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var DOMChildrenOperations = $__require('npm:react-dom@15.6.1/lib/DOMChildrenOperations.js');
    var ReactDOMComponentTree = $__require('npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js');
    var ReactDOMIDOperations = { dangerouslyProcessChildrenUpdates: function (parentInst, updates) {
        var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
        DOMChildrenOperations.processUpdates(node, updates);
      } };
    module.exports = ReactDOMIDOperations;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactComponentBrowserEnvironment.js', ['npm:react-dom@15.6.1/lib/DOMChildrenOperations.js', 'npm:react-dom@15.6.1/lib/ReactDOMIDOperations.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var DOMChildrenOperations = $__require('npm:react-dom@15.6.1/lib/DOMChildrenOperations.js');
    var ReactDOMIDOperations = $__require('npm:react-dom@15.6.1/lib/ReactDOMIDOperations.js');
    var ReactComponentBrowserEnvironment = {
      processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,
      replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup
    };
    module.exports = ReactComponentBrowserEnvironment;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/AutoFocusUtils.js', ['npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js', 'npm:fbjs@0.8.16/lib/focusNode.js'], true, function ($__require, exports, module) {
    /* */
    'use strict';

    var global = this || self,
        GLOBAL = global;
    var ReactDOMComponentTree = $__require('npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js');
    var focusNode = $__require('npm:fbjs@0.8.16/lib/focusNode.js');
    var AutoFocusUtils = { focusDOMComponent: function () {
            focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
        } };
    module.exports = AutoFocusUtils;
});
System.registerDynamic("npm:fbjs@0.8.16/lib/camelize.js", [], true, function ($__require, exports, module) {
  /* */
  "use strict";

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * @typechecks
   */

  var global = this || self,
      GLOBAL = global;
  var _hyphenPattern = /-(.)/g;

  /**
   * Camelcases a hyphenated string, for example:
   *
   *   > camelize('background-color')
   *   < "backgroundColor"
   *
   * @param {string} string
   * @return {string}
   */
  function camelize(string) {
    return string.replace(_hyphenPattern, function (_, character) {
      return character.toUpperCase();
    });
  }

  module.exports = camelize;
});
System.registerDynamic('npm:fbjs@0.8.16/lib/camelizeStyleName.js', ['npm:fbjs@0.8.16/lib/camelize.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var camelize = $__require('npm:fbjs@0.8.16/lib/camelize.js');
  var msPattern = /^-ms-/;
  function camelizeStyleName(string) {
    return camelize(string.replace(msPattern, 'ms-'));
  }
  module.exports = camelizeStyleName;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/CSSProperty.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  /**
   * CSS properties which accept numbers but are not in units of "px".
   */

  var global = this || self,
      GLOBAL = global;
  var isUnitlessNumber = {
    animationIterationCount: true,
    borderImageOutset: true,
    borderImageSlice: true,
    borderImageWidth: true,
    boxFlex: true,
    boxFlexGroup: true,
    boxOrdinalGroup: true,
    columnCount: true,
    flex: true,
    flexGrow: true,
    flexPositive: true,
    flexShrink: true,
    flexNegative: true,
    flexOrder: true,
    gridRow: true,
    gridRowEnd: true,
    gridRowSpan: true,
    gridRowStart: true,
    gridColumn: true,
    gridColumnEnd: true,
    gridColumnSpan: true,
    gridColumnStart: true,
    fontWeight: true,
    lineClamp: true,
    lineHeight: true,
    opacity: true,
    order: true,
    orphans: true,
    tabSize: true,
    widows: true,
    zIndex: true,
    zoom: true,

    // SVG-related properties
    fillOpacity: true,
    floodOpacity: true,
    stopOpacity: true,
    strokeDasharray: true,
    strokeDashoffset: true,
    strokeMiterlimit: true,
    strokeOpacity: true,
    strokeWidth: true
  };

  /**
   * @param {string} prefix vendor-specific prefix, eg: Webkit
   * @param {string} key style name, eg: transitionDuration
   * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
   * WebkitTransitionDuration
   */
  function prefixKey(prefix, key) {
    return prefix + key.charAt(0).toUpperCase() + key.substring(1);
  }

  /**
   * Support style names that may come passed in prefixed by adding permutations
   * of vendor prefixes.
   */
  var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

  // Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
  // infinite loop, because it iterates over the newly added props too.
  Object.keys(isUnitlessNumber).forEach(function (prop) {
    prefixes.forEach(function (prefix) {
      isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
    });
  });

  /**
   * Most style properties can be unset by doing .style[prop] = '' but IE8
   * doesn't like doing that with shorthand properties so for the properties that
   * IE8 breaks on, which are listed here, we instead unset each of the
   * individual properties. See http://bugs.jquery.com/ticket/12385.
   * The 4-value 'clock' properties like margin, padding, border-width seem to
   * behave without any problems. Curiously, list-style works too without any
   * special prodding.
   */
  var shorthandPropertyExpansions = {
    background: {
      backgroundAttachment: true,
      backgroundColor: true,
      backgroundImage: true,
      backgroundPositionX: true,
      backgroundPositionY: true,
      backgroundRepeat: true
    },
    backgroundPosition: {
      backgroundPositionX: true,
      backgroundPositionY: true
    },
    border: {
      borderWidth: true,
      borderStyle: true,
      borderColor: true
    },
    borderBottom: {
      borderBottomWidth: true,
      borderBottomStyle: true,
      borderBottomColor: true
    },
    borderLeft: {
      borderLeftWidth: true,
      borderLeftStyle: true,
      borderLeftColor: true
    },
    borderRight: {
      borderRightWidth: true,
      borderRightStyle: true,
      borderRightColor: true
    },
    borderTop: {
      borderTopWidth: true,
      borderTopStyle: true,
      borderTopColor: true
    },
    font: {
      fontStyle: true,
      fontVariant: true,
      fontWeight: true,
      fontSize: true,
      lineHeight: true,
      fontFamily: true
    },
    outline: {
      outlineWidth: true,
      outlineStyle: true,
      outlineColor: true
    }
  };

  var CSSProperty = {
    isUnitlessNumber: isUnitlessNumber,
    shorthandPropertyExpansions: shorthandPropertyExpansions
  };

  module.exports = CSSProperty;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/dangerousStyleValue.js', ['npm:react-dom@15.6.1/lib/CSSProperty.js', 'npm:fbjs@0.8.16/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var CSSProperty = $__require('npm:react-dom@15.6.1/lib/CSSProperty.js');
    var warning = $__require('npm:fbjs@0.8.16/lib/warning.js');
    var isUnitlessNumber = CSSProperty.isUnitlessNumber;
    var styleWarnings = {};
    function dangerousStyleValue(name, value, component, isCustomProperty) {
      var isEmpty = value == null || typeof value === 'boolean' || value === '';
      if (isEmpty) {
        return '';
      }
      var isNonNumeric = isNaN(value);
      if (isCustomProperty || isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
        return '' + value;
      }
      if (typeof value === 'string') {
        if ('production' !== 'production') {
          if (component && value !== '0') {
            var owner = component._currentElement._owner;
            var ownerName = owner ? owner.getName() : null;
            if (ownerName && !styleWarnings[ownerName]) {
              styleWarnings[ownerName] = {};
            }
            var warned = false;
            if (ownerName) {
              var warnings = styleWarnings[ownerName];
              warned = warnings[name];
              if (!warned) {
                warnings[name] = true;
              }
            }
            if (!warned) {
              'production' !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
            }
          }
        }
        value = value.trim();
      }
      return value + 'px';
    }
    module.exports = dangerousStyleValue;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:fbjs@0.8.16/lib/hyphenate.js', [], true, function ($__require, exports, module) {
  /* */
  'use strict';

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * @typechecks
   */

  var global = this || self,
      GLOBAL = global;
  var _uppercasePattern = /([A-Z])/g;

  /**
   * Hyphenates a camelcased string, for example:
   *
   *   > hyphenate('backgroundColor')
   *   < "background-color"
   *
   * For CSS style names, use `hyphenateStyleName` instead which works properly
   * with all vendor prefixes, including `ms`.
   *
   * @param {string} string
   * @return {string}
   */
  function hyphenate(string) {
    return string.replace(_uppercasePattern, '-$1').toLowerCase();
  }

  module.exports = hyphenate;
});
System.registerDynamic('npm:fbjs@0.8.16/lib/hyphenateStyleName.js', ['npm:fbjs@0.8.16/lib/hyphenate.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var hyphenate = $__require('npm:fbjs@0.8.16/lib/hyphenate.js');
  var msPattern = /^ms-/;
  function hyphenateStyleName(string) {
    return hyphenate(string).replace(msPattern, '-ms-');
  }
  module.exports = hyphenateStyleName;
});
System.registerDynamic('npm:fbjs@0.8.16/lib/memoizeStringOnly.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * 
   * @typechecks static-only
   */

  'use strict';

  /**
   * Memoizes the return value of a function that accepts one string argument.
   */

  var global = this || self,
      GLOBAL = global;
  function memoizeStringOnly(callback) {
    var cache = {};
    return function (string) {
      if (!cache.hasOwnProperty(string)) {
        cache[string] = callback.call(this, string);
      }
      return cache[string];
    };
  }

  module.exports = memoizeStringOnly;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/CSSPropertyOperations.js', ['npm:react-dom@15.6.1/lib/CSSProperty.js', 'npm:fbjs@0.8.16/lib/ExecutionEnvironment.js', 'npm:react-dom@15.6.1/lib/ReactInstrumentation.js', 'npm:fbjs@0.8.16/lib/camelizeStyleName.js', 'npm:react-dom@15.6.1/lib/dangerousStyleValue.js', 'npm:fbjs@0.8.16/lib/hyphenateStyleName.js', 'npm:fbjs@0.8.16/lib/memoizeStringOnly.js', 'npm:fbjs@0.8.16/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var CSSProperty = $__require('npm:react-dom@15.6.1/lib/CSSProperty.js');
    var ExecutionEnvironment = $__require('npm:fbjs@0.8.16/lib/ExecutionEnvironment.js');
    var ReactInstrumentation = $__require('npm:react-dom@15.6.1/lib/ReactInstrumentation.js');
    var camelizeStyleName = $__require('npm:fbjs@0.8.16/lib/camelizeStyleName.js');
    var dangerousStyleValue = $__require('npm:react-dom@15.6.1/lib/dangerousStyleValue.js');
    var hyphenateStyleName = $__require('npm:fbjs@0.8.16/lib/hyphenateStyleName.js');
    var memoizeStringOnly = $__require('npm:fbjs@0.8.16/lib/memoizeStringOnly.js');
    var warning = $__require('npm:fbjs@0.8.16/lib/warning.js');
    var processStyleName = memoizeStringOnly(function (styleName) {
      return hyphenateStyleName(styleName);
    });
    var hasShorthandPropertyBug = false;
    var styleFloatAccessor = 'cssFloat';
    if (ExecutionEnvironment.canUseDOM) {
      var tempStyle = document.createElement('div').style;
      try {
        tempStyle.font = '';
      } catch (e) {
        hasShorthandPropertyBug = true;
      }
      if (document.documentElement.style.cssFloat === undefined) {
        styleFloatAccessor = 'styleFloat';
      }
    }
    if ('production' !== 'production') {
      var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
      var badStyleValueWithSemicolonPattern = /;\s*$/;
      var warnedStyleNames = {};
      var warnedStyleValues = {};
      var warnedForNaNValue = false;
      var warnHyphenatedStyleName = function (name, owner) {
        if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
          return;
        }
        warnedStyleNames[name] = true;
        'production' !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
      };
      var warnBadVendoredStyleName = function (name, owner) {
        if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
          return;
        }
        warnedStyleNames[name] = true;
        'production' !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
      };
      var warnStyleValueWithSemicolon = function (name, value, owner) {
        if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
          return;
        }
        warnedStyleValues[value] = true;
        'production' !== 'production' ? warning(false, "Style property values shouldn't contain a semicolon.%s " + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
      };
      var warnStyleValueIsNaN = function (name, value, owner) {
        if (warnedForNaNValue) {
          return;
        }
        warnedForNaNValue = true;
        'production' !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
      };
      var checkRenderMessage = function (owner) {
        if (owner) {
          var name = owner.getName();
          if (name) {
            return ' Check the render method of `' + name + '`.';
          }
        }
        return '';
      };
      var warnValidStyle = function (name, value, component) {
        var owner;
        if (component) {
          owner = component._currentElement._owner;
        }
        if (name.indexOf('-') > -1) {
          warnHyphenatedStyleName(name, owner);
        } else if (badVendoredStyleNamePattern.test(name)) {
          warnBadVendoredStyleName(name, owner);
        } else if (badStyleValueWithSemicolonPattern.test(value)) {
          warnStyleValueWithSemicolon(name, value, owner);
        }
        if (typeof value === 'number' && isNaN(value)) {
          warnStyleValueIsNaN(name, value, owner);
        }
      };
    }
    var CSSPropertyOperations = {
      createMarkupForStyles: function (styles, component) {
        var serialized = '';
        for (var styleName in styles) {
          if (!styles.hasOwnProperty(styleName)) {
            continue;
          }
          var isCustomProperty = styleName.indexOf('--') === 0;
          var styleValue = styles[styleName];
          if ('production' !== 'production') {
            if (!isCustomProperty) {
              warnValidStyle(styleName, styleValue, component);
            }
          }
          if (styleValue != null) {
            serialized += processStyleName(styleName) + ':';
            serialized += dangerousStyleValue(styleName, styleValue, component, isCustomProperty) + ';';
          }
        }
        return serialized || null;
      },
      setValueForStyles: function (node, styles, component) {
        if ('production' !== 'production') {
          ReactInstrumentation.debugTool.onHostOperation({
            instanceID: component._debugID,
            type: 'update styles',
            payload: styles
          });
        }
        var style = node.style;
        for (var styleName in styles) {
          if (!styles.hasOwnProperty(styleName)) {
            continue;
          }
          var isCustomProperty = styleName.indexOf('--') === 0;
          if ('production' !== 'production') {
            if (!isCustomProperty) {
              warnValidStyle(styleName, styles[styleName], component);
            }
          }
          var styleValue = dangerousStyleValue(styleName, styles[styleName], component, isCustomProperty);
          if (styleName === 'float' || styleName === 'cssFloat') {
            styleName = styleFloatAccessor;
          }
          if (isCustomProperty) {
            style.setProperty(styleName, styleValue);
          } else if (styleValue) {
            style[styleName] = styleValue;
          } else {
            var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
            if (expansion) {
              for (var individualStyleName in expansion) {
                style[individualStyleName] = '';
              }
            } else {
              style[styleName] = '';
            }
          }
        }
      }
    };
    module.exports = CSSPropertyOperations;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/quoteAttributeValueForBrowser.js', ['npm:react-dom@15.6.1/lib/escapeTextContentForBrowser.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var escapeTextContentForBrowser = $__require('npm:react-dom@15.6.1/lib/escapeTextContentForBrowser.js');
  function quoteAttributeValueForBrowser(value) {
    return '"' + escapeTextContentForBrowser(value) + '"';
  }
  module.exports = quoteAttributeValueForBrowser;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/DOMPropertyOperations.js', ['npm:react-dom@15.6.1/lib/DOMProperty.js', 'npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js', 'npm:react-dom@15.6.1/lib/ReactInstrumentation.js', 'npm:react-dom@15.6.1/lib/quoteAttributeValueForBrowser.js', 'npm:fbjs@0.8.16/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var DOMProperty = $__require('npm:react-dom@15.6.1/lib/DOMProperty.js');
    var ReactDOMComponentTree = $__require('npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js');
    var ReactInstrumentation = $__require('npm:react-dom@15.6.1/lib/ReactInstrumentation.js');
    var quoteAttributeValueForBrowser = $__require('npm:react-dom@15.6.1/lib/quoteAttributeValueForBrowser.js');
    var warning = $__require('npm:fbjs@0.8.16/lib/warning.js');
    var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
    var illegalAttributeNameCache = {};
    var validatedAttributeNameCache = {};
    function isAttributeNameSafe(attributeName) {
      if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
        return true;
      }
      if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
        return false;
      }
      if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
        validatedAttributeNameCache[attributeName] = true;
        return true;
      }
      illegalAttributeNameCache[attributeName] = true;
      'production' !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
      return false;
    }
    function shouldIgnoreValue(propertyInfo, value) {
      return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
    }
    var DOMPropertyOperations = {
      createMarkupForID: function (id) {
        return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
      },
      setAttributeForID: function (node, id) {
        node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
      },
      createMarkupForRoot: function () {
        return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
      },
      setAttributeForRoot: function (node) {
        node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
      },
      createMarkupForProperty: function (name, value) {
        var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
        if (propertyInfo) {
          if (shouldIgnoreValue(propertyInfo, value)) {
            return '';
          }
          var attributeName = propertyInfo.attributeName;
          if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
            return attributeName + '=""';
          }
          return attributeName + '=' + quoteAttributeValueForBrowser(value);
        } else if (DOMProperty.isCustomAttribute(name)) {
          if (value == null) {
            return '';
          }
          return name + '=' + quoteAttributeValueForBrowser(value);
        }
        return null;
      },
      createMarkupForCustomAttribute: function (name, value) {
        if (!isAttributeNameSafe(name) || value == null) {
          return '';
        }
        return name + '=' + quoteAttributeValueForBrowser(value);
      },
      setValueForProperty: function (node, name, value) {
        var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
        if (propertyInfo) {
          var mutationMethod = propertyInfo.mutationMethod;
          if (mutationMethod) {
            mutationMethod(node, value);
          } else if (shouldIgnoreValue(propertyInfo, value)) {
            this.deleteValueForProperty(node, name);
            return;
          } else if (propertyInfo.mustUseProperty) {
            node[propertyInfo.propertyName] = value;
          } else {
            var attributeName = propertyInfo.attributeName;
            var namespace = propertyInfo.attributeNamespace;
            if (namespace) {
              node.setAttributeNS(namespace, attributeName, '' + value);
            } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
              node.setAttribute(attributeName, '');
            } else {
              node.setAttribute(attributeName, '' + value);
            }
          }
        } else if (DOMProperty.isCustomAttribute(name)) {
          DOMPropertyOperations.setValueForAttribute(node, name, value);
          return;
        }
        if ('production' !== 'production') {
          var payload = {};
          payload[name] = value;
          ReactInstrumentation.debugTool.onHostOperation({
            instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
            type: 'update attribute',
            payload: payload
          });
        }
      },
      setValueForAttribute: function (node, name, value) {
        if (!isAttributeNameSafe(name)) {
          return;
        }
        if (value == null) {
          node.removeAttribute(name);
        } else {
          node.setAttribute(name, '' + value);
        }
        if ('production' !== 'production') {
          var payload = {};
          payload[name] = value;
          ReactInstrumentation.debugTool.onHostOperation({
            instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
            type: 'update attribute',
            payload: payload
          });
        }
      },
      deleteValueForAttribute: function (node, name) {
        node.removeAttribute(name);
        if ('production' !== 'production') {
          ReactInstrumentation.debugTool.onHostOperation({
            instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
            type: 'remove attribute',
            payload: name
          });
        }
      },
      deleteValueForProperty: function (node, name) {
        var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
        if (propertyInfo) {
          var mutationMethod = propertyInfo.mutationMethod;
          if (mutationMethod) {
            mutationMethod(node, undefined);
          } else if (propertyInfo.mustUseProperty) {
            var propName = propertyInfo.propertyName;
            if (propertyInfo.hasBooleanValue) {
              node[propName] = false;
            } else {
              node[propName] = '';
            }
          } else {
            node.removeAttribute(propertyInfo.attributeName);
          }
        } else if (DOMProperty.isCustomAttribute(name)) {
          node.removeAttribute(name);
        }
        if ('production' !== 'production') {
          ReactInstrumentation.debugTool.onHostOperation({
            instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
            type: 'remove attribute',
            payload: name
          });
        }
      }
    };
    module.exports = DOMPropertyOperations;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactDOMInput.js', ['npm:react-dom@15.6.1/lib/reactProdInvariant.js', 'npm:object-assign@4.1.1.js', 'npm:react-dom@15.6.1/lib/DOMPropertyOperations.js', 'npm:react-dom@15.6.1/lib/LinkedValueUtils.js', 'npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js', 'npm:react-dom@15.6.1/lib/ReactUpdates.js', 'npm:fbjs@0.8.16/lib/invariant.js', 'npm:fbjs@0.8.16/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('npm:react-dom@15.6.1/lib/reactProdInvariant.js'),
        _assign = $__require('npm:object-assign@4.1.1.js');
    var DOMPropertyOperations = $__require('npm:react-dom@15.6.1/lib/DOMPropertyOperations.js');
    var LinkedValueUtils = $__require('npm:react-dom@15.6.1/lib/LinkedValueUtils.js');
    var ReactDOMComponentTree = $__require('npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js');
    var ReactUpdates = $__require('npm:react-dom@15.6.1/lib/ReactUpdates.js');
    var invariant = $__require('npm:fbjs@0.8.16/lib/invariant.js');
    var warning = $__require('npm:fbjs@0.8.16/lib/warning.js');
    var didWarnValueLink = false;
    var didWarnCheckedLink = false;
    var didWarnValueDefaultValue = false;
    var didWarnCheckedDefaultChecked = false;
    var didWarnControlledToUncontrolled = false;
    var didWarnUncontrolledToControlled = false;
    function forceUpdateIfMounted() {
      if (this._rootNodeID) {
        ReactDOMInput.updateWrapper(this);
      }
    }
    function isControlled(props) {
      var usesChecked = props.type === 'checkbox' || props.type === 'radio';
      return usesChecked ? props.checked != null : props.value != null;
    }
    var ReactDOMInput = {
      getHostProps: function (inst, props) {
        var value = LinkedValueUtils.getValue(props);
        var checked = LinkedValueUtils.getChecked(props);
        var hostProps = _assign({
          type: undefined,
          step: undefined,
          min: undefined,
          max: undefined
        }, props, {
          defaultChecked: undefined,
          defaultValue: undefined,
          value: value != null ? value : inst._wrapperState.initialValue,
          checked: checked != null ? checked : inst._wrapperState.initialChecked,
          onChange: inst._wrapperState.onChange
        });
        return hostProps;
      },
      mountWrapper: function (inst, props) {
        if ('production' !== 'production') {
          LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);
          var owner = inst._currentElement._owner;
          if (props.valueLink !== undefined && !didWarnValueLink) {
            'production' !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
            didWarnValueLink = true;
          }
          if (props.checkedLink !== undefined && !didWarnCheckedLink) {
            'production' !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
            didWarnCheckedLink = true;
          }
          if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
            'production' !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
            didWarnCheckedDefaultChecked = true;
          }
          if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
            'production' !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
            didWarnValueDefaultValue = true;
          }
        }
        var defaultValue = props.defaultValue;
        inst._wrapperState = {
          initialChecked: props.checked != null ? props.checked : props.defaultChecked,
          initialValue: props.value != null ? props.value : defaultValue,
          listeners: null,
          onChange: _handleChange.bind(inst),
          controlled: isControlled(props)
        };
      },
      updateWrapper: function (inst) {
        var props = inst._currentElement.props;
        if ('production' !== 'production') {
          var controlled = isControlled(props);
          var owner = inst._currentElement._owner;
          if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
            'production' !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
            didWarnUncontrolledToControlled = true;
          }
          if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
            'production' !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
            didWarnControlledToUncontrolled = true;
          }
        }
        var checked = props.checked;
        if (checked != null) {
          DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
        }
        var node = ReactDOMComponentTree.getNodeFromInstance(inst);
        var value = LinkedValueUtils.getValue(props);
        if (value != null) {
          if (value === 0 && node.value === '') {
            node.value = '0';
          } else if (props.type === 'number') {
            var valueAsNumber = parseFloat(node.value, 10) || 0;
            if (value != valueAsNumber || value == valueAsNumber && node.value != value) {
              node.value = '' + value;
            }
          } else if (node.value !== '' + value) {
            node.value = '' + value;
          }
        } else {
          if (props.value == null && props.defaultValue != null) {
            if (node.defaultValue !== '' + props.defaultValue) {
              node.defaultValue = '' + props.defaultValue;
            }
          }
          if (props.checked == null && props.defaultChecked != null) {
            node.defaultChecked = !!props.defaultChecked;
          }
        }
      },
      postMountWrapper: function (inst) {
        var props = inst._currentElement.props;
        var node = ReactDOMComponentTree.getNodeFromInstance(inst);
        switch (props.type) {
          case 'submit':
          case 'reset':
            break;
          case 'color':
          case 'date':
          case 'datetime':
          case 'datetime-local':
          case 'month':
          case 'time':
          case 'week':
            node.value = '';
            node.value = node.defaultValue;
            break;
          default:
            node.value = node.value;
            break;
        }
        var name = node.name;
        if (name !== '') {
          node.name = '';
        }
        node.defaultChecked = !node.defaultChecked;
        node.defaultChecked = !node.defaultChecked;
        if (name !== '') {
          node.name = name;
        }
      }
    };
    function _handleChange(event) {
      var props = this._currentElement.props;
      var returnValue = LinkedValueUtils.executeOnChange(props, event);
      ReactUpdates.asap(forceUpdateIfMounted, this);
      var name = props.name;
      if (props.type === 'radio' && name != null) {
        var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
        var queryRoot = rootNode;
        while (queryRoot.parentNode) {
          queryRoot = queryRoot.parentNode;
        }
        var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');
        for (var i = 0; i < group.length; i++) {
          var otherNode = group[i];
          if (otherNode === rootNode || otherNode.form !== rootNode.form) {
            continue;
          }
          var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
          !otherInstance ? 'production' !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;
          ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
        }
      }
      return returnValue;
    }
    module.exports = ReactDOMInput;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactDOMOption.js', ['npm:object-assign@4.1.1.js', 'npm:react@15.6.1/lib/React.js', 'npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js', 'npm:react-dom@15.6.1/lib/ReactDOMSelect.js', 'npm:fbjs@0.8.16/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _assign = $__require('npm:object-assign@4.1.1.js');
    var React = $__require('npm:react@15.6.1/lib/React.js');
    var ReactDOMComponentTree = $__require('npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js');
    var ReactDOMSelect = $__require('npm:react-dom@15.6.1/lib/ReactDOMSelect.js');
    var warning = $__require('npm:fbjs@0.8.16/lib/warning.js');
    var didWarnInvalidOptionChildren = false;
    function flattenChildren(children) {
      var content = '';
      React.Children.forEach(children, function (child) {
        if (child == null) {
          return;
        }
        if (typeof child === 'string' || typeof child === 'number') {
          content += child;
        } else if (!didWarnInvalidOptionChildren) {
          didWarnInvalidOptionChildren = true;
          'production' !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
        }
      });
      return content;
    }
    var ReactDOMOption = {
      mountWrapper: function (inst, props, hostParent) {
        if ('production' !== 'production') {
          'production' !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
        }
        var selectValue = null;
        if (hostParent != null) {
          var selectParent = hostParent;
          if (selectParent._tag === 'optgroup') {
            selectParent = selectParent._hostParent;
          }
          if (selectParent != null && selectParent._tag === 'select') {
            selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
          }
        }
        var selected = null;
        if (selectValue != null) {
          var value;
          if (props.value != null) {
            value = props.value + '';
          } else {
            value = flattenChildren(props.children);
          }
          selected = false;
          if (Array.isArray(selectValue)) {
            for (var i = 0; i < selectValue.length; i++) {
              if ('' + selectValue[i] === value) {
                selected = true;
                break;
              }
            }
          } else {
            selected = '' + selectValue === value;
          }
        }
        inst._wrapperState = { selected: selected };
      },
      postMountWrapper: function (inst) {
        var props = inst._currentElement.props;
        if (props.value != null) {
          var node = ReactDOMComponentTree.getNodeFromInstance(inst);
          node.setAttribute('value', props.value);
        }
      },
      getHostProps: function (inst, props) {
        var hostProps = _assign({
          selected: undefined,
          children: undefined
        }, props);
        if (inst._wrapperState.selected != null) {
          hostProps.selected = inst._wrapperState.selected;
        }
        var content = flattenChildren(props.children);
        if (content) {
          hostProps.children = content;
        }
        return hostProps;
      }
    };
    module.exports = ReactDOMOption;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactDOMSelect.js', ['npm:object-assign@4.1.1.js', 'npm:react-dom@15.6.1/lib/LinkedValueUtils.js', 'npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js', 'npm:react-dom@15.6.1/lib/ReactUpdates.js', 'npm:fbjs@0.8.16/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _assign = $__require('npm:object-assign@4.1.1.js');
    var LinkedValueUtils = $__require('npm:react-dom@15.6.1/lib/LinkedValueUtils.js');
    var ReactDOMComponentTree = $__require('npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js');
    var ReactUpdates = $__require('npm:react-dom@15.6.1/lib/ReactUpdates.js');
    var warning = $__require('npm:fbjs@0.8.16/lib/warning.js');
    var didWarnValueLink = false;
    var didWarnValueDefaultValue = false;
    function updateOptionsIfPendingUpdateAndMounted() {
      if (this._rootNodeID && this._wrapperState.pendingUpdate) {
        this._wrapperState.pendingUpdate = false;
        var props = this._currentElement.props;
        var value = LinkedValueUtils.getValue(props);
        if (value != null) {
          updateOptions(this, Boolean(props.multiple), value);
        }
      }
    }
    function getDeclarationErrorAddendum(owner) {
      if (owner) {
        var name = owner.getName();
        if (name) {
          return ' Check the render method of `' + name + '`.';
        }
      }
      return '';
    }
    var valuePropNames = ['value', 'defaultValue'];
    function checkSelectPropTypes(inst, props) {
      var owner = inst._currentElement._owner;
      LinkedValueUtils.checkPropTypes('select', props, owner);
      if (props.valueLink !== undefined && !didWarnValueLink) {
        'production' !== 'production' ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnValueLink = true;
      }
      for (var i = 0; i < valuePropNames.length; i++) {
        var propName = valuePropNames[i];
        if (props[propName] == null) {
          continue;
        }
        var isArray = Array.isArray(props[propName]);
        if (props.multiple && !isArray) {
          'production' !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
        } else if (!props.multiple && isArray) {
          'production' !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
        }
      }
    }
    function updateOptions(inst, multiple, propValue) {
      var selectedValue, i;
      var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;
      if (multiple) {
        selectedValue = {};
        for (i = 0; i < propValue.length; i++) {
          selectedValue['' + propValue[i]] = true;
        }
        for (i = 0; i < options.length; i++) {
          var selected = selectedValue.hasOwnProperty(options[i].value);
          if (options[i].selected !== selected) {
            options[i].selected = selected;
          }
        }
      } else {
        selectedValue = '' + propValue;
        for (i = 0; i < options.length; i++) {
          if (options[i].value === selectedValue) {
            options[i].selected = true;
            return;
          }
        }
        if (options.length) {
          options[0].selected = true;
        }
      }
    }
    var ReactDOMSelect = {
      getHostProps: function (inst, props) {
        return _assign({}, props, {
          onChange: inst._wrapperState.onChange,
          value: undefined
        });
      },
      mountWrapper: function (inst, props) {
        if ('production' !== 'production') {
          checkSelectPropTypes(inst, props);
        }
        var value = LinkedValueUtils.getValue(props);
        inst._wrapperState = {
          pendingUpdate: false,
          initialValue: value != null ? value : props.defaultValue,
          listeners: null,
          onChange: _handleChange.bind(inst),
          wasMultiple: Boolean(props.multiple)
        };
        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
          'production' !== 'production' ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
          didWarnValueDefaultValue = true;
        }
      },
      getSelectValueContext: function (inst) {
        return inst._wrapperState.initialValue;
      },
      postUpdateWrapper: function (inst) {
        var props = inst._currentElement.props;
        inst._wrapperState.initialValue = undefined;
        var wasMultiple = inst._wrapperState.wasMultiple;
        inst._wrapperState.wasMultiple = Boolean(props.multiple);
        var value = LinkedValueUtils.getValue(props);
        if (value != null) {
          inst._wrapperState.pendingUpdate = false;
          updateOptions(inst, Boolean(props.multiple), value);
        } else if (wasMultiple !== Boolean(props.multiple)) {
          if (props.defaultValue != null) {
            updateOptions(inst, Boolean(props.multiple), props.defaultValue);
          } else {
            updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
          }
        }
      }
    };
    function _handleChange(event) {
      var props = this._currentElement.props;
      var returnValue = LinkedValueUtils.executeOnChange(props, event);
      if (this._rootNodeID) {
        this._wrapperState.pendingUpdate = true;
      }
      ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
      return returnValue;
    }
    module.exports = ReactDOMSelect;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/LinkedValueUtils.js', ['npm:react-dom@15.6.1/lib/reactProdInvariant.js', 'npm:react-dom@15.6.1/lib/ReactPropTypesSecret.js', 'npm:prop-types@15.6.0/factory.js', 'npm:react@15.6.1/lib/React.js', 'npm:fbjs@0.8.16/lib/invariant.js', 'npm:fbjs@0.8.16/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('npm:react-dom@15.6.1/lib/reactProdInvariant.js');
    var ReactPropTypesSecret = $__require('npm:react-dom@15.6.1/lib/ReactPropTypesSecret.js');
    var propTypesFactory = $__require('npm:prop-types@15.6.0/factory.js');
    var React = $__require('npm:react@15.6.1/lib/React.js');
    var PropTypes = propTypesFactory(React.isValidElement);
    var invariant = $__require('npm:fbjs@0.8.16/lib/invariant.js');
    var warning = $__require('npm:fbjs@0.8.16/lib/warning.js');
    var hasReadOnlyValue = {
      button: true,
      checkbox: true,
      image: true,
      hidden: true,
      radio: true,
      reset: true,
      submit: true
    };
    function _assertSingleLink(inputProps) {
      !(inputProps.checkedLink == null || inputProps.valueLink == null) ? 'production' !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;
    }
    function _assertValueLink(inputProps) {
      _assertSingleLink(inputProps);
      !(inputProps.value == null && inputProps.onChange == null) ? 'production' !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\'t want to use valueLink.') : _prodInvariant('88') : void 0;
    }
    function _assertCheckedLink(inputProps) {
      _assertSingleLink(inputProps);
      !(inputProps.checked == null && inputProps.onChange == null) ? 'production' !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\'t want to use checkedLink') : _prodInvariant('89') : void 0;
    }
    var propTypes = {
      value: function (props, propName, componentName) {
        if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
          return null;
        }
        return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
      },
      checked: function (props, propName, componentName) {
        if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
          return null;
        }
        return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
      },
      onChange: PropTypes.func
    };
    var loggedTypeFailures = {};
    function getDeclarationErrorAddendum(owner) {
      if (owner) {
        var name = owner.getName();
        if (name) {
          return ' Check the render method of `' + name + '`.';
        }
      }
      return '';
    }
    var LinkedValueUtils = {
      checkPropTypes: function (tagName, props, owner) {
        for (var propName in propTypes) {
          if (propTypes.hasOwnProperty(propName)) {
            var error = propTypes[propName](props, propName, tagName, 'prop', null, ReactPropTypesSecret);
          }
          if (error instanceof Error && !(error.message in loggedTypeFailures)) {
            loggedTypeFailures[error.message] = true;
            var addendum = getDeclarationErrorAddendum(owner);
            'production' !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
          }
        }
      },
      getValue: function (inputProps) {
        if (inputProps.valueLink) {
          _assertValueLink(inputProps);
          return inputProps.valueLink.value;
        }
        return inputProps.value;
      },
      getChecked: function (inputProps) {
        if (inputProps.checkedLink) {
          _assertCheckedLink(inputProps);
          return inputProps.checkedLink.value;
        }
        return inputProps.checked;
      },
      executeOnChange: function (inputProps, event) {
        if (inputProps.valueLink) {
          _assertValueLink(inputProps);
          return inputProps.valueLink.requestChange(event.target.value);
        } else if (inputProps.checkedLink) {
          _assertCheckedLink(inputProps);
          return inputProps.checkedLink.requestChange(event.target.checked);
        } else if (inputProps.onChange) {
          return inputProps.onChange.call(undefined, event);
        }
      }
    };
    module.exports = LinkedValueUtils;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactDOMTextarea.js', ['npm:react-dom@15.6.1/lib/reactProdInvariant.js', 'npm:object-assign@4.1.1.js', 'npm:react-dom@15.6.1/lib/LinkedValueUtils.js', 'npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js', 'npm:react-dom@15.6.1/lib/ReactUpdates.js', 'npm:fbjs@0.8.16/lib/invariant.js', 'npm:fbjs@0.8.16/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('npm:react-dom@15.6.1/lib/reactProdInvariant.js'),
        _assign = $__require('npm:object-assign@4.1.1.js');
    var LinkedValueUtils = $__require('npm:react-dom@15.6.1/lib/LinkedValueUtils.js');
    var ReactDOMComponentTree = $__require('npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js');
    var ReactUpdates = $__require('npm:react-dom@15.6.1/lib/ReactUpdates.js');
    var invariant = $__require('npm:fbjs@0.8.16/lib/invariant.js');
    var warning = $__require('npm:fbjs@0.8.16/lib/warning.js');
    var didWarnValueLink = false;
    var didWarnValDefaultVal = false;
    function forceUpdateIfMounted() {
      if (this._rootNodeID) {
        ReactDOMTextarea.updateWrapper(this);
      }
    }
    var ReactDOMTextarea = {
      getHostProps: function (inst, props) {
        !(props.dangerouslySetInnerHTML == null) ? 'production' !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;
        var hostProps = _assign({}, props, {
          value: undefined,
          defaultValue: undefined,
          children: '' + inst._wrapperState.initialValue,
          onChange: inst._wrapperState.onChange
        });
        return hostProps;
      },
      mountWrapper: function (inst, props) {
        if ('production' !== 'production') {
          LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
          if (props.valueLink !== undefined && !didWarnValueLink) {
            'production' !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
            didWarnValueLink = true;
          }
          if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
            'production' !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
            didWarnValDefaultVal = true;
          }
        }
        var value = LinkedValueUtils.getValue(props);
        var initialValue = value;
        if (value == null) {
          var defaultValue = props.defaultValue;
          var children = props.children;
          if (children != null) {
            if ('production' !== 'production') {
              'production' !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
            }
            !(defaultValue == null) ? 'production' !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;
            if (Array.isArray(children)) {
              !(children.length <= 1) ? 'production' !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;
              children = children[0];
            }
            defaultValue = '' + children;
          }
          if (defaultValue == null) {
            defaultValue = '';
          }
          initialValue = defaultValue;
        }
        inst._wrapperState = {
          initialValue: '' + initialValue,
          listeners: null,
          onChange: _handleChange.bind(inst)
        };
      },
      updateWrapper: function (inst) {
        var props = inst._currentElement.props;
        var node = ReactDOMComponentTree.getNodeFromInstance(inst);
        var value = LinkedValueUtils.getValue(props);
        if (value != null) {
          var newValue = '' + value;
          if (newValue !== node.value) {
            node.value = newValue;
          }
          if (props.defaultValue == null) {
            node.defaultValue = newValue;
          }
        }
        if (props.defaultValue != null) {
          node.defaultValue = props.defaultValue;
        }
      },
      postMountWrapper: function (inst) {
        var node = ReactDOMComponentTree.getNodeFromInstance(inst);
        var textContent = node.textContent;
        if (textContent === inst._wrapperState.initialValue) {
          node.value = textContent;
        }
      }
    };
    function _handleChange(event) {
      var props = this._currentElement.props;
      var returnValue = LinkedValueUtils.executeOnChange(props, event);
      ReactUpdates.asap(forceUpdateIfMounted, this);
      return returnValue;
    }
    module.exports = ReactDOMTextarea;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactChildReconciler.js', ['npm:react-dom@15.6.1/lib/ReactReconciler.js', 'npm:react-dom@15.6.1/lib/instantiateReactComponent.js', 'npm:react-dom@15.6.1/lib/KeyEscapeUtils.js', 'npm:react-dom@15.6.1/lib/shouldUpdateReactComponent.js', 'npm:react-dom@15.6.1/lib/traverseAllChildren.js', 'npm:fbjs@0.8.16/lib/warning.js', 'npm:react@15.6.1/lib/ReactComponentTreeHook.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactReconciler = $__require('npm:react-dom@15.6.1/lib/ReactReconciler.js');
    var instantiateReactComponent = $__require('npm:react-dom@15.6.1/lib/instantiateReactComponent.js');
    var KeyEscapeUtils = $__require('npm:react-dom@15.6.1/lib/KeyEscapeUtils.js');
    var shouldUpdateReactComponent = $__require('npm:react-dom@15.6.1/lib/shouldUpdateReactComponent.js');
    var traverseAllChildren = $__require('npm:react-dom@15.6.1/lib/traverseAllChildren.js');
    var warning = $__require('npm:fbjs@0.8.16/lib/warning.js');
    var ReactComponentTreeHook;
    if (typeof process !== 'undefined' && process.env && 'production' === 'test') {
      ReactComponentTreeHook = $__require('npm:react@15.6.1/lib/ReactComponentTreeHook.js');
    }
    function instantiateChild(childInstances, child, name, selfDebugID) {
      var keyUnique = childInstances[name] === undefined;
      if ('production' !== 'production') {
        if (!ReactComponentTreeHook) {
          ReactComponentTreeHook = $__require('npm:react@15.6.1/lib/ReactComponentTreeHook.js');
        }
        if (!keyUnique) {
          'production' !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
        }
      }
      if (child != null && keyUnique) {
        childInstances[name] = instantiateReactComponent(child, true);
      }
    }
    var ReactChildReconciler = {
      instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID) {
        if (nestedChildNodes == null) {
          return null;
        }
        var childInstances = {};
        if ('production' !== 'production') {
          traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {
            return instantiateChild(childInsts, child, name, selfDebugID);
          }, childInstances);
        } else {
          traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
        }
        return childInstances;
      },
      updateChildren: function (prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID) {
        if (!nextChildren && !prevChildren) {
          return;
        }
        var name;
        var prevChild;
        for (name in nextChildren) {
          if (!nextChildren.hasOwnProperty(name)) {
            continue;
          }
          prevChild = prevChildren && prevChildren[name];
          var prevElement = prevChild && prevChild._currentElement;
          var nextElement = nextChildren[name];
          if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
            ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
            nextChildren[name] = prevChild;
          } else {
            if (prevChild) {
              removedNodes[name] = ReactReconciler.getHostNode(prevChild);
              ReactReconciler.unmountComponent(prevChild, false);
            }
            var nextChildInstance = instantiateReactComponent(nextElement, true);
            nextChildren[name] = nextChildInstance;
            var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);
            mountImages.push(nextChildMountImage);
          }
        }
        for (name in prevChildren) {
          if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
            prevChild = prevChildren[name];
            removedNodes[name] = ReactReconciler.getHostNode(prevChild);
            ReactReconciler.unmountComponent(prevChild, false);
          }
        }
      },
      unmountChildren: function (renderedChildren, safely) {
        for (var name in renderedChildren) {
          if (renderedChildren.hasOwnProperty(name)) {
            var renderedChild = renderedChildren[name];
            ReactReconciler.unmountComponent(renderedChild, safely);
          }
        }
      }
    };
    module.exports = ReactChildReconciler;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactElementSymbol.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2014-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  // The Symbol used to tag the ReactElement type. If there is no native Symbol
  // nor polyfill, then a plain number is used for performance.

  var global = this || self,
      GLOBAL = global;
  var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

  module.exports = REACT_ELEMENT_TYPE;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/getIteratorFn.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  /* global Symbol */

  var global = this || self,
      GLOBAL = global;
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  module.exports = getIteratorFn;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/KeyEscapeUtils.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  /**
   * Escape and wrap key so it is safe to use as a reactid
   *
   * @param {string} key to be escaped.
   * @return {string} the escaped key.
   */

  var global = this || self,
      GLOBAL = global;
  function escape(key) {
    var escapeRegex = /[=:]/g;
    var escaperLookup = {
      '=': '=0',
      ':': '=2'
    };
    var escapedString = ('' + key).replace(escapeRegex, function (match) {
      return escaperLookup[match];
    });

    return '$' + escapedString;
  }

  /**
   * Unescape and unwrap key for human-readable display
   *
   * @param {string} key to unescape.
   * @return {string} the unescaped key.
   */
  function unescape(key) {
    var unescapeRegex = /(=0|=2)/g;
    var unescaperLookup = {
      '=0': '=',
      '=2': ':'
    };
    var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

    return ('' + keySubstring).replace(unescapeRegex, function (match) {
      return unescaperLookup[match];
    });
  }

  var KeyEscapeUtils = {
    escape: escape,
    unescape: unescape
  };

  module.exports = KeyEscapeUtils;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/traverseAllChildren.js', ['npm:react-dom@15.6.1/lib/reactProdInvariant.js', 'npm:react@15.6.1/lib/ReactCurrentOwner.js', 'npm:react-dom@15.6.1/lib/ReactElementSymbol.js', 'npm:react-dom@15.6.1/lib/getIteratorFn.js', 'npm:fbjs@0.8.16/lib/invariant.js', 'npm:react-dom@15.6.1/lib/KeyEscapeUtils.js', 'npm:fbjs@0.8.16/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('npm:react-dom@15.6.1/lib/reactProdInvariant.js');
    var ReactCurrentOwner = $__require('npm:react@15.6.1/lib/ReactCurrentOwner.js');
    var REACT_ELEMENT_TYPE = $__require('npm:react-dom@15.6.1/lib/ReactElementSymbol.js');
    var getIteratorFn = $__require('npm:react-dom@15.6.1/lib/getIteratorFn.js');
    var invariant = $__require('npm:fbjs@0.8.16/lib/invariant.js');
    var KeyEscapeUtils = $__require('npm:react-dom@15.6.1/lib/KeyEscapeUtils.js');
    var warning = $__require('npm:fbjs@0.8.16/lib/warning.js');
    var SEPARATOR = '.';
    var SUBSEPARATOR = ':';
    var didWarnAboutMaps = false;
    function getComponentKey(component, index) {
      if (component && typeof component === 'object' && component.key != null) {
        return KeyEscapeUtils.escape(component.key);
      }
      return index.toString(36);
    }
    function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
      var type = typeof children;
      if (type === 'undefined' || type === 'boolean') {
        children = null;
      }
      if (children === null || type === 'string' || type === 'number' || type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
        callback(traverseContext, children, nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
        return 1;
      }
      var child;
      var nextName;
      var subtreeCount = 0;
      var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
      if (Array.isArray(children)) {
        for (var i = 0; i < children.length; i++) {
          child = children[i];
          nextName = nextNamePrefix + getComponentKey(child, i);
          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
        }
      } else {
        var iteratorFn = getIteratorFn(children);
        if (iteratorFn) {
          var iterator = iteratorFn.call(children);
          var step;
          if (iteratorFn !== children.entries) {
            var ii = 0;
            while (!(step = iterator.next()).done) {
              child = step.value;
              nextName = nextNamePrefix + getComponentKey(child, ii++);
              subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
            }
          } else {
            if ('production' !== 'production') {
              var mapsAsChildrenAddendum = '';
              if (ReactCurrentOwner.current) {
                var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
                if (mapsAsChildrenOwnerName) {
                  mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
                }
              }
              'production' !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
              didWarnAboutMaps = true;
            }
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                child = entry[1];
                nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
                subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
              }
            }
          }
        } else if (type === 'object') {
          var addendum = '';
          if ('production' !== 'production') {
            addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
            if (children._isReactElement) {
              addendum = " It looks like you're using an element created by a different " + 'version of React. Make sure to use only one copy of React.';
            }
            if (ReactCurrentOwner.current) {
              var name = ReactCurrentOwner.current.getName();
              if (name) {
                addendum += ' Check the render method of `' + name + '`.';
              }
            }
          }
          var childrenString = String(children);
          !false ? 'production' !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
        }
      }
      return subtreeCount;
    }
    function traverseAllChildren(children, callback, traverseContext) {
      if (children == null) {
        return 0;
      }
      return traverseAllChildrenImpl(children, '', callback, traverseContext);
    }
    module.exports = traverseAllChildren;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/flattenChildren.js', ['npm:react-dom@15.6.1/lib/KeyEscapeUtils.js', 'npm:react-dom@15.6.1/lib/traverseAllChildren.js', 'npm:fbjs@0.8.16/lib/warning.js', 'npm:react@15.6.1/lib/ReactComponentTreeHook.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var KeyEscapeUtils = $__require('npm:react-dom@15.6.1/lib/KeyEscapeUtils.js');
    var traverseAllChildren = $__require('npm:react-dom@15.6.1/lib/traverseAllChildren.js');
    var warning = $__require('npm:fbjs@0.8.16/lib/warning.js');
    var ReactComponentTreeHook;
    if (typeof process !== 'undefined' && process.env && 'production' === 'test') {
      ReactComponentTreeHook = $__require('npm:react@15.6.1/lib/ReactComponentTreeHook.js');
    }
    function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
      if (traverseContext && typeof traverseContext === 'object') {
        var result = traverseContext;
        var keyUnique = result[name] === undefined;
        if ('production' !== 'production') {
          if (!ReactComponentTreeHook) {
            ReactComponentTreeHook = $__require('npm:react@15.6.1/lib/ReactComponentTreeHook.js');
          }
          if (!keyUnique) {
            'production' !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
          }
        }
        if (keyUnique && child != null) {
          result[name] = child;
        }
      }
    }
    function flattenChildren(children, selfDebugID) {
      if (children == null) {
        return children;
      }
      var result = {};
      if ('production' !== 'production') {
        traverseAllChildren(children, function (traverseContext, child, name) {
          return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
        }, result);
      } else {
        traverseAllChildren(children, flattenSingleChildIntoContext, result);
      }
      return result;
    }
    module.exports = flattenChildren;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactMultiChild.js', ['npm:react-dom@15.6.1/lib/reactProdInvariant.js', 'npm:react-dom@15.6.1/lib/ReactComponentEnvironment.js', 'npm:react-dom@15.6.1/lib/ReactInstanceMap.js', 'npm:react-dom@15.6.1/lib/ReactInstrumentation.js', 'npm:react@15.6.1/lib/ReactCurrentOwner.js', 'npm:react-dom@15.6.1/lib/ReactReconciler.js', 'npm:react-dom@15.6.1/lib/ReactChildReconciler.js', 'npm:fbjs@0.8.16/lib/emptyFunction.js', 'npm:react-dom@15.6.1/lib/flattenChildren.js', 'npm:fbjs@0.8.16/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('npm:react-dom@15.6.1/lib/reactProdInvariant.js');
    var ReactComponentEnvironment = $__require('npm:react-dom@15.6.1/lib/ReactComponentEnvironment.js');
    var ReactInstanceMap = $__require('npm:react-dom@15.6.1/lib/ReactInstanceMap.js');
    var ReactInstrumentation = $__require('npm:react-dom@15.6.1/lib/ReactInstrumentation.js');
    var ReactCurrentOwner = $__require('npm:react@15.6.1/lib/ReactCurrentOwner.js');
    var ReactReconciler = $__require('npm:react-dom@15.6.1/lib/ReactReconciler.js');
    var ReactChildReconciler = $__require('npm:react-dom@15.6.1/lib/ReactChildReconciler.js');
    var emptyFunction = $__require('npm:fbjs@0.8.16/lib/emptyFunction.js');
    var flattenChildren = $__require('npm:react-dom@15.6.1/lib/flattenChildren.js');
    var invariant = $__require('npm:fbjs@0.8.16/lib/invariant.js');
    function makeInsertMarkup(markup, afterNode, toIndex) {
      return {
        type: 'INSERT_MARKUP',
        content: markup,
        fromIndex: null,
        fromNode: null,
        toIndex: toIndex,
        afterNode: afterNode
      };
    }
    function makeMove(child, afterNode, toIndex) {
      return {
        type: 'MOVE_EXISTING',
        content: null,
        fromIndex: child._mountIndex,
        fromNode: ReactReconciler.getHostNode(child),
        toIndex: toIndex,
        afterNode: afterNode
      };
    }
    function makeRemove(child, node) {
      return {
        type: 'REMOVE_NODE',
        content: null,
        fromIndex: child._mountIndex,
        fromNode: node,
        toIndex: null,
        afterNode: null
      };
    }
    function makeSetMarkup(markup) {
      return {
        type: 'SET_MARKUP',
        content: markup,
        fromIndex: null,
        fromNode: null,
        toIndex: null,
        afterNode: null
      };
    }
    function makeTextContent(textContent) {
      return {
        type: 'TEXT_CONTENT',
        content: textContent,
        fromIndex: null,
        fromNode: null,
        toIndex: null,
        afterNode: null
      };
    }
    function enqueue(queue, update) {
      if (update) {
        queue = queue || [];
        queue.push(update);
      }
      return queue;
    }
    function processQueue(inst, updateQueue) {
      ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
    }
    var setChildrenForInstrumentation = emptyFunction;
    if ('production' !== 'production') {
      var getDebugID = function (inst) {
        if (!inst._debugID) {
          var internal;
          if (internal = ReactInstanceMap.get(inst)) {
            inst = internal;
          }
        }
        return inst._debugID;
      };
      setChildrenForInstrumentation = function (children) {
        var debugID = getDebugID(this);
        if (debugID !== 0) {
          ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {
            return children[key]._debugID;
          }) : []);
        }
      };
    }
    var ReactMultiChild = { Mixin: {
        _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
          if ('production' !== 'production') {
            var selfDebugID = getDebugID(this);
            if (this._currentElement) {
              try {
                ReactCurrentOwner.current = this._currentElement._owner;
                return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);
              } finally {
                ReactCurrentOwner.current = null;
              }
            }
          }
          return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
        },
        _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {
          var nextChildren;
          var selfDebugID = 0;
          if ('production' !== 'production') {
            selfDebugID = getDebugID(this);
            if (this._currentElement) {
              try {
                ReactCurrentOwner.current = this._currentElement._owner;
                nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
              } finally {
                ReactCurrentOwner.current = null;
              }
              ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
              return nextChildren;
            }
          }
          nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
          return nextChildren;
        },
        mountChildren: function (nestedChildren, transaction, context) {
          var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
          this._renderedChildren = children;
          var mountImages = [];
          var index = 0;
          for (var name in children) {
            if (children.hasOwnProperty(name)) {
              var child = children[name];
              var selfDebugID = 0;
              if ('production' !== 'production') {
                selfDebugID = getDebugID(this);
              }
              var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);
              child._mountIndex = index++;
              mountImages.push(mountImage);
            }
          }
          if ('production' !== 'production') {
            setChildrenForInstrumentation.call(this, children);
          }
          return mountImages;
        },
        updateTextContent: function (nextContent) {
          var prevChildren = this._renderedChildren;
          ReactChildReconciler.unmountChildren(prevChildren, false);
          for (var name in prevChildren) {
            if (prevChildren.hasOwnProperty(name)) {
              !false ? 'production' !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
            }
          }
          var updates = [makeTextContent(nextContent)];
          processQueue(this, updates);
        },
        updateMarkup: function (nextMarkup) {
          var prevChildren = this._renderedChildren;
          ReactChildReconciler.unmountChildren(prevChildren, false);
          for (var name in prevChildren) {
            if (prevChildren.hasOwnProperty(name)) {
              !false ? 'production' !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
            }
          }
          var updates = [makeSetMarkup(nextMarkup)];
          processQueue(this, updates);
        },
        updateChildren: function (nextNestedChildrenElements, transaction, context) {
          this._updateChildren(nextNestedChildrenElements, transaction, context);
        },
        _updateChildren: function (nextNestedChildrenElements, transaction, context) {
          var prevChildren = this._renderedChildren;
          var removedNodes = {};
          var mountImages = [];
          var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);
          if (!nextChildren && !prevChildren) {
            return;
          }
          var updates = null;
          var name;
          var nextIndex = 0;
          var lastIndex = 0;
          var nextMountIndex = 0;
          var lastPlacedNode = null;
          for (name in nextChildren) {
            if (!nextChildren.hasOwnProperty(name)) {
              continue;
            }
            var prevChild = prevChildren && prevChildren[name];
            var nextChild = nextChildren[name];
            if (prevChild === nextChild) {
              updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
              lastIndex = Math.max(prevChild._mountIndex, lastIndex);
              prevChild._mountIndex = nextIndex;
            } else {
              if (prevChild) {
                lastIndex = Math.max(prevChild._mountIndex, lastIndex);
              }
              updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));
              nextMountIndex++;
            }
            nextIndex++;
            lastPlacedNode = ReactReconciler.getHostNode(nextChild);
          }
          for (name in removedNodes) {
            if (removedNodes.hasOwnProperty(name)) {
              updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
            }
          }
          if (updates) {
            processQueue(this, updates);
          }
          this._renderedChildren = nextChildren;
          if ('production' !== 'production') {
            setChildrenForInstrumentation.call(this, nextChildren);
          }
        },
        unmountChildren: function (safely) {
          var renderedChildren = this._renderedChildren;
          ReactChildReconciler.unmountChildren(renderedChildren, safely);
          this._renderedChildren = null;
        },
        moveChild: function (child, afterNode, toIndex, lastIndex) {
          if (child._mountIndex < lastIndex) {
            return makeMove(child, afterNode, toIndex);
          }
        },
        createChild: function (child, afterNode, mountImage) {
          return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
        },
        removeChild: function (child, node) {
          return makeRemove(child, node);
        },
        _mountChildAtIndex: function (child, mountImage, afterNode, index, transaction, context) {
          child._mountIndex = index;
          return this.createChild(child, afterNode, mountImage);
        },
        _unmountChild: function (child, node) {
          var update = this.removeChild(child, node);
          child._mountIndex = null;
          return update;
        }
      } };
    module.exports = ReactMultiChild;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactServerUpdateQueue.js', ['npm:react-dom@15.6.1/lib/ReactUpdateQueue.js', 'npm:fbjs@0.8.16/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    var ReactUpdateQueue = $__require('npm:react-dom@15.6.1/lib/ReactUpdateQueue.js');
    var warning = $__require('npm:fbjs@0.8.16/lib/warning.js');
    function warnNoop(publicInstance, callerName) {
      if ('production' !== 'production') {
        var constructor = publicInstance.constructor;
        'production' !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
      }
    }
    var ReactServerUpdateQueue = function () {
      function ReactServerUpdateQueue(transaction) {
        _classCallCheck(this, ReactServerUpdateQueue);
        this.transaction = transaction;
      }
      ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {
        return false;
      };
      ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {
        if (this.transaction.isInTransaction()) {
          ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);
        }
      };
      ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {
        if (this.transaction.isInTransaction()) {
          ReactUpdateQueue.enqueueForceUpdate(publicInstance);
        } else {
          warnNoop(publicInstance, 'forceUpdate');
        }
      };
      ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {
        if (this.transaction.isInTransaction()) {
          ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);
        } else {
          warnNoop(publicInstance, 'replaceState');
        }
      };
      ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {
        if (this.transaction.isInTransaction()) {
          ReactUpdateQueue.enqueueSetState(publicInstance, partialState);
        } else {
          warnNoop(publicInstance, 'setState');
        }
      };
      return ReactServerUpdateQueue;
    }();
    module.exports = ReactServerUpdateQueue;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactServerRenderingTransaction.js', ['npm:object-assign@4.1.1.js', 'npm:react-dom@15.6.1/lib/PooledClass.js', 'npm:react-dom@15.6.1/lib/Transaction.js', 'npm:react-dom@15.6.1/lib/ReactInstrumentation.js', 'npm:react-dom@15.6.1/lib/ReactServerUpdateQueue.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _assign = $__require('npm:object-assign@4.1.1.js');
    var PooledClass = $__require('npm:react-dom@15.6.1/lib/PooledClass.js');
    var Transaction = $__require('npm:react-dom@15.6.1/lib/Transaction.js');
    var ReactInstrumentation = $__require('npm:react-dom@15.6.1/lib/ReactInstrumentation.js');
    var ReactServerUpdateQueue = $__require('npm:react-dom@15.6.1/lib/ReactServerUpdateQueue.js');
    var TRANSACTION_WRAPPERS = [];
    if ('production' !== 'production') {
      TRANSACTION_WRAPPERS.push({
        initialize: ReactInstrumentation.debugTool.onBeginFlush,
        close: ReactInstrumentation.debugTool.onEndFlush
      });
    }
    var noopCallbackQueue = { enqueue: function () {} };
    function ReactServerRenderingTransaction(renderToStaticMarkup) {
      this.reinitializeTransaction();
      this.renderToStaticMarkup = renderToStaticMarkup;
      this.useCreateElement = false;
      this.updateQueue = new ReactServerUpdateQueue(this);
    }
    var Mixin = {
      getTransactionWrappers: function () {
        return TRANSACTION_WRAPPERS;
      },
      getReactMountReady: function () {
        return noopCallbackQueue;
      },
      getUpdateQueue: function () {
        return this.updateQueue;
      },
      destructor: function () {},
      checkpoint: function () {},
      rollback: function () {}
    };
    _assign(ReactServerRenderingTransaction.prototype, Transaction, Mixin);
    PooledClass.addPoolingTo(ReactServerRenderingTransaction);
    module.exports = ReactServerRenderingTransaction;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/inputValueTracking.js', ['npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ReactDOMComponentTree = $__require('npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js');
  function isCheckable(elem) {
    var type = elem.type;
    var nodeName = elem.nodeName;
    return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');
  }
  function getTracker(inst) {
    return inst._wrapperState.valueTracker;
  }
  function attachTracker(inst, tracker) {
    inst._wrapperState.valueTracker = tracker;
  }
  function detachTracker(inst) {
    delete inst._wrapperState.valueTracker;
  }
  function getValueFromNode(node) {
    var value;
    if (node) {
      value = isCheckable(node) ? '' + node.checked : node.value;
    }
    return value;
  }
  var inputValueTracking = {
    _getTrackerFromNode: function (node) {
      return getTracker(ReactDOMComponentTree.getInstanceFromNode(node));
    },
    track: function (inst) {
      if (getTracker(inst)) {
        return;
      }
      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
      var valueField = isCheckable(node) ? 'checked' : 'value';
      var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);
      var currentValue = '' + node[valueField];
      if (node.hasOwnProperty(valueField) || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') {
        return;
      }
      Object.defineProperty(node, valueField, {
        enumerable: descriptor.enumerable,
        configurable: true,
        get: function () {
          return descriptor.get.call(this);
        },
        set: function (value) {
          currentValue = '' + value;
          descriptor.set.call(this, value);
        }
      });
      attachTracker(inst, {
        getValue: function () {
          return currentValue;
        },
        setValue: function (value) {
          currentValue = '' + value;
        },
        stopTracking: function () {
          detachTracker(inst);
          delete node[valueField];
        }
      });
    },
    updateValueIfChanged: function (inst) {
      if (!inst) {
        return false;
      }
      var tracker = getTracker(inst);
      if (!tracker) {
        inputValueTracking.track(inst);
        return true;
      }
      var lastValue = tracker.getValue();
      var nextValue = getValueFromNode(ReactDOMComponentTree.getNodeFromInstance(inst));
      if (nextValue !== lastValue) {
        tracker.setValue(nextValue);
        return true;
      }
      return false;
    },
    stopTracking: function (inst) {
      var tracker = getTracker(inst);
      if (tracker) {
        tracker.stopTracking();
      }
    }
  };
  module.exports = inputValueTracking;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactDOMComponent.js', ['npm:react-dom@15.6.1/lib/reactProdInvariant.js', 'npm:object-assign@4.1.1.js', 'npm:react-dom@15.6.1/lib/AutoFocusUtils.js', 'npm:react-dom@15.6.1/lib/CSSPropertyOperations.js', 'npm:react-dom@15.6.1/lib/DOMLazyTree.js', 'npm:react-dom@15.6.1/lib/DOMNamespaces.js', 'npm:react-dom@15.6.1/lib/DOMProperty.js', 'npm:react-dom@15.6.1/lib/DOMPropertyOperations.js', 'npm:react-dom@15.6.1/lib/EventPluginHub.js', 'npm:react-dom@15.6.1/lib/EventPluginRegistry.js', 'npm:react-dom@15.6.1/lib/ReactBrowserEventEmitter.js', 'npm:react-dom@15.6.1/lib/ReactDOMComponentFlags.js', 'npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js', 'npm:react-dom@15.6.1/lib/ReactDOMInput.js', 'npm:react-dom@15.6.1/lib/ReactDOMOption.js', 'npm:react-dom@15.6.1/lib/ReactDOMSelect.js', 'npm:react-dom@15.6.1/lib/ReactDOMTextarea.js', 'npm:react-dom@15.6.1/lib/ReactInstrumentation.js', 'npm:react-dom@15.6.1/lib/ReactMultiChild.js', 'npm:react-dom@15.6.1/lib/ReactServerRenderingTransaction.js', 'npm:fbjs@0.8.16/lib/emptyFunction.js', 'npm:react-dom@15.6.1/lib/escapeTextContentForBrowser.js', 'npm:fbjs@0.8.16/lib/invariant.js', 'npm:react-dom@15.6.1/lib/isEventSupported.js', 'npm:fbjs@0.8.16/lib/shallowEqual.js', 'npm:react-dom@15.6.1/lib/inputValueTracking.js', 'npm:react-dom@15.6.1/lib/validateDOMNesting.js', 'npm:fbjs@0.8.16/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('npm:react-dom@15.6.1/lib/reactProdInvariant.js'),
        _assign = $__require('npm:object-assign@4.1.1.js');
    var AutoFocusUtils = $__require('npm:react-dom@15.6.1/lib/AutoFocusUtils.js');
    var CSSPropertyOperations = $__require('npm:react-dom@15.6.1/lib/CSSPropertyOperations.js');
    var DOMLazyTree = $__require('npm:react-dom@15.6.1/lib/DOMLazyTree.js');
    var DOMNamespaces = $__require('npm:react-dom@15.6.1/lib/DOMNamespaces.js');
    var DOMProperty = $__require('npm:react-dom@15.6.1/lib/DOMProperty.js');
    var DOMPropertyOperations = $__require('npm:react-dom@15.6.1/lib/DOMPropertyOperations.js');
    var EventPluginHub = $__require('npm:react-dom@15.6.1/lib/EventPluginHub.js');
    var EventPluginRegistry = $__require('npm:react-dom@15.6.1/lib/EventPluginRegistry.js');
    var ReactBrowserEventEmitter = $__require('npm:react-dom@15.6.1/lib/ReactBrowserEventEmitter.js');
    var ReactDOMComponentFlags = $__require('npm:react-dom@15.6.1/lib/ReactDOMComponentFlags.js');
    var ReactDOMComponentTree = $__require('npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js');
    var ReactDOMInput = $__require('npm:react-dom@15.6.1/lib/ReactDOMInput.js');
    var ReactDOMOption = $__require('npm:react-dom@15.6.1/lib/ReactDOMOption.js');
    var ReactDOMSelect = $__require('npm:react-dom@15.6.1/lib/ReactDOMSelect.js');
    var ReactDOMTextarea = $__require('npm:react-dom@15.6.1/lib/ReactDOMTextarea.js');
    var ReactInstrumentation = $__require('npm:react-dom@15.6.1/lib/ReactInstrumentation.js');
    var ReactMultiChild = $__require('npm:react-dom@15.6.1/lib/ReactMultiChild.js');
    var ReactServerRenderingTransaction = $__require('npm:react-dom@15.6.1/lib/ReactServerRenderingTransaction.js');
    var emptyFunction = $__require('npm:fbjs@0.8.16/lib/emptyFunction.js');
    var escapeTextContentForBrowser = $__require('npm:react-dom@15.6.1/lib/escapeTextContentForBrowser.js');
    var invariant = $__require('npm:fbjs@0.8.16/lib/invariant.js');
    var isEventSupported = $__require('npm:react-dom@15.6.1/lib/isEventSupported.js');
    var shallowEqual = $__require('npm:fbjs@0.8.16/lib/shallowEqual.js');
    var inputValueTracking = $__require('npm:react-dom@15.6.1/lib/inputValueTracking.js');
    var validateDOMNesting = $__require('npm:react-dom@15.6.1/lib/validateDOMNesting.js');
    var warning = $__require('npm:fbjs@0.8.16/lib/warning.js');
    var Flags = ReactDOMComponentFlags;
    var deleteListener = EventPluginHub.deleteListener;
    var getNode = ReactDOMComponentTree.getNodeFromInstance;
    var listenTo = ReactBrowserEventEmitter.listenTo;
    var registrationNameModules = EventPluginRegistry.registrationNameModules;
    var CONTENT_TYPES = {
      string: true,
      number: true
    };
    var STYLE = 'style';
    var HTML = '__html';
    var RESERVED_PROPS = {
      children: null,
      dangerouslySetInnerHTML: null,
      suppressContentEditableWarning: null
    };
    var DOC_FRAGMENT_TYPE = 11;
    function getDeclarationErrorAddendum(internalInstance) {
      if (internalInstance) {
        var owner = internalInstance._currentElement._owner || null;
        if (owner) {
          var name = owner.getName();
          if (name) {
            return ' This DOM node was rendered by `' + name + '`.';
          }
        }
      }
      return '';
    }
    function friendlyStringify(obj) {
      if (typeof obj === 'object') {
        if (Array.isArray(obj)) {
          return '[' + obj.map(friendlyStringify).join(', ') + ']';
        } else {
          var pairs = [];
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
              var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
              pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
            }
          }
          return '{' + pairs.join(', ') + '}';
        }
      } else if (typeof obj === 'string') {
        return JSON.stringify(obj);
      } else if (typeof obj === 'function') {
        return '[function object]';
      }
      return String(obj);
    }
    var styleMutationWarning = {};
    function checkAndWarnForMutatedStyle(style1, style2, component) {
      if (style1 == null || style2 == null) {
        return;
      }
      if (shallowEqual(style1, style2)) {
        return;
      }
      var componentName = component._tag;
      var owner = component._currentElement._owner;
      var ownerName;
      if (owner) {
        ownerName = owner.getName();
      }
      var hash = ownerName + '|' + componentName;
      if (styleMutationWarning.hasOwnProperty(hash)) {
        return;
      }
      styleMutationWarning[hash] = true;
      'production' !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
    }
    function assertValidProps(component, props) {
      if (!props) {
        return;
      }
      if (voidElementTags[component._tag]) {
        !(props.children == null && props.dangerouslySetInnerHTML == null) ? 'production' !== 'production' ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;
      }
      if (props.dangerouslySetInnerHTML != null) {
        !(props.children == null) ? 'production' !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;
        !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? 'production' !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;
      }
      if ('production' !== 'production') {
        'production' !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
        'production' !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
        'production' !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
      }
      !(props.style == null || typeof props.style === 'object') ? 'production' !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;
    }
    function enqueuePutListener(inst, registrationName, listener, transaction) {
      if (transaction instanceof ReactServerRenderingTransaction) {
        return;
      }
      if ('production' !== 'production') {
        'production' !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), "This browser doesn't support the `onScroll` event") : void 0;
      }
      var containerInfo = inst._hostContainerInfo;
      var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
      var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
      listenTo(registrationName, doc);
      transaction.getReactMountReady().enqueue(putListener, {
        inst: inst,
        registrationName: registrationName,
        listener: listener
      });
    }
    function putListener() {
      var listenerToPut = this;
      EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
    }
    function inputPostMount() {
      var inst = this;
      ReactDOMInput.postMountWrapper(inst);
    }
    function textareaPostMount() {
      var inst = this;
      ReactDOMTextarea.postMountWrapper(inst);
    }
    function optionPostMount() {
      var inst = this;
      ReactDOMOption.postMountWrapper(inst);
    }
    var setAndValidateContentChildDev = emptyFunction;
    if ('production' !== 'production') {
      setAndValidateContentChildDev = function (content) {
        var hasExistingContent = this._contentDebugID != null;
        var debugID = this._debugID;
        var contentDebugID = -debugID;
        if (content == null) {
          if (hasExistingContent) {
            ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
          }
          this._contentDebugID = null;
          return;
        }
        validateDOMNesting(null, String(content), this, this._ancestorInfo);
        this._contentDebugID = contentDebugID;
        if (hasExistingContent) {
          ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
          ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
        } else {
          ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);
          ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
          ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
        }
      };
    }
    var mediaEvents = {
      topAbort: 'abort',
      topCanPlay: 'canplay',
      topCanPlayThrough: 'canplaythrough',
      topDurationChange: 'durationchange',
      topEmptied: 'emptied',
      topEncrypted: 'encrypted',
      topEnded: 'ended',
      topError: 'error',
      topLoadedData: 'loadeddata',
      topLoadedMetadata: 'loadedmetadata',
      topLoadStart: 'loadstart',
      topPause: 'pause',
      topPlay: 'play',
      topPlaying: 'playing',
      topProgress: 'progress',
      topRateChange: 'ratechange',
      topSeeked: 'seeked',
      topSeeking: 'seeking',
      topStalled: 'stalled',
      topSuspend: 'suspend',
      topTimeUpdate: 'timeupdate',
      topVolumeChange: 'volumechange',
      topWaiting: 'waiting'
    };
    function trackInputValue() {
      inputValueTracking.track(this);
    }
    function trapBubbledEventsLocal() {
      var inst = this;
      !inst._rootNodeID ? 'production' !== 'production' ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;
      var node = getNode(inst);
      !node ? 'production' !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;
      switch (inst._tag) {
        case 'iframe':
        case 'object':
          inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
          break;
        case 'video':
        case 'audio':
          inst._wrapperState.listeners = [];
          for (var event in mediaEvents) {
            if (mediaEvents.hasOwnProperty(event)) {
              inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(event, mediaEvents[event], node));
            }
          }
          break;
        case 'source':
          inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node)];
          break;
        case 'img':
          inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node), ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
          break;
        case 'form':
          inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topReset', 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent('topSubmit', 'submit', node)];
          break;
        case 'input':
        case 'select':
        case 'textarea':
          inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topInvalid', 'invalid', node)];
          break;
      }
    }
    function postUpdateSelectWrapper() {
      ReactDOMSelect.postUpdateWrapper(this);
    }
    var omittedCloseTags = {
      area: true,
      base: true,
      br: true,
      col: true,
      embed: true,
      hr: true,
      img: true,
      input: true,
      keygen: true,
      link: true,
      meta: true,
      param: true,
      source: true,
      track: true,
      wbr: true
    };
    var newlineEatingTags = {
      listing: true,
      pre: true,
      textarea: true
    };
    var voidElementTags = _assign({ menuitem: true }, omittedCloseTags);
    var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/;
    var validatedTagCache = {};
    var hasOwnProperty = {}.hasOwnProperty;
    function validateDangerousTag(tag) {
      if (!hasOwnProperty.call(validatedTagCache, tag)) {
        !VALID_TAG_REGEX.test(tag) ? 'production' !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;
        validatedTagCache[tag] = true;
      }
    }
    function isCustomComponent(tagName, props) {
      return tagName.indexOf('-') >= 0 || props.is != null;
    }
    var globalIdCounter = 1;
    function ReactDOMComponent(element) {
      var tag = element.type;
      validateDangerousTag(tag);
      this._currentElement = element;
      this._tag = tag.toLowerCase();
      this._namespaceURI = null;
      this._renderedChildren = null;
      this._previousStyle = null;
      this._previousStyleCopy = null;
      this._hostNode = null;
      this._hostParent = null;
      this._rootNodeID = 0;
      this._domID = 0;
      this._hostContainerInfo = null;
      this._wrapperState = null;
      this._topLevelWrapper = null;
      this._flags = 0;
      if ('production' !== 'production') {
        this._ancestorInfo = null;
        setAndValidateContentChildDev.call(this, null);
      }
    }
    ReactDOMComponent.displayName = 'ReactDOMComponent';
    ReactDOMComponent.Mixin = {
      mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
        this._rootNodeID = globalIdCounter++;
        this._domID = hostContainerInfo._idCounter++;
        this._hostParent = hostParent;
        this._hostContainerInfo = hostContainerInfo;
        var props = this._currentElement.props;
        switch (this._tag) {
          case 'audio':
          case 'form':
          case 'iframe':
          case 'img':
          case 'link':
          case 'object':
          case 'source':
          case 'video':
            this._wrapperState = { listeners: null };
            transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
            break;
          case 'input':
            ReactDOMInput.mountWrapper(this, props, hostParent);
            props = ReactDOMInput.getHostProps(this, props);
            transaction.getReactMountReady().enqueue(trackInputValue, this);
            transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
            break;
          case 'option':
            ReactDOMOption.mountWrapper(this, props, hostParent);
            props = ReactDOMOption.getHostProps(this, props);
            break;
          case 'select':
            ReactDOMSelect.mountWrapper(this, props, hostParent);
            props = ReactDOMSelect.getHostProps(this, props);
            transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
            break;
          case 'textarea':
            ReactDOMTextarea.mountWrapper(this, props, hostParent);
            props = ReactDOMTextarea.getHostProps(this, props);
            transaction.getReactMountReady().enqueue(trackInputValue, this);
            transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
            break;
        }
        assertValidProps(this, props);
        var namespaceURI;
        var parentTag;
        if (hostParent != null) {
          namespaceURI = hostParent._namespaceURI;
          parentTag = hostParent._tag;
        } else if (hostContainerInfo._tag) {
          namespaceURI = hostContainerInfo._namespaceURI;
          parentTag = hostContainerInfo._tag;
        }
        if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
          namespaceURI = DOMNamespaces.html;
        }
        if (namespaceURI === DOMNamespaces.html) {
          if (this._tag === 'svg') {
            namespaceURI = DOMNamespaces.svg;
          } else if (this._tag === 'math') {
            namespaceURI = DOMNamespaces.mathml;
          }
        }
        this._namespaceURI = namespaceURI;
        if ('production' !== 'production') {
          var parentInfo;
          if (hostParent != null) {
            parentInfo = hostParent._ancestorInfo;
          } else if (hostContainerInfo._tag) {
            parentInfo = hostContainerInfo._ancestorInfo;
          }
          if (parentInfo) {
            validateDOMNesting(this._tag, null, this, parentInfo);
          }
          this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
        }
        var mountImage;
        if (transaction.useCreateElement) {
          var ownerDocument = hostContainerInfo._ownerDocument;
          var el;
          if (namespaceURI === DOMNamespaces.html) {
            if (this._tag === 'script') {
              var div = ownerDocument.createElement('div');
              var type = this._currentElement.type;
              div.innerHTML = '<' + type + '></' + type + '>';
              el = div.removeChild(div.firstChild);
            } else if (props.is) {
              el = ownerDocument.createElement(this._currentElement.type, props.is);
            } else {
              el = ownerDocument.createElement(this._currentElement.type);
            }
          } else {
            el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
          }
          ReactDOMComponentTree.precacheNode(this, el);
          this._flags |= Flags.hasCachedChildNodes;
          if (!this._hostParent) {
            DOMPropertyOperations.setAttributeForRoot(el);
          }
          this._updateDOMProperties(null, props, transaction);
          var lazyTree = DOMLazyTree(el);
          this._createInitialChildren(transaction, props, context, lazyTree);
          mountImage = lazyTree;
        } else {
          var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
          var tagContent = this._createContentMarkup(transaction, props, context);
          if (!tagContent && omittedCloseTags[this._tag]) {
            mountImage = tagOpen + '/>';
          } else {
            mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
          }
        }
        switch (this._tag) {
          case 'input':
            transaction.getReactMountReady().enqueue(inputPostMount, this);
            if (props.autoFocus) {
              transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
            }
            break;
          case 'textarea':
            transaction.getReactMountReady().enqueue(textareaPostMount, this);
            if (props.autoFocus) {
              transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
            }
            break;
          case 'select':
            if (props.autoFocus) {
              transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
            }
            break;
          case 'button':
            if (props.autoFocus) {
              transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
            }
            break;
          case 'option':
            transaction.getReactMountReady().enqueue(optionPostMount, this);
            break;
        }
        return mountImage;
      },
      _createOpenTagMarkupAndPutListeners: function (transaction, props) {
        var ret = '<' + this._currentElement.type;
        for (var propKey in props) {
          if (!props.hasOwnProperty(propKey)) {
            continue;
          }
          var propValue = props[propKey];
          if (propValue == null) {
            continue;
          }
          if (registrationNameModules.hasOwnProperty(propKey)) {
            if (propValue) {
              enqueuePutListener(this, propKey, propValue, transaction);
            }
          } else {
            if (propKey === STYLE) {
              if (propValue) {
                if ('production' !== 'production') {
                  this._previousStyle = propValue;
                }
                propValue = this._previousStyleCopy = _assign({}, props.style);
              }
              propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
            }
            var markup = null;
            if (this._tag != null && isCustomComponent(this._tag, props)) {
              if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
                markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
              }
            } else {
              markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
            }
            if (markup) {
              ret += ' ' + markup;
            }
          }
        }
        if (transaction.renderToStaticMarkup) {
          return ret;
        }
        if (!this._hostParent) {
          ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
        }
        ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
        return ret;
      },
      _createContentMarkup: function (transaction, props, context) {
        var ret = '';
        var innerHTML = props.dangerouslySetInnerHTML;
        if (innerHTML != null) {
          if (innerHTML.__html != null) {
            ret = innerHTML.__html;
          }
        } else {
          var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
          var childrenToUse = contentToUse != null ? null : props.children;
          if (contentToUse != null) {
            ret = escapeTextContentForBrowser(contentToUse);
            if ('production' !== 'production') {
              setAndValidateContentChildDev.call(this, contentToUse);
            }
          } else if (childrenToUse != null) {
            var mountImages = this.mountChildren(childrenToUse, transaction, context);
            ret = mountImages.join('');
          }
        }
        if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
          return '\n' + ret;
        } else {
          return ret;
        }
      },
      _createInitialChildren: function (transaction, props, context, lazyTree) {
        var innerHTML = props.dangerouslySetInnerHTML;
        if (innerHTML != null) {
          if (innerHTML.__html != null) {
            DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
          }
        } else {
          var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
          var childrenToUse = contentToUse != null ? null : props.children;
          if (contentToUse != null) {
            if (contentToUse !== '') {
              if ('production' !== 'production') {
                setAndValidateContentChildDev.call(this, contentToUse);
              }
              DOMLazyTree.queueText(lazyTree, contentToUse);
            }
          } else if (childrenToUse != null) {
            var mountImages = this.mountChildren(childrenToUse, transaction, context);
            for (var i = 0; i < mountImages.length; i++) {
              DOMLazyTree.queueChild(lazyTree, mountImages[i]);
            }
          }
        }
      },
      receiveComponent: function (nextElement, transaction, context) {
        var prevElement = this._currentElement;
        this._currentElement = nextElement;
        this.updateComponent(transaction, prevElement, nextElement, context);
      },
      updateComponent: function (transaction, prevElement, nextElement, context) {
        var lastProps = prevElement.props;
        var nextProps = this._currentElement.props;
        switch (this._tag) {
          case 'input':
            lastProps = ReactDOMInput.getHostProps(this, lastProps);
            nextProps = ReactDOMInput.getHostProps(this, nextProps);
            break;
          case 'option':
            lastProps = ReactDOMOption.getHostProps(this, lastProps);
            nextProps = ReactDOMOption.getHostProps(this, nextProps);
            break;
          case 'select':
            lastProps = ReactDOMSelect.getHostProps(this, lastProps);
            nextProps = ReactDOMSelect.getHostProps(this, nextProps);
            break;
          case 'textarea':
            lastProps = ReactDOMTextarea.getHostProps(this, lastProps);
            nextProps = ReactDOMTextarea.getHostProps(this, nextProps);
            break;
        }
        assertValidProps(this, nextProps);
        this._updateDOMProperties(lastProps, nextProps, transaction);
        this._updateDOMChildren(lastProps, nextProps, transaction, context);
        switch (this._tag) {
          case 'input':
            ReactDOMInput.updateWrapper(this);
            break;
          case 'textarea':
            ReactDOMTextarea.updateWrapper(this);
            break;
          case 'select':
            transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
            break;
        }
      },
      _updateDOMProperties: function (lastProps, nextProps, transaction) {
        var propKey;
        var styleName;
        var styleUpdates;
        for (propKey in lastProps) {
          if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
            continue;
          }
          if (propKey === STYLE) {
            var lastStyle = this._previousStyleCopy;
            for (styleName in lastStyle) {
              if (lastStyle.hasOwnProperty(styleName)) {
                styleUpdates = styleUpdates || {};
                styleUpdates[styleName] = '';
              }
            }
            this._previousStyleCopy = null;
          } else if (registrationNameModules.hasOwnProperty(propKey)) {
            if (lastProps[propKey]) {
              deleteListener(this, propKey);
            }
          } else if (isCustomComponent(this._tag, lastProps)) {
            if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
              DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
            }
          } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
            DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
          }
        }
        for (propKey in nextProps) {
          var nextProp = nextProps[propKey];
          var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
          if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
            continue;
          }
          if (propKey === STYLE) {
            if (nextProp) {
              if ('production' !== 'production') {
                checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
                this._previousStyle = nextProp;
              }
              nextProp = this._previousStyleCopy = _assign({}, nextProp);
            } else {
              this._previousStyleCopy = null;
            }
            if (lastProp) {
              for (styleName in lastProp) {
                if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
                  styleUpdates = styleUpdates || {};
                  styleUpdates[styleName] = '';
                }
              }
              for (styleName in nextProp) {
                if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
                  styleUpdates = styleUpdates || {};
                  styleUpdates[styleName] = nextProp[styleName];
                }
              }
            } else {
              styleUpdates = nextProp;
            }
          } else if (registrationNameModules.hasOwnProperty(propKey)) {
            if (nextProp) {
              enqueuePutListener(this, propKey, nextProp, transaction);
            } else if (lastProp) {
              deleteListener(this, propKey);
            }
          } else if (isCustomComponent(this._tag, nextProps)) {
            if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
              DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
            }
          } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
            var node = getNode(this);
            if (nextProp != null) {
              DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
            } else {
              DOMPropertyOperations.deleteValueForProperty(node, propKey);
            }
          }
        }
        if (styleUpdates) {
          CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
        }
      },
      _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
        var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
        var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;
        var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
        var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;
        var lastChildren = lastContent != null ? null : lastProps.children;
        var nextChildren = nextContent != null ? null : nextProps.children;
        var lastHasContentOrHtml = lastContent != null || lastHtml != null;
        var nextHasContentOrHtml = nextContent != null || nextHtml != null;
        if (lastChildren != null && nextChildren == null) {
          this.updateChildren(null, transaction, context);
        } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
          this.updateTextContent('');
          if ('production' !== 'production') {
            ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
          }
        }
        if (nextContent != null) {
          if (lastContent !== nextContent) {
            this.updateTextContent('' + nextContent);
            if ('production' !== 'production') {
              setAndValidateContentChildDev.call(this, nextContent);
            }
          }
        } else if (nextHtml != null) {
          if (lastHtml !== nextHtml) {
            this.updateMarkup('' + nextHtml);
          }
          if ('production' !== 'production') {
            ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
          }
        } else if (nextChildren != null) {
          if ('production' !== 'production') {
            setAndValidateContentChildDev.call(this, null);
          }
          this.updateChildren(nextChildren, transaction, context);
        }
      },
      getHostNode: function () {
        return getNode(this);
      },
      unmountComponent: function (safely) {
        switch (this._tag) {
          case 'audio':
          case 'form':
          case 'iframe':
          case 'img':
          case 'link':
          case 'object':
          case 'source':
          case 'video':
            var listeners = this._wrapperState.listeners;
            if (listeners) {
              for (var i = 0; i < listeners.length; i++) {
                listeners[i].remove();
              }
            }
            break;
          case 'input':
          case 'textarea':
            inputValueTracking.stopTracking(this);
            break;
          case 'html':
          case 'head':
          case 'body':
            !false ? 'production' !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;
            break;
        }
        this.unmountChildren(safely);
        ReactDOMComponentTree.uncacheNode(this);
        EventPluginHub.deleteAllListeners(this);
        this._rootNodeID = 0;
        this._domID = 0;
        this._wrapperState = null;
        if ('production' !== 'production') {
          setAndValidateContentChildDev.call(this, null);
        }
      },
      getPublicInstance: function () {
        return getNode(this);
      }
    };
    _assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);
    module.exports = ReactDOMComponent;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactDOMEmptyComponent.js', ['npm:object-assign@4.1.1.js', 'npm:react-dom@15.6.1/lib/DOMLazyTree.js', 'npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var _assign = $__require('npm:object-assign@4.1.1.js');
  var DOMLazyTree = $__require('npm:react-dom@15.6.1/lib/DOMLazyTree.js');
  var ReactDOMComponentTree = $__require('npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js');
  var ReactDOMEmptyComponent = function (instantiate) {
    this._currentElement = null;
    this._hostNode = null;
    this._hostParent = null;
    this._hostContainerInfo = null;
    this._domID = 0;
  };
  _assign(ReactDOMEmptyComponent.prototype, {
    mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
      var domID = hostContainerInfo._idCounter++;
      this._domID = domID;
      this._hostParent = hostParent;
      this._hostContainerInfo = hostContainerInfo;
      var nodeValue = ' react-empty: ' + this._domID + ' ';
      if (transaction.useCreateElement) {
        var ownerDocument = hostContainerInfo._ownerDocument;
        var node = ownerDocument.createComment(nodeValue);
        ReactDOMComponentTree.precacheNode(this, node);
        return DOMLazyTree(node);
      } else {
        if (transaction.renderToStaticMarkup) {
          return '';
        }
        return '<!--' + nodeValue + '-->';
      }
    },
    receiveComponent: function () {},
    getHostNode: function () {
      return ReactDOMComponentTree.getNodeFromInstance(this);
    },
    unmountComponent: function () {
      ReactDOMComponentTree.uncacheNode(this);
    }
  });
  module.exports = ReactDOMEmptyComponent;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactDOMTreeTraversal.js', ['npm:react-dom@15.6.1/lib/reactProdInvariant.js', 'npm:fbjs@0.8.16/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('npm:react-dom@15.6.1/lib/reactProdInvariant.js');
    var invariant = $__require('npm:fbjs@0.8.16/lib/invariant.js');
    function getLowestCommonAncestor(instA, instB) {
      !('_hostNode' in instA) ? 'production' !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
      !('_hostNode' in instB) ? 'production' !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
      var depthA = 0;
      for (var tempA = instA; tempA; tempA = tempA._hostParent) {
        depthA++;
      }
      var depthB = 0;
      for (var tempB = instB; tempB; tempB = tempB._hostParent) {
        depthB++;
      }
      while (depthA - depthB > 0) {
        instA = instA._hostParent;
        depthA--;
      }
      while (depthB - depthA > 0) {
        instB = instB._hostParent;
        depthB--;
      }
      var depth = depthA;
      while (depth--) {
        if (instA === instB) {
          return instA;
        }
        instA = instA._hostParent;
        instB = instB._hostParent;
      }
      return null;
    }
    function isAncestor(instA, instB) {
      !('_hostNode' in instA) ? 'production' !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
      !('_hostNode' in instB) ? 'production' !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
      while (instB) {
        if (instB === instA) {
          return true;
        }
        instB = instB._hostParent;
      }
      return false;
    }
    function getParentInstance(inst) {
      !('_hostNode' in inst) ? 'production' !== 'production' ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;
      return inst._hostParent;
    }
    function traverseTwoPhase(inst, fn, arg) {
      var path = [];
      while (inst) {
        path.push(inst);
        inst = inst._hostParent;
      }
      var i;
      for (i = path.length; i-- > 0;) {
        fn(path[i], 'captured', arg);
      }
      for (i = 0; i < path.length; i++) {
        fn(path[i], 'bubbled', arg);
      }
    }
    function traverseEnterLeave(from, to, fn, argFrom, argTo) {
      var common = from && to ? getLowestCommonAncestor(from, to) : null;
      var pathFrom = [];
      while (from && from !== common) {
        pathFrom.push(from);
        from = from._hostParent;
      }
      var pathTo = [];
      while (to && to !== common) {
        pathTo.push(to);
        to = to._hostParent;
      }
      var i;
      for (i = 0; i < pathFrom.length; i++) {
        fn(pathFrom[i], 'bubbled', argFrom);
      }
      for (i = pathTo.length; i-- > 0;) {
        fn(pathTo[i], 'captured', argTo);
      }
    }
    module.exports = {
      isAncestor: isAncestor,
      getLowestCommonAncestor: getLowestCommonAncestor,
      getParentInstance: getParentInstance,
      traverseTwoPhase: traverseTwoPhase,
      traverseEnterLeave: traverseEnterLeave
    };
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:fbjs@0.8.16/lib/createArrayFromMixed.js', ['npm:fbjs@0.8.16/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var invariant = $__require('npm:fbjs@0.8.16/lib/invariant.js');
    function toArray(obj) {
      var length = obj.length;
      !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? 'production' !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;
      !(typeof length === 'number') ? 'production' !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;
      !(length === 0 || length - 1 in obj) ? 'production' !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;
      !(typeof obj.callee !== 'function') ? 'production' !== 'production' ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;
      if (obj.hasOwnProperty) {
        try {
          return Array.prototype.slice.call(obj);
        } catch (e) {}
      }
      var ret = Array(length);
      for (var ii = 0; ii < length; ii++) {
        ret[ii] = obj[ii];
      }
      return ret;
    }
    function hasArrayNature(obj) {
      return !!obj && (typeof obj == 'object' || typeof obj == 'function') && 'length' in obj && !('setInterval' in obj) && typeof obj.nodeType != 'number' && (Array.isArray(obj) || 'callee' in obj || 'item' in obj);
    }
    function createArrayFromMixed(obj) {
      if (!hasArrayNature(obj)) {
        return [obj];
      } else if (Array.isArray(obj)) {
        return obj.slice();
      } else {
        return toArray(obj);
      }
    }
    module.exports = createArrayFromMixed;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:fbjs@0.8.16/lib/getMarkupWrap.js', ['npm:fbjs@0.8.16/lib/ExecutionEnvironment.js', 'npm:fbjs@0.8.16/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ExecutionEnvironment = $__require('npm:fbjs@0.8.16/lib/ExecutionEnvironment.js');
    var invariant = $__require('npm:fbjs@0.8.16/lib/invariant.js');
    var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
    var shouldWrap = {};
    var selectWrap = [1, '<select multiple="true">', '</select>'];
    var tableWrap = [1, '<table>', '</table>'];
    var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];
    var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];
    var markupWrap = {
      '*': [1, '?<div>', '</div>'],
      'area': [1, '<map>', '</map>'],
      'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
      'legend': [1, '<fieldset>', '</fieldset>'],
      'param': [1, '<object>', '</object>'],
      'tr': [2, '<table><tbody>', '</tbody></table>'],
      'optgroup': selectWrap,
      'option': selectWrap,
      'caption': tableWrap,
      'colgroup': tableWrap,
      'tbody': tableWrap,
      'tfoot': tableWrap,
      'thead': tableWrap,
      'td': trWrap,
      'th': trWrap
    };
    var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
    svgElements.forEach(function (nodeName) {
      markupWrap[nodeName] = svgWrap;
      shouldWrap[nodeName] = true;
    });
    function getMarkupWrap(nodeName) {
      !!!dummyNode ? 'production' !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
      if (!markupWrap.hasOwnProperty(nodeName)) {
        nodeName = '*';
      }
      if (!shouldWrap.hasOwnProperty(nodeName)) {
        if (nodeName === '*') {
          dummyNode.innerHTML = '<link />';
        } else {
          dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
        }
        shouldWrap[nodeName] = !dummyNode.firstChild;
      }
      return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
    }
    module.exports = getMarkupWrap;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:fbjs@0.8.16/lib/createNodesFromMarkup.js', ['npm:fbjs@0.8.16/lib/ExecutionEnvironment.js', 'npm:fbjs@0.8.16/lib/createArrayFromMixed.js', 'npm:fbjs@0.8.16/lib/getMarkupWrap.js', 'npm:fbjs@0.8.16/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ExecutionEnvironment = $__require('npm:fbjs@0.8.16/lib/ExecutionEnvironment.js');
    var createArrayFromMixed = $__require('npm:fbjs@0.8.16/lib/createArrayFromMixed.js');
    var getMarkupWrap = $__require('npm:fbjs@0.8.16/lib/getMarkupWrap.js');
    var invariant = $__require('npm:fbjs@0.8.16/lib/invariant.js');
    var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
    var nodeNamePattern = /^\s*<(\w+)/;
    function getNodeName(markup) {
      var nodeNameMatch = markup.match(nodeNamePattern);
      return nodeNameMatch && nodeNameMatch[1].toLowerCase();
    }
    function createNodesFromMarkup(markup, handleScript) {
      var node = dummyNode;
      !!!dummyNode ? 'production' !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
      var nodeName = getNodeName(markup);
      var wrap = nodeName && getMarkupWrap(nodeName);
      if (wrap) {
        node.innerHTML = wrap[1] + markup + wrap[2];
        var wrapDepth = wrap[0];
        while (wrapDepth--) {
          node = node.lastChild;
        }
      } else {
        node.innerHTML = markup;
      }
      var scripts = node.getElementsByTagName('script');
      if (scripts.length) {
        !handleScript ? 'production' !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
        createArrayFromMixed(scripts).forEach(handleScript);
      }
      var nodes = Array.from(node.childNodes);
      while (node.lastChild) {
        node.removeChild(node.lastChild);
      }
      return nodes;
    }
    module.exports = createNodesFromMarkup;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/Danger.js', ['npm:react-dom@15.6.1/lib/reactProdInvariant.js', 'npm:react-dom@15.6.1/lib/DOMLazyTree.js', 'npm:fbjs@0.8.16/lib/ExecutionEnvironment.js', 'npm:fbjs@0.8.16/lib/createNodesFromMarkup.js', 'npm:fbjs@0.8.16/lib/emptyFunction.js', 'npm:fbjs@0.8.16/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('npm:react-dom@15.6.1/lib/reactProdInvariant.js');
    var DOMLazyTree = $__require('npm:react-dom@15.6.1/lib/DOMLazyTree.js');
    var ExecutionEnvironment = $__require('npm:fbjs@0.8.16/lib/ExecutionEnvironment.js');
    var createNodesFromMarkup = $__require('npm:fbjs@0.8.16/lib/createNodesFromMarkup.js');
    var emptyFunction = $__require('npm:fbjs@0.8.16/lib/emptyFunction.js');
    var invariant = $__require('npm:fbjs@0.8.16/lib/invariant.js');
    var Danger = { dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
        !ExecutionEnvironment.canUseDOM ? 'production' !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;
        !markup ? 'production' !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;
        !(oldChild.nodeName !== 'HTML') ? 'production' !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;
        if (typeof markup === 'string') {
          var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
          oldChild.parentNode.replaceChild(newChild, oldChild);
        } else {
          DOMLazyTree.replaceChildWithTree(oldChild, markup);
        }
      } };
    module.exports = Danger;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/DOMChildrenOperations.js', ['npm:react-dom@15.6.1/lib/DOMLazyTree.js', 'npm:react-dom@15.6.1/lib/Danger.js', 'npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js', 'npm:react-dom@15.6.1/lib/ReactInstrumentation.js', 'npm:react-dom@15.6.1/lib/createMicrosoftUnsafeLocalFunction.js', 'npm:react-dom@15.6.1/lib/setInnerHTML.js', 'npm:react-dom@15.6.1/lib/setTextContent.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var DOMLazyTree = $__require('npm:react-dom@15.6.1/lib/DOMLazyTree.js');
    var Danger = $__require('npm:react-dom@15.6.1/lib/Danger.js');
    var ReactDOMComponentTree = $__require('npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js');
    var ReactInstrumentation = $__require('npm:react-dom@15.6.1/lib/ReactInstrumentation.js');
    var createMicrosoftUnsafeLocalFunction = $__require('npm:react-dom@15.6.1/lib/createMicrosoftUnsafeLocalFunction.js');
    var setInnerHTML = $__require('npm:react-dom@15.6.1/lib/setInnerHTML.js');
    var setTextContent = $__require('npm:react-dom@15.6.1/lib/setTextContent.js');
    function getNodeAfter(parentNode, node) {
      if (Array.isArray(node)) {
        node = node[1];
      }
      return node ? node.nextSibling : parentNode.firstChild;
    }
    var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
      parentNode.insertBefore(childNode, referenceNode);
    });
    function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
      DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
    }
    function moveChild(parentNode, childNode, referenceNode) {
      if (Array.isArray(childNode)) {
        moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
      } else {
        insertChildAt(parentNode, childNode, referenceNode);
      }
    }
    function removeChild(parentNode, childNode) {
      if (Array.isArray(childNode)) {
        var closingComment = childNode[1];
        childNode = childNode[0];
        removeDelimitedText(parentNode, childNode, closingComment);
        parentNode.removeChild(closingComment);
      }
      parentNode.removeChild(childNode);
    }
    function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
      var node = openingComment;
      while (true) {
        var nextNode = node.nextSibling;
        insertChildAt(parentNode, node, referenceNode);
        if (node === closingComment) {
          break;
        }
        node = nextNode;
      }
    }
    function removeDelimitedText(parentNode, startNode, closingComment) {
      while (true) {
        var node = startNode.nextSibling;
        if (node === closingComment) {
          break;
        } else {
          parentNode.removeChild(node);
        }
      }
    }
    function replaceDelimitedText(openingComment, closingComment, stringText) {
      var parentNode = openingComment.parentNode;
      var nodeAfterComment = openingComment.nextSibling;
      if (nodeAfterComment === closingComment) {
        if (stringText) {
          insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
        }
      } else {
        if (stringText) {
          setTextContent(nodeAfterComment, stringText);
          removeDelimitedText(parentNode, nodeAfterComment, closingComment);
        } else {
          removeDelimitedText(parentNode, openingComment, closingComment);
        }
      }
      if ('production' !== 'production') {
        ReactInstrumentation.debugTool.onHostOperation({
          instanceID: ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID,
          type: 'replace text',
          payload: stringText
        });
      }
    }
    var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
    if ('production' !== 'production') {
      dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {
        Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
        if (prevInstance._debugID !== 0) {
          ReactInstrumentation.debugTool.onHostOperation({
            instanceID: prevInstance._debugID,
            type: 'replace with',
            payload: markup.toString()
          });
        } else {
          var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
          if (nextInstance._debugID !== 0) {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: nextInstance._debugID,
              type: 'mount',
              payload: markup.toString()
            });
          }
        }
      };
    }
    var DOMChildrenOperations = {
      dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,
      replaceDelimitedText: replaceDelimitedText,
      processUpdates: function (parentNode, updates) {
        if ('production' !== 'production') {
          var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
        }
        for (var k = 0; k < updates.length; k++) {
          var update = updates[k];
          switch (update.type) {
            case 'INSERT_MARKUP':
              insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
              if ('production' !== 'production') {
                ReactInstrumentation.debugTool.onHostOperation({
                  instanceID: parentNodeDebugID,
                  type: 'insert child',
                  payload: {
                    toIndex: update.toIndex,
                    content: update.content.toString()
                  }
                });
              }
              break;
            case 'MOVE_EXISTING':
              moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
              if ('production' !== 'production') {
                ReactInstrumentation.debugTool.onHostOperation({
                  instanceID: parentNodeDebugID,
                  type: 'move child',
                  payload: {
                    fromIndex: update.fromIndex,
                    toIndex: update.toIndex
                  }
                });
              }
              break;
            case 'SET_MARKUP':
              setInnerHTML(parentNode, update.content);
              if ('production' !== 'production') {
                ReactInstrumentation.debugTool.onHostOperation({
                  instanceID: parentNodeDebugID,
                  type: 'replace children',
                  payload: update.content.toString()
                });
              }
              break;
            case 'TEXT_CONTENT':
              setTextContent(parentNode, update.content);
              if ('production' !== 'production') {
                ReactInstrumentation.debugTool.onHostOperation({
                  instanceID: parentNodeDebugID,
                  type: 'replace text',
                  payload: update.content.toString()
                });
              }
              break;
            case 'REMOVE_NODE':
              removeChild(parentNode, update.fromNode);
              if ('production' !== 'production') {
                ReactInstrumentation.debugTool.onHostOperation({
                  instanceID: parentNodeDebugID,
                  type: 'remove child',
                  payload: { fromIndex: update.fromIndex }
                });
              }
              break;
          }
        }
      }
    };
    module.exports = DOMChildrenOperations;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactDOMTextComponent.js', ['npm:react-dom@15.6.1/lib/reactProdInvariant.js', 'npm:object-assign@4.1.1.js', 'npm:react-dom@15.6.1/lib/DOMChildrenOperations.js', 'npm:react-dom@15.6.1/lib/DOMLazyTree.js', 'npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js', 'npm:react-dom@15.6.1/lib/escapeTextContentForBrowser.js', 'npm:fbjs@0.8.16/lib/invariant.js', 'npm:react-dom@15.6.1/lib/validateDOMNesting.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('npm:react-dom@15.6.1/lib/reactProdInvariant.js'),
        _assign = $__require('npm:object-assign@4.1.1.js');
    var DOMChildrenOperations = $__require('npm:react-dom@15.6.1/lib/DOMChildrenOperations.js');
    var DOMLazyTree = $__require('npm:react-dom@15.6.1/lib/DOMLazyTree.js');
    var ReactDOMComponentTree = $__require('npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js');
    var escapeTextContentForBrowser = $__require('npm:react-dom@15.6.1/lib/escapeTextContentForBrowser.js');
    var invariant = $__require('npm:fbjs@0.8.16/lib/invariant.js');
    var validateDOMNesting = $__require('npm:react-dom@15.6.1/lib/validateDOMNesting.js');
    var ReactDOMTextComponent = function (text) {
      this._currentElement = text;
      this._stringText = '' + text;
      this._hostNode = null;
      this._hostParent = null;
      this._domID = 0;
      this._mountIndex = 0;
      this._closingComment = null;
      this._commentNodes = null;
    };
    _assign(ReactDOMTextComponent.prototype, {
      mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
        if ('production' !== 'production') {
          var parentInfo;
          if (hostParent != null) {
            parentInfo = hostParent._ancestorInfo;
          } else if (hostContainerInfo != null) {
            parentInfo = hostContainerInfo._ancestorInfo;
          }
          if (parentInfo) {
            validateDOMNesting(null, this._stringText, this, parentInfo);
          }
        }
        var domID = hostContainerInfo._idCounter++;
        var openingValue = ' react-text: ' + domID + ' ';
        var closingValue = ' /react-text ';
        this._domID = domID;
        this._hostParent = hostParent;
        if (transaction.useCreateElement) {
          var ownerDocument = hostContainerInfo._ownerDocument;
          var openingComment = ownerDocument.createComment(openingValue);
          var closingComment = ownerDocument.createComment(closingValue);
          var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
          DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
          if (this._stringText) {
            DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
          }
          DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
          ReactDOMComponentTree.precacheNode(this, openingComment);
          this._closingComment = closingComment;
          return lazyTree;
        } else {
          var escapedText = escapeTextContentForBrowser(this._stringText);
          if (transaction.renderToStaticMarkup) {
            return escapedText;
          }
          return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
        }
      },
      receiveComponent: function (nextText, transaction) {
        if (nextText !== this._currentElement) {
          this._currentElement = nextText;
          var nextStringText = '' + nextText;
          if (nextStringText !== this._stringText) {
            this._stringText = nextStringText;
            var commentNodes = this.getHostNode();
            DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);
          }
        }
      },
      getHostNode: function () {
        var hostNode = this._commentNodes;
        if (hostNode) {
          return hostNode;
        }
        if (!this._closingComment) {
          var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
          var node = openingComment.nextSibling;
          while (true) {
            !(node != null) ? 'production' !== 'production' ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;
            if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
              this._closingComment = node;
              break;
            }
            node = node.nextSibling;
          }
        }
        hostNode = [this._hostNode, this._closingComment];
        this._commentNodes = hostNode;
        return hostNode;
      },
      unmountComponent: function () {
        this._closingComment = null;
        this._commentNodes = null;
        ReactDOMComponentTree.uncacheNode(this);
      }
    });
    module.exports = ReactDOMTextComponent;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactDefaultBatchingStrategy.js', ['npm:object-assign@4.1.1.js', 'npm:react-dom@15.6.1/lib/ReactUpdates.js', 'npm:react-dom@15.6.1/lib/Transaction.js', 'npm:fbjs@0.8.16/lib/emptyFunction.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var _assign = $__require('npm:object-assign@4.1.1.js');
  var ReactUpdates = $__require('npm:react-dom@15.6.1/lib/ReactUpdates.js');
  var Transaction = $__require('npm:react-dom@15.6.1/lib/Transaction.js');
  var emptyFunction = $__require('npm:fbjs@0.8.16/lib/emptyFunction.js');
  var RESET_BATCHED_UPDATES = {
    initialize: emptyFunction,
    close: function () {
      ReactDefaultBatchingStrategy.isBatchingUpdates = false;
    }
  };
  var FLUSH_BATCHED_UPDATES = {
    initialize: emptyFunction,
    close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
  };
  var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];
  function ReactDefaultBatchingStrategyTransaction() {
    this.reinitializeTransaction();
  }
  _assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction, { getTransactionWrappers: function () {
      return TRANSACTION_WRAPPERS;
    } });
  var transaction = new ReactDefaultBatchingStrategyTransaction();
  var ReactDefaultBatchingStrategy = {
    isBatchingUpdates: false,
    batchedUpdates: function (callback, a, b, c, d, e) {
      var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;
      ReactDefaultBatchingStrategy.isBatchingUpdates = true;
      if (alreadyBatchingUpdates) {
        return callback(a, b, c, d, e);
      } else {
        return transaction.perform(callback, null, a, b, c, d, e);
      }
    }
  };
  module.exports = ReactDefaultBatchingStrategy;
});
System.registerDynamic('npm:fbjs@0.8.16/lib/getUnboundedScrollPosition.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * @typechecks
   */

  'use strict';

  /**
   * Gets the scroll position of the supplied element or window.
   *
   * The return values are unbounded, unlike `getScrollPosition`. This means they
   * may be negative or exceed the element boundaries (which is possible using
   * inertial scrolling).
   *
   * @param {DOMWindow|DOMElement} scrollable
   * @return {object} Map with `x` and `y` keys.
   */

  var global = this || self,
      GLOBAL = global;
  function getUnboundedScrollPosition(scrollable) {
    if (scrollable.Window && scrollable instanceof scrollable.Window) {
      return {
        x: scrollable.pageXOffset || scrollable.document.documentElement.scrollLeft,
        y: scrollable.pageYOffset || scrollable.document.documentElement.scrollTop
      };
    }
    return {
      x: scrollable.scrollLeft,
      y: scrollable.scrollTop
    };
  }

  module.exports = getUnboundedScrollPosition;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactEventListener.js', ['npm:object-assign@4.1.1.js', 'npm:fbjs@0.8.16/lib/EventListener.js', 'npm:fbjs@0.8.16/lib/ExecutionEnvironment.js', 'npm:react-dom@15.6.1/lib/PooledClass.js', 'npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js', 'npm:react-dom@15.6.1/lib/ReactUpdates.js', 'npm:react-dom@15.6.1/lib/getEventTarget.js', 'npm:fbjs@0.8.16/lib/getUnboundedScrollPosition.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _assign = $__require('npm:object-assign@4.1.1.js');
    var EventListener = $__require('npm:fbjs@0.8.16/lib/EventListener.js');
    var ExecutionEnvironment = $__require('npm:fbjs@0.8.16/lib/ExecutionEnvironment.js');
    var PooledClass = $__require('npm:react-dom@15.6.1/lib/PooledClass.js');
    var ReactDOMComponentTree = $__require('npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js');
    var ReactUpdates = $__require('npm:react-dom@15.6.1/lib/ReactUpdates.js');
    var getEventTarget = $__require('npm:react-dom@15.6.1/lib/getEventTarget.js');
    var getUnboundedScrollPosition = $__require('npm:fbjs@0.8.16/lib/getUnboundedScrollPosition.js');
    function findParent(inst) {
      while (inst._hostParent) {
        inst = inst._hostParent;
      }
      var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
      var container = rootNode.parentNode;
      return ReactDOMComponentTree.getClosestInstanceFromNode(container);
    }
    function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
      this.topLevelType = topLevelType;
      this.nativeEvent = nativeEvent;
      this.ancestors = [];
    }
    _assign(TopLevelCallbackBookKeeping.prototype, { destructor: function () {
        this.topLevelType = null;
        this.nativeEvent = null;
        this.ancestors.length = 0;
      } });
    PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);
    function handleTopLevelImpl(bookKeeping) {
      var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
      var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);
      var ancestor = targetInst;
      do {
        bookKeeping.ancestors.push(ancestor);
        ancestor = ancestor && findParent(ancestor);
      } while (ancestor);
      for (var i = 0; i < bookKeeping.ancestors.length; i++) {
        targetInst = bookKeeping.ancestors[i];
        ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
      }
    }
    function scrollValueMonitor(cb) {
      var scrollPosition = getUnboundedScrollPosition(window);
      cb(scrollPosition);
    }
    var ReactEventListener = {
      _enabled: true,
      _handleTopLevel: null,
      WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,
      setHandleTopLevel: function (handleTopLevel) {
        ReactEventListener._handleTopLevel = handleTopLevel;
      },
      setEnabled: function (enabled) {
        ReactEventListener._enabled = !!enabled;
      },
      isEnabled: function () {
        return ReactEventListener._enabled;
      },
      trapBubbledEvent: function (topLevelType, handlerBaseName, element) {
        if (!element) {
          return null;
        }
        return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
      },
      trapCapturedEvent: function (topLevelType, handlerBaseName, element) {
        if (!element) {
          return null;
        }
        return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
      },
      monitorScrollValue: function (refresh) {
        var callback = scrollValueMonitor.bind(null, refresh);
        EventListener.listen(window, 'scroll', callback);
      },
      dispatchEvent: function (topLevelType, nativeEvent) {
        if (!ReactEventListener._enabled) {
          return;
        }
        var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
        try {
          ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
        } finally {
          TopLevelCallbackBookKeeping.release(bookKeeping);
        }
      }
    };
    module.exports = ReactEventListener;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactInjection.js', ['npm:react-dom@15.6.1/lib/DOMProperty.js', 'npm:react-dom@15.6.1/lib/EventPluginHub.js', 'npm:react-dom@15.6.1/lib/EventPluginUtils.js', 'npm:react-dom@15.6.1/lib/ReactComponentEnvironment.js', 'npm:react-dom@15.6.1/lib/ReactEmptyComponent.js', 'npm:react-dom@15.6.1/lib/ReactBrowserEventEmitter.js', 'npm:react-dom@15.6.1/lib/ReactHostComponent.js', 'npm:react-dom@15.6.1/lib/ReactUpdates.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var DOMProperty = $__require('npm:react-dom@15.6.1/lib/DOMProperty.js');
  var EventPluginHub = $__require('npm:react-dom@15.6.1/lib/EventPluginHub.js');
  var EventPluginUtils = $__require('npm:react-dom@15.6.1/lib/EventPluginUtils.js');
  var ReactComponentEnvironment = $__require('npm:react-dom@15.6.1/lib/ReactComponentEnvironment.js');
  var ReactEmptyComponent = $__require('npm:react-dom@15.6.1/lib/ReactEmptyComponent.js');
  var ReactBrowserEventEmitter = $__require('npm:react-dom@15.6.1/lib/ReactBrowserEventEmitter.js');
  var ReactHostComponent = $__require('npm:react-dom@15.6.1/lib/ReactHostComponent.js');
  var ReactUpdates = $__require('npm:react-dom@15.6.1/lib/ReactUpdates.js');
  var ReactInjection = {
    Component: ReactComponentEnvironment.injection,
    DOMProperty: DOMProperty.injection,
    EmptyComponent: ReactEmptyComponent.injection,
    EventPluginHub: EventPluginHub.injection,
    EventPluginUtils: EventPluginUtils.injection,
    EventEmitter: ReactBrowserEventEmitter.injection,
    HostComponent: ReactHostComponent.injection,
    Updates: ReactUpdates.injection
  };
  module.exports = ReactInjection;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactReconcileTransaction.js', ['npm:object-assign@4.1.1.js', 'npm:react-dom@15.6.1/lib/CallbackQueue.js', 'npm:react-dom@15.6.1/lib/PooledClass.js', 'npm:react-dom@15.6.1/lib/ReactBrowserEventEmitter.js', 'npm:react-dom@15.6.1/lib/ReactInputSelection.js', 'npm:react-dom@15.6.1/lib/ReactInstrumentation.js', 'npm:react-dom@15.6.1/lib/Transaction.js', 'npm:react-dom@15.6.1/lib/ReactUpdateQueue.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _assign = $__require('npm:object-assign@4.1.1.js');
    var CallbackQueue = $__require('npm:react-dom@15.6.1/lib/CallbackQueue.js');
    var PooledClass = $__require('npm:react-dom@15.6.1/lib/PooledClass.js');
    var ReactBrowserEventEmitter = $__require('npm:react-dom@15.6.1/lib/ReactBrowserEventEmitter.js');
    var ReactInputSelection = $__require('npm:react-dom@15.6.1/lib/ReactInputSelection.js');
    var ReactInstrumentation = $__require('npm:react-dom@15.6.1/lib/ReactInstrumentation.js');
    var Transaction = $__require('npm:react-dom@15.6.1/lib/Transaction.js');
    var ReactUpdateQueue = $__require('npm:react-dom@15.6.1/lib/ReactUpdateQueue.js');
    var SELECTION_RESTORATION = {
      initialize: ReactInputSelection.getSelectionInformation,
      close: ReactInputSelection.restoreSelection
    };
    var EVENT_SUPPRESSION = {
      initialize: function () {
        var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
        ReactBrowserEventEmitter.setEnabled(false);
        return currentlyEnabled;
      },
      close: function (previouslyEnabled) {
        ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
      }
    };
    var ON_DOM_READY_QUEUEING = {
      initialize: function () {
        this.reactMountReady.reset();
      },
      close: function () {
        this.reactMountReady.notifyAll();
      }
    };
    var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];
    if ('production' !== 'production') {
      TRANSACTION_WRAPPERS.push({
        initialize: ReactInstrumentation.debugTool.onBeginFlush,
        close: ReactInstrumentation.debugTool.onEndFlush
      });
    }
    function ReactReconcileTransaction(useCreateElement) {
      this.reinitializeTransaction();
      this.renderToStaticMarkup = false;
      this.reactMountReady = CallbackQueue.getPooled(null);
      this.useCreateElement = useCreateElement;
    }
    var Mixin = {
      getTransactionWrappers: function () {
        return TRANSACTION_WRAPPERS;
      },
      getReactMountReady: function () {
        return this.reactMountReady;
      },
      getUpdateQueue: function () {
        return ReactUpdateQueue;
      },
      checkpoint: function () {
        return this.reactMountReady.checkpoint();
      },
      rollback: function (checkpoint) {
        this.reactMountReady.rollback(checkpoint);
      },
      destructor: function () {
        CallbackQueue.release(this.reactMountReady);
        this.reactMountReady = null;
      }
    };
    _assign(ReactReconcileTransaction.prototype, Transaction, Mixin);
    PooledClass.addPoolingTo(ReactReconcileTransaction);
    module.exports = ReactReconcileTransaction;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/SVGDOMPropertyConfig.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var NS = {
    xlink: 'http://www.w3.org/1999/xlink',
    xml: 'http://www.w3.org/XML/1998/namespace'
  };

  // We use attributes for everything SVG so let's avoid some duplication and run
  // code instead.
  // The following are all specified in the HTML config already so we exclude here.
  // - class (as className)
  // - color
  // - height
  // - id
  // - lang
  // - max
  // - media
  // - method
  // - min
  // - name
  // - style
  // - target
  // - type
  // - width
  var ATTRS = {
    accentHeight: 'accent-height',
    accumulate: 0,
    additive: 0,
    alignmentBaseline: 'alignment-baseline',
    allowReorder: 'allowReorder',
    alphabetic: 0,
    amplitude: 0,
    arabicForm: 'arabic-form',
    ascent: 0,
    attributeName: 'attributeName',
    attributeType: 'attributeType',
    autoReverse: 'autoReverse',
    azimuth: 0,
    baseFrequency: 'baseFrequency',
    baseProfile: 'baseProfile',
    baselineShift: 'baseline-shift',
    bbox: 0,
    begin: 0,
    bias: 0,
    by: 0,
    calcMode: 'calcMode',
    capHeight: 'cap-height',
    clip: 0,
    clipPath: 'clip-path',
    clipRule: 'clip-rule',
    clipPathUnits: 'clipPathUnits',
    colorInterpolation: 'color-interpolation',
    colorInterpolationFilters: 'color-interpolation-filters',
    colorProfile: 'color-profile',
    colorRendering: 'color-rendering',
    contentScriptType: 'contentScriptType',
    contentStyleType: 'contentStyleType',
    cursor: 0,
    cx: 0,
    cy: 0,
    d: 0,
    decelerate: 0,
    descent: 0,
    diffuseConstant: 'diffuseConstant',
    direction: 0,
    display: 0,
    divisor: 0,
    dominantBaseline: 'dominant-baseline',
    dur: 0,
    dx: 0,
    dy: 0,
    edgeMode: 'edgeMode',
    elevation: 0,
    enableBackground: 'enable-background',
    end: 0,
    exponent: 0,
    externalResourcesRequired: 'externalResourcesRequired',
    fill: 0,
    fillOpacity: 'fill-opacity',
    fillRule: 'fill-rule',
    filter: 0,
    filterRes: 'filterRes',
    filterUnits: 'filterUnits',
    floodColor: 'flood-color',
    floodOpacity: 'flood-opacity',
    focusable: 0,
    fontFamily: 'font-family',
    fontSize: 'font-size',
    fontSizeAdjust: 'font-size-adjust',
    fontStretch: 'font-stretch',
    fontStyle: 'font-style',
    fontVariant: 'font-variant',
    fontWeight: 'font-weight',
    format: 0,
    from: 0,
    fx: 0,
    fy: 0,
    g1: 0,
    g2: 0,
    glyphName: 'glyph-name',
    glyphOrientationHorizontal: 'glyph-orientation-horizontal',
    glyphOrientationVertical: 'glyph-orientation-vertical',
    glyphRef: 'glyphRef',
    gradientTransform: 'gradientTransform',
    gradientUnits: 'gradientUnits',
    hanging: 0,
    horizAdvX: 'horiz-adv-x',
    horizOriginX: 'horiz-origin-x',
    ideographic: 0,
    imageRendering: 'image-rendering',
    'in': 0,
    in2: 0,
    intercept: 0,
    k: 0,
    k1: 0,
    k2: 0,
    k3: 0,
    k4: 0,
    kernelMatrix: 'kernelMatrix',
    kernelUnitLength: 'kernelUnitLength',
    kerning: 0,
    keyPoints: 'keyPoints',
    keySplines: 'keySplines',
    keyTimes: 'keyTimes',
    lengthAdjust: 'lengthAdjust',
    letterSpacing: 'letter-spacing',
    lightingColor: 'lighting-color',
    limitingConeAngle: 'limitingConeAngle',
    local: 0,
    markerEnd: 'marker-end',
    markerMid: 'marker-mid',
    markerStart: 'marker-start',
    markerHeight: 'markerHeight',
    markerUnits: 'markerUnits',
    markerWidth: 'markerWidth',
    mask: 0,
    maskContentUnits: 'maskContentUnits',
    maskUnits: 'maskUnits',
    mathematical: 0,
    mode: 0,
    numOctaves: 'numOctaves',
    offset: 0,
    opacity: 0,
    operator: 0,
    order: 0,
    orient: 0,
    orientation: 0,
    origin: 0,
    overflow: 0,
    overlinePosition: 'overline-position',
    overlineThickness: 'overline-thickness',
    paintOrder: 'paint-order',
    panose1: 'panose-1',
    pathLength: 'pathLength',
    patternContentUnits: 'patternContentUnits',
    patternTransform: 'patternTransform',
    patternUnits: 'patternUnits',
    pointerEvents: 'pointer-events',
    points: 0,
    pointsAtX: 'pointsAtX',
    pointsAtY: 'pointsAtY',
    pointsAtZ: 'pointsAtZ',
    preserveAlpha: 'preserveAlpha',
    preserveAspectRatio: 'preserveAspectRatio',
    primitiveUnits: 'primitiveUnits',
    r: 0,
    radius: 0,
    refX: 'refX',
    refY: 'refY',
    renderingIntent: 'rendering-intent',
    repeatCount: 'repeatCount',
    repeatDur: 'repeatDur',
    requiredExtensions: 'requiredExtensions',
    requiredFeatures: 'requiredFeatures',
    restart: 0,
    result: 0,
    rotate: 0,
    rx: 0,
    ry: 0,
    scale: 0,
    seed: 0,
    shapeRendering: 'shape-rendering',
    slope: 0,
    spacing: 0,
    specularConstant: 'specularConstant',
    specularExponent: 'specularExponent',
    speed: 0,
    spreadMethod: 'spreadMethod',
    startOffset: 'startOffset',
    stdDeviation: 'stdDeviation',
    stemh: 0,
    stemv: 0,
    stitchTiles: 'stitchTiles',
    stopColor: 'stop-color',
    stopOpacity: 'stop-opacity',
    strikethroughPosition: 'strikethrough-position',
    strikethroughThickness: 'strikethrough-thickness',
    string: 0,
    stroke: 0,
    strokeDasharray: 'stroke-dasharray',
    strokeDashoffset: 'stroke-dashoffset',
    strokeLinecap: 'stroke-linecap',
    strokeLinejoin: 'stroke-linejoin',
    strokeMiterlimit: 'stroke-miterlimit',
    strokeOpacity: 'stroke-opacity',
    strokeWidth: 'stroke-width',
    surfaceScale: 'surfaceScale',
    systemLanguage: 'systemLanguage',
    tableValues: 'tableValues',
    targetX: 'targetX',
    targetY: 'targetY',
    textAnchor: 'text-anchor',
    textDecoration: 'text-decoration',
    textRendering: 'text-rendering',
    textLength: 'textLength',
    to: 0,
    transform: 0,
    u1: 0,
    u2: 0,
    underlinePosition: 'underline-position',
    underlineThickness: 'underline-thickness',
    unicode: 0,
    unicodeBidi: 'unicode-bidi',
    unicodeRange: 'unicode-range',
    unitsPerEm: 'units-per-em',
    vAlphabetic: 'v-alphabetic',
    vHanging: 'v-hanging',
    vIdeographic: 'v-ideographic',
    vMathematical: 'v-mathematical',
    values: 0,
    vectorEffect: 'vector-effect',
    version: 0,
    vertAdvY: 'vert-adv-y',
    vertOriginX: 'vert-origin-x',
    vertOriginY: 'vert-origin-y',
    viewBox: 'viewBox',
    viewTarget: 'viewTarget',
    visibility: 0,
    widths: 0,
    wordSpacing: 'word-spacing',
    writingMode: 'writing-mode',
    x: 0,
    xHeight: 'x-height',
    x1: 0,
    x2: 0,
    xChannelSelector: 'xChannelSelector',
    xlinkActuate: 'xlink:actuate',
    xlinkArcrole: 'xlink:arcrole',
    xlinkHref: 'xlink:href',
    xlinkRole: 'xlink:role',
    xlinkShow: 'xlink:show',
    xlinkTitle: 'xlink:title',
    xlinkType: 'xlink:type',
    xmlBase: 'xml:base',
    xmlns: 0,
    xmlnsXlink: 'xmlns:xlink',
    xmlLang: 'xml:lang',
    xmlSpace: 'xml:space',
    y: 0,
    y1: 0,
    y2: 0,
    yChannelSelector: 'yChannelSelector',
    z: 0,
    zoomAndPan: 'zoomAndPan'
  };

  var SVGDOMPropertyConfig = {
    Properties: {},
    DOMAttributeNamespaces: {
      xlinkActuate: NS.xlink,
      xlinkArcrole: NS.xlink,
      xlinkHref: NS.xlink,
      xlinkRole: NS.xlink,
      xlinkShow: NS.xlink,
      xlinkTitle: NS.xlink,
      xlinkType: NS.xlink,
      xmlBase: NS.xml,
      xmlLang: NS.xml,
      xmlSpace: NS.xml
    },
    DOMAttributeNames: {}
  };

  Object.keys(ATTRS).forEach(function (key) {
    SVGDOMPropertyConfig.Properties[key] = 0;
    if (ATTRS[key]) {
      SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
    }
  });

  module.exports = SVGDOMPropertyConfig;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/getNodeForCharacterOffset.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  /**
   * Given any node return the first leaf node without children.
   *
   * @param {DOMElement|DOMTextNode} node
   * @return {DOMElement|DOMTextNode}
   */

  var global = this || self,
      GLOBAL = global;
  function getLeafNode(node) {
    while (node && node.firstChild) {
      node = node.firstChild;
    }
    return node;
  }

  /**
   * Get the next sibling within a container. This will walk up the
   * DOM if a node's siblings have been exhausted.
   *
   * @param {DOMElement|DOMTextNode} node
   * @return {?DOMElement|DOMTextNode}
   */
  function getSiblingNode(node) {
    while (node) {
      if (node.nextSibling) {
        return node.nextSibling;
      }
      node = node.parentNode;
    }
  }

  /**
   * Get object describing the nodes which contain characters at offset.
   *
   * @param {DOMElement|DOMTextNode} root
   * @param {number} offset
   * @return {?object}
   */
  function getNodeForCharacterOffset(root, offset) {
    var node = getLeafNode(root);
    var nodeStart = 0;
    var nodeEnd = 0;

    while (node) {
      if (node.nodeType === 3) {
        nodeEnd = nodeStart + node.textContent.length;

        if (nodeStart <= offset && nodeEnd >= offset) {
          return {
            node: node,
            offset: offset - nodeStart
          };
        }

        nodeStart = nodeEnd;
      }

      node = getLeafNode(getSiblingNode(node));
    }
  }

  module.exports = getNodeForCharacterOffset;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/getTextContentAccessor.js', ['npm:fbjs@0.8.16/lib/ExecutionEnvironment.js'], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ExecutionEnvironment = $__require('npm:fbjs@0.8.16/lib/ExecutionEnvironment.js');

  var contentKey = null;

  /**
   * Gets the key used to access text content on a DOM node.
   *
   * @return {?string} Key used to access text content.
   * @internal
   */
  function getTextContentAccessor() {
    if (!contentKey && ExecutionEnvironment.canUseDOM) {
      // Prefer textContent to innerText because many browsers support both but
      // SVG <text> elements don't support innerText even when <div> does.
      contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
    }
    return contentKey;
  }

  module.exports = getTextContentAccessor;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactDOMSelection.js', ['npm:fbjs@0.8.16/lib/ExecutionEnvironment.js', 'npm:react-dom@15.6.1/lib/getNodeForCharacterOffset.js', 'npm:react-dom@15.6.1/lib/getTextContentAccessor.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ExecutionEnvironment = $__require('npm:fbjs@0.8.16/lib/ExecutionEnvironment.js');
  var getNodeForCharacterOffset = $__require('npm:react-dom@15.6.1/lib/getNodeForCharacterOffset.js');
  var getTextContentAccessor = $__require('npm:react-dom@15.6.1/lib/getTextContentAccessor.js');
  function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
    return anchorNode === focusNode && anchorOffset === focusOffset;
  }
  function getIEOffsets(node) {
    var selection = document.selection;
    var selectedRange = selection.createRange();
    var selectedLength = selectedRange.text.length;
    var fromStart = selectedRange.duplicate();
    fromStart.moveToElementText(node);
    fromStart.setEndPoint('EndToStart', selectedRange);
    var startOffset = fromStart.text.length;
    var endOffset = startOffset + selectedLength;
    return {
      start: startOffset,
      end: endOffset
    };
  }
  function getModernOffsets(node) {
    var selection = window.getSelection && window.getSelection();
    if (!selection || selection.rangeCount === 0) {
      return null;
    }
    var anchorNode = selection.anchorNode;
    var anchorOffset = selection.anchorOffset;
    var focusNode = selection.focusNode;
    var focusOffset = selection.focusOffset;
    var currentRange = selection.getRangeAt(0);
    try {
      currentRange.startContainer.nodeType;
      currentRange.endContainer.nodeType;
    } catch (e) {
      return null;
    }
    var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);
    var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;
    var tempRange = currentRange.cloneRange();
    tempRange.selectNodeContents(node);
    tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);
    var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);
    var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
    var end = start + rangeLength;
    var detectionRange = document.createRange();
    detectionRange.setStart(anchorNode, anchorOffset);
    detectionRange.setEnd(focusNode, focusOffset);
    var isBackward = detectionRange.collapsed;
    return {
      start: isBackward ? end : start,
      end: isBackward ? start : end
    };
  }
  function setIEOffsets(node, offsets) {
    var range = document.selection.createRange().duplicate();
    var start, end;
    if (offsets.end === undefined) {
      start = offsets.start;
      end = start;
    } else if (offsets.start > offsets.end) {
      start = offsets.end;
      end = offsets.start;
    } else {
      start = offsets.start;
      end = offsets.end;
    }
    range.moveToElementText(node);
    range.moveStart('character', start);
    range.setEndPoint('EndToStart', range);
    range.moveEnd('character', end - start);
    range.select();
  }
  function setModernOffsets(node, offsets) {
    if (!window.getSelection) {
      return;
    }
    var selection = window.getSelection();
    var length = node[getTextContentAccessor()].length;
    var start = Math.min(offsets.start, length);
    var end = offsets.end === undefined ? start : Math.min(offsets.end, length);
    if (!selection.extend && start > end) {
      var temp = end;
      end = start;
      start = temp;
    }
    var startMarker = getNodeForCharacterOffset(node, start);
    var endMarker = getNodeForCharacterOffset(node, end);
    if (startMarker && endMarker) {
      var range = document.createRange();
      range.setStart(startMarker.node, startMarker.offset);
      selection.removeAllRanges();
      if (start > end) {
        selection.addRange(range);
        selection.extend(endMarker.node, endMarker.offset);
      } else {
        range.setEnd(endMarker.node, endMarker.offset);
        selection.addRange(range);
      }
    }
  }
  var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);
  var ReactDOMSelection = {
    getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,
    setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
  };
  module.exports = ReactDOMSelection;
});
System.registerDynamic('npm:fbjs@0.8.16/lib/isNode.js', [], true, function ($__require, exports, module) {
  /* */
  'use strict';

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * @typechecks
   */

  /**
   * @param {*} object The object to check.
   * @return {boolean} Whether or not the object is a DOM node.
   */

  var global = this || self,
      GLOBAL = global;
  function isNode(object) {
    var doc = object ? object.ownerDocument || object : document;
    var defaultView = doc.defaultView || window;
    return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
  }

  module.exports = isNode;
});
System.registerDynamic('npm:fbjs@0.8.16/lib/isTextNode.js', ['npm:fbjs@0.8.16/lib/isNode.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var isNode = $__require('npm:fbjs@0.8.16/lib/isNode.js');
  function isTextNode(object) {
    return isNode(object) && object.nodeType == 3;
  }
  module.exports = isTextNode;
});
System.registerDynamic('npm:fbjs@0.8.16/lib/containsNode.js', ['npm:fbjs@0.8.16/lib/isTextNode.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var isTextNode = $__require('npm:fbjs@0.8.16/lib/isTextNode.js');
  function containsNode(outerNode, innerNode) {
    if (!outerNode || !innerNode) {
      return false;
    } else if (outerNode === innerNode) {
      return true;
    } else if (isTextNode(outerNode)) {
      return false;
    } else if (isTextNode(innerNode)) {
      return containsNode(outerNode, innerNode.parentNode);
    } else if ('contains' in outerNode) {
      return outerNode.contains(innerNode);
    } else if (outerNode.compareDocumentPosition) {
      return !!(outerNode.compareDocumentPosition(innerNode) & 16);
    } else {
      return false;
    }
  }
  module.exports = containsNode;
});
System.registerDynamic('npm:fbjs@0.8.16/lib/focusNode.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   */

  'use strict';

  /**
   * @param {DOMElement} node input/textarea to focus
   */

  var global = this || self,
      GLOBAL = global;
  function focusNode(node) {
    // IE8 can throw "Can't move focus to the control because it is invisible,
    // not enabled, or of a type that does not accept the focus." for all kinds of
    // reasons that are too expensive and fragile to test.
    try {
      node.focus();
    } catch (e) {}
  }

  module.exports = focusNode;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactInputSelection.js', ['npm:react-dom@15.6.1/lib/ReactDOMSelection.js', 'npm:fbjs@0.8.16/lib/containsNode.js', 'npm:fbjs@0.8.16/lib/focusNode.js', 'npm:fbjs@0.8.16/lib/getActiveElement.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ReactDOMSelection = $__require('npm:react-dom@15.6.1/lib/ReactDOMSelection.js');
  var containsNode = $__require('npm:fbjs@0.8.16/lib/containsNode.js');
  var focusNode = $__require('npm:fbjs@0.8.16/lib/focusNode.js');
  var getActiveElement = $__require('npm:fbjs@0.8.16/lib/getActiveElement.js');
  function isInDocument(node) {
    return containsNode(document.documentElement, node);
  }
  var ReactInputSelection = {
    hasSelectionCapabilities: function (elem) {
      var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
      return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
    },
    getSelectionInformation: function () {
      var focusedElem = getActiveElement();
      return {
        focusedElem: focusedElem,
        selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
      };
    },
    restoreSelection: function (priorSelectionInformation) {
      var curFocusedElem = getActiveElement();
      var priorFocusedElem = priorSelectionInformation.focusedElem;
      var priorSelectionRange = priorSelectionInformation.selectionRange;
      if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
        if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
          ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
        }
        focusNode(priorFocusedElem);
      }
    },
    getSelection: function (input) {
      var selection;
      if ('selectionStart' in input) {
        selection = {
          start: input.selectionStart,
          end: input.selectionEnd
        };
      } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
        var range = document.selection.createRange();
        if (range.parentElement() === input) {
          selection = {
            start: -range.moveStart('character', -input.value.length),
            end: -range.moveEnd('character', -input.value.length)
          };
        }
      } else {
        selection = ReactDOMSelection.getOffsets(input);
      }
      return selection || {
        start: 0,
        end: 0
      };
    },
    setSelection: function (input, offsets) {
      var start = offsets.start;
      var end = offsets.end;
      if (end === undefined) {
        end = start;
      }
      if ('selectionStart' in input) {
        input.selectionStart = start;
        input.selectionEnd = Math.min(end, input.value.length);
      } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
        var range = input.createTextRange();
        range.collapse(true);
        range.moveStart('character', start);
        range.moveEnd('character', end - start);
        range.select();
      } else {
        ReactDOMSelection.setOffsets(input, offsets);
      }
    }
  };
  module.exports = ReactInputSelection;
});
System.registerDynamic('npm:fbjs@0.8.16/lib/getActiveElement.js', [], true, function ($__require, exports, module) {
  /* */
  'use strict';

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * @typechecks
   */

  /* eslint-disable fb-www/typeof-undefined */

  /**
   * Same as document.activeElement but wraps in a try-catch block. In IE it is
   * not safe to call document.activeElement if there is nothing focused.
   *
   * The activeElement will be null only if the document or document body is not
   * yet defined.
   *
   * @param {?DOMDocument} doc Defaults to current document.
   * @return {?DOMElement}
   */

  var global = this || self,
      GLOBAL = global;
  function getActiveElement(doc) /*?DOMElement*/{
    doc = doc || (typeof document !== 'undefined' ? document : undefined);
    if (typeof doc === 'undefined') {
      return null;
    }
    try {
      return doc.activeElement || doc.body;
    } catch (e) {
      return doc.body;
    }
  }

  module.exports = getActiveElement;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/isTextInputElement.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  /**
   * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
   */

  var global = this || self,
      GLOBAL = global;
  var supportedInputTypes = {
    color: true,
    date: true,
    datetime: true,
    'datetime-local': true,
    email: true,
    month: true,
    number: true,
    password: true,
    range: true,
    search: true,
    tel: true,
    text: true,
    time: true,
    url: true,
    week: true
  };

  function isTextInputElement(elem) {
    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

    if (nodeName === 'input') {
      return !!supportedInputTypes[elem.type];
    }

    if (nodeName === 'textarea') {
      return true;
    }

    return false;
  }

  module.exports = isTextInputElement;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/SelectEventPlugin.js', ['npm:react-dom@15.6.1/lib/EventPropagators.js', 'npm:fbjs@0.8.16/lib/ExecutionEnvironment.js', 'npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js', 'npm:react-dom@15.6.1/lib/ReactInputSelection.js', 'npm:react-dom@15.6.1/lib/SyntheticEvent.js', 'npm:fbjs@0.8.16/lib/getActiveElement.js', 'npm:react-dom@15.6.1/lib/isTextInputElement.js', 'npm:fbjs@0.8.16/lib/shallowEqual.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var EventPropagators = $__require('npm:react-dom@15.6.1/lib/EventPropagators.js');
  var ExecutionEnvironment = $__require('npm:fbjs@0.8.16/lib/ExecutionEnvironment.js');
  var ReactDOMComponentTree = $__require('npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js');
  var ReactInputSelection = $__require('npm:react-dom@15.6.1/lib/ReactInputSelection.js');
  var SyntheticEvent = $__require('npm:react-dom@15.6.1/lib/SyntheticEvent.js');
  var getActiveElement = $__require('npm:fbjs@0.8.16/lib/getActiveElement.js');
  var isTextInputElement = $__require('npm:react-dom@15.6.1/lib/isTextInputElement.js');
  var shallowEqual = $__require('npm:fbjs@0.8.16/lib/shallowEqual.js');
  var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;
  var eventTypes = { select: {
      phasedRegistrationNames: {
        bubbled: 'onSelect',
        captured: 'onSelectCapture'
      },
      dependencies: ['topBlur', 'topContextMenu', 'topFocus', 'topKeyDown', 'topKeyUp', 'topMouseDown', 'topMouseUp', 'topSelectionChange']
    } };
  var activeElement = null;
  var activeElementInst = null;
  var lastSelection = null;
  var mouseDown = false;
  var hasListener = false;
  function getSelection(node) {
    if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
      return {
        start: node.selectionStart,
        end: node.selectionEnd
      };
    } else if (window.getSelection) {
      var selection = window.getSelection();
      return {
        anchorNode: selection.anchorNode,
        anchorOffset: selection.anchorOffset,
        focusNode: selection.focusNode,
        focusOffset: selection.focusOffset
      };
    } else if (document.selection) {
      var range = document.selection.createRange();
      return {
        parentElement: range.parentElement(),
        text: range.text,
        top: range.boundingTop,
        left: range.boundingLeft
      };
    }
  }
  function constructSelectEvent(nativeEvent, nativeEventTarget) {
    if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
      return null;
    }
    var currentSelection = getSelection(activeElement);
    if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
      lastSelection = currentSelection;
      var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);
      syntheticEvent.type = 'select';
      syntheticEvent.target = activeElement;
      EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);
      return syntheticEvent;
    }
    return null;
  }
  var SelectEventPlugin = {
    eventTypes: eventTypes,
    extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      if (!hasListener) {
        return null;
      }
      var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;
      switch (topLevelType) {
        case 'topFocus':
          if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
            activeElement = targetNode;
            activeElementInst = targetInst;
            lastSelection = null;
          }
          break;
        case 'topBlur':
          activeElement = null;
          activeElementInst = null;
          lastSelection = null;
          break;
        case 'topMouseDown':
          mouseDown = true;
          break;
        case 'topContextMenu':
        case 'topMouseUp':
          mouseDown = false;
          return constructSelectEvent(nativeEvent, nativeEventTarget);
        case 'topSelectionChange':
          if (skipSelectionChangeEvent) {
            break;
          }
        case 'topKeyDown':
        case 'topKeyUp':
          return constructSelectEvent(nativeEvent, nativeEventTarget);
      }
      return null;
    },
    didPutListener: function (inst, registrationName, listener) {
      if (registrationName === 'onSelect') {
        hasListener = true;
      }
    }
  };
  module.exports = SelectEventPlugin;
});
System.registerDynamic('npm:fbjs@0.8.16/lib/EventListener.js', ['npm:fbjs@0.8.16/lib/emptyFunction.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var emptyFunction = $__require('npm:fbjs@0.8.16/lib/emptyFunction.js');
    var EventListener = {
      listen: function listen(target, eventType, callback) {
        if (target.addEventListener) {
          target.addEventListener(eventType, callback, false);
          return { remove: function remove() {
              target.removeEventListener(eventType, callback, false);
            } };
        } else if (target.attachEvent) {
          target.attachEvent('on' + eventType, callback);
          return { remove: function remove() {
              target.detachEvent('on' + eventType, callback);
            } };
        }
      },
      capture: function capture(target, eventType, callback) {
        if (target.addEventListener) {
          target.addEventListener(eventType, callback, true);
          return { remove: function remove() {
              target.removeEventListener(eventType, callback, true);
            } };
        } else {
          if ('production' !== 'production') {
            console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
          }
          return { remove: emptyFunction };
        }
      },
      registerDefault: function registerDefault() {}
    };
    module.exports = EventListener;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/EventPropagators.js', ['npm:react-dom@15.6.1/lib/EventPluginHub.js', 'npm:react-dom@15.6.1/lib/EventPluginUtils.js', 'npm:react-dom@15.6.1/lib/accumulateInto.js', 'npm:react-dom@15.6.1/lib/forEachAccumulated.js', 'npm:fbjs@0.8.16/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var EventPluginHub = $__require('npm:react-dom@15.6.1/lib/EventPluginHub.js');
    var EventPluginUtils = $__require('npm:react-dom@15.6.1/lib/EventPluginUtils.js');
    var accumulateInto = $__require('npm:react-dom@15.6.1/lib/accumulateInto.js');
    var forEachAccumulated = $__require('npm:react-dom@15.6.1/lib/forEachAccumulated.js');
    var warning = $__require('npm:fbjs@0.8.16/lib/warning.js');
    var getListener = EventPluginHub.getListener;
    function listenerAtPhase(inst, event, propagationPhase) {
      var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
      return getListener(inst, registrationName);
    }
    function accumulateDirectionalDispatches(inst, phase, event) {
      if ('production' !== 'production') {
        'production' !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;
      }
      var listener = listenerAtPhase(inst, event, phase);
      if (listener) {
        event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
        event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
      }
    }
    function accumulateTwoPhaseDispatchesSingle(event) {
      if (event && event.dispatchConfig.phasedRegistrationNames) {
        EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
      }
    }
    function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
      if (event && event.dispatchConfig.phasedRegistrationNames) {
        var targetInst = event._targetInst;
        var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
        EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
      }
    }
    function accumulateDispatches(inst, ignoredDirection, event) {
      if (event && event.dispatchConfig.registrationName) {
        var registrationName = event.dispatchConfig.registrationName;
        var listener = getListener(inst, registrationName);
        if (listener) {
          event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
          event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
        }
      }
    }
    function accumulateDirectDispatchesSingle(event) {
      if (event && event.dispatchConfig.registrationName) {
        accumulateDispatches(event._targetInst, null, event);
      }
    }
    function accumulateTwoPhaseDispatches(events) {
      forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
    }
    function accumulateTwoPhaseDispatchesSkipTarget(events) {
      forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
    }
    function accumulateEnterLeaveDispatches(leave, enter, from, to) {
      EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
    }
    function accumulateDirectDispatches(events) {
      forEachAccumulated(events, accumulateDirectDispatchesSingle);
    }
    var EventPropagators = {
      accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
      accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
      accumulateDirectDispatches: accumulateDirectDispatches,
      accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
    };
    module.exports = EventPropagators;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/SyntheticAnimationEvent.js', ['npm:react-dom@15.6.1/lib/SyntheticEvent.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var SyntheticEvent = $__require('npm:react-dom@15.6.1/lib/SyntheticEvent.js');
  var AnimationEventInterface = {
    animationName: null,
    elapsedTime: null,
    pseudoElement: null
  };
  function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);
  module.exports = SyntheticAnimationEvent;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/SyntheticClipboardEvent.js', ['npm:react-dom@15.6.1/lib/SyntheticEvent.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var SyntheticEvent = $__require('npm:react-dom@15.6.1/lib/SyntheticEvent.js');
  var ClipboardEventInterface = { clipboardData: function (event) {
      return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
    } };
  function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);
  module.exports = SyntheticClipboardEvent;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/SyntheticFocusEvent.js', ['npm:react-dom@15.6.1/lib/SyntheticUIEvent.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var SyntheticUIEvent = $__require('npm:react-dom@15.6.1/lib/SyntheticUIEvent.js');
  var FocusEventInterface = { relatedTarget: null };
  function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);
  module.exports = SyntheticFocusEvent;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/getEventKey.js', ['npm:react-dom@15.6.1/lib/getEventCharCode.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var getEventCharCode = $__require('npm:react-dom@15.6.1/lib/getEventCharCode.js');
  var normalizeKey = {
    Esc: 'Escape',
    Spacebar: ' ',
    Left: 'ArrowLeft',
    Up: 'ArrowUp',
    Right: 'ArrowRight',
    Down: 'ArrowDown',
    Del: 'Delete',
    Win: 'OS',
    Menu: 'ContextMenu',
    Apps: 'ContextMenu',
    Scroll: 'ScrollLock',
    MozPrintableKey: 'Unidentified'
  };
  var translateToKey = {
    8: 'Backspace',
    9: 'Tab',
    12: 'Clear',
    13: 'Enter',
    16: 'Shift',
    17: 'Control',
    18: 'Alt',
    19: 'Pause',
    20: 'CapsLock',
    27: 'Escape',
    32: ' ',
    33: 'PageUp',
    34: 'PageDown',
    35: 'End',
    36: 'Home',
    37: 'ArrowLeft',
    38: 'ArrowUp',
    39: 'ArrowRight',
    40: 'ArrowDown',
    45: 'Insert',
    46: 'Delete',
    112: 'F1',
    113: 'F2',
    114: 'F3',
    115: 'F4',
    116: 'F5',
    117: 'F6',
    118: 'F7',
    119: 'F8',
    120: 'F9',
    121: 'F10',
    122: 'F11',
    123: 'F12',
    144: 'NumLock',
    145: 'ScrollLock',
    224: 'Meta'
  };
  function getEventKey(nativeEvent) {
    if (nativeEvent.key) {
      var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
      if (key !== 'Unidentified') {
        return key;
      }
    }
    if (nativeEvent.type === 'keypress') {
      var charCode = getEventCharCode(nativeEvent);
      return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
    }
    if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
      return translateToKey[nativeEvent.keyCode] || 'Unidentified';
    }
    return '';
  }
  module.exports = getEventKey;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/SyntheticKeyboardEvent.js', ['npm:react-dom@15.6.1/lib/SyntheticUIEvent.js', 'npm:react-dom@15.6.1/lib/getEventCharCode.js', 'npm:react-dom@15.6.1/lib/getEventKey.js', 'npm:react-dom@15.6.1/lib/getEventModifierState.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var SyntheticUIEvent = $__require('npm:react-dom@15.6.1/lib/SyntheticUIEvent.js');
  var getEventCharCode = $__require('npm:react-dom@15.6.1/lib/getEventCharCode.js');
  var getEventKey = $__require('npm:react-dom@15.6.1/lib/getEventKey.js');
  var getEventModifierState = $__require('npm:react-dom@15.6.1/lib/getEventModifierState.js');
  var KeyboardEventInterface = {
    key: getEventKey,
    location: null,
    ctrlKey: null,
    shiftKey: null,
    altKey: null,
    metaKey: null,
    repeat: null,
    locale: null,
    getModifierState: getEventModifierState,
    charCode: function (event) {
      if (event.type === 'keypress') {
        return getEventCharCode(event);
      }
      return 0;
    },
    keyCode: function (event) {
      if (event.type === 'keydown' || event.type === 'keyup') {
        return event.keyCode;
      }
      return 0;
    },
    which: function (event) {
      if (event.type === 'keypress') {
        return getEventCharCode(event);
      }
      if (event.type === 'keydown' || event.type === 'keyup') {
        return event.keyCode;
      }
      return 0;
    }
  };
  function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);
  module.exports = SyntheticKeyboardEvent;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/SyntheticDragEvent.js', ['npm:react-dom@15.6.1/lib/SyntheticMouseEvent.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var SyntheticMouseEvent = $__require('npm:react-dom@15.6.1/lib/SyntheticMouseEvent.js');
  var DragEventInterface = { dataTransfer: null };
  function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);
  module.exports = SyntheticDragEvent;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/SyntheticTouchEvent.js', ['npm:react-dom@15.6.1/lib/SyntheticUIEvent.js', 'npm:react-dom@15.6.1/lib/getEventModifierState.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var SyntheticUIEvent = $__require('npm:react-dom@15.6.1/lib/SyntheticUIEvent.js');
  var getEventModifierState = $__require('npm:react-dom@15.6.1/lib/getEventModifierState.js');
  var TouchEventInterface = {
    touches: null,
    targetTouches: null,
    changedTouches: null,
    altKey: null,
    metaKey: null,
    ctrlKey: null,
    shiftKey: null,
    getModifierState: getEventModifierState
  };
  function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);
  module.exports = SyntheticTouchEvent;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/SyntheticTransitionEvent.js', ['npm:react-dom@15.6.1/lib/SyntheticEvent.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var SyntheticEvent = $__require('npm:react-dom@15.6.1/lib/SyntheticEvent.js');
  var TransitionEventInterface = {
    propertyName: null,
    elapsedTime: null,
    pseudoElement: null
  };
  function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);
  module.exports = SyntheticTransitionEvent;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/SyntheticEvent.js', ['npm:object-assign@4.1.1.js', 'npm:react-dom@15.6.1/lib/PooledClass.js', 'npm:fbjs@0.8.16/lib/emptyFunction.js', 'npm:fbjs@0.8.16/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _assign = $__require('npm:object-assign@4.1.1.js');
    var PooledClass = $__require('npm:react-dom@15.6.1/lib/PooledClass.js');
    var emptyFunction = $__require('npm:fbjs@0.8.16/lib/emptyFunction.js');
    var warning = $__require('npm:fbjs@0.8.16/lib/warning.js');
    var didWarnForAddedNewProperty = false;
    var isProxySupported = typeof Proxy === 'function';
    var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];
    var EventInterface = {
      type: null,
      target: null,
      currentTarget: emptyFunction.thatReturnsNull,
      eventPhase: null,
      bubbles: null,
      cancelable: null,
      timeStamp: function (event) {
        return event.timeStamp || Date.now();
      },
      defaultPrevented: null,
      isTrusted: null
    };
    function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
      if ('production' !== 'production') {
        delete this.nativeEvent;
        delete this.preventDefault;
        delete this.stopPropagation;
      }
      this.dispatchConfig = dispatchConfig;
      this._targetInst = targetInst;
      this.nativeEvent = nativeEvent;
      var Interface = this.constructor.Interface;
      for (var propName in Interface) {
        if (!Interface.hasOwnProperty(propName)) {
          continue;
        }
        if ('production' !== 'production') {
          delete this[propName];
        }
        var normalize = Interface[propName];
        if (normalize) {
          this[propName] = normalize(nativeEvent);
        } else {
          if (propName === 'target') {
            this.target = nativeEventTarget;
          } else {
            this[propName] = nativeEvent[propName];
          }
        }
      }
      var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
      if (defaultPrevented) {
        this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
      } else {
        this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
      }
      this.isPropagationStopped = emptyFunction.thatReturnsFalse;
      return this;
    }
    _assign(SyntheticEvent.prototype, {
      preventDefault: function () {
        this.defaultPrevented = true;
        var event = this.nativeEvent;
        if (!event) {
          return;
        }
        if (event.preventDefault) {
          event.preventDefault();
        } else if (typeof event.returnValue !== 'unknown') {
          event.returnValue = false;
        }
        this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
      },
      stopPropagation: function () {
        var event = this.nativeEvent;
        if (!event) {
          return;
        }
        if (event.stopPropagation) {
          event.stopPropagation();
        } else if (typeof event.cancelBubble !== 'unknown') {
          event.cancelBubble = true;
        }
        this.isPropagationStopped = emptyFunction.thatReturnsTrue;
      },
      persist: function () {
        this.isPersistent = emptyFunction.thatReturnsTrue;
      },
      isPersistent: emptyFunction.thatReturnsFalse,
      destructor: function () {
        var Interface = this.constructor.Interface;
        for (var propName in Interface) {
          if ('production' !== 'production') {
            Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
          } else {
            this[propName] = null;
          }
        }
        for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
          this[shouldBeReleasedProperties[i]] = null;
        }
        if ('production' !== 'production') {
          Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
          Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
          Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
        }
      }
    });
    SyntheticEvent.Interface = EventInterface;
    if ('production' !== 'production') {
      if (isProxySupported) {
        SyntheticEvent = new Proxy(SyntheticEvent, {
          construct: function (target, args) {
            return this.apply(target, Object.create(target.prototype), args);
          },
          apply: function (constructor, that, args) {
            return new Proxy(constructor.apply(that, args), { set: function (target, prop, value) {
                if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
                  'production' !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), "This synthetic event is reused for performance reasons. If you're " + "seeing this, you're adding a new property in the synthetic event object. " + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
                  didWarnForAddedNewProperty = true;
                }
                target[prop] = value;
                return true;
              } });
          }
        });
      }
    }
    SyntheticEvent.augmentClass = function (Class, Interface) {
      var Super = this;
      var E = function () {};
      E.prototype = Super.prototype;
      var prototype = new E();
      _assign(prototype, Class.prototype);
      Class.prototype = prototype;
      Class.prototype.constructor = Class;
      Class.Interface = _assign({}, Super.Interface, Interface);
      Class.augmentClass = Super.augmentClass;
      PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
    };
    PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);
    module.exports = SyntheticEvent;
    function getPooledWarningPropertyDefinition(propName, getVal) {
      var isFunction = typeof getVal === 'function';
      return {
        configurable: true,
        set: set,
        get: get
      };
      function set(val) {
        var action = isFunction ? 'setting the method' : 'setting the property';
        warn(action, 'This is effectively a no-op');
        return val;
      }
      function get() {
        var action = isFunction ? 'accessing the method' : 'accessing the property';
        var result = isFunction ? 'This is a no-op function' : 'This is set to null';
        warn(action, result);
        return getVal;
      }
      function warn(action, result) {
        var warningCondition = false;
        'production' !== 'production' ? warning(warningCondition, "This synthetic event is reused for performance reasons. If you're seeing this, " + "you're %s `%s` on a released/nullified synthetic event. %s. " + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
      }
    }
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/getEventTarget.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  /**
   * Gets the target node from a native browser event by accounting for
   * inconsistencies in browser DOM APIs.
   *
   * @param {object} nativeEvent Native browser event.
   * @return {DOMEventTarget} Target node.
   */

  var global = this || self,
      GLOBAL = global;
  function getEventTarget(nativeEvent) {
    var target = nativeEvent.target || nativeEvent.srcElement || window;

    // Normalize SVG <use> element events #4963
    if (target.correspondingUseElement) {
      target = target.correspondingUseElement;
    }

    // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
    // @see http://www.quirksmode.org/js/events_properties.html
    return target.nodeType === 3 ? target.parentNode : target;
  }

  module.exports = getEventTarget;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/SyntheticUIEvent.js', ['npm:react-dom@15.6.1/lib/SyntheticEvent.js', 'npm:react-dom@15.6.1/lib/getEventTarget.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var SyntheticEvent = $__require('npm:react-dom@15.6.1/lib/SyntheticEvent.js');
  var getEventTarget = $__require('npm:react-dom@15.6.1/lib/getEventTarget.js');
  var UIEventInterface = {
    view: function (event) {
      if (event.view) {
        return event.view;
      }
      var target = getEventTarget(event);
      if (target.window === target) {
        return target;
      }
      var doc = target.ownerDocument;
      if (doc) {
        return doc.defaultView || doc.parentWindow;
      } else {
        return window;
      }
    },
    detail: function (event) {
      return event.detail || 0;
    }
  };
  function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);
  module.exports = SyntheticUIEvent;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/getEventModifierState.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  /**
   * Translation from modifier key to the associated property in the event.
   * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
   */

  var global = this || self,
      GLOBAL = global;
  var modifierKeyToProp = {
    Alt: 'altKey',
    Control: 'ctrlKey',
    Meta: 'metaKey',
    Shift: 'shiftKey'
  };

  // IE8 does not implement getModifierState so we simply map it to the only
  // modifier keys exposed by the event itself, does not support Lock-keys.
  // Currently, all major browsers except Chrome seems to support Lock-keys.
  function modifierStateGetter(keyArg) {
    var syntheticEvent = this;
    var nativeEvent = syntheticEvent.nativeEvent;
    if (nativeEvent.getModifierState) {
      return nativeEvent.getModifierState(keyArg);
    }
    var keyProp = modifierKeyToProp[keyArg];
    return keyProp ? !!nativeEvent[keyProp] : false;
  }

  function getEventModifierState(nativeEvent) {
    return modifierStateGetter;
  }

  module.exports = getEventModifierState;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/SyntheticMouseEvent.js', ['npm:react-dom@15.6.1/lib/SyntheticUIEvent.js', 'npm:react-dom@15.6.1/lib/ViewportMetrics.js', 'npm:react-dom@15.6.1/lib/getEventModifierState.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var SyntheticUIEvent = $__require('npm:react-dom@15.6.1/lib/SyntheticUIEvent.js');
  var ViewportMetrics = $__require('npm:react-dom@15.6.1/lib/ViewportMetrics.js');
  var getEventModifierState = $__require('npm:react-dom@15.6.1/lib/getEventModifierState.js');
  var MouseEventInterface = {
    screenX: null,
    screenY: null,
    clientX: null,
    clientY: null,
    ctrlKey: null,
    shiftKey: null,
    altKey: null,
    metaKey: null,
    getModifierState: getEventModifierState,
    button: function (event) {
      var button = event.button;
      if ('which' in event) {
        return button;
      }
      return button === 2 ? 2 : button === 4 ? 1 : 0;
    },
    buttons: null,
    relatedTarget: function (event) {
      return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
    },
    pageX: function (event) {
      return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
    },
    pageY: function (event) {
      return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
    }
  };
  function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);
  module.exports = SyntheticMouseEvent;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/SyntheticWheelEvent.js', ['npm:react-dom@15.6.1/lib/SyntheticMouseEvent.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var SyntheticMouseEvent = $__require('npm:react-dom@15.6.1/lib/SyntheticMouseEvent.js');
  var WheelEventInterface = {
    deltaX: function (event) {
      return 'deltaX' in event ? event.deltaX : 'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
    },
    deltaY: function (event) {
      return 'deltaY' in event ? event.deltaY : 'wheelDeltaY' in event ? -event.wheelDeltaY : 'wheelDelta' in event ? -event.wheelDelta : 0;
    },
    deltaZ: null,
    deltaMode: null
  };
  function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);
  module.exports = SyntheticWheelEvent;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/getEventCharCode.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  /**
   * `charCode` represents the actual "character code" and is safe to use with
   * `String.fromCharCode`. As such, only keys that correspond to printable
   * characters produce a valid `charCode`, the only exception to this is Enter.
   * The Tab-key is considered non-printable and does not have a `charCode`,
   * presumably because it does not produce a tab-character in browsers.
   *
   * @param {object} nativeEvent Native browser event.
   * @return {number} Normalized `charCode` property.
   */

  var global = this || self,
      GLOBAL = global;
  function getEventCharCode(nativeEvent) {
    var charCode;
    var keyCode = nativeEvent.keyCode;

    if ('charCode' in nativeEvent) {
      charCode = nativeEvent.charCode;

      // FF does not set `charCode` for the Enter-key, check against `keyCode`.
      if (charCode === 0 && keyCode === 13) {
        charCode = 13;
      }
    } else {
      // IE8 does not implement `charCode`, but `keyCode` has the correct value.
      charCode = keyCode;
    }

    // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
    // Must not discard the (non-)printable Enter-key.
    if (charCode >= 32 || charCode === 13) {
      return charCode;
    }

    return 0;
  }

  module.exports = getEventCharCode;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/SimpleEventPlugin.js', ['npm:react-dom@15.6.1/lib/reactProdInvariant.js', 'npm:fbjs@0.8.16/lib/EventListener.js', 'npm:react-dom@15.6.1/lib/EventPropagators.js', 'npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js', 'npm:react-dom@15.6.1/lib/SyntheticAnimationEvent.js', 'npm:react-dom@15.6.1/lib/SyntheticClipboardEvent.js', 'npm:react-dom@15.6.1/lib/SyntheticEvent.js', 'npm:react-dom@15.6.1/lib/SyntheticFocusEvent.js', 'npm:react-dom@15.6.1/lib/SyntheticKeyboardEvent.js', 'npm:react-dom@15.6.1/lib/SyntheticMouseEvent.js', 'npm:react-dom@15.6.1/lib/SyntheticDragEvent.js', 'npm:react-dom@15.6.1/lib/SyntheticTouchEvent.js', 'npm:react-dom@15.6.1/lib/SyntheticTransitionEvent.js', 'npm:react-dom@15.6.1/lib/SyntheticUIEvent.js', 'npm:react-dom@15.6.1/lib/SyntheticWheelEvent.js', 'npm:fbjs@0.8.16/lib/emptyFunction.js', 'npm:react-dom@15.6.1/lib/getEventCharCode.js', 'npm:fbjs@0.8.16/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('npm:react-dom@15.6.1/lib/reactProdInvariant.js');
    var EventListener = $__require('npm:fbjs@0.8.16/lib/EventListener.js');
    var EventPropagators = $__require('npm:react-dom@15.6.1/lib/EventPropagators.js');
    var ReactDOMComponentTree = $__require('npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js');
    var SyntheticAnimationEvent = $__require('npm:react-dom@15.6.1/lib/SyntheticAnimationEvent.js');
    var SyntheticClipboardEvent = $__require('npm:react-dom@15.6.1/lib/SyntheticClipboardEvent.js');
    var SyntheticEvent = $__require('npm:react-dom@15.6.1/lib/SyntheticEvent.js');
    var SyntheticFocusEvent = $__require('npm:react-dom@15.6.1/lib/SyntheticFocusEvent.js');
    var SyntheticKeyboardEvent = $__require('npm:react-dom@15.6.1/lib/SyntheticKeyboardEvent.js');
    var SyntheticMouseEvent = $__require('npm:react-dom@15.6.1/lib/SyntheticMouseEvent.js');
    var SyntheticDragEvent = $__require('npm:react-dom@15.6.1/lib/SyntheticDragEvent.js');
    var SyntheticTouchEvent = $__require('npm:react-dom@15.6.1/lib/SyntheticTouchEvent.js');
    var SyntheticTransitionEvent = $__require('npm:react-dom@15.6.1/lib/SyntheticTransitionEvent.js');
    var SyntheticUIEvent = $__require('npm:react-dom@15.6.1/lib/SyntheticUIEvent.js');
    var SyntheticWheelEvent = $__require('npm:react-dom@15.6.1/lib/SyntheticWheelEvent.js');
    var emptyFunction = $__require('npm:fbjs@0.8.16/lib/emptyFunction.js');
    var getEventCharCode = $__require('npm:react-dom@15.6.1/lib/getEventCharCode.js');
    var invariant = $__require('npm:fbjs@0.8.16/lib/invariant.js');
    var eventTypes = {};
    var topLevelEventsToDispatchConfig = {};
    ['abort', 'animationEnd', 'animationIteration', 'animationStart', 'blur', 'canPlay', 'canPlayThrough', 'click', 'contextMenu', 'copy', 'cut', 'doubleClick', 'drag', 'dragEnd', 'dragEnter', 'dragExit', 'dragLeave', 'dragOver', 'dragStart', 'drop', 'durationChange', 'emptied', 'encrypted', 'ended', 'error', 'focus', 'input', 'invalid', 'keyDown', 'keyPress', 'keyUp', 'load', 'loadedData', 'loadedMetadata', 'loadStart', 'mouseDown', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'paste', 'pause', 'play', 'playing', 'progress', 'rateChange', 'reset', 'scroll', 'seeked', 'seeking', 'stalled', 'submit', 'suspend', 'timeUpdate', 'touchCancel', 'touchEnd', 'touchMove', 'touchStart', 'transitionEnd', 'volumeChange', 'waiting', 'wheel'].forEach(function (event) {
      var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
      var onEvent = 'on' + capitalizedEvent;
      var topEvent = 'top' + capitalizedEvent;
      var type = {
        phasedRegistrationNames: {
          bubbled: onEvent,
          captured: onEvent + 'Capture'
        },
        dependencies: [topEvent]
      };
      eventTypes[event] = type;
      topLevelEventsToDispatchConfig[topEvent] = type;
    });
    var onClickListeners = {};
    function getDictionaryKey(inst) {
      return '.' + inst._rootNodeID;
    }
    function isInteractive(tag) {
      return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
    }
    var SimpleEventPlugin = {
      eventTypes: eventTypes,
      extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
        if (!dispatchConfig) {
          return null;
        }
        var EventConstructor;
        switch (topLevelType) {
          case 'topAbort':
          case 'topCanPlay':
          case 'topCanPlayThrough':
          case 'topDurationChange':
          case 'topEmptied':
          case 'topEncrypted':
          case 'topEnded':
          case 'topError':
          case 'topInput':
          case 'topInvalid':
          case 'topLoad':
          case 'topLoadedData':
          case 'topLoadedMetadata':
          case 'topLoadStart':
          case 'topPause':
          case 'topPlay':
          case 'topPlaying':
          case 'topProgress':
          case 'topRateChange':
          case 'topReset':
          case 'topSeeked':
          case 'topSeeking':
          case 'topStalled':
          case 'topSubmit':
          case 'topSuspend':
          case 'topTimeUpdate':
          case 'topVolumeChange':
          case 'topWaiting':
            EventConstructor = SyntheticEvent;
            break;
          case 'topKeyPress':
            if (getEventCharCode(nativeEvent) === 0) {
              return null;
            }
          case 'topKeyDown':
          case 'topKeyUp':
            EventConstructor = SyntheticKeyboardEvent;
            break;
          case 'topBlur':
          case 'topFocus':
            EventConstructor = SyntheticFocusEvent;
            break;
          case 'topClick':
            if (nativeEvent.button === 2) {
              return null;
            }
          case 'topDoubleClick':
          case 'topMouseDown':
          case 'topMouseMove':
          case 'topMouseUp':
          case 'topMouseOut':
          case 'topMouseOver':
          case 'topContextMenu':
            EventConstructor = SyntheticMouseEvent;
            break;
          case 'topDrag':
          case 'topDragEnd':
          case 'topDragEnter':
          case 'topDragExit':
          case 'topDragLeave':
          case 'topDragOver':
          case 'topDragStart':
          case 'topDrop':
            EventConstructor = SyntheticDragEvent;
            break;
          case 'topTouchCancel':
          case 'topTouchEnd':
          case 'topTouchMove':
          case 'topTouchStart':
            EventConstructor = SyntheticTouchEvent;
            break;
          case 'topAnimationEnd':
          case 'topAnimationIteration':
          case 'topAnimationStart':
            EventConstructor = SyntheticAnimationEvent;
            break;
          case 'topTransitionEnd':
            EventConstructor = SyntheticTransitionEvent;
            break;
          case 'topScroll':
            EventConstructor = SyntheticUIEvent;
            break;
          case 'topWheel':
            EventConstructor = SyntheticWheelEvent;
            break;
          case 'topCopy':
          case 'topCut':
          case 'topPaste':
            EventConstructor = SyntheticClipboardEvent;
            break;
        }
        !EventConstructor ? 'production' !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;
        var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
        EventPropagators.accumulateTwoPhaseDispatches(event);
        return event;
      },
      didPutListener: function (inst, registrationName, listener) {
        if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
          var key = getDictionaryKey(inst);
          var node = ReactDOMComponentTree.getNodeFromInstance(inst);
          if (!onClickListeners[key]) {
            onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);
          }
        }
      },
      willDeleteListener: function (inst, registrationName) {
        if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
          var key = getDictionaryKey(inst);
          onClickListeners[key].remove();
          delete onClickListeners[key];
        }
      }
    };
    module.exports = SimpleEventPlugin;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactDefaultInjection.js', ['npm:react-dom@15.6.1/lib/ARIADOMPropertyConfig.js', 'npm:react-dom@15.6.1/lib/BeforeInputEventPlugin.js', 'npm:react-dom@15.6.1/lib/ChangeEventPlugin.js', 'npm:react-dom@15.6.1/lib/DefaultEventPluginOrder.js', 'npm:react-dom@15.6.1/lib/EnterLeaveEventPlugin.js', 'npm:react-dom@15.6.1/lib/HTMLDOMPropertyConfig.js', 'npm:react-dom@15.6.1/lib/ReactComponentBrowserEnvironment.js', 'npm:react-dom@15.6.1/lib/ReactDOMComponent.js', 'npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js', 'npm:react-dom@15.6.1/lib/ReactDOMEmptyComponent.js', 'npm:react-dom@15.6.1/lib/ReactDOMTreeTraversal.js', 'npm:react-dom@15.6.1/lib/ReactDOMTextComponent.js', 'npm:react-dom@15.6.1/lib/ReactDefaultBatchingStrategy.js', 'npm:react-dom@15.6.1/lib/ReactEventListener.js', 'npm:react-dom@15.6.1/lib/ReactInjection.js', 'npm:react-dom@15.6.1/lib/ReactReconcileTransaction.js', 'npm:react-dom@15.6.1/lib/SVGDOMPropertyConfig.js', 'npm:react-dom@15.6.1/lib/SelectEventPlugin.js', 'npm:react-dom@15.6.1/lib/SimpleEventPlugin.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ARIADOMPropertyConfig = $__require('npm:react-dom@15.6.1/lib/ARIADOMPropertyConfig.js');
  var BeforeInputEventPlugin = $__require('npm:react-dom@15.6.1/lib/BeforeInputEventPlugin.js');
  var ChangeEventPlugin = $__require('npm:react-dom@15.6.1/lib/ChangeEventPlugin.js');
  var DefaultEventPluginOrder = $__require('npm:react-dom@15.6.1/lib/DefaultEventPluginOrder.js');
  var EnterLeaveEventPlugin = $__require('npm:react-dom@15.6.1/lib/EnterLeaveEventPlugin.js');
  var HTMLDOMPropertyConfig = $__require('npm:react-dom@15.6.1/lib/HTMLDOMPropertyConfig.js');
  var ReactComponentBrowserEnvironment = $__require('npm:react-dom@15.6.1/lib/ReactComponentBrowserEnvironment.js');
  var ReactDOMComponent = $__require('npm:react-dom@15.6.1/lib/ReactDOMComponent.js');
  var ReactDOMComponentTree = $__require('npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js');
  var ReactDOMEmptyComponent = $__require('npm:react-dom@15.6.1/lib/ReactDOMEmptyComponent.js');
  var ReactDOMTreeTraversal = $__require('npm:react-dom@15.6.1/lib/ReactDOMTreeTraversal.js');
  var ReactDOMTextComponent = $__require('npm:react-dom@15.6.1/lib/ReactDOMTextComponent.js');
  var ReactDefaultBatchingStrategy = $__require('npm:react-dom@15.6.1/lib/ReactDefaultBatchingStrategy.js');
  var ReactEventListener = $__require('npm:react-dom@15.6.1/lib/ReactEventListener.js');
  var ReactInjection = $__require('npm:react-dom@15.6.1/lib/ReactInjection.js');
  var ReactReconcileTransaction = $__require('npm:react-dom@15.6.1/lib/ReactReconcileTransaction.js');
  var SVGDOMPropertyConfig = $__require('npm:react-dom@15.6.1/lib/SVGDOMPropertyConfig.js');
  var SelectEventPlugin = $__require('npm:react-dom@15.6.1/lib/SelectEventPlugin.js');
  var SimpleEventPlugin = $__require('npm:react-dom@15.6.1/lib/SimpleEventPlugin.js');
  var alreadyInjected = false;
  function inject() {
    if (alreadyInjected) {
      return;
    }
    alreadyInjected = true;
    ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);
    ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
    ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
    ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);
    ReactInjection.EventPluginHub.injectEventPluginsByName({
      SimpleEventPlugin: SimpleEventPlugin,
      EnterLeaveEventPlugin: EnterLeaveEventPlugin,
      ChangeEventPlugin: ChangeEventPlugin,
      SelectEventPlugin: SelectEventPlugin,
      BeforeInputEventPlugin: BeforeInputEventPlugin
    });
    ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);
    ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);
    ReactInjection.DOMProperty.injectDOMPropertyConfig(ARIADOMPropertyConfig);
    ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
    ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);
    ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
      return new ReactDOMEmptyComponent(instantiate);
    });
    ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
    ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);
    ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
  }
  module.exports = { inject: inject };
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactVersion.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  module.exports = '15.6.1';
});
System.registerDynamic('npm:react-dom@15.6.1/lib/findDOMNode.js', ['npm:react-dom@15.6.1/lib/reactProdInvariant.js', 'npm:react@15.6.1/lib/ReactCurrentOwner.js', 'npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js', 'npm:react-dom@15.6.1/lib/ReactInstanceMap.js', 'npm:react-dom@15.6.1/lib/getHostComponentFromComposite.js', 'npm:fbjs@0.8.16/lib/invariant.js', 'npm:fbjs@0.8.16/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('npm:react-dom@15.6.1/lib/reactProdInvariant.js');
    var ReactCurrentOwner = $__require('npm:react@15.6.1/lib/ReactCurrentOwner.js');
    var ReactDOMComponentTree = $__require('npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js');
    var ReactInstanceMap = $__require('npm:react-dom@15.6.1/lib/ReactInstanceMap.js');
    var getHostComponentFromComposite = $__require('npm:react-dom@15.6.1/lib/getHostComponentFromComposite.js');
    var invariant = $__require('npm:fbjs@0.8.16/lib/invariant.js');
    var warning = $__require('npm:fbjs@0.8.16/lib/warning.js');
    function findDOMNode(componentOrElement) {
      if ('production' !== 'production') {
        var owner = ReactCurrentOwner.current;
        if (owner !== null) {
          'production' !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
          owner._warnedAboutRefsInRender = true;
        }
      }
      if (componentOrElement == null) {
        return null;
      }
      if (componentOrElement.nodeType === 1) {
        return componentOrElement;
      }
      var inst = ReactInstanceMap.get(componentOrElement);
      if (inst) {
        inst = getHostComponentFromComposite(inst);
        return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
      }
      if (typeof componentOrElement.render === 'function') {
        !false ? 'production' !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;
      } else {
        !false ? 'production' !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;
      }
    }
    module.exports = findDOMNode;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/getHostComponentFromComposite.js', ['npm:react-dom@15.6.1/lib/ReactNodeTypes.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ReactNodeTypes = $__require('npm:react-dom@15.6.1/lib/ReactNodeTypes.js');
  function getHostComponentFromComposite(inst) {
    var type;
    while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
      inst = inst._renderedComponent;
    }
    if (type === ReactNodeTypes.HOST) {
      return inst._renderedComponent;
    } else if (type === ReactNodeTypes.EMPTY) {
      return null;
    }
  }
  module.exports = getHostComponentFromComposite;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/escapeTextContentForBrowser.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2016-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * Based on the escape-html library, which is used under the MIT License below:
   *
   * Copyright (c) 2012-2013 TJ Holowaychuk
   * Copyright (c) 2015 Andreas Lubbe
   * Copyright (c) 2015 Tiancheng "Timothy" Gu
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * 'Software'), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
   * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
   * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
   * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
   * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
   * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
   * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
   *
   */

  'use strict';

  // code copied and modified from escape-html
  /**
   * Module variables.
   * @private
   */

  var global = this || self,
      GLOBAL = global;
  var matchHtmlRegExp = /["'&<>]/;

  /**
   * Escape special characters in the given string of html.
   *
   * @param  {string} string The string to escape for inserting into HTML
   * @return {string}
   * @public
   */

  function escapeHtml(string) {
    var str = '' + string;
    var match = matchHtmlRegExp.exec(str);

    if (!match) {
      return str;
    }

    var escape;
    var html = '';
    var index = 0;
    var lastIndex = 0;

    for (index = match.index; index < str.length; index++) {
      switch (str.charCodeAt(index)) {
        case 34:
          // "
          escape = '&quot;';
          break;
        case 38:
          // &
          escape = '&amp;';
          break;
        case 39:
          // '
          escape = '&#x27;'; // modified from escape-html; used to be '&#39'
          break;
        case 60:
          // <
          escape = '&lt;';
          break;
        case 62:
          // >
          escape = '&gt;';
          break;
        default:
          continue;
      }

      if (lastIndex !== index) {
        html += str.substring(lastIndex, index);
      }

      lastIndex = index + 1;
      html += escape;
    }

    return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
  }
  // end code copied and modified from escape-html

  /**
   * Escapes text to prevent scripting attacks.
   *
   * @param {*} text Text value to escape.
   * @return {string} An escaped string.
   */
  function escapeTextContentForBrowser(text) {
    if (typeof text === 'boolean' || typeof text === 'number') {
      // this shortcircuit helps perf for types that we know will never have
      // special characters, especially given that this function is used often
      // for numeric dom ids.
      return '' + text;
    }
    return escapeHtml(text);
  }

  module.exports = escapeTextContentForBrowser;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/setTextContent.js', ['npm:fbjs@0.8.16/lib/ExecutionEnvironment.js', 'npm:react-dom@15.6.1/lib/escapeTextContentForBrowser.js', 'npm:react-dom@15.6.1/lib/setInnerHTML.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ExecutionEnvironment = $__require('npm:fbjs@0.8.16/lib/ExecutionEnvironment.js');
  var escapeTextContentForBrowser = $__require('npm:react-dom@15.6.1/lib/escapeTextContentForBrowser.js');
  var setInnerHTML = $__require('npm:react-dom@15.6.1/lib/setInnerHTML.js');
  var setTextContent = function (node, text) {
    if (text) {
      var firstChild = node.firstChild;
      if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
        firstChild.nodeValue = text;
        return;
      }
    }
    node.textContent = text;
  };
  if (ExecutionEnvironment.canUseDOM) {
    if (!('textContent' in document.documentElement)) {
      setTextContent = function (node, text) {
        if (node.nodeType === 3) {
          node.nodeValue = text;
          return;
        }
        setInnerHTML(node, escapeTextContentForBrowser(text));
      };
    }
  }
  module.exports = setTextContent;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/DOMLazyTree.js', ['npm:react-dom@15.6.1/lib/DOMNamespaces.js', 'npm:react-dom@15.6.1/lib/setInnerHTML.js', 'npm:react-dom@15.6.1/lib/createMicrosoftUnsafeLocalFunction.js', 'npm:react-dom@15.6.1/lib/setTextContent.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var DOMNamespaces = $__require('npm:react-dom@15.6.1/lib/DOMNamespaces.js');
  var setInnerHTML = $__require('npm:react-dom@15.6.1/lib/setInnerHTML.js');
  var createMicrosoftUnsafeLocalFunction = $__require('npm:react-dom@15.6.1/lib/createMicrosoftUnsafeLocalFunction.js');
  var setTextContent = $__require('npm:react-dom@15.6.1/lib/setTextContent.js');
  var ELEMENT_NODE_TYPE = 1;
  var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
  var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);
  function insertTreeChildren(tree) {
    if (!enableLazy) {
      return;
    }
    var node = tree.node;
    var children = tree.children;
    if (children.length) {
      for (var i = 0; i < children.length; i++) {
        insertTreeBefore(node, children[i], null);
      }
    } else if (tree.html != null) {
      setInnerHTML(node, tree.html);
    } else if (tree.text != null) {
      setTextContent(node, tree.text);
    }
  }
  var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
    if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {
      insertTreeChildren(tree);
      parentNode.insertBefore(tree.node, referenceNode);
    } else {
      parentNode.insertBefore(tree.node, referenceNode);
      insertTreeChildren(tree);
    }
  });
  function replaceChildWithTree(oldNode, newTree) {
    oldNode.parentNode.replaceChild(newTree.node, oldNode);
    insertTreeChildren(newTree);
  }
  function queueChild(parentTree, childTree) {
    if (enableLazy) {
      parentTree.children.push(childTree);
    } else {
      parentTree.node.appendChild(childTree.node);
    }
  }
  function queueHTML(tree, html) {
    if (enableLazy) {
      tree.html = html;
    } else {
      setInnerHTML(tree.node, html);
    }
  }
  function queueText(tree, text) {
    if (enableLazy) {
      tree.text = text;
    } else {
      setTextContent(tree.node, text);
    }
  }
  function toString() {
    return this.node.nodeName;
  }
  function DOMLazyTree(node) {
    return {
      node: node,
      children: [],
      html: null,
      text: null,
      toString: toString
    };
  }
  DOMLazyTree.insertTreeBefore = insertTreeBefore;
  DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
  DOMLazyTree.queueChild = queueChild;
  DOMLazyTree.queueHTML = queueHTML;
  DOMLazyTree.queueText = queueText;
  module.exports = DOMLazyTree;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/EventPluginUtils.js', ['npm:react-dom@15.6.1/lib/reactProdInvariant.js', 'npm:react-dom@15.6.1/lib/ReactErrorUtils.js', 'npm:fbjs@0.8.16/lib/invariant.js', 'npm:fbjs@0.8.16/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('npm:react-dom@15.6.1/lib/reactProdInvariant.js');
    var ReactErrorUtils = $__require('npm:react-dom@15.6.1/lib/ReactErrorUtils.js');
    var invariant = $__require('npm:fbjs@0.8.16/lib/invariant.js');
    var warning = $__require('npm:fbjs@0.8.16/lib/warning.js');
    var ComponentTree;
    var TreeTraversal;
    var injection = {
      injectComponentTree: function (Injected) {
        ComponentTree = Injected;
        if ('production' !== 'production') {
          'production' !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
        }
      },
      injectTreeTraversal: function (Injected) {
        TreeTraversal = Injected;
        if ('production' !== 'production') {
          'production' !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
        }
      }
    };
    function isEndish(topLevelType) {
      return topLevelType === 'topMouseUp' || topLevelType === 'topTouchEnd' || topLevelType === 'topTouchCancel';
    }
    function isMoveish(topLevelType) {
      return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';
    }
    function isStartish(topLevelType) {
      return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';
    }
    var validateEventDispatches;
    if ('production' !== 'production') {
      validateEventDispatches = function (event) {
        var dispatchListeners = event._dispatchListeners;
        var dispatchInstances = event._dispatchInstances;
        var listenersIsArr = Array.isArray(dispatchListeners);
        var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;
        var instancesIsArr = Array.isArray(dispatchInstances);
        var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;
        'production' !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
      };
    }
    function executeDispatch(event, simulated, listener, inst) {
      var type = event.type || 'unknown-event';
      event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
      if (simulated) {
        ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
      } else {
        ReactErrorUtils.invokeGuardedCallback(type, listener, event);
      }
      event.currentTarget = null;
    }
    function executeDispatchesInOrder(event, simulated) {
      var dispatchListeners = event._dispatchListeners;
      var dispatchInstances = event._dispatchInstances;
      if ('production' !== 'production') {
        validateEventDispatches(event);
      }
      if (Array.isArray(dispatchListeners)) {
        for (var i = 0; i < dispatchListeners.length; i++) {
          if (event.isPropagationStopped()) {
            break;
          }
          executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
        }
      } else if (dispatchListeners) {
        executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
      }
      event._dispatchListeners = null;
      event._dispatchInstances = null;
    }
    function executeDispatchesInOrderStopAtTrueImpl(event) {
      var dispatchListeners = event._dispatchListeners;
      var dispatchInstances = event._dispatchInstances;
      if ('production' !== 'production') {
        validateEventDispatches(event);
      }
      if (Array.isArray(dispatchListeners)) {
        for (var i = 0; i < dispatchListeners.length; i++) {
          if (event.isPropagationStopped()) {
            break;
          }
          if (dispatchListeners[i](event, dispatchInstances[i])) {
            return dispatchInstances[i];
          }
        }
      } else if (dispatchListeners) {
        if (dispatchListeners(event, dispatchInstances)) {
          return dispatchInstances;
        }
      }
      return null;
    }
    function executeDispatchesInOrderStopAtTrue(event) {
      var ret = executeDispatchesInOrderStopAtTrueImpl(event);
      event._dispatchInstances = null;
      event._dispatchListeners = null;
      return ret;
    }
    function executeDirectDispatch(event) {
      if ('production' !== 'production') {
        validateEventDispatches(event);
      }
      var dispatchListener = event._dispatchListeners;
      var dispatchInstance = event._dispatchInstances;
      !!Array.isArray(dispatchListener) ? 'production' !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;
      event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
      var res = dispatchListener ? dispatchListener(event) : null;
      event.currentTarget = null;
      event._dispatchListeners = null;
      event._dispatchInstances = null;
      return res;
    }
    function hasDispatches(event) {
      return !!event._dispatchListeners;
    }
    var EventPluginUtils = {
      isEndish: isEndish,
      isMoveish: isMoveish,
      isStartish: isStartish,
      executeDirectDispatch: executeDirectDispatch,
      executeDispatchesInOrder: executeDispatchesInOrder,
      executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
      hasDispatches: hasDispatches,
      getInstanceFromNode: function (node) {
        return ComponentTree.getInstanceFromNode(node);
      },
      getNodeFromInstance: function (node) {
        return ComponentTree.getNodeFromInstance(node);
      },
      isAncestor: function (a, b) {
        return TreeTraversal.isAncestor(a, b);
      },
      getLowestCommonAncestor: function (a, b) {
        return TreeTraversal.getLowestCommonAncestor(a, b);
      },
      getParentInstance: function (inst) {
        return TreeTraversal.getParentInstance(inst);
      },
      traverseTwoPhase: function (target, fn, arg) {
        return TreeTraversal.traverseTwoPhase(target, fn, arg);
      },
      traverseEnterLeave: function (from, to, fn, argFrom, argTo) {
        return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
      },
      injection: injection
    };
    module.exports = EventPluginUtils;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/accumulateInto.js', ['npm:react-dom@15.6.1/lib/reactProdInvariant.js', 'npm:fbjs@0.8.16/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('npm:react-dom@15.6.1/lib/reactProdInvariant.js');
    var invariant = $__require('npm:fbjs@0.8.16/lib/invariant.js');
    function accumulateInto(current, next) {
      !(next != null) ? 'production' !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;
      if (current == null) {
        return next;
      }
      if (Array.isArray(current)) {
        if (Array.isArray(next)) {
          current.push.apply(current, next);
          return current;
        }
        current.push(next);
        return current;
      }
      if (Array.isArray(next)) {
        return [current].concat(next);
      }
      return [current, next];
    }
    module.exports = accumulateInto;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/forEachAccumulated.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  /**
   * @param {array} arr an "accumulation" of items which is either an Array or
   * a single item. Useful when paired with the `accumulate` module. This is a
   * simple utility that allows us to reason about a collection of items, but
   * handling the case when there is exactly one item (and we do not need to
   * allocate an array).
   */

  var global = this || self,
      GLOBAL = global;
  function forEachAccumulated(arr, cb, scope) {
    if (Array.isArray(arr)) {
      arr.forEach(cb, scope);
    } else if (arr) {
      cb.call(scope, arr);
    }
  }

  module.exports = forEachAccumulated;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/EventPluginHub.js', ['npm:react-dom@15.6.1/lib/reactProdInvariant.js', 'npm:react-dom@15.6.1/lib/EventPluginRegistry.js', 'npm:react-dom@15.6.1/lib/EventPluginUtils.js', 'npm:react-dom@15.6.1/lib/ReactErrorUtils.js', 'npm:react-dom@15.6.1/lib/accumulateInto.js', 'npm:react-dom@15.6.1/lib/forEachAccumulated.js', 'npm:fbjs@0.8.16/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('npm:react-dom@15.6.1/lib/reactProdInvariant.js');
    var EventPluginRegistry = $__require('npm:react-dom@15.6.1/lib/EventPluginRegistry.js');
    var EventPluginUtils = $__require('npm:react-dom@15.6.1/lib/EventPluginUtils.js');
    var ReactErrorUtils = $__require('npm:react-dom@15.6.1/lib/ReactErrorUtils.js');
    var accumulateInto = $__require('npm:react-dom@15.6.1/lib/accumulateInto.js');
    var forEachAccumulated = $__require('npm:react-dom@15.6.1/lib/forEachAccumulated.js');
    var invariant = $__require('npm:fbjs@0.8.16/lib/invariant.js');
    var listenerBank = {};
    var eventQueue = null;
    var executeDispatchesAndRelease = function (event, simulated) {
      if (event) {
        EventPluginUtils.executeDispatchesInOrder(event, simulated);
        if (!event.isPersistent()) {
          event.constructor.release(event);
        }
      }
    };
    var executeDispatchesAndReleaseSimulated = function (e) {
      return executeDispatchesAndRelease(e, true);
    };
    var executeDispatchesAndReleaseTopLevel = function (e) {
      return executeDispatchesAndRelease(e, false);
    };
    var getDictionaryKey = function (inst) {
      return '.' + inst._rootNodeID;
    };
    function isInteractive(tag) {
      return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
    }
    function shouldPreventMouseEvent(name, type, props) {
      switch (name) {
        case 'onClick':
        case 'onClickCapture':
        case 'onDoubleClick':
        case 'onDoubleClickCapture':
        case 'onMouseDown':
        case 'onMouseDownCapture':
        case 'onMouseMove':
        case 'onMouseMoveCapture':
        case 'onMouseUp':
        case 'onMouseUpCapture':
          return !!(props.disabled && isInteractive(type));
        default:
          return false;
      }
    }
    var EventPluginHub = {
      injection: {
        injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,
        injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName
      },
      putListener: function (inst, registrationName, listener) {
        !(typeof listener === 'function') ? 'production' !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;
        var key = getDictionaryKey(inst);
        var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
        bankForRegistrationName[key] = listener;
        var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
        if (PluginModule && PluginModule.didPutListener) {
          PluginModule.didPutListener(inst, registrationName, listener);
        }
      },
      getListener: function (inst, registrationName) {
        var bankForRegistrationName = listenerBank[registrationName];
        if (shouldPreventMouseEvent(registrationName, inst._currentElement.type, inst._currentElement.props)) {
          return null;
        }
        var key = getDictionaryKey(inst);
        return bankForRegistrationName && bankForRegistrationName[key];
      },
      deleteListener: function (inst, registrationName) {
        var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
        if (PluginModule && PluginModule.willDeleteListener) {
          PluginModule.willDeleteListener(inst, registrationName);
        }
        var bankForRegistrationName = listenerBank[registrationName];
        if (bankForRegistrationName) {
          var key = getDictionaryKey(inst);
          delete bankForRegistrationName[key];
        }
      },
      deleteAllListeners: function (inst) {
        var key = getDictionaryKey(inst);
        for (var registrationName in listenerBank) {
          if (!listenerBank.hasOwnProperty(registrationName)) {
            continue;
          }
          if (!listenerBank[registrationName][key]) {
            continue;
          }
          var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
          if (PluginModule && PluginModule.willDeleteListener) {
            PluginModule.willDeleteListener(inst, registrationName);
          }
          delete listenerBank[registrationName][key];
        }
      },
      extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        var events;
        var plugins = EventPluginRegistry.plugins;
        for (var i = 0; i < plugins.length; i++) {
          var possiblePlugin = plugins[i];
          if (possiblePlugin) {
            var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
            if (extractedEvents) {
              events = accumulateInto(events, extractedEvents);
            }
          }
        }
        return events;
      },
      enqueueEvents: function (events) {
        if (events) {
          eventQueue = accumulateInto(eventQueue, events);
        }
      },
      processEventQueue: function (simulated) {
        var processingEventQueue = eventQueue;
        eventQueue = null;
        if (simulated) {
          forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
        } else {
          forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
        }
        !!eventQueue ? 'production' !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;
        ReactErrorUtils.rethrowCaughtError();
      },
      __purge: function () {
        listenerBank = {};
      },
      __getListenerBank: function () {
        return listenerBank;
      }
    };
    module.exports = EventPluginHub;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactEventEmitterMixin.js', ['npm:react-dom@15.6.1/lib/EventPluginHub.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var EventPluginHub = $__require('npm:react-dom@15.6.1/lib/EventPluginHub.js');
  function runEventQueueInBatch(events) {
    EventPluginHub.enqueueEvents(events);
    EventPluginHub.processEventQueue(false);
  }
  var ReactEventEmitterMixin = { handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
      runEventQueueInBatch(events);
    } };
  module.exports = ReactEventEmitterMixin;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ViewportMetrics.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ViewportMetrics = {
    currentScrollLeft: 0,

    currentScrollTop: 0,

    refreshScrollValues: function (scrollPosition) {
      ViewportMetrics.currentScrollLeft = scrollPosition.x;
      ViewportMetrics.currentScrollTop = scrollPosition.y;
    }
  };

  module.exports = ViewportMetrics;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/getVendorPrefixedEventName.js', ['npm:fbjs@0.8.16/lib/ExecutionEnvironment.js'], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ExecutionEnvironment = $__require('npm:fbjs@0.8.16/lib/ExecutionEnvironment.js');

  /**
   * Generate a mapping of standard vendor prefixes using the defined style property and event name.
   *
   * @param {string} styleProp
   * @param {string} eventName
   * @returns {object}
   */
  function makePrefixMap(styleProp, eventName) {
    var prefixes = {};

    prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
    prefixes['Webkit' + styleProp] = 'webkit' + eventName;
    prefixes['Moz' + styleProp] = 'moz' + eventName;
    prefixes['ms' + styleProp] = 'MS' + eventName;
    prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();

    return prefixes;
  }

  /**
   * A list of event names to a configurable list of vendor prefixes.
   */
  var vendorPrefixes = {
    animationend: makePrefixMap('Animation', 'AnimationEnd'),
    animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
    animationstart: makePrefixMap('Animation', 'AnimationStart'),
    transitionend: makePrefixMap('Transition', 'TransitionEnd')
  };

  /**
   * Event names that have already been detected and prefixed (if applicable).
   */
  var prefixedEventNames = {};

  /**
   * Element to check for prefixes on.
   */
  var style = {};

  /**
   * Bootstrap if a DOM exists.
   */
  if (ExecutionEnvironment.canUseDOM) {
    style = document.createElement('div').style;

    // On some platforms, in particular some releases of Android 4.x,
    // the un-prefixed "animation" and "transition" properties are defined on the
    // style object but the events that fire will still be prefixed, so we need
    // to check if the un-prefixed events are usable, and if not remove them from the map.
    if (!('AnimationEvent' in window)) {
      delete vendorPrefixes.animationend.animation;
      delete vendorPrefixes.animationiteration.animation;
      delete vendorPrefixes.animationstart.animation;
    }

    // Same as above
    if (!('TransitionEvent' in window)) {
      delete vendorPrefixes.transitionend.transition;
    }
  }

  /**
   * Attempts to determine the correct vendor prefixed event name.
   *
   * @param {string} eventName
   * @returns {string}
   */
  function getVendorPrefixedEventName(eventName) {
    if (prefixedEventNames[eventName]) {
      return prefixedEventNames[eventName];
    } else if (!vendorPrefixes[eventName]) {
      return eventName;
    }

    var prefixMap = vendorPrefixes[eventName];

    for (var styleProp in prefixMap) {
      if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
        return prefixedEventNames[eventName] = prefixMap[styleProp];
      }
    }

    return '';
  }

  module.exports = getVendorPrefixedEventName;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/isEventSupported.js', ['npm:fbjs@0.8.16/lib/ExecutionEnvironment.js'], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ExecutionEnvironment = $__require('npm:fbjs@0.8.16/lib/ExecutionEnvironment.js');

  var useHasFeature;
  if (ExecutionEnvironment.canUseDOM) {
    useHasFeature = document.implementation && document.implementation.hasFeature &&
    // always returns true in newer browsers as per the standard.
    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
    document.implementation.hasFeature('', '') !== true;
  }

  /**
   * Checks if an event is supported in the current execution environment.
   *
   * NOTE: This will not work correctly for non-generic events such as `change`,
   * `reset`, `load`, `error`, and `select`.
   *
   * Borrows from Modernizr.
   *
   * @param {string} eventNameSuffix Event name, e.g. "click".
   * @param {?boolean} capture Check if the capture phase is supported.
   * @return {boolean} True if the event is supported.
   * @internal
   * @license Modernizr 3.0.0pre (Custom Build) | MIT
   */
  function isEventSupported(eventNameSuffix, capture) {
    if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
      return false;
    }

    var eventName = 'on' + eventNameSuffix;
    var isSupported = eventName in document;

    if (!isSupported) {
      var element = document.createElement('div');
      element.setAttribute(eventName, 'return;');
      isSupported = typeof element[eventName] === 'function';
    }

    if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
      // This is the only way to test support for the `wheel` event in IE9+.
      isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
    }

    return isSupported;
  }

  module.exports = isEventSupported;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactBrowserEventEmitter.js', ['npm:object-assign@4.1.1.js', 'npm:react-dom@15.6.1/lib/EventPluginRegistry.js', 'npm:react-dom@15.6.1/lib/ReactEventEmitterMixin.js', 'npm:react-dom@15.6.1/lib/ViewportMetrics.js', 'npm:react-dom@15.6.1/lib/getVendorPrefixedEventName.js', 'npm:react-dom@15.6.1/lib/isEventSupported.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _assign = $__require('npm:object-assign@4.1.1.js');
    var EventPluginRegistry = $__require('npm:react-dom@15.6.1/lib/EventPluginRegistry.js');
    var ReactEventEmitterMixin = $__require('npm:react-dom@15.6.1/lib/ReactEventEmitterMixin.js');
    var ViewportMetrics = $__require('npm:react-dom@15.6.1/lib/ViewportMetrics.js');
    var getVendorPrefixedEventName = $__require('npm:react-dom@15.6.1/lib/getVendorPrefixedEventName.js');
    var isEventSupported = $__require('npm:react-dom@15.6.1/lib/isEventSupported.js');
    var hasEventPageXY;
    var alreadyListeningTo = {};
    var isMonitoringScrollValue = false;
    var reactTopListenersCounter = 0;
    var topEventMapping = {
      topAbort: 'abort',
      topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
      topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
      topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
      topBlur: 'blur',
      topCanPlay: 'canplay',
      topCanPlayThrough: 'canplaythrough',
      topChange: 'change',
      topClick: 'click',
      topCompositionEnd: 'compositionend',
      topCompositionStart: 'compositionstart',
      topCompositionUpdate: 'compositionupdate',
      topContextMenu: 'contextmenu',
      topCopy: 'copy',
      topCut: 'cut',
      topDoubleClick: 'dblclick',
      topDrag: 'drag',
      topDragEnd: 'dragend',
      topDragEnter: 'dragenter',
      topDragExit: 'dragexit',
      topDragLeave: 'dragleave',
      topDragOver: 'dragover',
      topDragStart: 'dragstart',
      topDrop: 'drop',
      topDurationChange: 'durationchange',
      topEmptied: 'emptied',
      topEncrypted: 'encrypted',
      topEnded: 'ended',
      topError: 'error',
      topFocus: 'focus',
      topInput: 'input',
      topKeyDown: 'keydown',
      topKeyPress: 'keypress',
      topKeyUp: 'keyup',
      topLoadedData: 'loadeddata',
      topLoadedMetadata: 'loadedmetadata',
      topLoadStart: 'loadstart',
      topMouseDown: 'mousedown',
      topMouseMove: 'mousemove',
      topMouseOut: 'mouseout',
      topMouseOver: 'mouseover',
      topMouseUp: 'mouseup',
      topPaste: 'paste',
      topPause: 'pause',
      topPlay: 'play',
      topPlaying: 'playing',
      topProgress: 'progress',
      topRateChange: 'ratechange',
      topScroll: 'scroll',
      topSeeked: 'seeked',
      topSeeking: 'seeking',
      topSelectionChange: 'selectionchange',
      topStalled: 'stalled',
      topSuspend: 'suspend',
      topTextInput: 'textInput',
      topTimeUpdate: 'timeupdate',
      topTouchCancel: 'touchcancel',
      topTouchEnd: 'touchend',
      topTouchMove: 'touchmove',
      topTouchStart: 'touchstart',
      topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
      topVolumeChange: 'volumechange',
      topWaiting: 'waiting',
      topWheel: 'wheel'
    };
    var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);
    function getListeningForDocument(mountAt) {
      if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
        mountAt[topListenersIDKey] = reactTopListenersCounter++;
        alreadyListeningTo[mountAt[topListenersIDKey]] = {};
      }
      return alreadyListeningTo[mountAt[topListenersIDKey]];
    }
    var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {
      ReactEventListener: null,
      injection: { injectReactEventListener: function (ReactEventListener) {
          ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
          ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
        } },
      setEnabled: function (enabled) {
        if (ReactBrowserEventEmitter.ReactEventListener) {
          ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
        }
      },
      isEnabled: function () {
        return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
      },
      listenTo: function (registrationName, contentDocumentHandle) {
        var mountAt = contentDocumentHandle;
        var isListening = getListeningForDocument(mountAt);
        var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];
        for (var i = 0; i < dependencies.length; i++) {
          var dependency = dependencies[i];
          if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
            if (dependency === 'topWheel') {
              if (isEventSupported('wheel')) {
                ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'wheel', mountAt);
              } else if (isEventSupported('mousewheel')) {
                ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'mousewheel', mountAt);
              } else {
                ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'DOMMouseScroll', mountAt);
              }
            } else if (dependency === 'topScroll') {
              if (isEventSupported('scroll', true)) {
                ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topScroll', 'scroll', mountAt);
              } else {
                ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topScroll', 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
              }
            } else if (dependency === 'topFocus' || dependency === 'topBlur') {
              if (isEventSupported('focus', true)) {
                ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topFocus', 'focus', mountAt);
                ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topBlur', 'blur', mountAt);
              } else if (isEventSupported('focusin')) {
                ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topFocus', 'focusin', mountAt);
                ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topBlur', 'focusout', mountAt);
              }
              isListening.topBlur = true;
              isListening.topFocus = true;
            } else if (topEventMapping.hasOwnProperty(dependency)) {
              ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
            }
            isListening[dependency] = true;
          }
        }
      },
      trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
        return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
      },
      trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
        return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
      },
      supportsEventPageXY: function () {
        if (!document.createEvent) {
          return false;
        }
        var ev = document.createEvent('MouseEvent');
        return ev != null && 'pageX' in ev;
      },
      ensureScrollValueMonitoring: function () {
        if (hasEventPageXY === undefined) {
          hasEventPageXY = ReactBrowserEventEmitter.supportsEventPageXY();
        }
        if (!hasEventPageXY && !isMonitoringScrollValue) {
          var refresh = ViewportMetrics.refreshScrollValues;
          ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
          isMonitoringScrollValue = true;
        }
      }
    });
    module.exports = ReactBrowserEventEmitter;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactDOMComponentFlags.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2015-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ReactDOMComponentFlags = {
    hasCachedChildNodes: 1 << 0
  };

  module.exports = ReactDOMComponentFlags;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js', ['npm:react-dom@15.6.1/lib/reactProdInvariant.js', 'npm:react-dom@15.6.1/lib/DOMProperty.js', 'npm:react-dom@15.6.1/lib/ReactDOMComponentFlags.js', 'npm:fbjs@0.8.16/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('npm:react-dom@15.6.1/lib/reactProdInvariant.js');
    var DOMProperty = $__require('npm:react-dom@15.6.1/lib/DOMProperty.js');
    var ReactDOMComponentFlags = $__require('npm:react-dom@15.6.1/lib/ReactDOMComponentFlags.js');
    var invariant = $__require('npm:fbjs@0.8.16/lib/invariant.js');
    var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
    var Flags = ReactDOMComponentFlags;
    var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);
    function shouldPrecacheNode(node, nodeID) {
      return node.nodeType === 1 && node.getAttribute(ATTR_NAME) === String(nodeID) || node.nodeType === 8 && node.nodeValue === ' react-text: ' + nodeID + ' ' || node.nodeType === 8 && node.nodeValue === ' react-empty: ' + nodeID + ' ';
    }
    function getRenderedHostOrTextFromComponent(component) {
      var rendered;
      while (rendered = component._renderedComponent) {
        component = rendered;
      }
      return component;
    }
    function precacheNode(inst, node) {
      var hostInst = getRenderedHostOrTextFromComponent(inst);
      hostInst._hostNode = node;
      node[internalInstanceKey] = hostInst;
    }
    function uncacheNode(inst) {
      var node = inst._hostNode;
      if (node) {
        delete node[internalInstanceKey];
        inst._hostNode = null;
      }
    }
    function precacheChildNodes(inst, node) {
      if (inst._flags & Flags.hasCachedChildNodes) {
        return;
      }
      var children = inst._renderedChildren;
      var childNode = node.firstChild;
      outer: for (var name in children) {
        if (!children.hasOwnProperty(name)) {
          continue;
        }
        var childInst = children[name];
        var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
        if (childID === 0) {
          continue;
        }
        for (; childNode !== null; childNode = childNode.nextSibling) {
          if (shouldPrecacheNode(childNode, childID)) {
            precacheNode(childInst, childNode);
            continue outer;
          }
        }
        !false ? 'production' !== 'production' ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;
      }
      inst._flags |= Flags.hasCachedChildNodes;
    }
    function getClosestInstanceFromNode(node) {
      if (node[internalInstanceKey]) {
        return node[internalInstanceKey];
      }
      var parents = [];
      while (!node[internalInstanceKey]) {
        parents.push(node);
        if (node.parentNode) {
          node = node.parentNode;
        } else {
          return null;
        }
      }
      var closest;
      var inst;
      for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
        closest = inst;
        if (parents.length) {
          precacheChildNodes(inst, node);
        }
      }
      return closest;
    }
    function getInstanceFromNode(node) {
      var inst = getClosestInstanceFromNode(node);
      if (inst != null && inst._hostNode === node) {
        return inst;
      } else {
        return null;
      }
    }
    function getNodeFromInstance(inst) {
      !(inst._hostNode !== undefined) ? 'production' !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
      if (inst._hostNode) {
        return inst._hostNode;
      }
      var parents = [];
      while (!inst._hostNode) {
        parents.push(inst);
        !inst._hostParent ? 'production' !== 'production' ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;
        inst = inst._hostParent;
      }
      for (; parents.length; inst = parents.pop()) {
        precacheChildNodes(inst, inst._hostNode);
      }
      return inst._hostNode;
    }
    var ReactDOMComponentTree = {
      getClosestInstanceFromNode: getClosestInstanceFromNode,
      getInstanceFromNode: getInstanceFromNode,
      getNodeFromInstance: getNodeFromInstance,
      precacheChildNodes: precacheChildNodes,
      precacheNode: precacheNode,
      uncacheNode: uncacheNode
    };
    module.exports = ReactDOMComponentTree;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/validateDOMNesting.js', ['npm:object-assign@4.1.1.js', 'npm:fbjs@0.8.16/lib/emptyFunction.js', 'npm:fbjs@0.8.16/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _assign = $__require('npm:object-assign@4.1.1.js');
    var emptyFunction = $__require('npm:fbjs@0.8.16/lib/emptyFunction.js');
    var warning = $__require('npm:fbjs@0.8.16/lib/warning.js');
    var validateDOMNesting = emptyFunction;
    if ('production' !== 'production') {
      var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];
      var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template', 'foreignObject', 'desc', 'title'];
      var buttonScopeTags = inScopeTags.concat(['button']);
      var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];
      var emptyAncestorInfo = {
        current: null,
        formTag: null,
        aTagInScope: null,
        buttonTagInScope: null,
        nobrTagInScope: null,
        pTagInButtonScope: null,
        listItemTagAutoclosing: null,
        dlItemTagAutoclosing: null
      };
      var updatedAncestorInfo = function (oldInfo, tag, instance) {
        var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
        var info = {
          tag: tag,
          instance: instance
        };
        if (inScopeTags.indexOf(tag) !== -1) {
          ancestorInfo.aTagInScope = null;
          ancestorInfo.buttonTagInScope = null;
          ancestorInfo.nobrTagInScope = null;
        }
        if (buttonScopeTags.indexOf(tag) !== -1) {
          ancestorInfo.pTagInButtonScope = null;
        }
        if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
          ancestorInfo.listItemTagAutoclosing = null;
          ancestorInfo.dlItemTagAutoclosing = null;
        }
        ancestorInfo.current = info;
        if (tag === 'form') {
          ancestorInfo.formTag = info;
        }
        if (tag === 'a') {
          ancestorInfo.aTagInScope = info;
        }
        if (tag === 'button') {
          ancestorInfo.buttonTagInScope = info;
        }
        if (tag === 'nobr') {
          ancestorInfo.nobrTagInScope = info;
        }
        if (tag === 'p') {
          ancestorInfo.pTagInButtonScope = info;
        }
        if (tag === 'li') {
          ancestorInfo.listItemTagAutoclosing = info;
        }
        if (tag === 'dd' || tag === 'dt') {
          ancestorInfo.dlItemTagAutoclosing = info;
        }
        return ancestorInfo;
      };
      var isTagValidWithParent = function (tag, parentTag) {
        switch (parentTag) {
          case 'select':
            return tag === 'option' || tag === 'optgroup' || tag === '#text';
          case 'optgroup':
            return tag === 'option' || tag === '#text';
          case 'option':
            return tag === '#text';
          case 'tr':
            return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
          case 'tbody':
          case 'thead':
          case 'tfoot':
            return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
          case 'colgroup':
            return tag === 'col' || tag === 'template';
          case 'table':
            return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
          case 'head':
            return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
          case 'html':
            return tag === 'head' || tag === 'body';
          case '#document':
            return tag === 'html';
        }
        switch (tag) {
          case 'h1':
          case 'h2':
          case 'h3':
          case 'h4':
          case 'h5':
          case 'h6':
            return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';
          case 'rp':
          case 'rt':
            return impliedEndTags.indexOf(parentTag) === -1;
          case 'body':
          case 'caption':
          case 'col':
          case 'colgroup':
          case 'frame':
          case 'head':
          case 'html':
          case 'tbody':
          case 'td':
          case 'tfoot':
          case 'th':
          case 'thead':
          case 'tr':
            return parentTag == null;
        }
        return true;
      };
      var findInvalidAncestorForTag = function (tag, ancestorInfo) {
        switch (tag) {
          case 'address':
          case 'article':
          case 'aside':
          case 'blockquote':
          case 'center':
          case 'details':
          case 'dialog':
          case 'dir':
          case 'div':
          case 'dl':
          case 'fieldset':
          case 'figcaption':
          case 'figure':
          case 'footer':
          case 'header':
          case 'hgroup':
          case 'main':
          case 'menu':
          case 'nav':
          case 'ol':
          case 'p':
          case 'section':
          case 'summary':
          case 'ul':
          case 'pre':
          case 'listing':
          case 'table':
          case 'hr':
          case 'xmp':
          case 'h1':
          case 'h2':
          case 'h3':
          case 'h4':
          case 'h5':
          case 'h6':
            return ancestorInfo.pTagInButtonScope;
          case 'form':
            return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
          case 'li':
            return ancestorInfo.listItemTagAutoclosing;
          case 'dd':
          case 'dt':
            return ancestorInfo.dlItemTagAutoclosing;
          case 'button':
            return ancestorInfo.buttonTagInScope;
          case 'a':
            return ancestorInfo.aTagInScope;
          case 'nobr':
            return ancestorInfo.nobrTagInScope;
        }
        return null;
      };
      var findOwnerStack = function (instance) {
        if (!instance) {
          return [];
        }
        var stack = [];
        do {
          stack.push(instance);
        } while (instance = instance._currentElement._owner);
        stack.reverse();
        return stack;
      };
      var didWarn = {};
      validateDOMNesting = function (childTag, childText, childInstance, ancestorInfo) {
        ancestorInfo = ancestorInfo || emptyAncestorInfo;
        var parentInfo = ancestorInfo.current;
        var parentTag = parentInfo && parentInfo.tag;
        if (childText != null) {
          'production' !== 'production' ? warning(childTag == null, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;
          childTag = '#text';
        }
        var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
        var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
        var problematic = invalidParent || invalidAncestor;
        if (problematic) {
          var ancestorTag = problematic.tag;
          var ancestorInstance = problematic.instance;
          var childOwner = childInstance && childInstance._currentElement._owner;
          var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;
          var childOwners = findOwnerStack(childOwner);
          var ancestorOwners = findOwnerStack(ancestorOwner);
          var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
          var i;
          var deepestCommon = -1;
          for (i = 0; i < minStackLen; i++) {
            if (childOwners[i] === ancestorOwners[i]) {
              deepestCommon = i;
            } else {
              break;
            }
          }
          var UNKNOWN = '(unknown)';
          var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
            return inst.getName() || UNKNOWN;
          });
          var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
            return inst.getName() || UNKNOWN;
          });
          var ownerInfo = [].concat(deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag, invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');
          var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
          if (didWarn[warnKey]) {
            return;
          }
          didWarn[warnKey] = true;
          var tagDisplayName = childTag;
          var whitespaceInfo = '';
          if (childTag === '#text') {
            if (/\S/.test(childText)) {
              tagDisplayName = 'Text nodes';
            } else {
              tagDisplayName = 'Whitespace text nodes';
              whitespaceInfo = " Make sure you don't have any extra whitespace between tags on " + 'each line of your source code.';
            }
          } else {
            tagDisplayName = '<' + childTag + '>';
          }
          if (invalidParent) {
            var info = '';
            if (ancestorTag === 'table' && childTag === 'tr') {
              info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
            }
            'production' !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s ' + 'See %s.%s', tagDisplayName, ancestorTag, whitespaceInfo, ownerInfo, info) : void 0;
          } else {
            'production' !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
          }
        }
      };
      validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;
      validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
        ancestorInfo = ancestorInfo || emptyAncestorInfo;
        var parentInfo = ancestorInfo.current;
        var parentTag = parentInfo && parentInfo.tag;
        return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
      };
    }
    module.exports = validateDOMNesting;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactDOMContainerInfo.js', ['npm:react-dom@15.6.1/lib/validateDOMNesting.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var validateDOMNesting = $__require('npm:react-dom@15.6.1/lib/validateDOMNesting.js');
    var DOC_NODE_TYPE = 9;
    function ReactDOMContainerInfo(topLevelWrapper, node) {
      var info = {
        _topLevelWrapper: topLevelWrapper,
        _idCounter: 1,
        _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
        _node: node,
        _tag: node ? node.nodeName.toLowerCase() : null,
        _namespaceURI: node ? node.namespaceURI : null
      };
      if ('production' !== 'production') {
        info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
      }
      return info;
    }
    module.exports = ReactDOMContainerInfo;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactDOMFeatureFlags.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ReactDOMFeatureFlags = {
    useCreateElement: true,
    useFiber: false
  };

  module.exports = ReactDOMFeatureFlags;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/adler32.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var MOD = 65521;

  // adler32 is not cryptographically strong, and is only used to sanity check that
  // markup generated on the server matches the markup generated on the client.
  // This implementation (a modified version of the SheetJS version) has been optimized
  // for our use case, at the expense of conforming to the adler32 specification
  // for non-ascii inputs.
  function adler32(data) {
    var a = 1;
    var b = 0;
    var i = 0;
    var l = data.length;
    var m = l & ~0x3;
    while (i < m) {
      var n = Math.min(i + 4096, m);
      for (; i < n; i += 4) {
        b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
      }
      a %= MOD;
      b %= MOD;
    }
    for (; i < l; i++) {
      b += a += data.charCodeAt(i);
    }
    a %= MOD;
    b %= MOD;
    return a | b << 16;
  }

  module.exports = adler32;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactMarkupChecksum.js', ['npm:react-dom@15.6.1/lib/adler32.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var adler32 = $__require('npm:react-dom@15.6.1/lib/adler32.js');
  var TAG_END = /\/?>/;
  var COMMENT_START = /^<\!\-\-/;
  var ReactMarkupChecksum = {
    CHECKSUM_ATTR_NAME: 'data-react-checksum',
    addChecksumToMarkup: function (markup) {
      var checksum = adler32(markup);
      if (COMMENT_START.test(markup)) {
        return markup;
      } else {
        return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
      }
    },
    canReuseMarkup: function (markup, element) {
      var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
      existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
      var markupChecksum = adler32(markup);
      return markupChecksum === existingChecksum;
    }
  };
  module.exports = ReactMarkupChecksum;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactUpdateQueue.js', ['npm:react-dom@15.6.1/lib/reactProdInvariant.js', 'npm:react@15.6.1/lib/ReactCurrentOwner.js', 'npm:react-dom@15.6.1/lib/ReactInstanceMap.js', 'npm:react-dom@15.6.1/lib/ReactInstrumentation.js', 'npm:react-dom@15.6.1/lib/ReactUpdates.js', 'npm:fbjs@0.8.16/lib/invariant.js', 'npm:fbjs@0.8.16/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('npm:react-dom@15.6.1/lib/reactProdInvariant.js');
    var ReactCurrentOwner = $__require('npm:react@15.6.1/lib/ReactCurrentOwner.js');
    var ReactInstanceMap = $__require('npm:react-dom@15.6.1/lib/ReactInstanceMap.js');
    var ReactInstrumentation = $__require('npm:react-dom@15.6.1/lib/ReactInstrumentation.js');
    var ReactUpdates = $__require('npm:react-dom@15.6.1/lib/ReactUpdates.js');
    var invariant = $__require('npm:fbjs@0.8.16/lib/invariant.js');
    var warning = $__require('npm:fbjs@0.8.16/lib/warning.js');
    function enqueueUpdate(internalInstance) {
      ReactUpdates.enqueueUpdate(internalInstance);
    }
    function formatUnexpectedArgument(arg) {
      var type = typeof arg;
      if (type !== 'object') {
        return type;
      }
      var displayName = arg.constructor && arg.constructor.name || type;
      var keys = Object.keys(arg);
      if (keys.length > 0 && keys.length < 20) {
        return displayName + ' (keys: ' + keys.join(', ') + ')';
      }
      return displayName;
    }
    function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
      var internalInstance = ReactInstanceMap.get(publicInstance);
      if (!internalInstance) {
        if ('production' !== 'production') {
          var ctor = publicInstance.constructor;
          'production' !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;
        }
        return null;
      }
      if ('production' !== 'production') {
        'production' !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + "within `render` or another component's constructor). Render methods " + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
      }
      return internalInstance;
    }
    var ReactUpdateQueue = {
      isMounted: function (publicInstance) {
        if ('production' !== 'production') {
          var owner = ReactCurrentOwner.current;
          if (owner !== null) {
            'production' !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
            owner._warnedAboutRefsInRender = true;
          }
        }
        var internalInstance = ReactInstanceMap.get(publicInstance);
        if (internalInstance) {
          return !!internalInstance._renderedComponent;
        } else {
          return false;
        }
      },
      enqueueCallback: function (publicInstance, callback, callerName) {
        ReactUpdateQueue.validateCallback(callback, callerName);
        var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);
        if (!internalInstance) {
          return null;
        }
        if (internalInstance._pendingCallbacks) {
          internalInstance._pendingCallbacks.push(callback);
        } else {
          internalInstance._pendingCallbacks = [callback];
        }
        enqueueUpdate(internalInstance);
      },
      enqueueCallbackInternal: function (internalInstance, callback) {
        if (internalInstance._pendingCallbacks) {
          internalInstance._pendingCallbacks.push(callback);
        } else {
          internalInstance._pendingCallbacks = [callback];
        }
        enqueueUpdate(internalInstance);
      },
      enqueueForceUpdate: function (publicInstance) {
        var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');
        if (!internalInstance) {
          return;
        }
        internalInstance._pendingForceUpdate = true;
        enqueueUpdate(internalInstance);
      },
      enqueueReplaceState: function (publicInstance, completeState, callback) {
        var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');
        if (!internalInstance) {
          return;
        }
        internalInstance._pendingStateQueue = [completeState];
        internalInstance._pendingReplaceState = true;
        if (callback !== undefined && callback !== null) {
          ReactUpdateQueue.validateCallback(callback, 'replaceState');
          if (internalInstance._pendingCallbacks) {
            internalInstance._pendingCallbacks.push(callback);
          } else {
            internalInstance._pendingCallbacks = [callback];
          }
        }
        enqueueUpdate(internalInstance);
      },
      enqueueSetState: function (publicInstance, partialState) {
        if ('production' !== 'production') {
          ReactInstrumentation.debugTool.onSetState();
          'production' !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
        }
        var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');
        if (!internalInstance) {
          return;
        }
        var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
        queue.push(partialState);
        enqueueUpdate(internalInstance);
      },
      enqueueElementInternal: function (internalInstance, nextElement, nextContext) {
        internalInstance._pendingElement = nextElement;
        internalInstance._context = nextContext;
        enqueueUpdate(internalInstance);
      },
      validateCallback: function (callback, callerName) {
        !(!callback || typeof callback === 'function') ? 'production' !== 'production' ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;
      }
    };
    module.exports = ReactUpdateQueue;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/CallbackQueue.js', ['npm:react-dom@15.6.1/lib/reactProdInvariant.js', 'npm:react-dom@15.6.1/lib/PooledClass.js', 'npm:fbjs@0.8.16/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('npm:react-dom@15.6.1/lib/reactProdInvariant.js');
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    var PooledClass = $__require('npm:react-dom@15.6.1/lib/PooledClass.js');
    var invariant = $__require('npm:fbjs@0.8.16/lib/invariant.js');
    var CallbackQueue = function () {
      function CallbackQueue(arg) {
        _classCallCheck(this, CallbackQueue);
        this._callbacks = null;
        this._contexts = null;
        this._arg = arg;
      }
      CallbackQueue.prototype.enqueue = function enqueue(callback, context) {
        this._callbacks = this._callbacks || [];
        this._callbacks.push(callback);
        this._contexts = this._contexts || [];
        this._contexts.push(context);
      };
      CallbackQueue.prototype.notifyAll = function notifyAll() {
        var callbacks = this._callbacks;
        var contexts = this._contexts;
        var arg = this._arg;
        if (callbacks && contexts) {
          !(callbacks.length === contexts.length) ? 'production' !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;
          this._callbacks = null;
          this._contexts = null;
          for (var i = 0; i < callbacks.length; i++) {
            callbacks[i].call(contexts[i], arg);
          }
          callbacks.length = 0;
          contexts.length = 0;
        }
      };
      CallbackQueue.prototype.checkpoint = function checkpoint() {
        return this._callbacks ? this._callbacks.length : 0;
      };
      CallbackQueue.prototype.rollback = function rollback(len) {
        if (this._callbacks && this._contexts) {
          this._callbacks.length = len;
          this._contexts.length = len;
        }
      };
      CallbackQueue.prototype.reset = function reset() {
        this._callbacks = null;
        this._contexts = null;
      };
      CallbackQueue.prototype.destructor = function destructor() {
        this.reset();
      };
      return CallbackQueue;
    }();
    module.exports = PooledClass.addPoolingTo(CallbackQueue);
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/PooledClass.js', ['npm:react-dom@15.6.1/lib/reactProdInvariant.js', 'npm:fbjs@0.8.16/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('npm:react-dom@15.6.1/lib/reactProdInvariant.js');
    var invariant = $__require('npm:fbjs@0.8.16/lib/invariant.js');
    var oneArgumentPooler = function (copyFieldsFrom) {
      var Klass = this;
      if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        Klass.call(instance, copyFieldsFrom);
        return instance;
      } else {
        return new Klass(copyFieldsFrom);
      }
    };
    var twoArgumentPooler = function (a1, a2) {
      var Klass = this;
      if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        Klass.call(instance, a1, a2);
        return instance;
      } else {
        return new Klass(a1, a2);
      }
    };
    var threeArgumentPooler = function (a1, a2, a3) {
      var Klass = this;
      if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        Klass.call(instance, a1, a2, a3);
        return instance;
      } else {
        return new Klass(a1, a2, a3);
      }
    };
    var fourArgumentPooler = function (a1, a2, a3, a4) {
      var Klass = this;
      if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        Klass.call(instance, a1, a2, a3, a4);
        return instance;
      } else {
        return new Klass(a1, a2, a3, a4);
      }
    };
    var standardReleaser = function (instance) {
      var Klass = this;
      !(instance instanceof Klass) ? 'production' !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
      instance.destructor();
      if (Klass.instancePool.length < Klass.poolSize) {
        Klass.instancePool.push(instance);
      }
    };
    var DEFAULT_POOL_SIZE = 10;
    var DEFAULT_POOLER = oneArgumentPooler;
    var addPoolingTo = function (CopyConstructor, pooler) {
      var NewKlass = CopyConstructor;
      NewKlass.instancePool = [];
      NewKlass.getPooled = pooler || DEFAULT_POOLER;
      if (!NewKlass.poolSize) {
        NewKlass.poolSize = DEFAULT_POOL_SIZE;
      }
      NewKlass.release = standardReleaser;
      return NewKlass;
    };
    var PooledClass = {
      addPoolingTo: addPoolingTo,
      oneArgumentPooler: oneArgumentPooler,
      twoArgumentPooler: twoArgumentPooler,
      threeArgumentPooler: threeArgumentPooler,
      fourArgumentPooler: fourArgumentPooler
    };
    module.exports = PooledClass;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactFeatureFlags.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ReactFeatureFlags = {
    // When true, call console.time() before and .timeEnd() after each top-level
    // render (both initial renders and updates). Useful when looking at prod-mode
    // timeline profiles in Chrome, for example.
    logTopLevelRenders: false
  };

  module.exports = ReactFeatureFlags;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/Transaction.js', ['npm:react-dom@15.6.1/lib/reactProdInvariant.js', 'npm:fbjs@0.8.16/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('npm:react-dom@15.6.1/lib/reactProdInvariant.js');
    var invariant = $__require('npm:fbjs@0.8.16/lib/invariant.js');
    var OBSERVED_ERROR = {};
    var TransactionImpl = {
      reinitializeTransaction: function () {
        this.transactionWrappers = this.getTransactionWrappers();
        if (this.wrapperInitData) {
          this.wrapperInitData.length = 0;
        } else {
          this.wrapperInitData = [];
        }
        this._isInTransaction = false;
      },
      _isInTransaction: false,
      getTransactionWrappers: null,
      isInTransaction: function () {
        return !!this._isInTransaction;
      },
      perform: function (method, scope, a, b, c, d, e, f) {
        !!this.isInTransaction() ? 'production' !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;
        var errorThrown;
        var ret;
        try {
          this._isInTransaction = true;
          errorThrown = true;
          this.initializeAll(0);
          ret = method.call(scope, a, b, c, d, e, f);
          errorThrown = false;
        } finally {
          try {
            if (errorThrown) {
              try {
                this.closeAll(0);
              } catch (err) {}
            } else {
              this.closeAll(0);
            }
          } finally {
            this._isInTransaction = false;
          }
        }
        return ret;
      },
      initializeAll: function (startIndex) {
        var transactionWrappers = this.transactionWrappers;
        for (var i = startIndex; i < transactionWrappers.length; i++) {
          var wrapper = transactionWrappers[i];
          try {
            this.wrapperInitData[i] = OBSERVED_ERROR;
            this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
          } finally {
            if (this.wrapperInitData[i] === OBSERVED_ERROR) {
              try {
                this.initializeAll(i + 1);
              } catch (err) {}
            }
          }
        }
      },
      closeAll: function (startIndex) {
        !this.isInTransaction() ? 'production' !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;
        var transactionWrappers = this.transactionWrappers;
        for (var i = startIndex; i < transactionWrappers.length; i++) {
          var wrapper = transactionWrappers[i];
          var initData = this.wrapperInitData[i];
          var errorThrown;
          try {
            errorThrown = true;
            if (initData !== OBSERVED_ERROR && wrapper.close) {
              wrapper.close.call(this, initData);
            }
            errorThrown = false;
          } finally {
            if (errorThrown) {
              try {
                this.closeAll(i + 1);
              } catch (e) {}
            }
          }
        }
        this.wrapperInitData.length = 0;
      }
    };
    module.exports = TransactionImpl;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactUpdates.js', ['npm:react-dom@15.6.1/lib/reactProdInvariant.js', 'npm:object-assign@4.1.1.js', 'npm:react-dom@15.6.1/lib/CallbackQueue.js', 'npm:react-dom@15.6.1/lib/PooledClass.js', 'npm:react-dom@15.6.1/lib/ReactFeatureFlags.js', 'npm:react-dom@15.6.1/lib/ReactReconciler.js', 'npm:react-dom@15.6.1/lib/Transaction.js', 'npm:fbjs@0.8.16/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('npm:react-dom@15.6.1/lib/reactProdInvariant.js'),
        _assign = $__require('npm:object-assign@4.1.1.js');
    var CallbackQueue = $__require('npm:react-dom@15.6.1/lib/CallbackQueue.js');
    var PooledClass = $__require('npm:react-dom@15.6.1/lib/PooledClass.js');
    var ReactFeatureFlags = $__require('npm:react-dom@15.6.1/lib/ReactFeatureFlags.js');
    var ReactReconciler = $__require('npm:react-dom@15.6.1/lib/ReactReconciler.js');
    var Transaction = $__require('npm:react-dom@15.6.1/lib/Transaction.js');
    var invariant = $__require('npm:fbjs@0.8.16/lib/invariant.js');
    var dirtyComponents = [];
    var updateBatchNumber = 0;
    var asapCallbackQueue = CallbackQueue.getPooled();
    var asapEnqueued = false;
    var batchingStrategy = null;
    function ensureInjected() {
      !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? 'production' !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;
    }
    var NESTED_UPDATES = {
      initialize: function () {
        this.dirtyComponentsLength = dirtyComponents.length;
      },
      close: function () {
        if (this.dirtyComponentsLength !== dirtyComponents.length) {
          dirtyComponents.splice(0, this.dirtyComponentsLength);
          flushBatchedUpdates();
        } else {
          dirtyComponents.length = 0;
        }
      }
    };
    var UPDATE_QUEUEING = {
      initialize: function () {
        this.callbackQueue.reset();
      },
      close: function () {
        this.callbackQueue.notifyAll();
      }
    };
    var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];
    function ReactUpdatesFlushTransaction() {
      this.reinitializeTransaction();
      this.dirtyComponentsLength = null;
      this.callbackQueue = CallbackQueue.getPooled();
      this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(true);
    }
    _assign(ReactUpdatesFlushTransaction.prototype, Transaction, {
      getTransactionWrappers: function () {
        return TRANSACTION_WRAPPERS;
      },
      destructor: function () {
        this.dirtyComponentsLength = null;
        CallbackQueue.release(this.callbackQueue);
        this.callbackQueue = null;
        ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
        this.reconcileTransaction = null;
      },
      perform: function (method, scope, a) {
        return Transaction.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
      }
    });
    PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);
    function batchedUpdates(callback, a, b, c, d, e) {
      ensureInjected();
      return batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
    }
    function mountOrderComparator(c1, c2) {
      return c1._mountOrder - c2._mountOrder;
    }
    function runBatchedUpdates(transaction) {
      var len = transaction.dirtyComponentsLength;
      !(len === dirtyComponents.length) ? 'production' !== 'production' ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;
      dirtyComponents.sort(mountOrderComparator);
      updateBatchNumber++;
      for (var i = 0; i < len; i++) {
        var component = dirtyComponents[i];
        var callbacks = component._pendingCallbacks;
        component._pendingCallbacks = null;
        var markerName;
        if (ReactFeatureFlags.logTopLevelRenders) {
          var namedComponent = component;
          if (component._currentElement.type.isReactTopLevelWrapper) {
            namedComponent = component._renderedComponent;
          }
          markerName = 'React update: ' + namedComponent.getName();
          console.time(markerName);
        }
        ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);
        if (markerName) {
          console.timeEnd(markerName);
        }
        if (callbacks) {
          for (var j = 0; j < callbacks.length; j++) {
            transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
          }
        }
      }
    }
    var flushBatchedUpdates = function () {
      while (dirtyComponents.length || asapEnqueued) {
        if (dirtyComponents.length) {
          var transaction = ReactUpdatesFlushTransaction.getPooled();
          transaction.perform(runBatchedUpdates, null, transaction);
          ReactUpdatesFlushTransaction.release(transaction);
        }
        if (asapEnqueued) {
          asapEnqueued = false;
          var queue = asapCallbackQueue;
          asapCallbackQueue = CallbackQueue.getPooled();
          queue.notifyAll();
          CallbackQueue.release(queue);
        }
      }
    };
    function enqueueUpdate(component) {
      ensureInjected();
      if (!batchingStrategy.isBatchingUpdates) {
        batchingStrategy.batchedUpdates(enqueueUpdate, component);
        return;
      }
      dirtyComponents.push(component);
      if (component._updateBatchNumber == null) {
        component._updateBatchNumber = updateBatchNumber + 1;
      }
    }
    function asap(callback, context) {
      !batchingStrategy.isBatchingUpdates ? 'production' !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;
      asapCallbackQueue.enqueue(callback, context);
      asapEnqueued = true;
    }
    var ReactUpdatesInjection = {
      injectReconcileTransaction: function (ReconcileTransaction) {
        !ReconcileTransaction ? 'production' !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;
        ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
      },
      injectBatchingStrategy: function (_batchingStrategy) {
        !_batchingStrategy ? 'production' !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;
        !(typeof _batchingStrategy.batchedUpdates === 'function') ? 'production' !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;
        !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? 'production' !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;
        batchingStrategy = _batchingStrategy;
      }
    };
    var ReactUpdates = {
      ReactReconcileTransaction: null,
      batchedUpdates: batchedUpdates,
      enqueueUpdate: enqueueUpdate,
      flushBatchedUpdates: flushBatchedUpdates,
      injection: ReactUpdatesInjection,
      asap: asap
    };
    module.exports = ReactUpdates;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactComponentEnvironment.js', ['npm:react-dom@15.6.1/lib/reactProdInvariant.js', 'npm:fbjs@0.8.16/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('npm:react-dom@15.6.1/lib/reactProdInvariant.js');
    var invariant = $__require('npm:fbjs@0.8.16/lib/invariant.js');
    var injected = false;
    var ReactComponentEnvironment = {
      replaceNodeWithMarkup: null,
      processChildrenUpdates: null,
      injection: { injectEnvironment: function (environment) {
          !!injected ? 'production' !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;
          ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
          ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
          injected = true;
        } }
    };
    module.exports = ReactComponentEnvironment;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactErrorUtils.js', ['github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var caughtError = null;
    function invokeGuardedCallback(name, func, a) {
      try {
        func(a);
      } catch (x) {
        if (caughtError === null) {
          caughtError = x;
        }
      }
    }
    var ReactErrorUtils = {
      invokeGuardedCallback: invokeGuardedCallback,
      invokeGuardedCallbackWithCatch: invokeGuardedCallback,
      rethrowCaughtError: function () {
        if (caughtError) {
          var error = caughtError;
          caughtError = null;
          throw error;
        }
      }
    };
    if ('production' !== 'production') {
      if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
        var fakeNode = document.createElement('react');
        ReactErrorUtils.invokeGuardedCallback = function (name, func, a) {
          var boundFunc = func.bind(null, a);
          var evtType = 'react-' + name;
          fakeNode.addEventListener(evtType, boundFunc, false);
          var evt = document.createEvent('Event');
          evt.initEvent(evtType, false, false);
          fakeNode.dispatchEvent(evt);
          fakeNode.removeEventListener(evtType, boundFunc, false);
        };
      }
    }
    module.exports = ReactErrorUtils;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactInstanceMap.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  /**
   * `ReactInstanceMap` maintains a mapping from a public facing stateful
   * instance (key) and the internal representation (value). This allows public
   * methods to accept the user facing instance as an argument and map them back
   * to internal methods.
   */

  // TODO: Replace this with ES6: var ReactInstanceMap = new Map();

  var global = this || self,
      GLOBAL = global;
  var ReactInstanceMap = {
    /**
     * This API should be called `delete` but we'd have to make sure to always
     * transform these to strings for IE support. When this transform is fully
     * supported we can rename it.
     */
    remove: function (key) {
      key._reactInternalInstance = undefined;
    },

    get: function (key) {
      return key._reactInternalInstance;
    },

    has: function (key) {
      return key._reactInternalInstance !== undefined;
    },

    set: function (key, value) {
      key._reactInternalInstance = value;
    }
  };

  module.exports = ReactInstanceMap;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactNodeTypes.js', ['npm:react-dom@15.6.1/lib/reactProdInvariant.js', 'npm:react@15.6.1/lib/React.js', 'npm:fbjs@0.8.16/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('npm:react-dom@15.6.1/lib/reactProdInvariant.js');
    var React = $__require('npm:react@15.6.1/lib/React.js');
    var invariant = $__require('npm:fbjs@0.8.16/lib/invariant.js');
    var ReactNodeTypes = {
      HOST: 0,
      COMPOSITE: 1,
      EMPTY: 2,
      getType: function (node) {
        if (node === null || node === false) {
          return ReactNodeTypes.EMPTY;
        } else if (React.isValidElement(node)) {
          if (typeof node.type === 'function') {
            return ReactNodeTypes.COMPOSITE;
          } else {
            return ReactNodeTypes.HOST;
          }
        }
        !false ? 'production' !== 'production' ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;
      }
    };
    module.exports = ReactNodeTypes;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactOwner.js', ['npm:react-dom@15.6.1/lib/reactProdInvariant.js', 'npm:fbjs@0.8.16/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('npm:react-dom@15.6.1/lib/reactProdInvariant.js');
    var invariant = $__require('npm:fbjs@0.8.16/lib/invariant.js');
    function isValidOwner(object) {
      return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
    }
    var ReactOwner = {
      addComponentAsRefTo: function (component, ref, owner) {
        !isValidOwner(owner) ? 'production' !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;
        owner.attachRef(ref, component);
      },
      removeComponentAsRefFrom: function (component, ref, owner) {
        !isValidOwner(owner) ? 'production' !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;
        var ownerPublicInstance = owner.getPublicInstance();
        if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
          owner.detachRef(ref);
        }
      }
    };
    module.exports = ReactOwner;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactRef.js', ['npm:react-dom@15.6.1/lib/ReactOwner.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactOwner = $__require('npm:react-dom@15.6.1/lib/ReactOwner.js');
    var ReactRef = {};
    function attachRef(ref, component, owner) {
      if (typeof ref === 'function') {
        ref(component.getPublicInstance());
      } else {
        ReactOwner.addComponentAsRefTo(component, ref, owner);
      }
    }
    function detachRef(ref, component, owner) {
      if (typeof ref === 'function') {
        ref(null);
      } else {
        ReactOwner.removeComponentAsRefFrom(component, ref, owner);
      }
    }
    ReactRef.attachRefs = function (instance, element) {
      if (element === null || typeof element !== 'object') {
        return;
      }
      var ref = element.ref;
      if (ref != null) {
        attachRef(ref, instance, element._owner);
      }
    };
    ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
      var prevRef = null;
      var prevOwner = null;
      if (prevElement !== null && typeof prevElement === 'object') {
        prevRef = prevElement.ref;
        prevOwner = prevElement._owner;
      }
      var nextRef = null;
      var nextOwner = null;
      if (nextElement !== null && typeof nextElement === 'object') {
        nextRef = nextElement.ref;
        nextOwner = nextElement._owner;
      }
      return prevRef !== nextRef || typeof nextRef === 'string' && nextOwner !== prevOwner;
    };
    ReactRef.detachRefs = function (instance, element) {
      if (element === null || typeof element !== 'object') {
        return;
      }
      var ref = element.ref;
      if (ref != null) {
        detachRef(ref, instance, element._owner);
      }
    };
    module.exports = ReactRef;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactReconciler.js', ['npm:react-dom@15.6.1/lib/ReactRef.js', 'npm:react-dom@15.6.1/lib/ReactInstrumentation.js', 'npm:fbjs@0.8.16/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactRef = $__require('npm:react-dom@15.6.1/lib/ReactRef.js');
    var ReactInstrumentation = $__require('npm:react-dom@15.6.1/lib/ReactInstrumentation.js');
    var warning = $__require('npm:fbjs@0.8.16/lib/warning.js');
    function attachRefs() {
      ReactRef.attachRefs(this, this._currentElement);
    }
    var ReactReconciler = {
      mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID) {
        if ('production' !== 'production') {
          if (internalInstance._debugID !== 0) {
            ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);
          }
        }
        var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);
        if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
          transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
        }
        if ('production' !== 'production') {
          if (internalInstance._debugID !== 0) {
            ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
          }
        }
        return markup;
      },
      getHostNode: function (internalInstance) {
        return internalInstance.getHostNode();
      },
      unmountComponent: function (internalInstance, safely) {
        if ('production' !== 'production') {
          if (internalInstance._debugID !== 0) {
            ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);
          }
        }
        ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
        internalInstance.unmountComponent(safely);
        if ('production' !== 'production') {
          if (internalInstance._debugID !== 0) {
            ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
          }
        }
      },
      receiveComponent: function (internalInstance, nextElement, transaction, context) {
        var prevElement = internalInstance._currentElement;
        if (nextElement === prevElement && context === internalInstance._context) {
          return;
        }
        if ('production' !== 'production') {
          if (internalInstance._debugID !== 0) {
            ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
          }
        }
        var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);
        if (refsChanged) {
          ReactRef.detachRefs(internalInstance, prevElement);
        }
        internalInstance.receiveComponent(nextElement, transaction, context);
        if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
          transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
        }
        if ('production' !== 'production') {
          if (internalInstance._debugID !== 0) {
            ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
          }
        }
      },
      performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {
        if (internalInstance._updateBatchNumber !== updateBatchNumber) {
          'production' !== 'production' ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;
          return;
        }
        if ('production' !== 'production') {
          if (internalInstance._debugID !== 0) {
            ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);
          }
        }
        internalInstance.performUpdateIfNecessary(transaction);
        if ('production' !== 'production') {
          if (internalInstance._debugID !== 0) {
            ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
          }
        }
      }
    };
    module.exports = ReactReconciler;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactPropTypeLocationNames.js', ['github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactPropTypeLocationNames = {};
    if ('production' !== 'production') {
      ReactPropTypeLocationNames = {
        prop: 'prop',
        context: 'context',
        childContext: 'child context'
      };
    }
    module.exports = ReactPropTypeLocationNames;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactPropTypesSecret.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

  module.exports = ReactPropTypesSecret;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/checkReactTypeSpec.js', ['npm:react-dom@15.6.1/lib/reactProdInvariant.js', 'npm:react-dom@15.6.1/lib/ReactPropTypeLocationNames.js', 'npm:react-dom@15.6.1/lib/ReactPropTypesSecret.js', 'npm:fbjs@0.8.16/lib/invariant.js', 'npm:fbjs@0.8.16/lib/warning.js', 'npm:react@15.6.1/lib/ReactComponentTreeHook.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('npm:react-dom@15.6.1/lib/reactProdInvariant.js');
    var ReactPropTypeLocationNames = $__require('npm:react-dom@15.6.1/lib/ReactPropTypeLocationNames.js');
    var ReactPropTypesSecret = $__require('npm:react-dom@15.6.1/lib/ReactPropTypesSecret.js');
    var invariant = $__require('npm:fbjs@0.8.16/lib/invariant.js');
    var warning = $__require('npm:fbjs@0.8.16/lib/warning.js');
    var ReactComponentTreeHook;
    if (typeof process !== 'undefined' && process.env && 'production' === 'test') {
      ReactComponentTreeHook = $__require('npm:react@15.6.1/lib/ReactComponentTreeHook.js');
    }
    var loggedTypeFailures = {};
    function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
      for (var typeSpecName in typeSpecs) {
        if (typeSpecs.hasOwnProperty(typeSpecName)) {
          var error;
          try {
            !(typeof typeSpecs[typeSpecName] === 'function') ? 'production' !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
            error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
          } catch (ex) {
            error = ex;
          }
          'production' !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
          if (error instanceof Error && !(error.message in loggedTypeFailures)) {
            loggedTypeFailures[error.message] = true;
            var componentStackInfo = '';
            if ('production' !== 'production') {
              if (!ReactComponentTreeHook) {
                ReactComponentTreeHook = $__require('npm:react@15.6.1/lib/ReactComponentTreeHook.js');
              }
              if (debugID !== null) {
                componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
              } else if (element !== null) {
                componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
              }
            }
            'production' !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
          }
        }
      }
    }
    module.exports = checkReactTypeSpec;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactCompositeComponent.js', ['npm:react-dom@15.6.1/lib/reactProdInvariant.js', 'npm:object-assign@4.1.1.js', 'npm:react@15.6.1/lib/React.js', 'npm:react-dom@15.6.1/lib/ReactComponentEnvironment.js', 'npm:react@15.6.1/lib/ReactCurrentOwner.js', 'npm:react-dom@15.6.1/lib/ReactErrorUtils.js', 'npm:react-dom@15.6.1/lib/ReactInstanceMap.js', 'npm:react-dom@15.6.1/lib/ReactInstrumentation.js', 'npm:react-dom@15.6.1/lib/ReactNodeTypes.js', 'npm:react-dom@15.6.1/lib/ReactReconciler.js', 'npm:react-dom@15.6.1/lib/checkReactTypeSpec.js', 'npm:fbjs@0.8.16/lib/emptyObject.js', 'npm:fbjs@0.8.16/lib/invariant.js', 'npm:fbjs@0.8.16/lib/shallowEqual.js', 'npm:react-dom@15.6.1/lib/shouldUpdateReactComponent.js', 'npm:fbjs@0.8.16/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('npm:react-dom@15.6.1/lib/reactProdInvariant.js'),
        _assign = $__require('npm:object-assign@4.1.1.js');
    var React = $__require('npm:react@15.6.1/lib/React.js');
    var ReactComponentEnvironment = $__require('npm:react-dom@15.6.1/lib/ReactComponentEnvironment.js');
    var ReactCurrentOwner = $__require('npm:react@15.6.1/lib/ReactCurrentOwner.js');
    var ReactErrorUtils = $__require('npm:react-dom@15.6.1/lib/ReactErrorUtils.js');
    var ReactInstanceMap = $__require('npm:react-dom@15.6.1/lib/ReactInstanceMap.js');
    var ReactInstrumentation = $__require('npm:react-dom@15.6.1/lib/ReactInstrumentation.js');
    var ReactNodeTypes = $__require('npm:react-dom@15.6.1/lib/ReactNodeTypes.js');
    var ReactReconciler = $__require('npm:react-dom@15.6.1/lib/ReactReconciler.js');
    if ('production' !== 'production') {
      var checkReactTypeSpec = $__require('npm:react-dom@15.6.1/lib/checkReactTypeSpec.js');
    }
    var emptyObject = $__require('npm:fbjs@0.8.16/lib/emptyObject.js');
    var invariant = $__require('npm:fbjs@0.8.16/lib/invariant.js');
    var shallowEqual = $__require('npm:fbjs@0.8.16/lib/shallowEqual.js');
    var shouldUpdateReactComponent = $__require('npm:react-dom@15.6.1/lib/shouldUpdateReactComponent.js');
    var warning = $__require('npm:fbjs@0.8.16/lib/warning.js');
    var CompositeTypes = {
      ImpureClass: 0,
      PureClass: 1,
      StatelessFunctional: 2
    };
    function StatelessComponent(Component) {}
    StatelessComponent.prototype.render = function () {
      var Component = ReactInstanceMap.get(this)._currentElement.type;
      var element = Component(this.props, this.context, this.updater);
      warnIfInvalidElement(Component, element);
      return element;
    };
    function warnIfInvalidElement(Component, element) {
      if ('production' !== 'production') {
        'production' !== 'production' ? warning(element === null || element === false || React.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
        'production' !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;
      }
    }
    function shouldConstruct(Component) {
      return !!(Component.prototype && Component.prototype.isReactComponent);
    }
    function isPureComponent(Component) {
      return !!(Component.prototype && Component.prototype.isPureReactComponent);
    }
    function measureLifeCyclePerf(fn, debugID, timerType) {
      if (debugID === 0) {
        return fn();
      }
      ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);
      try {
        return fn();
      } finally {
        ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);
      }
    }
    var nextMountID = 1;
    var ReactCompositeComponent = {
      construct: function (element) {
        this._currentElement = element;
        this._rootNodeID = 0;
        this._compositeType = null;
        this._instance = null;
        this._hostParent = null;
        this._hostContainerInfo = null;
        this._updateBatchNumber = null;
        this._pendingElement = null;
        this._pendingStateQueue = null;
        this._pendingReplaceState = false;
        this._pendingForceUpdate = false;
        this._renderedNodeType = null;
        this._renderedComponent = null;
        this._context = null;
        this._mountOrder = 0;
        this._topLevelWrapper = null;
        this._pendingCallbacks = null;
        this._calledComponentWillUnmount = false;
        if ('production' !== 'production') {
          this._warnedAboutRefsInRender = false;
        }
      },
      mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
        var _this = this;
        this._context = context;
        this._mountOrder = nextMountID++;
        this._hostParent = hostParent;
        this._hostContainerInfo = hostContainerInfo;
        var publicProps = this._currentElement.props;
        var publicContext = this._processContext(context);
        var Component = this._currentElement.type;
        var updateQueue = transaction.getUpdateQueue();
        var doConstruct = shouldConstruct(Component);
        var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);
        var renderedElement;
        if (!doConstruct && (inst == null || inst.render == null)) {
          renderedElement = inst;
          warnIfInvalidElement(Component, renderedElement);
          !(inst === null || inst === false || React.isValidElement(inst)) ? 'production' !== 'production' ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;
          inst = new StatelessComponent(Component);
          this._compositeType = CompositeTypes.StatelessFunctional;
        } else {
          if (isPureComponent(Component)) {
            this._compositeType = CompositeTypes.PureClass;
          } else {
            this._compositeType = CompositeTypes.ImpureClass;
          }
        }
        if ('production' !== 'production') {
          if (inst.render == null) {
            'production' !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
          }
          var propsMutated = inst.props !== publicProps;
          var componentName = Component.displayName || Component.name || 'Component';
          'production' !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + "up the same props that your component's constructor was passed.", componentName, componentName) : void 0;
        }
        inst.props = publicProps;
        inst.context = publicContext;
        inst.refs = emptyObject;
        inst.updater = updateQueue;
        this._instance = inst;
        ReactInstanceMap.set(inst, this);
        if ('production' !== 'production') {
          'production' !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved || inst.state, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
          'production' !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
          'production' !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
          'production' !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
          'production' !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
          'production' !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
          'production' !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
        }
        var initialState = inst.state;
        if (initialState === undefined) {
          inst.state = initialState = null;
        }
        !(typeof initialState === 'object' && !Array.isArray(initialState)) ? 'production' !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;
        this._pendingStateQueue = null;
        this._pendingReplaceState = false;
        this._pendingForceUpdate = false;
        var markup;
        if (inst.unstable_handleError) {
          markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);
        } else {
          markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
        }
        if (inst.componentDidMount) {
          if ('production' !== 'production') {
            transaction.getReactMountReady().enqueue(function () {
              measureLifeCyclePerf(function () {
                return inst.componentDidMount();
              }, _this._debugID, 'componentDidMount');
            });
          } else {
            transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
          }
        }
        return markup;
      },
      _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {
        if ('production' !== 'production') {
          ReactCurrentOwner.current = this;
          try {
            return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
          } finally {
            ReactCurrentOwner.current = null;
          }
        } else {
          return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
        }
      },
      _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {
        var Component = this._currentElement.type;
        if (doConstruct) {
          if ('production' !== 'production') {
            return measureLifeCyclePerf(function () {
              return new Component(publicProps, publicContext, updateQueue);
            }, this._debugID, 'ctor');
          } else {
            return new Component(publicProps, publicContext, updateQueue);
          }
        }
        if ('production' !== 'production') {
          return measureLifeCyclePerf(function () {
            return Component(publicProps, publicContext, updateQueue);
          }, this._debugID, 'render');
        } else {
          return Component(publicProps, publicContext, updateQueue);
        }
      },
      performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
        var markup;
        var checkpoint = transaction.checkpoint();
        try {
          markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
        } catch (e) {
          transaction.rollback(checkpoint);
          this._instance.unstable_handleError(e);
          if (this._pendingStateQueue) {
            this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
          }
          checkpoint = transaction.checkpoint();
          this._renderedComponent.unmountComponent(true);
          transaction.rollback(checkpoint);
          markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
        }
        return markup;
      },
      performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
        var inst = this._instance;
        var debugID = 0;
        if ('production' !== 'production') {
          debugID = this._debugID;
        }
        if (inst.componentWillMount) {
          if ('production' !== 'production') {
            measureLifeCyclePerf(function () {
              return inst.componentWillMount();
            }, debugID, 'componentWillMount');
          } else {
            inst.componentWillMount();
          }
          if (this._pendingStateQueue) {
            inst.state = this._processPendingState(inst.props, inst.context);
          }
        }
        if (renderedElement === undefined) {
          renderedElement = this._renderValidatedComponent();
        }
        var nodeType = ReactNodeTypes.getType(renderedElement);
        this._renderedNodeType = nodeType;
        var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY);
        this._renderedComponent = child;
        var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);
        if ('production' !== 'production') {
          if (debugID !== 0) {
            var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
            ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
          }
        }
        return markup;
      },
      getHostNode: function () {
        return ReactReconciler.getHostNode(this._renderedComponent);
      },
      unmountComponent: function (safely) {
        if (!this._renderedComponent) {
          return;
        }
        var inst = this._instance;
        if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
          inst._calledComponentWillUnmount = true;
          if (safely) {
            var name = this.getName() + '.componentWillUnmount()';
            ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
          } else {
            if ('production' !== 'production') {
              measureLifeCyclePerf(function () {
                return inst.componentWillUnmount();
              }, this._debugID, 'componentWillUnmount');
            } else {
              inst.componentWillUnmount();
            }
          }
        }
        if (this._renderedComponent) {
          ReactReconciler.unmountComponent(this._renderedComponent, safely);
          this._renderedNodeType = null;
          this._renderedComponent = null;
          this._instance = null;
        }
        this._pendingStateQueue = null;
        this._pendingReplaceState = false;
        this._pendingForceUpdate = false;
        this._pendingCallbacks = null;
        this._pendingElement = null;
        this._context = null;
        this._rootNodeID = 0;
        this._topLevelWrapper = null;
        ReactInstanceMap.remove(inst);
      },
      _maskContext: function (context) {
        var Component = this._currentElement.type;
        var contextTypes = Component.contextTypes;
        if (!contextTypes) {
          return emptyObject;
        }
        var maskedContext = {};
        for (var contextName in contextTypes) {
          maskedContext[contextName] = context[contextName];
        }
        return maskedContext;
      },
      _processContext: function (context) {
        var maskedContext = this._maskContext(context);
        if ('production' !== 'production') {
          var Component = this._currentElement.type;
          if (Component.contextTypes) {
            this._checkContextTypes(Component.contextTypes, maskedContext, 'context');
          }
        }
        return maskedContext;
      },
      _processChildContext: function (currentContext) {
        var Component = this._currentElement.type;
        var inst = this._instance;
        var childContext;
        if (inst.getChildContext) {
          if ('production' !== 'production') {
            ReactInstrumentation.debugTool.onBeginProcessingChildContext();
            try {
              childContext = inst.getChildContext();
            } finally {
              ReactInstrumentation.debugTool.onEndProcessingChildContext();
            }
          } else {
            childContext = inst.getChildContext();
          }
        }
        if (childContext) {
          !(typeof Component.childContextTypes === 'object') ? 'production' !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;
          if ('production' !== 'production') {
            this._checkContextTypes(Component.childContextTypes, childContext, 'child context');
          }
          for (var name in childContext) {
            !(name in Component.childContextTypes) ? 'production' !== 'production' ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;
          }
          return _assign({}, currentContext, childContext);
        }
        return currentContext;
      },
      _checkContextTypes: function (typeSpecs, values, location) {
        if ('production' !== 'production') {
          checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);
        }
      },
      receiveComponent: function (nextElement, transaction, nextContext) {
        var prevElement = this._currentElement;
        var prevContext = this._context;
        this._pendingElement = null;
        this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
      },
      performUpdateIfNecessary: function (transaction) {
        if (this._pendingElement != null) {
          ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
        } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
          this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
        } else {
          this._updateBatchNumber = null;
        }
      },
      updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
        var inst = this._instance;
        !(inst != null) ? 'production' !== 'production' ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;
        var willReceive = false;
        var nextContext;
        if (this._context === nextUnmaskedContext) {
          nextContext = inst.context;
        } else {
          nextContext = this._processContext(nextUnmaskedContext);
          willReceive = true;
        }
        var prevProps = prevParentElement.props;
        var nextProps = nextParentElement.props;
        if (prevParentElement !== nextParentElement) {
          willReceive = true;
        }
        if (willReceive && inst.componentWillReceiveProps) {
          if ('production' !== 'production') {
            measureLifeCyclePerf(function () {
              return inst.componentWillReceiveProps(nextProps, nextContext);
            }, this._debugID, 'componentWillReceiveProps');
          } else {
            inst.componentWillReceiveProps(nextProps, nextContext);
          }
        }
        var nextState = this._processPendingState(nextProps, nextContext);
        var shouldUpdate = true;
        if (!this._pendingForceUpdate) {
          if (inst.shouldComponentUpdate) {
            if ('production' !== 'production') {
              shouldUpdate = measureLifeCyclePerf(function () {
                return inst.shouldComponentUpdate(nextProps, nextState, nextContext);
              }, this._debugID, 'shouldComponentUpdate');
            } else {
              shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
            }
          } else {
            if (this._compositeType === CompositeTypes.PureClass) {
              shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);
            }
          }
        }
        if ('production' !== 'production') {
          'production' !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
        }
        this._updateBatchNumber = null;
        if (shouldUpdate) {
          this._pendingForceUpdate = false;
          this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
        } else {
          this._currentElement = nextParentElement;
          this._context = nextUnmaskedContext;
          inst.props = nextProps;
          inst.state = nextState;
          inst.context = nextContext;
        }
      },
      _processPendingState: function (props, context) {
        var inst = this._instance;
        var queue = this._pendingStateQueue;
        var replace = this._pendingReplaceState;
        this._pendingReplaceState = false;
        this._pendingStateQueue = null;
        if (!queue) {
          return inst.state;
        }
        if (replace && queue.length === 1) {
          return queue[0];
        }
        var nextState = _assign({}, replace ? queue[0] : inst.state);
        for (var i = replace ? 1 : 0; i < queue.length; i++) {
          var partial = queue[i];
          _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
        }
        return nextState;
      },
      _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
        var _this2 = this;
        var inst = this._instance;
        var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
        var prevProps;
        var prevState;
        var prevContext;
        if (hasComponentDidUpdate) {
          prevProps = inst.props;
          prevState = inst.state;
          prevContext = inst.context;
        }
        if (inst.componentWillUpdate) {
          if ('production' !== 'production') {
            measureLifeCyclePerf(function () {
              return inst.componentWillUpdate(nextProps, nextState, nextContext);
            }, this._debugID, 'componentWillUpdate');
          } else {
            inst.componentWillUpdate(nextProps, nextState, nextContext);
          }
        }
        this._currentElement = nextElement;
        this._context = unmaskedContext;
        inst.props = nextProps;
        inst.state = nextState;
        inst.context = nextContext;
        this._updateRenderedComponent(transaction, unmaskedContext);
        if (hasComponentDidUpdate) {
          if ('production' !== 'production') {
            transaction.getReactMountReady().enqueue(function () {
              measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, 'componentDidUpdate');
            });
          } else {
            transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
          }
        }
      },
      _updateRenderedComponent: function (transaction, context) {
        var prevComponentInstance = this._renderedComponent;
        var prevRenderedElement = prevComponentInstance._currentElement;
        var nextRenderedElement = this._renderValidatedComponent();
        var debugID = 0;
        if ('production' !== 'production') {
          debugID = this._debugID;
        }
        if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
          ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
        } else {
          var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
          ReactReconciler.unmountComponent(prevComponentInstance, false);
          var nodeType = ReactNodeTypes.getType(nextRenderedElement);
          this._renderedNodeType = nodeType;
          var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY);
          this._renderedComponent = child;
          var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);
          if ('production' !== 'production') {
            if (debugID !== 0) {
              var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
              ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
            }
          }
          this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
        }
      },
      _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {
        ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
      },
      _renderValidatedComponentWithoutOwnerOrContext: function () {
        var inst = this._instance;
        var renderedElement;
        if ('production' !== 'production') {
          renderedElement = measureLifeCyclePerf(function () {
            return inst.render();
          }, this._debugID, 'render');
        } else {
          renderedElement = inst.render();
        }
        if ('production' !== 'production') {
          if (renderedElement === undefined && inst.render._isMockFunction) {
            renderedElement = null;
          }
        }
        return renderedElement;
      },
      _renderValidatedComponent: function () {
        var renderedElement;
        if ('production' !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {
          ReactCurrentOwner.current = this;
          try {
            renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
          } finally {
            ReactCurrentOwner.current = null;
          }
        } else {
          renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
        }
        !(renderedElement === null || renderedElement === false || React.isValidElement(renderedElement)) ? 'production' !== 'production' ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;
        return renderedElement;
      },
      attachRef: function (ref, component) {
        var inst = this.getPublicInstance();
        !(inst != null) ? 'production' !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;
        var publicComponentInstance = component.getPublicInstance();
        if ('production' !== 'production') {
          var componentName = component && component.getName ? component.getName() : 'a component';
          'production' !== 'production' ? warning(publicComponentInstance != null || component._compositeType !== CompositeTypes.StatelessFunctional, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
        }
        var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
        refs[ref] = publicComponentInstance;
      },
      detachRef: function (ref) {
        var refs = this.getPublicInstance().refs;
        delete refs[ref];
      },
      getName: function () {
        var type = this._currentElement.type;
        var constructor = this._instance && this._instance.constructor;
        return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
      },
      getPublicInstance: function () {
        var inst = this._instance;
        if (this._compositeType === CompositeTypes.StatelessFunctional) {
          return null;
        }
        return inst;
      },
      _instantiateReactComponent: null
    };
    module.exports = ReactCompositeComponent;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactEmptyComponent.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2014-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var emptyComponentFactory;

  var ReactEmptyComponentInjection = {
    injectEmptyComponentFactory: function (factory) {
      emptyComponentFactory = factory;
    }
  };

  var ReactEmptyComponent = {
    create: function (instantiate) {
      return emptyComponentFactory(instantiate);
    }
  };

  ReactEmptyComponent.injection = ReactEmptyComponentInjection;

  module.exports = ReactEmptyComponent;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactHostComponent.js', ['npm:react-dom@15.6.1/lib/reactProdInvariant.js', 'npm:fbjs@0.8.16/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('npm:react-dom@15.6.1/lib/reactProdInvariant.js');
    var invariant = $__require('npm:fbjs@0.8.16/lib/invariant.js');
    var genericComponentClass = null;
    var textComponentClass = null;
    var ReactHostComponentInjection = {
      injectGenericComponentClass: function (componentClass) {
        genericComponentClass = componentClass;
      },
      injectTextComponentClass: function (componentClass) {
        textComponentClass = componentClass;
      }
    };
    function createInternalComponent(element) {
      !genericComponentClass ? 'production' !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;
      return new genericComponentClass(element);
    }
    function createInstanceForText(text) {
      return new textComponentClass(text);
    }
    function isTextComponent(component) {
      return component instanceof textComponentClass;
    }
    var ReactHostComponent = {
      createInternalComponent: createInternalComponent,
      createInstanceForText: createInstanceForText,
      isTextComponent: isTextComponent,
      injection: ReactHostComponentInjection
    };
    module.exports = ReactHostComponent;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@15.6.1/lib/getNextDebugID.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var nextDebugID = 1;

  function getNextDebugID() {
    return nextDebugID++;
  }

  module.exports = getNextDebugID;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/instantiateReactComponent.js', ['npm:react-dom@15.6.1/lib/reactProdInvariant.js', 'npm:object-assign@4.1.1.js', 'npm:react-dom@15.6.1/lib/ReactCompositeComponent.js', 'npm:react-dom@15.6.1/lib/ReactEmptyComponent.js', 'npm:react-dom@15.6.1/lib/ReactHostComponent.js', 'npm:react@15.6.1/lib/getNextDebugID.js', 'npm:fbjs@0.8.16/lib/invariant.js', 'npm:fbjs@0.8.16/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('npm:react-dom@15.6.1/lib/reactProdInvariant.js'),
        _assign = $__require('npm:object-assign@4.1.1.js');
    var ReactCompositeComponent = $__require('npm:react-dom@15.6.1/lib/ReactCompositeComponent.js');
    var ReactEmptyComponent = $__require('npm:react-dom@15.6.1/lib/ReactEmptyComponent.js');
    var ReactHostComponent = $__require('npm:react-dom@15.6.1/lib/ReactHostComponent.js');
    var getNextDebugID = $__require('npm:react@15.6.1/lib/getNextDebugID.js');
    var invariant = $__require('npm:fbjs@0.8.16/lib/invariant.js');
    var warning = $__require('npm:fbjs@0.8.16/lib/warning.js');
    var ReactCompositeComponentWrapper = function (element) {
      this.construct(element);
    };
    function getDeclarationErrorAddendum(owner) {
      if (owner) {
        var name = owner.getName();
        if (name) {
          return ' Check the render method of `' + name + '`.';
        }
      }
      return '';
    }
    function isInternalComponentType(type) {
      return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
    }
    function instantiateReactComponent(node, shouldHaveDebugID) {
      var instance;
      if (node === null || node === false) {
        instance = ReactEmptyComponent.create(instantiateReactComponent);
      } else if (typeof node === 'object') {
        var element = node;
        var type = element.type;
        if (typeof type !== 'function' && typeof type !== 'string') {
          var info = '';
          if ('production' !== 'production') {
            if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
              info += ' You likely forgot to export your component from the file ' + "it's defined in.";
            }
          }
          info += getDeclarationErrorAddendum(element._owner);
          !false ? 'production' !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info) : _prodInvariant('130', type == null ? type : typeof type, info) : void 0;
        }
        if (typeof element.type === 'string') {
          instance = ReactHostComponent.createInternalComponent(element);
        } else if (isInternalComponentType(element.type)) {
          instance = new element.type(element);
          if (!instance.getHostNode) {
            instance.getHostNode = instance.getNativeNode;
          }
        } else {
          instance = new ReactCompositeComponentWrapper(element);
        }
      } else if (typeof node === 'string' || typeof node === 'number') {
        instance = ReactHostComponent.createInstanceForText(node);
      } else {
        !false ? 'production' !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;
      }
      if ('production' !== 'production') {
        'production' !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
      }
      instance._mountIndex = 0;
      instance._mountImage = null;
      if ('production' !== 'production') {
        instance._debugID = shouldHaveDebugID ? getNextDebugID() : 0;
      }
      if ('production' !== 'production') {
        if (Object.preventExtensions) {
          Object.preventExtensions(instance);
        }
      }
      return instance;
    }
    _assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent, { _instantiateReactComponent: instantiateReactComponent });
    module.exports = instantiateReactComponent;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/DOMNamespaces.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var DOMNamespaces = {
    html: 'http://www.w3.org/1999/xhtml',
    mathml: 'http://www.w3.org/1998/Math/MathML',
    svg: 'http://www.w3.org/2000/svg'
  };

  module.exports = DOMNamespaces;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/createMicrosoftUnsafeLocalFunction.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  /* globals MSApp */

  'use strict';

  /**
   * Create a function which has 'unsafe' privileges (required by windows8 apps)
   */

  var global = this || self,
      GLOBAL = global;
  var createMicrosoftUnsafeLocalFunction = function (func) {
    if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
      return function (arg0, arg1, arg2, arg3) {
        MSApp.execUnsafeLocalFunction(function () {
          return func(arg0, arg1, arg2, arg3);
        });
      };
    } else {
      return func;
    }
  };

  module.exports = createMicrosoftUnsafeLocalFunction;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/setInnerHTML.js', ['npm:fbjs@0.8.16/lib/ExecutionEnvironment.js', 'npm:react-dom@15.6.1/lib/DOMNamespaces.js', 'npm:react-dom@15.6.1/lib/createMicrosoftUnsafeLocalFunction.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ExecutionEnvironment = $__require('npm:fbjs@0.8.16/lib/ExecutionEnvironment.js');
    var DOMNamespaces = $__require('npm:react-dom@15.6.1/lib/DOMNamespaces.js');
    var WHITESPACE_TEST = /^[ \r\n\t\f]/;
    var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;
    var createMicrosoftUnsafeLocalFunction = $__require('npm:react-dom@15.6.1/lib/createMicrosoftUnsafeLocalFunction.js');
    var reusableSVGContainer;
    var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
      if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
        reusableSVGContainer = reusableSVGContainer || document.createElement('div');
        reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
        var svgNode = reusableSVGContainer.firstChild;
        while (svgNode.firstChild) {
          node.appendChild(svgNode.firstChild);
        }
      } else {
        node.innerHTML = html;
      }
    });
    if (ExecutionEnvironment.canUseDOM) {
      var testElement = document.createElement('div');
      testElement.innerHTML = ' ';
      if (testElement.innerHTML === '') {
        setInnerHTML = function (node, html) {
          if (node.parentNode) {
            node.parentNode.replaceChild(node, node);
          }
          if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
            node.innerHTML = String.fromCharCode(0xfeff) + html;
            var textNode = node.firstChild;
            if (textNode.data.length === 1) {
              node.removeChild(textNode);
            } else {
              textNode.deleteData(0, 1);
            }
          } else {
            node.innerHTML = html;
          }
        };
      }
      testElement = null;
    }
    module.exports = setInnerHTML;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/shouldUpdateReactComponent.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  /**
   * Given a `prevElement` and `nextElement`, determines if the existing
   * instance should be updated as opposed to being destroyed or replaced by a new
   * instance. Both arguments are elements. This ensures that this logic can
   * operate on stateless trees without any backing instance.
   *
   * @param {?object} prevElement
   * @param {?object} nextElement
   * @return {boolean} True if the existing instance should be updated.
   * @protected
   */

  var global = this || self,
      GLOBAL = global;
  function shouldUpdateReactComponent(prevElement, nextElement) {
    var prevEmpty = prevElement === null || prevElement === false;
    var nextEmpty = nextElement === null || nextElement === false;
    if (prevEmpty || nextEmpty) {
      return prevEmpty === nextEmpty;
    }

    var prevType = typeof prevElement;
    var nextType = typeof nextElement;
    if (prevType === 'string' || prevType === 'number') {
      return nextType === 'string' || nextType === 'number';
    } else {
      return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
    }
  }

  module.exports = shouldUpdateReactComponent;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactMount.js', ['npm:react-dom@15.6.1/lib/reactProdInvariant.js', 'npm:react-dom@15.6.1/lib/DOMLazyTree.js', 'npm:react-dom@15.6.1/lib/DOMProperty.js', 'npm:react@15.6.1/lib/React.js', 'npm:react-dom@15.6.1/lib/ReactBrowserEventEmitter.js', 'npm:react@15.6.1/lib/ReactCurrentOwner.js', 'npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js', 'npm:react-dom@15.6.1/lib/ReactDOMContainerInfo.js', 'npm:react-dom@15.6.1/lib/ReactDOMFeatureFlags.js', 'npm:react-dom@15.6.1/lib/ReactFeatureFlags.js', 'npm:react-dom@15.6.1/lib/ReactInstanceMap.js', 'npm:react-dom@15.6.1/lib/ReactInstrumentation.js', 'npm:react-dom@15.6.1/lib/ReactMarkupChecksum.js', 'npm:react-dom@15.6.1/lib/ReactReconciler.js', 'npm:react-dom@15.6.1/lib/ReactUpdateQueue.js', 'npm:react-dom@15.6.1/lib/ReactUpdates.js', 'npm:fbjs@0.8.16/lib/emptyObject.js', 'npm:react-dom@15.6.1/lib/instantiateReactComponent.js', 'npm:fbjs@0.8.16/lib/invariant.js', 'npm:react-dom@15.6.1/lib/setInnerHTML.js', 'npm:react-dom@15.6.1/lib/shouldUpdateReactComponent.js', 'npm:fbjs@0.8.16/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('npm:react-dom@15.6.1/lib/reactProdInvariant.js');
    var DOMLazyTree = $__require('npm:react-dom@15.6.1/lib/DOMLazyTree.js');
    var DOMProperty = $__require('npm:react-dom@15.6.1/lib/DOMProperty.js');
    var React = $__require('npm:react@15.6.1/lib/React.js');
    var ReactBrowserEventEmitter = $__require('npm:react-dom@15.6.1/lib/ReactBrowserEventEmitter.js');
    var ReactCurrentOwner = $__require('npm:react@15.6.1/lib/ReactCurrentOwner.js');
    var ReactDOMComponentTree = $__require('npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js');
    var ReactDOMContainerInfo = $__require('npm:react-dom@15.6.1/lib/ReactDOMContainerInfo.js');
    var ReactDOMFeatureFlags = $__require('npm:react-dom@15.6.1/lib/ReactDOMFeatureFlags.js');
    var ReactFeatureFlags = $__require('npm:react-dom@15.6.1/lib/ReactFeatureFlags.js');
    var ReactInstanceMap = $__require('npm:react-dom@15.6.1/lib/ReactInstanceMap.js');
    var ReactInstrumentation = $__require('npm:react-dom@15.6.1/lib/ReactInstrumentation.js');
    var ReactMarkupChecksum = $__require('npm:react-dom@15.6.1/lib/ReactMarkupChecksum.js');
    var ReactReconciler = $__require('npm:react-dom@15.6.1/lib/ReactReconciler.js');
    var ReactUpdateQueue = $__require('npm:react-dom@15.6.1/lib/ReactUpdateQueue.js');
    var ReactUpdates = $__require('npm:react-dom@15.6.1/lib/ReactUpdates.js');
    var emptyObject = $__require('npm:fbjs@0.8.16/lib/emptyObject.js');
    var instantiateReactComponent = $__require('npm:react-dom@15.6.1/lib/instantiateReactComponent.js');
    var invariant = $__require('npm:fbjs@0.8.16/lib/invariant.js');
    var setInnerHTML = $__require('npm:react-dom@15.6.1/lib/setInnerHTML.js');
    var shouldUpdateReactComponent = $__require('npm:react-dom@15.6.1/lib/shouldUpdateReactComponent.js');
    var warning = $__require('npm:fbjs@0.8.16/lib/warning.js');
    var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
    var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;
    var ELEMENT_NODE_TYPE = 1;
    var DOC_NODE_TYPE = 9;
    var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
    var instancesByReactRootID = {};
    function firstDifferenceIndex(string1, string2) {
      var minLen = Math.min(string1.length, string2.length);
      for (var i = 0; i < minLen; i++) {
        if (string1.charAt(i) !== string2.charAt(i)) {
          return i;
        }
      }
      return string1.length === string2.length ? -1 : minLen;
    }
    function getReactRootElementInContainer(container) {
      if (!container) {
        return null;
      }
      if (container.nodeType === DOC_NODE_TYPE) {
        return container.documentElement;
      } else {
        return container.firstChild;
      }
    }
    function internalGetID(node) {
      return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
    }
    function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
      var markerName;
      if (ReactFeatureFlags.logTopLevelRenders) {
        var wrappedElement = wrapperInstance._currentElement.props.child;
        var type = wrappedElement.type;
        markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
        console.time(markerName);
      }
      var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0);
      if (markerName) {
        console.timeEnd(markerName);
      }
      wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
      ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
    }
    function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
      var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(!shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
      transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
      ReactUpdates.ReactReconcileTransaction.release(transaction);
    }
    function unmountComponentFromNode(instance, container, safely) {
      if ('production' !== 'production') {
        ReactInstrumentation.debugTool.onBeginFlush();
      }
      ReactReconciler.unmountComponent(instance, safely);
      if ('production' !== 'production') {
        ReactInstrumentation.debugTool.onEndFlush();
      }
      if (container.nodeType === DOC_NODE_TYPE) {
        container = container.documentElement;
      }
      while (container.lastChild) {
        container.removeChild(container.lastChild);
      }
    }
    function hasNonRootReactChild(container) {
      var rootEl = getReactRootElementInContainer(container);
      if (rootEl) {
        var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
        return !!(inst && inst._hostParent);
      }
    }
    function nodeIsRenderedByOtherInstance(container) {
      var rootEl = getReactRootElementInContainer(container);
      return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));
    }
    function isValidContainer(node) {
      return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));
    }
    function isReactNode(node) {
      return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));
    }
    function getHostRootInstanceInContainer(container) {
      var rootEl = getReactRootElementInContainer(container);
      var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
      return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;
    }
    function getTopLevelWrapperInContainer(container) {
      var root = getHostRootInstanceInContainer(container);
      return root ? root._hostContainerInfo._topLevelWrapper : null;
    }
    var topLevelRootCounter = 1;
    var TopLevelWrapper = function () {
      this.rootID = topLevelRootCounter++;
    };
    TopLevelWrapper.prototype.isReactComponent = {};
    if ('production' !== 'production') {
      TopLevelWrapper.displayName = 'TopLevelWrapper';
    }
    TopLevelWrapper.prototype.render = function () {
      return this.props.child;
    };
    TopLevelWrapper.isReactTopLevelWrapper = true;
    var ReactMount = {
      TopLevelWrapper: TopLevelWrapper,
      _instancesByReactRootID: instancesByReactRootID,
      scrollMonitor: function (container, renderCallback) {
        renderCallback();
      },
      _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {
        ReactMount.scrollMonitor(container, function () {
          ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);
          if (callback) {
            ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
          }
        });
        return prevComponent;
      },
      _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
        'production' !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;
        !isValidContainer(container) ? 'production' !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;
        ReactBrowserEventEmitter.ensureScrollValueMonitoring();
        var componentInstance = instantiateReactComponent(nextElement, false);
        ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);
        var wrapperID = componentInstance._instance.rootID;
        instancesByReactRootID[wrapperID] = componentInstance;
        return componentInstance;
      },
      renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
        !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ? 'production' !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;
        return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
      },
      _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
        ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
        !React.isValidElement(nextElement) ? 'production' !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? " Instead of passing a string like 'div', pass " + "React.createElement('div') or <div />." : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? " Instead of passing a string like 'div', pass " + "React.createElement('div') or <div />." : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;
        'production' !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;
        var nextWrappedElement = React.createElement(TopLevelWrapper, { child: nextElement });
        var nextContext;
        if (parentComponent) {
          var parentInst = ReactInstanceMap.get(parentComponent);
          nextContext = parentInst._processChildContext(parentInst._context);
        } else {
          nextContext = emptyObject;
        }
        var prevComponent = getTopLevelWrapperInContainer(container);
        if (prevComponent) {
          var prevWrappedElement = prevComponent._currentElement;
          var prevElement = prevWrappedElement.props.child;
          if (shouldUpdateReactComponent(prevElement, nextElement)) {
            var publicInst = prevComponent._renderedComponent.getPublicInstance();
            var updatedCallback = callback && function () {
              callback.call(publicInst);
            };
            ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);
            return publicInst;
          } else {
            ReactMount.unmountComponentAtNode(container);
          }
        }
        var reactRootElement = getReactRootElementInContainer(container);
        var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
        var containerHasNonRootReactChild = hasNonRootReactChild(container);
        if ('production' !== 'production') {
          'production' !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;
          if (!containerHasReactMarkup || reactRootElement.nextSibling) {
            var rootElementSibling = reactRootElement;
            while (rootElementSibling) {
              if (internalGetID(rootElementSibling)) {
                'production' !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
                break;
              }
              rootElementSibling = rootElementSibling.nextSibling;
            }
          }
        }
        var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
        var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();
        if (callback) {
          callback.call(component);
        }
        return component;
      },
      render: function (nextElement, container, callback) {
        return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
      },
      unmountComponentAtNode: function (container) {
        'production' !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;
        !isValidContainer(container) ? 'production' !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;
        if ('production' !== 'production') {
          'production' !== 'production' ? warning(!nodeIsRenderedByOtherInstance(container), "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by another copy of React.') : void 0;
        }
        var prevComponent = getTopLevelWrapperInContainer(container);
        if (!prevComponent) {
          var containerHasNonRootReactChild = hasNonRootReactChild(container);
          var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);
          if ('production' !== 'production') {
            'production' !== 'production' ? warning(!containerHasNonRootReactChild, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
          }
          return false;
        }
        delete instancesByReactRootID[prevComponent._instance.rootID];
        ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
        return true;
      },
      _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {
        !isValidContainer(container) ? 'production' !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;
        if (shouldReuseMarkup) {
          var rootElement = getReactRootElementInContainer(container);
          if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
            ReactDOMComponentTree.precacheNode(instance, rootElement);
            return;
          } else {
            var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
            rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
            var rootMarkup = rootElement.outerHTML;
            rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);
            var normalizedMarkup = markup;
            if ('production' !== 'production') {
              var normalizer;
              if (container.nodeType === ELEMENT_NODE_TYPE) {
                normalizer = document.createElement('div');
                normalizer.innerHTML = markup;
                normalizedMarkup = normalizer.innerHTML;
              } else {
                normalizer = document.createElement('iframe');
                document.body.appendChild(normalizer);
                normalizer.contentDocument.write(markup);
                normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
                document.body.removeChild(normalizer);
              }
            }
            var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
            var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);
            !(container.nodeType !== DOC_NODE_TYPE) ? 'production' !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s', difference) : _prodInvariant('42', difference) : void 0;
            if ('production' !== 'production') {
              'production' !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
            }
          }
        }
        !(container.nodeType !== DOC_NODE_TYPE) ? 'production' !== 'production' ? invariant(false, 'You\'re trying to render a component to the document but you didn\'t use server rendering. We can\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;
        if (transaction.useCreateElement) {
          while (container.lastChild) {
            container.removeChild(container.lastChild);
          }
          DOMLazyTree.insertTreeBefore(container, markup, null);
        } else {
          setInnerHTML(container, markup);
          ReactDOMComponentTree.precacheNode(instance, container.firstChild);
        }
        if ('production' !== 'production') {
          var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
          if (hostNode._debugID !== 0) {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: hostNode._debugID,
              type: 'mount',
              payload: markup.toString()
            });
          }
        }
      }
    };
    module.exports = ReactMount;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/renderSubtreeIntoContainer.js', ['npm:react-dom@15.6.1/lib/ReactMount.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ReactMount = $__require('npm:react-dom@15.6.1/lib/ReactMount.js');
  module.exports = ReactMount.renderSubtreeIntoContainer;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactInvalidSetStateWarningHook.js', ['npm:fbjs@0.8.16/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var warning = $__require('npm:fbjs@0.8.16/lib/warning.js');
    if ('production' !== 'production') {
      var processingChildContext = false;
      var warnInvalidSetState = function () {
        'production' !== 'production' ? warning(!processingChildContext, 'setState(...): Cannot call setState() inside getChildContext()') : void 0;
      };
    }
    var ReactInvalidSetStateWarningHook = {
      onBeginProcessingChildContext: function () {
        processingChildContext = true;
      },
      onEndProcessingChildContext: function () {
        processingChildContext = false;
      },
      onSetState: function () {
        warnInvalidSetState();
      }
    };
    module.exports = ReactInvalidSetStateWarningHook;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactHostOperationHistoryHook.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2016-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var history = [];

  var ReactHostOperationHistoryHook = {
    onHostOperation: function (operation) {
      history.push(operation);
    },
    clearHistory: function () {
      if (ReactHostOperationHistoryHook._preventClearing) {
        // Should only be used for tests.
        return;
      }

      history = [];
    },
    getHistory: function () {
      return history;
    }
  };

  module.exports = ReactHostOperationHistoryHook;
});
System.registerDynamic('npm:fbjs@0.8.16/lib/ExecutionEnvironment.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

  /**
   * Simple, lightweight module assisting with the detection and context of
   * Worker. Helps avoid circular dependencies and allows code to reason about
   * whether or not they are in a Worker, even if they never include the main
   * `ReactWorker` dependency.
   */
  var ExecutionEnvironment = {

    canUseDOM: canUseDOM,

    canUseWorkers: typeof Worker !== 'undefined',

    canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

    canUseViewport: canUseDOM && !!window.screen,

    isInWorker: !canUseDOM // For now, this is true - might change in the future.

  };

  module.exports = ExecutionEnvironment;
});
System.registerDynamic('npm:fbjs@0.8.16/lib/performance.js', ['npm:fbjs@0.8.16/lib/ExecutionEnvironment.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ExecutionEnvironment = $__require('npm:fbjs@0.8.16/lib/ExecutionEnvironment.js');
  var performance;
  if (ExecutionEnvironment.canUseDOM) {
    performance = window.performance || window.msPerformance || window.webkitPerformance;
  }
  module.exports = performance || {};
});
System.registerDynamic('npm:fbjs@0.8.16/lib/performanceNow.js', ['npm:fbjs@0.8.16/lib/performance.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var performance = $__require('npm:fbjs@0.8.16/lib/performance.js');
  var performanceNow;
  if (performance.now) {
    performanceNow = function performanceNow() {
      return performance.now();
    };
  } else {
    performanceNow = function performanceNow() {
      return Date.now();
    };
  }
  module.exports = performanceNow;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactDebugTool.js', ['npm:react-dom@15.6.1/lib/ReactInvalidSetStateWarningHook.js', 'npm:react-dom@15.6.1/lib/ReactHostOperationHistoryHook.js', 'npm:react@15.6.1/lib/ReactComponentTreeHook.js', 'npm:fbjs@0.8.16/lib/ExecutionEnvironment.js', 'npm:fbjs@0.8.16/lib/performanceNow.js', 'npm:fbjs@0.8.16/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactInvalidSetStateWarningHook = $__require('npm:react-dom@15.6.1/lib/ReactInvalidSetStateWarningHook.js');
    var ReactHostOperationHistoryHook = $__require('npm:react-dom@15.6.1/lib/ReactHostOperationHistoryHook.js');
    var ReactComponentTreeHook = $__require('npm:react@15.6.1/lib/ReactComponentTreeHook.js');
    var ExecutionEnvironment = $__require('npm:fbjs@0.8.16/lib/ExecutionEnvironment.js');
    var performanceNow = $__require('npm:fbjs@0.8.16/lib/performanceNow.js');
    var warning = $__require('npm:fbjs@0.8.16/lib/warning.js');
    var hooks = [];
    var didHookThrowForEvent = {};
    function callHook(event, fn, context, arg1, arg2, arg3, arg4, arg5) {
      try {
        fn.call(context, arg1, arg2, arg3, arg4, arg5);
      } catch (e) {
        'production' !== 'production' ? warning(didHookThrowForEvent[event], 'Exception thrown by hook while handling %s: %s', event, e + '\n' + e.stack) : void 0;
        didHookThrowForEvent[event] = true;
      }
    }
    function emitEvent(event, arg1, arg2, arg3, arg4, arg5) {
      for (var i = 0; i < hooks.length; i++) {
        var hook = hooks[i];
        var fn = hook[event];
        if (fn) {
          callHook(event, fn, hook, arg1, arg2, arg3, arg4, arg5);
        }
      }
    }
    var isProfiling = false;
    var flushHistory = [];
    var lifeCycleTimerStack = [];
    var currentFlushNesting = 0;
    var currentFlushMeasurements = [];
    var currentFlushStartTime = 0;
    var currentTimerDebugID = null;
    var currentTimerStartTime = 0;
    var currentTimerNestedFlushDuration = 0;
    var currentTimerType = null;
    var lifeCycleTimerHasWarned = false;
    function clearHistory() {
      ReactComponentTreeHook.purgeUnmountedComponents();
      ReactHostOperationHistoryHook.clearHistory();
    }
    function getTreeSnapshot(registeredIDs) {
      return registeredIDs.reduce(function (tree, id) {
        var ownerID = ReactComponentTreeHook.getOwnerID(id);
        var parentID = ReactComponentTreeHook.getParentID(id);
        tree[id] = {
          displayName: ReactComponentTreeHook.getDisplayName(id),
          text: ReactComponentTreeHook.getText(id),
          updateCount: ReactComponentTreeHook.getUpdateCount(id),
          childIDs: ReactComponentTreeHook.getChildIDs(id),
          ownerID: ownerID || parentID && ReactComponentTreeHook.getOwnerID(parentID) || 0,
          parentID: parentID
        };
        return tree;
      }, {});
    }
    function resetMeasurements() {
      var previousStartTime = currentFlushStartTime;
      var previousMeasurements = currentFlushMeasurements;
      var previousOperations = ReactHostOperationHistoryHook.getHistory();
      if (currentFlushNesting === 0) {
        currentFlushStartTime = 0;
        currentFlushMeasurements = [];
        clearHistory();
        return;
      }
      if (previousMeasurements.length || previousOperations.length) {
        var registeredIDs = ReactComponentTreeHook.getRegisteredIDs();
        flushHistory.push({
          duration: performanceNow() - previousStartTime,
          measurements: previousMeasurements || [],
          operations: previousOperations || [],
          treeSnapshot: getTreeSnapshot(registeredIDs)
        });
      }
      clearHistory();
      currentFlushStartTime = performanceNow();
      currentFlushMeasurements = [];
    }
    function checkDebugID(debugID) {
      var allowRoot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      if (allowRoot && debugID === 0) {
        return;
      }
      if (!debugID) {
        'production' !== 'production' ? warning(false, 'ReactDebugTool: debugID may not be empty.') : void 0;
      }
    }
    function beginLifeCycleTimer(debugID, timerType) {
      if (currentFlushNesting === 0) {
        return;
      }
      if (currentTimerType && !lifeCycleTimerHasWarned) {
        'production' !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'Did not expect %s timer to start while %s timer is still in ' + 'progress for %s instance.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
        lifeCycleTimerHasWarned = true;
      }
      currentTimerStartTime = performanceNow();
      currentTimerNestedFlushDuration = 0;
      currentTimerDebugID = debugID;
      currentTimerType = timerType;
    }
    function endLifeCycleTimer(debugID, timerType) {
      if (currentFlushNesting === 0) {
        return;
      }
      if (currentTimerType !== timerType && !lifeCycleTimerHasWarned) {
        'production' !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'We did not expect %s timer to stop while %s timer is still in ' + 'progress for %s instance. Please report this as a bug in React.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
        lifeCycleTimerHasWarned = true;
      }
      if (isProfiling) {
        currentFlushMeasurements.push({
          timerType: timerType,
          instanceID: debugID,
          duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration
        });
      }
      currentTimerStartTime = 0;
      currentTimerNestedFlushDuration = 0;
      currentTimerDebugID = null;
      currentTimerType = null;
    }
    function pauseCurrentLifeCycleTimer() {
      var currentTimer = {
        startTime: currentTimerStartTime,
        nestedFlushStartTime: performanceNow(),
        debugID: currentTimerDebugID,
        timerType: currentTimerType
      };
      lifeCycleTimerStack.push(currentTimer);
      currentTimerStartTime = 0;
      currentTimerNestedFlushDuration = 0;
      currentTimerDebugID = null;
      currentTimerType = null;
    }
    function resumeCurrentLifeCycleTimer() {
      var _lifeCycleTimerStack$ = lifeCycleTimerStack.pop(),
          startTime = _lifeCycleTimerStack$.startTime,
          nestedFlushStartTime = _lifeCycleTimerStack$.nestedFlushStartTime,
          debugID = _lifeCycleTimerStack$.debugID,
          timerType = _lifeCycleTimerStack$.timerType;
      var nestedFlushDuration = performanceNow() - nestedFlushStartTime;
      currentTimerStartTime = startTime;
      currentTimerNestedFlushDuration += nestedFlushDuration;
      currentTimerDebugID = debugID;
      currentTimerType = timerType;
    }
    var lastMarkTimeStamp = 0;
    var canUsePerformanceMeasure = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';
    function shouldMark(debugID) {
      if (!isProfiling || !canUsePerformanceMeasure) {
        return false;
      }
      var element = ReactComponentTreeHook.getElement(debugID);
      if (element == null || typeof element !== 'object') {
        return false;
      }
      var isHostElement = typeof element.type === 'string';
      if (isHostElement) {
        return false;
      }
      return true;
    }
    function markBegin(debugID, markType) {
      if (!shouldMark(debugID)) {
        return;
      }
      var markName = debugID + '::' + markType;
      lastMarkTimeStamp = performanceNow();
      performance.mark(markName);
    }
    function markEnd(debugID, markType) {
      if (!shouldMark(debugID)) {
        return;
      }
      var markName = debugID + '::' + markType;
      var displayName = ReactComponentTreeHook.getDisplayName(debugID) || 'Unknown';
      var timeStamp = performanceNow();
      if (timeStamp - lastMarkTimeStamp > 0.1) {
        var measurementName = displayName + ' [' + markType + ']';
        performance.measure(measurementName, markName);
      }
      performance.clearMarks(markName);
      if (measurementName) {
        performance.clearMeasures(measurementName);
      }
    }
    var ReactDebugTool = {
      addHook: function (hook) {
        hooks.push(hook);
      },
      removeHook: function (hook) {
        for (var i = 0; i < hooks.length; i++) {
          if (hooks[i] === hook) {
            hooks.splice(i, 1);
            i--;
          }
        }
      },
      isProfiling: function () {
        return isProfiling;
      },
      beginProfiling: function () {
        if (isProfiling) {
          return;
        }
        isProfiling = true;
        flushHistory.length = 0;
        resetMeasurements();
        ReactDebugTool.addHook(ReactHostOperationHistoryHook);
      },
      endProfiling: function () {
        if (!isProfiling) {
          return;
        }
        isProfiling = false;
        resetMeasurements();
        ReactDebugTool.removeHook(ReactHostOperationHistoryHook);
      },
      getFlushHistory: function () {
        return flushHistory;
      },
      onBeginFlush: function () {
        currentFlushNesting++;
        resetMeasurements();
        pauseCurrentLifeCycleTimer();
        emitEvent('onBeginFlush');
      },
      onEndFlush: function () {
        resetMeasurements();
        currentFlushNesting--;
        resumeCurrentLifeCycleTimer();
        emitEvent('onEndFlush');
      },
      onBeginLifeCycleTimer: function (debugID, timerType) {
        checkDebugID(debugID);
        emitEvent('onBeginLifeCycleTimer', debugID, timerType);
        markBegin(debugID, timerType);
        beginLifeCycleTimer(debugID, timerType);
      },
      onEndLifeCycleTimer: function (debugID, timerType) {
        checkDebugID(debugID);
        endLifeCycleTimer(debugID, timerType);
        markEnd(debugID, timerType);
        emitEvent('onEndLifeCycleTimer', debugID, timerType);
      },
      onBeginProcessingChildContext: function () {
        emitEvent('onBeginProcessingChildContext');
      },
      onEndProcessingChildContext: function () {
        emitEvent('onEndProcessingChildContext');
      },
      onHostOperation: function (operation) {
        checkDebugID(operation.instanceID);
        emitEvent('onHostOperation', operation);
      },
      onSetState: function () {
        emitEvent('onSetState');
      },
      onSetChildren: function (debugID, childDebugIDs) {
        checkDebugID(debugID);
        childDebugIDs.forEach(checkDebugID);
        emitEvent('onSetChildren', debugID, childDebugIDs);
      },
      onBeforeMountComponent: function (debugID, element, parentDebugID) {
        checkDebugID(debugID);
        checkDebugID(parentDebugID, true);
        emitEvent('onBeforeMountComponent', debugID, element, parentDebugID);
        markBegin(debugID, 'mount');
      },
      onMountComponent: function (debugID) {
        checkDebugID(debugID);
        markEnd(debugID, 'mount');
        emitEvent('onMountComponent', debugID);
      },
      onBeforeUpdateComponent: function (debugID, element) {
        checkDebugID(debugID);
        emitEvent('onBeforeUpdateComponent', debugID, element);
        markBegin(debugID, 'update');
      },
      onUpdateComponent: function (debugID) {
        checkDebugID(debugID);
        markEnd(debugID, 'update');
        emitEvent('onUpdateComponent', debugID);
      },
      onBeforeUnmountComponent: function (debugID) {
        checkDebugID(debugID);
        emitEvent('onBeforeUnmountComponent', debugID);
        markBegin(debugID, 'unmount');
      },
      onUnmountComponent: function (debugID) {
        checkDebugID(debugID);
        markEnd(debugID, 'unmount');
        emitEvent('onUnmountComponent', debugID);
      },
      onTestEvent: function () {
        emitEvent('onTestEvent');
      }
    };
    ReactDebugTool.addDevtool = ReactDebugTool.addHook;
    ReactDebugTool.removeDevtool = ReactDebugTool.removeHook;
    ReactDebugTool.addHook(ReactInvalidSetStateWarningHook);
    ReactDebugTool.addHook(ReactComponentTreeHook);
    var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
    if (/[?&]react_perf\b/.test(url)) {
      ReactDebugTool.beginProfiling();
    }
    module.exports = ReactDebugTool;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactInstrumentation.js', ['npm:react-dom@15.6.1/lib/ReactDebugTool.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var debugTool = null;
    if ('production' !== 'production') {
      var ReactDebugTool = $__require('npm:react-dom@15.6.1/lib/ReactDebugTool.js');
      debugTool = ReactDebugTool;
    }
    module.exports = { debugTool: debugTool };
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/EventPluginRegistry.js', ['npm:react-dom@15.6.1/lib/reactProdInvariant.js', 'npm:fbjs@0.8.16/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('npm:react-dom@15.6.1/lib/reactProdInvariant.js');
    var invariant = $__require('npm:fbjs@0.8.16/lib/invariant.js');
    var eventPluginOrder = null;
    var namesToPlugins = {};
    function recomputePluginOrdering() {
      if (!eventPluginOrder) {
        return;
      }
      for (var pluginName in namesToPlugins) {
        var pluginModule = namesToPlugins[pluginName];
        var pluginIndex = eventPluginOrder.indexOf(pluginName);
        !(pluginIndex > -1) ? 'production' !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;
        if (EventPluginRegistry.plugins[pluginIndex]) {
          continue;
        }
        !pluginModule.extractEvents ? 'production' !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;
        EventPluginRegistry.plugins[pluginIndex] = pluginModule;
        var publishedEvents = pluginModule.eventTypes;
        for (var eventName in publishedEvents) {
          !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ? 'production' !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;
        }
      }
    }
    function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
      !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? 'production' !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;
      EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;
      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
      if (phasedRegistrationNames) {
        for (var phaseName in phasedRegistrationNames) {
          if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
            var phasedRegistrationName = phasedRegistrationNames[phaseName];
            publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
          }
        }
        return true;
      } else if (dispatchConfig.registrationName) {
        publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
        return true;
      }
      return false;
    }
    function publishRegistrationName(registrationName, pluginModule, eventName) {
      !!EventPluginRegistry.registrationNameModules[registrationName] ? 'production' !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;
      EventPluginRegistry.registrationNameModules[registrationName] = pluginModule;
      EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;
      if ('production' !== 'production') {
        var lowerCasedName = registrationName.toLowerCase();
        EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;
        if (registrationName === 'onDoubleClick') {
          EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
        }
      }
    }
    var EventPluginRegistry = {
      plugins: [],
      eventNameDispatchConfigs: {},
      registrationNameModules: {},
      registrationNameDependencies: {},
      possibleRegistrationNames: 'production' !== 'production' ? {} : null,
      injectEventPluginOrder: function (injectedEventPluginOrder) {
        !!eventPluginOrder ? 'production' !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;
        eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
        recomputePluginOrdering();
      },
      injectEventPluginsByName: function (injectedNamesToPlugins) {
        var isOrderingDirty = false;
        for (var pluginName in injectedNamesToPlugins) {
          if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
            continue;
          }
          var pluginModule = injectedNamesToPlugins[pluginName];
          if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
            !!namesToPlugins[pluginName] ? 'production' !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;
            namesToPlugins[pluginName] = pluginModule;
            isOrderingDirty = true;
          }
        }
        if (isOrderingDirty) {
          recomputePluginOrdering();
        }
      },
      getPluginModuleForEvent: function (event) {
        var dispatchConfig = event.dispatchConfig;
        if (dispatchConfig.registrationName) {
          return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
        }
        if (dispatchConfig.phasedRegistrationNames !== undefined) {
          var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
          for (var phase in phasedRegistrationNames) {
            if (!phasedRegistrationNames.hasOwnProperty(phase)) {
              continue;
            }
            var pluginModule = EventPluginRegistry.registrationNameModules[phasedRegistrationNames[phase]];
            if (pluginModule) {
              return pluginModule;
            }
          }
        }
        return null;
      },
      _resetEventPlugins: function () {
        eventPluginOrder = null;
        for (var pluginName in namesToPlugins) {
          if (namesToPlugins.hasOwnProperty(pluginName)) {
            delete namesToPlugins[pluginName];
          }
        }
        EventPluginRegistry.plugins.length = 0;
        var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
        for (var eventName in eventNameDispatchConfigs) {
          if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
            delete eventNameDispatchConfigs[eventName];
          }
        }
        var registrationNameModules = EventPluginRegistry.registrationNameModules;
        for (var registrationName in registrationNameModules) {
          if (registrationNameModules.hasOwnProperty(registrationName)) {
            delete registrationNameModules[registrationName];
          }
        }
        if ('production' !== 'production') {
          var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
          for (var lowerCasedName in possibleRegistrationNames) {
            if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
              delete possibleRegistrationNames[lowerCasedName];
            }
          }
        }
      }
    };
    module.exports = EventPluginRegistry;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactDOMUnknownPropertyHook.js', ['npm:react-dom@15.6.1/lib/DOMProperty.js', 'npm:react-dom@15.6.1/lib/EventPluginRegistry.js', 'npm:react@15.6.1/lib/ReactComponentTreeHook.js', 'npm:fbjs@0.8.16/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var DOMProperty = $__require('npm:react-dom@15.6.1/lib/DOMProperty.js');
    var EventPluginRegistry = $__require('npm:react-dom@15.6.1/lib/EventPluginRegistry.js');
    var ReactComponentTreeHook = $__require('npm:react@15.6.1/lib/ReactComponentTreeHook.js');
    var warning = $__require('npm:fbjs@0.8.16/lib/warning.js');
    if ('production' !== 'production') {
      var reactProps = {
        children: true,
        dangerouslySetInnerHTML: true,
        key: true,
        ref: true,
        autoFocus: true,
        defaultValue: true,
        valueLink: true,
        defaultChecked: true,
        checkedLink: true,
        innerHTML: true,
        suppressContentEditableWarning: true,
        onFocusIn: true,
        onFocusOut: true
      };
      var warnedProperties = {};
      var validateProperty = function (tagName, name, debugID) {
        if (DOMProperty.properties.hasOwnProperty(name) || DOMProperty.isCustomAttribute(name)) {
          return true;
        }
        if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
          return true;
        }
        if (EventPluginRegistry.registrationNameModules.hasOwnProperty(name)) {
          return true;
        }
        warnedProperties[name] = true;
        var lowerCasedName = name.toLowerCase();
        var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;
        var registrationName = EventPluginRegistry.possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? EventPluginRegistry.possibleRegistrationNames[lowerCasedName] : null;
        if (standardName != null) {
          'production' !== 'production' ? warning(false, 'Unknown DOM property %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
          return true;
        } else if (registrationName != null) {
          'production' !== 'production' ? warning(false, 'Unknown event handler property %s. Did you mean `%s`?%s', name, registrationName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
          return true;
        } else {
          return false;
        }
      };
    }
    var warnUnknownProperties = function (debugID, element) {
      var unknownProps = [];
      for (var key in element.props) {
        var isValid = validateProperty(element.type, key, debugID);
        if (!isValid) {
          unknownProps.push(key);
        }
      }
      var unknownPropString = unknownProps.map(function (prop) {
        return '`' + prop + '`';
      }).join(', ');
      if (unknownProps.length === 1) {
        'production' !== 'production' ? warning(false, 'Unknown prop %s on <%s> tag. Remove this prop from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
      } else if (unknownProps.length > 1) {
        'production' !== 'production' ? warning(false, 'Unknown props %s on <%s> tag. Remove these props from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
      }
    };
    function handleElement(debugID, element) {
      if (element == null || typeof element.type !== 'string') {
        return;
      }
      if (element.type.indexOf('-') >= 0 || element.props.is) {
        return;
      }
      warnUnknownProperties(debugID, element);
    }
    var ReactDOMUnknownPropertyHook = {
      onBeforeMountComponent: function (debugID, element) {
        handleElement(debugID, element);
      },
      onBeforeUpdateComponent: function (debugID, element) {
        handleElement(debugID, element);
      }
    };
    module.exports = ReactDOMUnknownPropertyHook;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactDOMNullInputValuePropHook.js', ['npm:react@15.6.1/lib/ReactComponentTreeHook.js', 'npm:fbjs@0.8.16/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactComponentTreeHook = $__require('npm:react@15.6.1/lib/ReactComponentTreeHook.js');
    var warning = $__require('npm:fbjs@0.8.16/lib/warning.js');
    var didWarnValueNull = false;
    function handleElement(debugID, element) {
      if (element == null) {
        return;
      }
      if (element.type !== 'input' && element.type !== 'textarea' && element.type !== 'select') {
        return;
      }
      if (element.props != null && element.props.value === null && !didWarnValueNull) {
        'production' !== 'production' ? warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
        didWarnValueNull = true;
      }
    }
    var ReactDOMNullInputValuePropHook = {
      onBeforeMountComponent: function (debugID, element) {
        handleElement(debugID, element);
      },
      onBeforeUpdateComponent: function (debugID, element) {
        handleElement(debugID, element);
      }
    };
    module.exports = ReactDOMNullInputValuePropHook;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/reactProdInvariant.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */
  'use strict';

  /**
   * WARNING: DO NOT manually require this module.
   * This is a replacement for `invariant(...)` used by the error code system
   * and will _only_ be required by the corresponding babel pass.
   * It always throws.
   */

  var global = this || self,
      GLOBAL = global;
  function reactProdInvariant(code) {
    var argCount = arguments.length - 1;

    var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

    for (var argIdx = 0; argIdx < argCount; argIdx++) {
      message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
    }

    message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

    var error = new Error(message);
    error.name = 'Invariant Violation';
    error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

    throw error;
  }

  module.exports = reactProdInvariant;
});
System.registerDynamic('npm:react-dom@15.6.1/lib/DOMProperty.js', ['npm:react-dom@15.6.1/lib/reactProdInvariant.js', 'npm:fbjs@0.8.16/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('npm:react-dom@15.6.1/lib/reactProdInvariant.js');
    var invariant = $__require('npm:fbjs@0.8.16/lib/invariant.js');
    function checkMask(value, bitmask) {
      return (value & bitmask) === bitmask;
    }
    var DOMPropertyInjection = {
      MUST_USE_PROPERTY: 0x1,
      HAS_BOOLEAN_VALUE: 0x4,
      HAS_NUMERIC_VALUE: 0x8,
      HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
      HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,
      injectDOMPropertyConfig: function (domPropertyConfig) {
        var Injection = DOMPropertyInjection;
        var Properties = domPropertyConfig.Properties || {};
        var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
        var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
        var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
        var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};
        if (domPropertyConfig.isCustomAttribute) {
          DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
        }
        for (var propName in Properties) {
          !!DOMProperty.properties.hasOwnProperty(propName) ? 'production' !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property \'%s\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;
          var lowerCased = propName.toLowerCase();
          var propConfig = Properties[propName];
          var propertyInfo = {
            attributeName: lowerCased,
            attributeNamespace: null,
            propertyName: propName,
            mutationMethod: null,
            mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
            hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
            hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
            hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
            hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
          };
          !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? 'production' !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;
          if ('production' !== 'production') {
            DOMProperty.getPossibleStandardName[lowerCased] = propName;
          }
          if (DOMAttributeNames.hasOwnProperty(propName)) {
            var attributeName = DOMAttributeNames[propName];
            propertyInfo.attributeName = attributeName;
            if ('production' !== 'production') {
              DOMProperty.getPossibleStandardName[attributeName] = propName;
            }
          }
          if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
            propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
          }
          if (DOMPropertyNames.hasOwnProperty(propName)) {
            propertyInfo.propertyName = DOMPropertyNames[propName];
          }
          if (DOMMutationMethods.hasOwnProperty(propName)) {
            propertyInfo.mutationMethod = DOMMutationMethods[propName];
          }
          DOMProperty.properties[propName] = propertyInfo;
        }
      }
    };
    var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
    var DOMProperty = {
      ID_ATTRIBUTE_NAME: 'data-reactid',
      ROOT_ATTRIBUTE_NAME: 'data-reactroot',
      ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
      ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',
      properties: {},
      getPossibleStandardName: 'production' !== 'production' ? { autofocus: 'autoFocus' } : null,
      _isCustomAttributeFunctions: [],
      isCustomAttribute: function (attributeName) {
        for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
          var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
          if (isCustomAttributeFn(attributeName)) {
            return true;
          }
        }
        return false;
      },
      injection: DOMPropertyInjection
    };
    module.exports = DOMProperty;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactDOMInvalidARIAHook.js', ['npm:react-dom@15.6.1/lib/DOMProperty.js', 'npm:react@15.6.1/lib/ReactComponentTreeHook.js', 'npm:fbjs@0.8.16/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var DOMProperty = $__require('npm:react-dom@15.6.1/lib/DOMProperty.js');
    var ReactComponentTreeHook = $__require('npm:react@15.6.1/lib/ReactComponentTreeHook.js');
    var warning = $__require('npm:fbjs@0.8.16/lib/warning.js');
    var warnedProperties = {};
    var rARIA = new RegExp('^(aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
    function validateProperty(tagName, name, debugID) {
      if (warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
        return true;
      }
      if (rARIA.test(name)) {
        var lowerCasedName = name.toLowerCase();
        var standardName = DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;
        if (standardName == null) {
          warnedProperties[name] = true;
          return false;
        }
        if (name !== standardName) {
          'production' !== 'production' ? warning(false, 'Unknown ARIA attribute %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
          warnedProperties[name] = true;
          return true;
        }
      }
      return true;
    }
    function warnInvalidARIAProps(debugID, element) {
      var invalidProps = [];
      for (var key in element.props) {
        var isValid = validateProperty(element.type, key, debugID);
        if (!isValid) {
          invalidProps.push(key);
        }
      }
      var unknownPropString = invalidProps.map(function (prop) {
        return '`' + prop + '`';
      }).join(', ');
      if (invalidProps.length === 1) {
        'production' !== 'production' ? warning(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
      } else if (invalidProps.length > 1) {
        'production' !== 'production' ? warning(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
      }
    }
    function handleElement(debugID, element) {
      if (element == null || typeof element.type !== 'string') {
        return;
      }
      if (element.type.indexOf('-') >= 0 || element.props.is) {
        return;
      }
      warnInvalidARIAProps(debugID, element);
    }
    var ReactDOMInvalidARIAHook = {
      onBeforeMountComponent: function (debugID, element) {
        if ('production' !== 'production') {
          handleElement(debugID, element);
        }
      },
      onBeforeUpdateComponent: function (debugID, element) {
        if ('production' !== 'production') {
          handleElement(debugID, element);
        }
      }
    };
    module.exports = ReactDOMInvalidARIAHook;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/lib/ReactDOM.js', ['npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js', 'npm:react-dom@15.6.1/lib/ReactDefaultInjection.js', 'npm:react-dom@15.6.1/lib/ReactMount.js', 'npm:react-dom@15.6.1/lib/ReactReconciler.js', 'npm:react-dom@15.6.1/lib/ReactUpdates.js', 'npm:react-dom@15.6.1/lib/ReactVersion.js', 'npm:react-dom@15.6.1/lib/findDOMNode.js', 'npm:react-dom@15.6.1/lib/getHostComponentFromComposite.js', 'npm:react-dom@15.6.1/lib/renderSubtreeIntoContainer.js', 'npm:fbjs@0.8.16/lib/warning.js', 'npm:fbjs@0.8.16/lib/ExecutionEnvironment.js', 'npm:react-dom@15.6.1/lib/ReactInstrumentation.js', 'npm:react-dom@15.6.1/lib/ReactDOMUnknownPropertyHook.js', 'npm:react-dom@15.6.1/lib/ReactDOMNullInputValuePropHook.js', 'npm:react-dom@15.6.1/lib/ReactDOMInvalidARIAHook.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactDOMComponentTree = $__require('npm:react-dom@15.6.1/lib/ReactDOMComponentTree.js');
    var ReactDefaultInjection = $__require('npm:react-dom@15.6.1/lib/ReactDefaultInjection.js');
    var ReactMount = $__require('npm:react-dom@15.6.1/lib/ReactMount.js');
    var ReactReconciler = $__require('npm:react-dom@15.6.1/lib/ReactReconciler.js');
    var ReactUpdates = $__require('npm:react-dom@15.6.1/lib/ReactUpdates.js');
    var ReactVersion = $__require('npm:react-dom@15.6.1/lib/ReactVersion.js');
    var findDOMNode = $__require('npm:react-dom@15.6.1/lib/findDOMNode.js');
    var getHostComponentFromComposite = $__require('npm:react-dom@15.6.1/lib/getHostComponentFromComposite.js');
    var renderSubtreeIntoContainer = $__require('npm:react-dom@15.6.1/lib/renderSubtreeIntoContainer.js');
    var warning = $__require('npm:fbjs@0.8.16/lib/warning.js');
    ReactDefaultInjection.inject();
    var ReactDOM = {
      findDOMNode: findDOMNode,
      render: ReactMount.render,
      unmountComponentAtNode: ReactMount.unmountComponentAtNode,
      version: ReactVersion,
      unstable_batchedUpdates: ReactUpdates.batchedUpdates,
      unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
    };
    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
      __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
        ComponentTree: {
          getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
          getNodeFromInstance: function (inst) {
            if (inst._renderedComponent) {
              inst = getHostComponentFromComposite(inst);
            }
            if (inst) {
              return ReactDOMComponentTree.getNodeFromInstance(inst);
            } else {
              return null;
            }
          }
        },
        Mount: ReactMount,
        Reconciler: ReactReconciler
      });
    }
    if ('production' !== 'production') {
      var ExecutionEnvironment = $__require('npm:fbjs@0.8.16/lib/ExecutionEnvironment.js');
      if (ExecutionEnvironment.canUseDOM && window.top === window.self) {
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
          if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
            var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
            console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
          }
        }
        var testFunc = function testFn() {};
        'production' !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, "It looks like you're using a minified copy of the development build " + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;
        var ieCompatibilityMode = document.documentMode && document.documentMode < 8;
        'production' !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;
        var expectedFeatures = [Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.trim];
        for (var i = 0; i < expectedFeatures.length; i++) {
          if (!expectedFeatures[i]) {
            'production' !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
            break;
          }
        }
      }
    }
    if ('production' !== 'production') {
      var ReactInstrumentation = $__require('npm:react-dom@15.6.1/lib/ReactInstrumentation.js');
      var ReactDOMUnknownPropertyHook = $__require('npm:react-dom@15.6.1/lib/ReactDOMUnknownPropertyHook.js');
      var ReactDOMNullInputValuePropHook = $__require('npm:react-dom@15.6.1/lib/ReactDOMNullInputValuePropHook.js');
      var ReactDOMInvalidARIAHook = $__require('npm:react-dom@15.6.1/lib/ReactDOMInvalidARIAHook.js');
      ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);
      ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);
      ReactInstrumentation.debugTool.addHook(ReactDOMInvalidARIAHook);
    }
    module.exports = ReactDOM;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react-dom@15.6.1/index.js', ['npm:react-dom@15.6.1/lib/ReactDOM.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:react-dom@15.6.1/lib/ReactDOM.js');
});
System.registerDynamic("npm:react-dom@15.6.1.js", ["npm:react-dom@15.6.1/index.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:react-dom@15.6.1/index.js");
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/common/interactionMode.js", [], true, function ($__require, exports, module) {
    /*
     * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
     *
     * Licensed under the terms of the LICENSE file distributed with this project.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    var TAB_KEY_CODE = 9;
    /* istanbul ignore next */
    /**
     * A nifty little class that maintains event handlers to add a class to the container element
     * when entering "mouse mode" (on a `mousedown` event) and remove it when entering "keyboard mode"
     * (on a `tab` key `keydown` event).
     */
    var InteractionModeEngine = function () {
        // tslint:disable-next-line:no-constructor-vars
        function InteractionModeEngine(container, className) {
            var _this = this;
            this.container = container;
            this.className = className;
            this.isRunning = false;
            this.handleKeyDown = function (e) {
                if (e.which === TAB_KEY_CODE) {
                    _this.reset();
                    _this.container.addEventListener("mousedown", _this.handleMouseDown);
                }
            };
            this.handleMouseDown = function () {
                _this.reset();
                _this.container.classList.add(_this.className);
                _this.container.addEventListener("keydown", _this.handleKeyDown);
            };
        }
        /** Returns whether the engine is currently running. */
        InteractionModeEngine.prototype.isActive = function () {
            return this.isRunning;
        };
        /** Enable behavior which applies the given className when in mouse mode. */
        InteractionModeEngine.prototype.start = function () {
            this.container.addEventListener("mousedown", this.handleMouseDown);
            this.isRunning = true;
        };
        /** Disable interaction mode behavior and remove className from container. */
        InteractionModeEngine.prototype.stop = function () {
            this.reset();
            this.isRunning = false;
        };
        InteractionModeEngine.prototype.reset = function () {
            this.container.classList.remove(this.className);
            this.container.removeEventListener("keydown", this.handleKeyDown);
            this.container.removeEventListener("mousedown", this.handleMouseDown);
        };
        return InteractionModeEngine;
    }();
    exports.InteractionModeEngine = InteractionModeEngine;

    
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/accessibility/focusStyleManager.js", ["npm:@blueprintjs/core@1.33.0/dist/common/interactionMode.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var interactionMode_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/interactionMode.js");
  exports.FOCUS_DISABLED_CLASS = "pt-focus-disabled";
  var fakeFocusEngine = {
    isActive: function () {
      return true;
    },
    start: function () {
      return true;
    },
    stop: function () {
      return true;
    }
  };
  var focusEngine = typeof document !== "undefined" ? new interactionMode_1.InteractionModeEngine(document.documentElement, exports.FOCUS_DISABLED_CLASS) : fakeFocusEngine;
  exports.FocusStyleManager = {
    alwaysShowFocus: function () {
      return focusEngine.stop();
    },
    isActive: function () {
      return focusEngine.isActive();
    },
    onlyShowFocusOnTabs: function () {
      return focusEngine.start();
    }
  };
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/accessibility/index.js", ["npm:@blueprintjs/core@1.33.0/dist/accessibility/focusStyleManager.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
  }
  Object.defineProperty(exports, "__esModule", { value: true });
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/accessibility/focusStyleManager.js"));
});
System.registerDynamic('npm:dom4@1.8.5/build/dom4.max.js', [], true, function ($__require, exports, module) {
  /* */
  "format cjs";
  /*!
  Copyright (C) 2013-2015 by Andrea Giammarchi - @WebReflection
  
  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:
  
  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.
  
  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  THE SOFTWARE.
  
  */

  var global = this || self,
      GLOBAL = global;
  (function (window) {
    'use strict';
    /* jshint loopfunc: true, noempty: false*/
    // http://www.w3.org/TR/dom/#element

    function createDocumentFragment() {
      return document.createDocumentFragment();
    }

    function createElement(nodeName) {
      return document.createElement(nodeName);
    }

    function enoughArguments(length, name) {
      if (!length) throw new Error('Failed to construct ' + name + ': 1 argument required, but only 0 present.');
    }

    function mutationMacro(nodes) {
      if (nodes.length === 1) {
        return textNodeIfString(nodes[0]);
      }
      for (var fragment = createDocumentFragment(), list = slice.call(nodes), i = 0; i < nodes.length; i++) {
        fragment.appendChild(textNodeIfString(list[i]));
      }
      return fragment;
    }

    function textNodeIfString(node) {
      return typeof node === 'string' ? document.createTextNode(node) : node;
    }

    for (var head, property, TemporaryPrototype, TemporaryTokenList, wrapVerifyToken, document = window.document, hOP = Object.prototype.hasOwnProperty, defineProperty = Object.defineProperty || function (object, property, descriptor) {
      if (hOP.call(descriptor, 'value')) {
        object[property] = descriptor.value;
      } else {
        if (hOP.call(descriptor, 'get')) object.__defineGetter__(property, descriptor.get);
        if (hOP.call(descriptor, 'set')) object.__defineSetter__(property, descriptor.set);
      }
      return object;
    }, indexOf = [].indexOf || function indexOf(value) {
      var length = this.length;
      while (length--) {
        if (this[length] === value) {
          break;
        }
      }
      return length;
    },
    // http://www.w3.org/TR/domcore/#domtokenlist
    verifyToken = function (token) {
      if (!token) {
        throw 'SyntaxError';
      } else if (spaces.test(token)) {
        throw 'InvalidCharacterError';
      }
      return token;
    }, DOMTokenList = function (node) {
      var noClassName = typeof node.className === 'undefined',
          className = noClassName ? node.getAttribute('class') || '' : node.className,
          isSVG = noClassName || typeof className === 'object',
          value = (isSVG ? noClassName ? className : className.baseVal : className).replace(trim, '');
      if (value.length) {
        properties.push.apply(this, value.split(spaces));
      }
      this._isSVG = isSVG;
      this._ = node;
    }, classListDescriptor = {
      get: function get() {
        return new DOMTokenList(this);
      },
      set: function () {}
    }, uid = 'dom4-tmp-'.concat(Math.random() * +new Date()).replace('.', '-'), trim = /^\s+|\s+$/g, spaces = /\s+/, SPACE = '\x20', CLASS_LIST = 'classList', toggle = function toggle(token, force) {
      if (this.contains(token)) {
        if (!force) {
          // force is not true (either false or omitted)
          this.remove(token);
        }
      } else if (force === undefined || force) {
        force = true;
        this.add(token);
      }
      return !!force;
    }, DocumentFragmentPrototype = window.DocumentFragment && DocumentFragment.prototype, Node = window.Node, NodePrototype = (Node || Element).prototype, CharacterData = window.CharacterData || Node, CharacterDataPrototype = CharacterData && CharacterData.prototype, DocumentType = window.DocumentType, DocumentTypePrototype = DocumentType && DocumentType.prototype, ElementPrototype = (window.Element || Node || window.HTMLElement).prototype, HTMLSelectElement = window.HTMLSelectElement || createElement('select').constructor, selectRemove = HTMLSelectElement.prototype.remove, ShadowRoot = window.ShadowRoot, SVGElement = window.SVGElement,
    // normalizes multiple ids as CSS query
    idSpaceFinder = / /g, idSpaceReplacer = '\\ ', createQueryMethod = function (methodName) {
      var createArray = methodName === 'querySelectorAll';
      return function (css) {
        var a,
            i,
            id,
            query,
            nl,
            selectors,
            node = this.parentNode;
        if (node) {
          for (id = this.getAttribute('id') || uid, query = id === uid ? id : id.replace(idSpaceFinder, idSpaceReplacer), selectors = css.split(','), i = 0; i < selectors.length; i++) {
            selectors[i] = '#' + query + ' ' + selectors[i];
          }
          css = selectors.join(',');
        }
        if (id === uid) this.setAttribute('id', id);
        nl = (node || this)[methodName](css);
        if (id === uid) this.removeAttribute('id');
        // return a list
        if (createArray) {
          i = nl.length;
          a = new Array(i);
          while (i--) a[i] = nl[i];
        }
        // return node or null
        else {
            a = nl;
          }
        return a;
      };
    }, addQueryAndAll = function (where) {
      if (!('query' in where)) {
        where.query = ElementPrototype.query;
      }
      if (!('queryAll' in where)) {
        where.queryAll = ElementPrototype.queryAll;
      }
    }, properties = ['matches', ElementPrototype.matchesSelector || ElementPrototype.webkitMatchesSelector || ElementPrototype.khtmlMatchesSelector || ElementPrototype.mozMatchesSelector || ElementPrototype.msMatchesSelector || ElementPrototype.oMatchesSelector || function matches(selector) {
      var parentNode = this.parentNode;
      return !!parentNode && -1 < indexOf.call(parentNode.querySelectorAll(selector), this);
    }, 'closest', function closest(selector) {
      var parentNode = this,
          matches;
      while (
      // document has no .matches
      (matches = parentNode && parentNode.matches) && !parentNode.matches(selector)) {
        parentNode = parentNode.parentNode;
      }
      return matches ? parentNode : null;
    }, 'prepend', function prepend() {
      var firstChild = this.firstChild,
          node = mutationMacro(arguments);
      if (firstChild) {
        this.insertBefore(node, firstChild);
      } else {
        this.appendChild(node);
      }
    }, 'append', function append() {
      this.appendChild(mutationMacro(arguments));
    }, 'before', function before() {
      var parentNode = this.parentNode;
      if (parentNode) {
        parentNode.insertBefore(mutationMacro(arguments), this);
      }
    }, 'after', function after() {
      var parentNode = this.parentNode,
          nextSibling = this.nextSibling,
          node = mutationMacro(arguments);
      if (parentNode) {
        if (nextSibling) {
          parentNode.insertBefore(node, nextSibling);
        } else {
          parentNode.appendChild(node);
        }
      }
    },
    // WARNING - DEPRECATED - use .replaceWith() instead
    'replace', function replace() {
      this.replaceWith.apply(this, arguments);
    }, 'replaceWith', function replaceWith() {
      var parentNode = this.parentNode;
      if (parentNode) {
        parentNode.replaceChild(mutationMacro(arguments), this);
      }
    }, 'remove', function remove() {
      var parentNode = this.parentNode;
      if (parentNode) {
        parentNode.removeChild(this);
      }
    }, 'query', createQueryMethod('querySelector'), 'queryAll', createQueryMethod('querySelectorAll')], slice = properties.slice, i = properties.length; i; i -= 2) {
      property = properties[i - 2];
      if (!(property in ElementPrototype)) {
        ElementPrototype[property] = properties[i - 1];
      }
      if (property === 'remove') {
        // see https://github.com/WebReflection/dom4/issues/19
        HTMLSelectElement.prototype[property] = function () {
          return 0 < arguments.length ? selectRemove.apply(this, arguments) : ElementPrototype.remove.call(this);
        };
      }
      // see https://github.com/WebReflection/dom4/issues/18
      if (/^(?:before|after|replace|replaceWith|remove)$/.test(property)) {
        if (CharacterData && !(property in CharacterDataPrototype)) {
          CharacterDataPrototype[property] = properties[i - 1];
        }
        if (DocumentType && !(property in DocumentTypePrototype)) {
          DocumentTypePrototype[property] = properties[i - 1];
        }
      }
      // see https://github.com/WebReflection/dom4/pull/26
      if (/^(?:append|prepend)$/.test(property)) {
        if (DocumentFragmentPrototype) {
          if (!(property in DocumentFragmentPrototype)) {
            DocumentFragmentPrototype[property] = properties[i - 1];
          }
        } else {
          try {
            createDocumentFragment().constructor.prototype[property] = properties[i - 1];
          } catch (o_O) {}
        }
      }
    }

    // bring query and queryAll to the document too
    addQueryAndAll(document);

    // brings query and queryAll to fragments as well
    if (DocumentFragmentPrototype) {
      addQueryAndAll(DocumentFragmentPrototype);
    } else {
      try {
        addQueryAndAll(createDocumentFragment().constructor.prototype);
      } catch (o_O) {}
    }

    // bring query and queryAll to the ShadowRoot too
    if (ShadowRoot) {
      addQueryAndAll(ShadowRoot.prototype);
    }

    // most likely an IE9 only issue
    // see https://github.com/WebReflection/dom4/issues/6
    if (!createElement('a').matches('a')) {
      ElementPrototype[property] = function (matches) {
        return function (selector) {
          return matches.call(this.parentNode ? this : createDocumentFragment().appendChild(this), selector);
        };
      }(ElementPrototype[property]);
    }

    // used to fix both old webkit and SVG
    DOMTokenList.prototype = {
      length: 0,
      add: function add() {
        for (var j = 0, token; j < arguments.length; j++) {
          token = arguments[j];
          if (!this.contains(token)) {
            properties.push.call(this, property);
          }
        }
        if (this._isSVG) {
          this._.setAttribute('class', '' + this);
        } else {
          this._.className = '' + this;
        }
      },
      contains: function (indexOf) {
        return function contains(token) {
          i = indexOf.call(this, property = verifyToken(token));
          return -1 < i;
        };
      }([].indexOf || function (token) {
        i = this.length;
        while (i-- && this[i] !== token) {}
        return i;
      }),
      item: function item(i) {
        return this[i] || null;
      },
      remove: function remove() {
        for (var j = 0, token; j < arguments.length; j++) {
          token = arguments[j];
          if (this.contains(token)) {
            properties.splice.call(this, i, 1);
          }
        }
        if (this._isSVG) {
          this._.setAttribute('class', '' + this);
        } else {
          this._.className = '' + this;
        }
      },
      toggle: toggle,
      toString: function toString() {
        return properties.join.call(this, SPACE);
      }
    };

    if (SVGElement && !(CLASS_LIST in SVGElement.prototype)) {
      defineProperty(SVGElement.prototype, CLASS_LIST, classListDescriptor);
    }

    // http://www.w3.org/TR/dom/#domtokenlist
    // iOS 5.1 has completely screwed this property
    // classList in ElementPrototype is false
    // but it's actually there as getter
    if (!(CLASS_LIST in document.documentElement)) {
      defineProperty(ElementPrototype, CLASS_LIST, classListDescriptor);
    } else {
      // iOS 5.1 and Nokia ASHA do not support multiple add or remove
      // trying to detect and fix that in here
      TemporaryTokenList = createElement('div')[CLASS_LIST];
      TemporaryTokenList.add('a', 'b', 'a');
      if ('a\x20b' != TemporaryTokenList) {
        // no other way to reach original methods in iOS 5.1
        TemporaryPrototype = TemporaryTokenList.constructor.prototype;
        if (!('add' in TemporaryPrototype)) {
          // ASHA double fails in here
          TemporaryPrototype = window.TemporaryTokenList.prototype;
        }
        wrapVerifyToken = function (original) {
          return function () {
            var i = 0;
            while (i < arguments.length) {
              original.call(this, arguments[i++]);
            }
          };
        };
        TemporaryPrototype.add = wrapVerifyToken(TemporaryPrototype.add);
        TemporaryPrototype.remove = wrapVerifyToken(TemporaryPrototype.remove);
        // toggle is broken too ^_^ ... let's fix it
        TemporaryPrototype.toggle = toggle;
      }
    }

    if (!('contains' in NodePrototype)) {
      defineProperty(NodePrototype, 'contains', {
        value: function (el) {
          while (el && el !== this) el = el.parentNode;
          return this === el;
        }
      });
    }

    if (!('head' in document)) {
      defineProperty(document, 'head', {
        get: function () {
          return head || (head = document.getElementsByTagName('head')[0]);
        }
      });
    }

    // requestAnimationFrame partial polyfill
    (function () {
      for (var raf, rAF = window.requestAnimationFrame, cAF = window.cancelAnimationFrame, prefixes = ['o', 'ms', 'moz', 'webkit'], i = prefixes.length; !cAF && i--;) {
        rAF = rAF || window[prefixes[i] + 'RequestAnimationFrame'];
        cAF = window[prefixes[i] + 'CancelAnimationFrame'] || window[prefixes[i] + 'CancelRequestAnimationFrame'];
      }
      if (!cAF) {
        // some FF apparently implemented rAF but no cAF 
        if (rAF) {
          raf = rAF;
          rAF = function (callback) {
            var goOn = true;
            raf(function () {
              if (goOn) callback.apply(this, arguments);
            });
            return function () {
              goOn = false;
            };
          };
          cAF = function (id) {
            id();
          };
        } else {
          rAF = function (callback) {
            return setTimeout(callback, 15, 15);
          };
          cAF = function (id) {
            clearTimeout(id);
          };
        }
      }
      window.requestAnimationFrame = rAF;
      window.cancelAnimationFrame = cAF;
    })();

    // http://www.w3.org/TR/dom/#customevent
    try {
      new window.CustomEvent('?');
    } catch (o_O) {
      window.CustomEvent = function (eventName, defaultInitDict) {

        // the infamous substitute
        function CustomEvent(type, eventInitDict) {
          /*jshint eqnull:true */
          var event = document.createEvent(eventName);
          if (typeof type != 'string') {
            throw new Error('An event name must be provided');
          }
          if (eventName == 'Event') {
            event.initCustomEvent = initCustomEvent;
          }
          if (eventInitDict == null) {
            eventInitDict = defaultInitDict;
          }
          event.initCustomEvent(type, eventInitDict.bubbles, eventInitDict.cancelable, eventInitDict.detail);
          return event;
        }

        // attached at runtime
        function initCustomEvent(type, bubbles, cancelable, detail) {
          /*jshint validthis:true*/
          this.initEvent(type, bubbles, cancelable);
          this.detail = detail;
        }

        // that's it
        return CustomEvent;
      }(
      // is this IE9 or IE10 ?
      // where CustomEvent is there
      // but not usable as construtor ?
      window.CustomEvent ?
      // use the CustomEvent interface in such case
      'CustomEvent' : 'Event',
      // otherwise the common compatible one
      {
        bubbles: false,
        cancelable: false,
        detail: null
      });
    }

    // window.Event as constructor
    try {
      new Event('_');
    } catch (o_O) {
      /* jshint -W022 */
      o_O = function ($Event) {
        function Event(type, init) {
          enoughArguments(arguments.length, 'Event');
          var out = document.createEvent('Event');
          if (!init) init = {};
          out.initEvent(type, !!init.bubbles, !!init.cancelable);
          return out;
        }
        Event.prototype = $Event.prototype;
        return Event;
      }(window.Event || function Event() {});
      defineProperty(window, 'Event', { value: o_O });
      // Android 4 gotcha
      if (Event !== o_O) Event = o_O;
    }

    // window.KeyboardEvent as constructor
    try {
      new KeyboardEvent('_', {});
    } catch (o_O) {
      /* jshint -W022 */
      o_O = function ($KeyboardEvent) {
        // code inspired by https://gist.github.com/termi/4654819
        var initType = 0,
            defaults = {
          char: '',
          key: '',
          location: 0,
          ctrlKey: false,
          shiftKey: false,
          altKey: false,
          metaKey: false,
          altGraphKey: false,
          repeat: false,
          locale: navigator.language,
          detail: 0,
          bubbles: false,
          cancelable: false,
          keyCode: 0,
          charCode: 0,
          which: 0
        },
            eventType;
        try {
          var e = document.createEvent('KeyboardEvent');
          e.initKeyboardEvent('keyup', false, false, window, '+', 3, true, false, true, false, false);
          initType = (e.keyIdentifier || e.key) == '+' && (e.keyLocation || e.location) == 3 && (e.ctrlKey ? e.altKey ? 1 : 3 : e.shiftKey ? 2 : 4) || 9;
        } catch (o_O) {}
        eventType = 0 < initType ? 'KeyboardEvent' : 'Event';

        function getModifier(init) {
          for (var out = [], keys = ['ctrlKey', 'Control', 'shiftKey', 'Shift', 'altKey', 'Alt', 'metaKey', 'Meta', 'altGraphKey', 'AltGraph'], i = 0; i < keys.length; i += 2) {
            if (init[keys[i]]) out.push(keys[i + 1]);
          }
          return out.join(' ');
        }

        function withDefaults(target, source) {
          for (var key in source) {
            if (source.hasOwnProperty(key) && !source.hasOwnProperty.call(target, key)) target[key] = source[key];
          }
          return target;
        }

        function withInitValues(key, out, init) {
          try {
            out[key] = init[key];
          } catch (o_O) {}
        }

        function KeyboardEvent(type, init) {
          enoughArguments(arguments.length, 'KeyboardEvent');
          init = withDefaults(init || {}, defaults);
          var out = document.createEvent(eventType),
              ctrlKey = init.ctrlKey,
              shiftKey = init.shiftKey,
              altKey = init.altKey,
              metaKey = init.metaKey,
              altGraphKey = init.altGraphKey,
              modifiers = initType > 3 ? getModifier(init) : null,
              key = String(init.key),
              chr = String(init.char),
              location = init.location,
              keyCode = init.keyCode || (init.keyCode = key) && key.charCodeAt(0) || 0,
              charCode = init.charCode || (init.charCode = chr) && chr.charCodeAt(0) || 0,
              bubbles = init.bubbles,
              cancelable = init.cancelable,
              repeat = init.repeat,
              locale = init.locale,
              view = init.view || window,
              args;
          if (!init.which) init.which = init.keyCode;
          if ('initKeyEvent' in out) {
            out.initKeyEvent(type, bubbles, cancelable, view, ctrlKey, altKey, shiftKey, metaKey, keyCode, charCode);
          } else if (0 < initType && 'initKeyboardEvent' in out) {
            args = [type, bubbles, cancelable, view];
            switch (initType) {
              case 1:
                args.push(key, location, ctrlKey, shiftKey, altKey, metaKey, altGraphKey);
                break;
              case 2:
                args.push(ctrlKey, altKey, shiftKey, metaKey, keyCode, charCode);
                break;
              case 3:
                args.push(key, location, ctrlKey, altKey, shiftKey, metaKey, altGraphKey);
                break;
              case 4:
                args.push(key, location, modifiers, repeat, locale);
                break;
              default:
                args.push(char, key, location, modifiers, repeat, locale);
            }
            out.initKeyboardEvent.apply(out, args);
          } else {
            out.initEvent(type, bubbles, cancelable);
          }
          for (key in out) {
            if (defaults.hasOwnProperty(key) && out[key] !== init[key]) {
              withInitValues(key, out, init);
            }
          }
          return out;
        }
        KeyboardEvent.prototype = $KeyboardEvent.prototype;
        return KeyboardEvent;
      }(window.KeyboardEvent || function KeyboardEvent() {});
      defineProperty(window, 'KeyboardEvent', { value: o_O });
      // Android 4 gotcha
      if (KeyboardEvent !== o_O) KeyboardEvent = o_O;
    }

    // window.MouseEvent as constructor
    try {
      new MouseEvent('_', {});
    } catch (o_O) {
      /* jshint -W022 */
      o_O = function ($MouseEvent) {
        function MouseEvent(type, init) {
          enoughArguments(arguments.length, 'MouseEvent');
          var out = document.createEvent('MouseEvent');
          if (!init) init = {};
          out.initMouseEvent(type, !!init.bubbles, !!init.cancelable, init.view || window, init.detail || 1, init.screenX || 0, init.screenY || 0, init.clientX || 0, init.clientY || 0, !!init.ctrlKey, !!init.altKey, !!init.shiftKey, !!init.metaKey, init.button || 0, init.relatedTarget || null);
          return out;
        }
        MouseEvent.prototype = $MouseEvent.prototype;
        return MouseEvent;
      }(window.MouseEvent || function MouseEvent() {});
      defineProperty(window, 'MouseEvent', { value: o_O });
      // Android 4 gotcha
      if (MouseEvent !== o_O) MouseEvent = o_O;
    }
  })(window);(function (global) {
    'use strict';

    // a WeakMap fallback for DOM nodes only used as key

    var DOMMap = global.WeakMap || function () {

      var counter = 0,
          dispatched = false,
          drop = false,
          value;

      function dispatch(key, ce, shouldDrop) {
        drop = shouldDrop;
        dispatched = false;
        value = undefined;
        key.dispatchEvent(ce);
      }

      function Handler(value) {
        this.value = value;
      }

      Handler.prototype.handleEvent = function handleEvent(e) {
        dispatched = true;
        if (drop) {
          e.currentTarget.removeEventListener(e.type, this, false);
        } else {
          value = this.value;
        }
      };

      function DOMMap() {
        counter++; // make id clashing highly improbable
        this.__ce__ = new Event('@DOMMap:' + counter + Math.random());
      }

      DOMMap.prototype = {
        'constructor': DOMMap,
        'delete': function del(key) {
          return dispatch(key, this.__ce__, true), dispatched;
        },
        'get': function get(key) {
          dispatch(key, this.__ce__, false);
          var v = value;
          value = undefined;
          return v;
        },
        'has': function has(key) {
          return dispatch(key, this.__ce__, false), dispatched;
        },
        'set': function set(key, value) {
          dispatch(key, this.__ce__, true);
          key.addEventListener(this.__ce__.type, new Handler(value), false);
          return this;
        }
      };

      return DOMMap;
    }();

    function Dict() {}
    Dict.prototype = (Object.create || Object)(null);

    // https://dom.spec.whatwg.org/#interface-eventtarget

    function createEventListener(type, callback, options) {
      function eventListener(e) {
        if (eventListener.once) {
          e.currentTarget.removeEventListener(e.type, callback, eventListener);
          eventListener.removed = true;
        }
        if (eventListener.passive) {
          e.preventDefault = createEventListener.preventDefault;
        }
        if (typeof eventListener.callback === 'function') {
          /* jshint validthis: true */
          eventListener.callback.call(this, e);
        } else if (eventListener.callback) {
          eventListener.callback.handleEvent(e);
        }
        if (eventListener.passive) {
          delete e.preventDefault;
        }
      }
      eventListener.type = type;
      eventListener.callback = callback;
      eventListener.capture = !!options.capture;
      eventListener.passive = !!options.passive;
      eventListener.once = !!options.once;
      // currently pointless but specs say to use it, so ...
      eventListener.removed = false;
      return eventListener;
    }

    createEventListener.preventDefault = function preventDefault() {};

    var Event = global.CustomEvent,
        hOP = Object.prototype.hasOwnProperty,
        dE = global.dispatchEvent,
        aEL = global.addEventListener,
        rEL = global.removeEventListener,
        counter = 0,
        increment = function () {
      counter++;
    },
        indexOf = [].indexOf || function indexOf(value) {
      var length = this.length;
      while (length--) {
        if (this[length] === value) {
          break;
        }
      }
      return length;
    },
        getListenerKey = function (options) {
      return ''.concat(options.capture ? '1' : '0', options.passive ? '1' : '0', options.once ? '1' : '0');
    },
        augment,
        proto;

    try {
      aEL('_', increment, { once: true });
      dE(new Event('_'));
      dE(new Event('_'));
      rEL('_', increment, { once: true });
    } catch (o_O) {}

    if (counter !== 1) {
      (function () {
        var dm = new DOMMap();
        function createAEL(aEL) {
          return function addEventListener(type, handler, options) {
            if (options && typeof options !== 'boolean') {
              var info = dm.get(this),
                  key = getListenerKey(options),
                  i,
                  tmp,
                  wrap;
              if (!info) dm.set(this, info = new Dict());
              if (!(type in info)) info[type] = {
                handler: [],
                wrap: []
              };
              tmp = info[type];
              i = indexOf.call(tmp.handler, handler);
              if (i < 0) {
                i = tmp.handler.push(handler) - 1;
                tmp.wrap[i] = wrap = new Dict();
              } else {
                wrap = tmp.wrap[i];
              }
              if (!(key in wrap)) {
                wrap[key] = createEventListener(type, handler, options);
                aEL.call(this, type, wrap[key], wrap[key].capture);
              }
            } else {
              aEL.call(this, type, handler, options);
            }
          };
        }
        function createREL(rEL) {
          return function removeEventListener(type, handler, options) {
            if (options && typeof options !== 'boolean') {
              var info = dm.get(this),
                  key,
                  i,
                  tmp,
                  wrap;
              if (info && type in info) {
                tmp = info[type];
                i = indexOf.call(tmp.handler, handler);
                if (-1 < i) {
                  key = getListenerKey(options);
                  wrap = tmp.wrap[i];
                  if (key in wrap) {
                    rEL.call(this, type, wrap[key], wrap[key].capture);
                    delete wrap[key];
                    // return if there are other wraps
                    for (key in wrap) return;
                    // otherwise remove all the things
                    tmp.handler.splice(i, 1);
                    tmp.wrap.splice(i, 1);
                    // if there are no other handlers
                    if (tmp.handler.length === 0)
                      // drop the info[type] entirely
                      delete info[type];
                  }
                }
              }
            } else {
              rEL.call(this, type, handler, options);
            }
          };
        }

        augment = function (Constructor) {
          if (!Constructor) return;
          var proto = Constructor.prototype;
          proto.addEventListener = createAEL(proto.addEventListener);
          proto.removeEventListener = createREL(proto.removeEventListener);
        };

        if (global.EventTarget) {
          augment(EventTarget);
        } else {
          augment(global.Text);
          augment(global.Element || global.HTMLElement);
          augment(global.HTMLDocument);
          augment(global.Window || { prototype: global });
          augment(global.XMLHttpRequest);
        }
      })();
    }
  })(self);
});
System.registerDynamic("npm:dom4@1.8.5.js", ["npm:dom4@1.8.5/build/dom4.max.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:dom4@1.8.5/build/dom4.max.js");
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/alert/alert.js", ["npm:tslib@1.8.0.js", "npm:classnames@2.2.5.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/index.js", "npm:@blueprintjs/core@1.33.0/dist/common/errors.js", "npm:@blueprintjs/core@1.33.0/dist/components/button/buttons.js", "npm:@blueprintjs/core@1.33.0/dist/components/dialog/dialog.js", "npm:@blueprintjs/core@1.33.0/dist/components/icon/icon.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var classNames = $__require("npm:classnames@2.2.5.js");
  var React = $__require("npm:react@0.14.9.js");
  var common_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/index.js");
  var errors_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/errors.js");
  var buttons_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/button/buttons.js");
  var dialog_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/dialog/dialog.js");
  var icon_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/icon/icon.js");
  var Alert = function (_super) {
    tslib_1.__extends(Alert, _super);
    function Alert() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Alert.prototype.render = function () {
      var _a = this.props,
          children = _a.children,
          className = _a.className,
          iconName = _a.iconName,
          intent = _a.intent,
          isOpen = _a.isOpen,
          confirmButtonText = _a.confirmButtonText,
          onConfirm = _a.onConfirm,
          style = _a.style;
      return React.createElement(dialog_1.Dialog, {
        className: classNames(common_1.Classes.ALERT, className),
        isOpen: isOpen,
        style: style
      }, React.createElement("div", { className: common_1.Classes.ALERT_BODY }, React.createElement(icon_1.Icon, {
        iconName: iconName,
        iconSize: "inherit",
        intent: common_1.Intent.DANGER
      }), React.createElement("div", { className: common_1.Classes.ALERT_CONTENTS }, children)), React.createElement("div", { className: common_1.Classes.ALERT_FOOTER }, React.createElement(buttons_1.Button, {
        intent: intent,
        text: confirmButtonText,
        onClick: onConfirm
      }), this.maybeRenderSecondaryAction()));
    };
    Alert.prototype.validateProps = function (props) {
      if (props.cancelButtonText != null && props.onCancel == null || props.cancelButtonText == null && props.onCancel != null) {
        console.warn(errors_1.ALERT_WARN_CANCEL_PROPS);
      }
    };
    Alert.prototype.maybeRenderSecondaryAction = function () {
      if (this.props.cancelButtonText != null) {
        return React.createElement(buttons_1.Button, {
          text: this.props.cancelButtonText,
          onClick: this.props.onCancel
        });
      }
      return undefined;
    };
    return Alert;
  }(common_1.AbstractComponent);
  Alert.defaultProps = {
    confirmButtonText: "OK",
    isOpen: false,
    onConfirm: null
  };
  Alert.displayName = "Blueprint.Alert";
  exports.Alert = Alert;
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/breadcrumbs/breadcrumb.js", ["npm:classnames@2.2.5.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/classes.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var classNames = $__require("npm:classnames@2.2.5.js");
  var React = $__require("npm:react@0.14.9.js");
  var Classes = $__require("npm:@blueprintjs/core@1.33.0/dist/common/classes.js");
  exports.Breadcrumb = function (breadcrumbProps) {
    var classes = classNames(Classes.BREADCRUMB, (_a = {}, _a[Classes.DISABLED] = breadcrumbProps.disabled, _a), breadcrumbProps.className);
    return React.createElement("a", {
      className: classes,
      href: breadcrumbProps.href,
      onClick: breadcrumbProps.disabled ? null : breadcrumbProps.onClick,
      tabIndex: breadcrumbProps.disabled ? null : 0,
      target: breadcrumbProps.target
    }, breadcrumbProps.text);
    var _a;
  };
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/callout/callout.js", ["npm:tslib@1.8.0.js", "npm:classnames@2.2.5.js", "npm:pure-render-decorator@1.2.1.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/index.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var classNames = $__require("npm:classnames@2.2.5.js");
  var PureRender = $__require("npm:pure-render-decorator@1.2.1.js");
  var React = $__require("npm:react@0.14.9.js");
  var common_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/index.js");
  var Callout = function (_super) {
    tslib_1.__extends(Callout, _super);
    function Callout() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Callout.prototype.render = function () {
      var _a = this.props,
          className = _a.className,
          children = _a.children,
          iconName = _a.iconName,
          intent = _a.intent,
          title = _a.title,
          htmlProps = tslib_1.__rest(_a, ["className", "children", "iconName", "intent", "title"]);
      var classes = classNames(common_1.Classes.CALLOUT, common_1.Classes.intentClass(intent), common_1.Classes.iconClass(iconName), className);
      return React.createElement("div", tslib_1.__assign({ className: classes }, htmlProps), title && React.createElement("h5", null, title), children);
    };
    return Callout;
  }(React.Component);
  Callout = tslib_1.__decorate([PureRender], Callout);
  exports.Callout = Callout;
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/card/card.js", ["npm:tslib@1.8.0.js", "npm:classnames@2.2.5.js", "npm:pure-render-decorator@1.2.1.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/classes.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var classNames = $__require("npm:classnames@2.2.5.js");
  var PureRender = $__require("npm:pure-render-decorator@1.2.1.js");
  var React = $__require("npm:react@0.14.9.js");
  var Classes = $__require("npm:@blueprintjs/core@1.33.0/dist/common/classes.js");
  var Elevation;
  (function (Elevation) {
    Elevation[Elevation["ZERO"] = 0] = "ZERO";
    Elevation[Elevation["ONE"] = 1] = "ONE";
    Elevation[Elevation["TWO"] = 2] = "TWO";
    Elevation[Elevation["THREE"] = 3] = "THREE";
    Elevation[Elevation["FOUR"] = 4] = "FOUR";
  })(Elevation = exports.Elevation || (exports.Elevation = {}));
  var ELEVATION_CLASSES = [Classes.ELEVATION_0, Classes.ELEVATION_1, Classes.ELEVATION_2, Classes.ELEVATION_3, Classes.ELEVATION_4];
  var Card = function (_super) {
    tslib_1.__extends(Card, _super);
    function Card() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Card.prototype.render = function () {
      return React.createElement("div", {
        className: this.getClassName(),
        onClick: this.props.onClick
      }, this.props.children);
    };
    Card.prototype.getClassName = function () {
      var _a = this.props,
          elevation = _a.elevation,
          interactive = _a.interactive,
          className = _a.className;
      return classNames(Classes.CARD, (_b = {}, _b[Classes.INTERACTIVE] = interactive, _b), ELEVATION_CLASSES[elevation], className);
      var _b;
    };
    return Card;
  }(React.Component);
  Card.displayName = "Blueprint.Card";
  Card.defaultProps = {
    elevation: Elevation.ZERO,
    interactive: false
  };
  Card = tslib_1.__decorate([PureRender], Card);
  exports.Card = Card;
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/collapsible-list/collapsibleList.js", ["npm:tslib@1.8.0.js", "npm:classnames@2.2.5.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/classes.js", "npm:@blueprintjs/core@1.33.0/dist/common/errors.js", "npm:@blueprintjs/core@1.33.0/dist/common/position.js", "npm:@blueprintjs/core@1.33.0/dist/components/menu/menu.js", "npm:@blueprintjs/core@1.33.0/dist/components/menu/menuItem.js", "npm:@blueprintjs/core@1.33.0/dist/components/popover/popover.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var classNames = $__require("npm:classnames@2.2.5.js");
  var React = $__require("npm:react@0.14.9.js");
  var Classes = $__require("npm:@blueprintjs/core@1.33.0/dist/common/classes.js");
  var Errors = $__require("npm:@blueprintjs/core@1.33.0/dist/common/errors.js");
  var position_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/position.js");
  var menu_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/menu/menu.js");
  var menuItem_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/menu/menuItem.js");
  var popover_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/popover/popover.js");
  var CollapseFrom;
  (function (CollapseFrom) {
    CollapseFrom[CollapseFrom["START"] = 0] = "START";
    CollapseFrom[CollapseFrom["END"] = 1] = "END";
  })(CollapseFrom = exports.CollapseFrom || (exports.CollapseFrom = {}));
  var CollapsibleList = function (_super) {
    tslib_1.__extends(CollapsibleList, _super);
    function CollapsibleList() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    CollapsibleList.prototype.render = function () {
      var _this = this;
      var collapseFrom = this.props.collapseFrom;
      var childrenLength = React.Children.count(this.props.children);
      var _a = this.partitionChildren(),
          visibleChildren = _a[0],
          collapsedChildren = _a[1];
      var visibleItems = visibleChildren.map(function (child, index) {
        var absoluteIndex = collapseFrom === CollapseFrom.START ? childrenLength - 1 - index : index;
        return React.createElement("li", {
          className: _this.props.visibleItemClassName,
          key: absoluteIndex
        }, _this.props.renderVisibleItem(child.props, absoluteIndex));
      });
      if (collapseFrom === CollapseFrom.START) {
        visibleItems.reverse();
      }
      var collapsedPopover;
      if (collapsedChildren.length > 0) {
        var position = collapseFrom === CollapseFrom.END ? position_1.Position.BOTTOM_RIGHT : position_1.Position.BOTTOM_LEFT;
        collapsedPopover = React.createElement("li", { className: this.props.visibleItemClassName }, React.createElement(popover_1.Popover, tslib_1.__assign({
          content: React.createElement(menu_1.Menu, null, collapsedChildren),
          position: position
        }, this.props.dropdownProps), this.props.dropdownTarget));
      }
      return React.createElement("ul", { className: classNames(Classes.COLLAPSIBLE_LIST, this.props.className) }, collapseFrom === CollapseFrom.START ? collapsedPopover : null, visibleItems, collapseFrom === CollapseFrom.END ? collapsedPopover : null);
    };
    CollapsibleList.prototype.partitionChildren = function () {
      if (this.props.children == null) {
        return [[], []];
      }
      var childrenArray = React.Children.map(this.props.children, function (child, index) {
        if (child.type !== menuItem_1.MenuItem) {
          throw new Error(Errors.COLLAPSIBLE_LIST_INVALID_CHILD);
        }
        return React.cloneElement(child, { key: "visible-" + index });
      });
      if (this.props.collapseFrom === CollapseFrom.START) {
        childrenArray.reverse();
      }
      var visibleItemCount = this.props.visibleItemCount;
      return [childrenArray.slice(0, visibleItemCount), childrenArray.slice(visibleItemCount)];
    };
    return CollapsibleList;
  }(React.Component);
  CollapsibleList.displayName = "Blueprint.CollapsibleList";
  CollapsibleList.defaultProps = {
    collapseFrom: CollapseFrom.START,
    dropdownTarget: null,
    renderVisibleItem: null,
    visibleItemCount: 3
  };
  exports.CollapsibleList = CollapsibleList;
  exports.CollapsibleListFactory = React.createFactory(CollapsibleList);
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/context-menu/contextMenu.js", ["npm:tslib@1.8.0.js", "npm:classnames@2.2.5.js", "npm:react@0.14.9.js", "npm:react-dom@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/abstractComponent.js", "npm:@blueprintjs/core@1.33.0/dist/common/classes.js", "npm:@blueprintjs/core@1.33.0/dist/common/position.js", "npm:@blueprintjs/core@1.33.0/dist/common/utils.js", "npm:@blueprintjs/core@1.33.0/dist/components/popover/popover.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var classNames = $__require("npm:classnames@2.2.5.js");
  var React = $__require("npm:react@0.14.9.js");
  var ReactDOM = $__require("npm:react-dom@0.14.9.js");
  var abstractComponent_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/abstractComponent.js");
  var Classes = $__require("npm:@blueprintjs/core@1.33.0/dist/common/classes.js");
  var position_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/position.js");
  var utils_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/utils.js");
  var popover_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/popover/popover.js");
  var TETHER_OPTIONS = { constraints: [{
      attachment: "together",
      pin: true,
      to: "window"
    }] };
  var TRANSITION_DURATION = 100;
  var ContextMenu = function (_super) {
    tslib_1.__extends(ContextMenu, _super);
    function ContextMenu() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = { isOpen: false };
      _this.cancelContextMenu = function (e) {
        return e.preventDefault();
      };
      _this.handleBackdropContextMenu = function (e) {
        e.persist();
        e.preventDefault();
        _this.setTimeout(function () {
          var newTarget = document.elementFromPoint(e.clientX, e.clientY);
          newTarget.dispatchEvent(new MouseEvent("contextmenu", e));
        }, TRANSITION_DURATION);
      };
      _this.handlePopoverInteraction = function (nextOpenState) {
        if (!nextOpenState) {
          requestAnimationFrame(function () {
            return _this.hide();
          });
        }
      };
      return _this;
    }
    ContextMenu.prototype.render = function () {
      var content = React.createElement("div", { onContextMenu: this.cancelContextMenu }, this.state.menu);
      var popoverClassName = classNames(Classes.MINIMAL, (_a = {}, _a[Classes.DARK] = this.state.isDarkTheme, _a));
      return React.createElement(popover_1.Popover, {
        backdropProps: { onContextMenu: this.handleBackdropContextMenu },
        content: content,
        enforceFocus: false,
        isModal: true,
        isOpen: this.state.isOpen,
        onInteraction: this.handlePopoverInteraction,
        position: position_1.Position.RIGHT_TOP,
        popoverClassName: popoverClassName,
        useSmartArrowPositioning: false,
        tetherOptions: TETHER_OPTIONS,
        transitionDuration: TRANSITION_DURATION
      }, React.createElement("div", {
        className: Classes.CONTEXT_MENU_POPOVER_TARGET,
        style: this.state.offset
      }));
      var _a;
    };
    ContextMenu.prototype.show = function (menu, offset, onClose, isDarkTheme) {
      this.setState({
        isOpen: true,
        menu: menu,
        offset: offset,
        onClose: onClose,
        isDarkTheme: isDarkTheme
      });
    };
    ContextMenu.prototype.hide = function () {
      utils_1.safeInvoke(this.state.onClose);
      this.setState({
        isOpen: false,
        onClose: undefined
      });
    };
    return ContextMenu;
  }(abstractComponent_1.AbstractComponent);
  var contextMenu;
  function show(menu, offset, onClose, isDarkTheme) {
    if (contextMenu == null) {
      var contextMenuElement = document.createElement("div");
      contextMenuElement.classList.add(Classes.CONTEXT_MENU);
      document.body.appendChild(contextMenuElement);
      contextMenu = ReactDOM.render(React.createElement(ContextMenu, null), contextMenuElement);
    }
    contextMenu.show(menu, offset, onClose, isDarkTheme);
  }
  exports.show = show;
  function hide() {
    if (contextMenu != null) {
      contextMenu.hide();
    }
  }
  exports.hide = hide;
  function isOpen() {
    return contextMenu != null && contextMenu.state.isOpen;
  }
  exports.isOpen = isOpen;
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/context-menu/contextMenuTarget.js", ["npm:react@0.14.9.js", "npm:react-dom@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/errors.js", "npm:@blueprintjs/core@1.33.0/dist/common/utils.js", "npm:@blueprintjs/core@1.33.0/dist/common/utils/isDarkTheme.js", "npm:@blueprintjs/core@1.33.0/dist/components/context-menu/contextMenu.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var React = $__require("npm:react@0.14.9.js");
  var ReactDOM = $__require("npm:react-dom@0.14.9.js");
  var errors_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/errors.js");
  var utils_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/utils.js");
  var isDarkTheme_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/utils/isDarkTheme.js");
  var ContextMenu = $__require("npm:@blueprintjs/core@1.33.0/dist/components/context-menu/contextMenu.js");
  function ContextMenuTarget(constructor) {
    var _a = constructor.prototype,
        render = _a.render,
        renderContextMenu = _a.renderContextMenu,
        onContextMenuClose = _a.onContextMenuClose;
    if (!utils_1.isFunction(renderContextMenu)) {
      console.warn(errors_1.CONTEXTMENU_WARN_DECORATOR_NO_METHOD);
    }
    constructor.prototype.render = function () {
      var _this = this;
      var element = render.call(this);
      if (element == null) {
        return element;
      }
      var oldOnContextMenu = element.props.onContextMenu;
      var onContextMenu = function (e) {
        if (e.defaultPrevented) {
          return;
        }
        if (utils_1.isFunction(_this.renderContextMenu)) {
          var menu = _this.renderContextMenu(e);
          if (menu != null) {
            var htmlElement = ReactDOM.findDOMNode(_this);
            var darkTheme = htmlElement != null && isDarkTheme_1.isDarkTheme(htmlElement);
            e.preventDefault();
            ContextMenu.show(menu, {
              left: e.clientX,
              top: e.clientY
            }, onContextMenuClose, darkTheme);
          }
        }
        utils_1.safeInvoke(oldOnContextMenu, e);
      };
      return React.cloneElement(element, { onContextMenu: onContextMenu });
    };
  }
  exports.ContextMenuTarget = ContextMenuTarget;
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/dialog/dialog.js", ["npm:tslib@1.8.0.js", "npm:classnames@2.2.5.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/abstractComponent.js", "npm:@blueprintjs/core@1.33.0/dist/common/classes.js", "npm:@blueprintjs/core@1.33.0/dist/common/errors.js", "npm:@blueprintjs/core@1.33.0/dist/common/utils.js", "npm:@blueprintjs/core@1.33.0/dist/components/icon/icon.js", "npm:@blueprintjs/core@1.33.0/dist/components/overlay/overlay.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var classNames = $__require("npm:classnames@2.2.5.js");
  var React = $__require("npm:react@0.14.9.js");
  var abstractComponent_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/abstractComponent.js");
  var Classes = $__require("npm:@blueprintjs/core@1.33.0/dist/common/classes.js");
  var Errors = $__require("npm:@blueprintjs/core@1.33.0/dist/common/errors.js");
  var utils_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/utils.js");
  var icon_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/icon/icon.js");
  var overlay_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/overlay/overlay.js");
  var Dialog = function (_super) {
    tslib_1.__extends(Dialog, _super);
    function Dialog() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.handleContainerMouseDown = function (evt) {
        var isClickOutsideDialog = evt.target.closest("." + Classes.DIALOG) == null;
        if (isClickOutsideDialog && _this.props.canOutsideClickClose) {
          utils_1.safeInvoke(_this.props.onClose, evt);
        }
      };
      return _this;
    }
    Dialog.prototype.render = function () {
      return React.createElement(overlay_1.Overlay, tslib_1.__assign({}, this.props, {
        className: Classes.OVERLAY_SCROLL_CONTAINER,
        hasBackdrop: true
      }), React.createElement("div", {
        className: Classes.DIALOG_CONTAINER,
        onMouseDown: this.handleContainerMouseDown
      }, React.createElement("div", {
        className: classNames(Classes.DIALOG, this.props.className),
        style: this.props.style
      }, this.maybeRenderHeader(), this.props.children)));
    };
    Dialog.prototype.validateProps = function (props) {
      if (props.title == null) {
        if (props.iconName != null) {
          console.warn(Errors.DIALOG_WARN_NO_HEADER_ICON);
        }
        if (props.isCloseButtonShown != null) {
          console.warn(Errors.DIALOG_WARN_NO_HEADER_CLOSE_BUTTON);
        }
      }
    };
    Dialog.prototype.maybeRenderCloseButton = function () {
      if (this.props.isCloseButtonShown !== false) {
        var classes = classNames(Classes.DIALOG_CLOSE_BUTTON, Classes.iconClass("small-cross"));
        return React.createElement("button", {
          "aria-label": "Close",
          className: classes,
          onClick: this.props.onClose
        });
      } else {
        return undefined;
      }
    };
    Dialog.prototype.maybeRenderHeader = function () {
      var _a = this.props,
          iconName = _a.iconName,
          title = _a.title;
      if (title == null) {
        return undefined;
      }
      return React.createElement("div", { className: Classes.DIALOG_HEADER }, React.createElement(icon_1.Icon, {
        iconName: iconName,
        iconSize: 20
      }), React.createElement("h5", null, title), this.maybeRenderCloseButton());
    };
    return Dialog;
  }(abstractComponent_1.AbstractComponent);
  Dialog.defaultProps = {
    canOutsideClickClose: true,
    isOpen: false
  };
  Dialog.displayName = "Blueprint.Dialog";
  exports.Dialog = Dialog;
  exports.DialogFactory = React.createFactory(Dialog);
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/compatibility/browser.js", [], true, function ($__require, exports, module) {
    /*
     * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
     *
     * Licensed under the terms of the LICENSE file distributed with this project.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    var userAgent = typeof navigator !== "undefined" ? navigator.userAgent : "";
    var browser = {
        isEdge: !!userAgent.match(/Edge/),
        isInternetExplorer: !!userAgent.match(/Trident/) || !!userAgent.match(/rv:11/),
        isWebkit: !!userAgent.match(/AppleWebKit/)
    };
    exports.Browser = {
        isEdge: function () {
            return browser.isEdge;
        },
        isInternetExplorer: function () {
            return browser.isInternetExplorer;
        },
        isWebkit: function () {
            return browser.isWebkit;
        }
    };

    
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/compatibility/index.js", ["npm:@blueprintjs/core@1.33.0/dist/compatibility/browser.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
  }
  Object.defineProperty(exports, "__esModule", { value: true });
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/compatibility/browser.js"));
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/editable-text/editableText.js", ["npm:tslib@1.8.0.js", "npm:classnames@2.2.5.js", "npm:pure-render-decorator@1.2.1.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/abstractComponent.js", "npm:@blueprintjs/core@1.33.0/dist/common/classes.js", "npm:@blueprintjs/core@1.33.0/dist/common/keys.js", "npm:@blueprintjs/core@1.33.0/dist/common/utils.js", "npm:@blueprintjs/core@1.33.0/dist/compatibility/index.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var classNames = $__require("npm:classnames@2.2.5.js");
  var PureRender = $__require("npm:pure-render-decorator@1.2.1.js");
  var React = $__require("npm:react@0.14.9.js");
  var abstractComponent_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/abstractComponent.js");
  var Classes = $__require("npm:@blueprintjs/core@1.33.0/dist/common/classes.js");
  var Keys = $__require("npm:@blueprintjs/core@1.33.0/dist/common/keys.js");
  var utils_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/utils.js");
  var compatibility_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/compatibility/index.js");
  var BUFFER_WIDTH_EDGE = 5;
  var BUFFER_WIDTH_IE = 30;
  var EditableText = function (_super) {
    tslib_1.__extends(EditableText, _super);
    function EditableText(props, context) {
      var _this = _super.call(this, props, context) || this;
      _this.refHandlers = {
        content: function (spanElement) {
          _this.valueElement = spanElement;
        },
        input: function (input) {
          if (input != null) {
            input.focus();
            var length_1 = input.value.length;
            input.setSelectionRange(_this.props.selectAllOnFocus ? 0 : length_1, length_1);
            if (!_this.props.selectAllOnFocus) {
              input.scrollLeft = input.scrollWidth;
            }
          }
        }
      };
      _this.cancelEditing = function () {
        var _a = _this.state,
            lastValue = _a.lastValue,
            value = _a.value;
        _this.setState({
          isEditing: false,
          value: lastValue
        });
        if (value !== lastValue) {
          utils_1.safeInvoke(_this.props.onChange, lastValue);
        }
        utils_1.safeInvoke(_this.props.onCancel, lastValue);
      };
      _this.toggleEditing = function () {
        if (_this.state.isEditing) {
          var value = _this.state.value;
          _this.setState({
            isEditing: false,
            lastValue: value
          });
          utils_1.safeInvoke(_this.props.onConfirm, value);
        } else if (!_this.props.disabled) {
          _this.setState({ isEditing: true });
        }
      };
      _this.handleFocus = function () {
        if (!_this.props.disabled) {
          _this.setState({ isEditing: true });
        }
      };
      _this.handleTextChange = function (event) {
        var value = event.target.value;
        if (_this.props.value == null) {
          _this.setState({ value: value });
        }
        utils_1.safeInvoke(_this.props.onChange, value);
      };
      _this.handleKeyEvent = function (event) {
        var altKey = event.altKey,
            ctrlKey = event.ctrlKey,
            metaKey = event.metaKey,
            shiftKey = event.shiftKey,
            which = event.which;
        if (which === Keys.ESCAPE) {
          _this.cancelEditing();
          return;
        }
        var hasModifierKey = altKey || ctrlKey || metaKey || shiftKey;
        if (which === Keys.ENTER) {
          if (altKey || shiftKey) {
            event.preventDefault();
          }
          if (_this.props.confirmOnEnterKey && _this.props.multiline) {
            if (event.target != null && hasModifierKey) {
              insertAtCaret(event.target, "\n");
              _this.handleTextChange(event);
            } else {
              _this.toggleEditing();
            }
          } else if (!_this.props.multiline || hasModifierKey) {
            _this.toggleEditing();
          }
        }
      };
      var value = props.value == null ? props.defaultValue : props.value;
      _this.state = {
        inputHeight: 0,
        inputWidth: 0,
        isEditing: props.isEditing === true && props.disabled === false,
        lastValue: value,
        value: value
      };
      return _this;
    }
    EditableText.prototype.render = function () {
      var _a = this.props,
          disabled = _a.disabled,
          multiline = _a.multiline;
      var value = this.props.value == null ? this.state.value : this.props.value;
      var hasValue = value != null && value !== "";
      var classes = classNames(Classes.EDITABLE_TEXT, Classes.intentClass(this.props.intent), (_b = {}, _b[Classes.DISABLED] = disabled, _b["pt-editable-editing"] = this.state.isEditing, _b["pt-editable-placeholder"] = !hasValue, _b["pt-multiline"] = multiline, _b), this.props.className);
      var contentStyle;
      if (multiline) {
        contentStyle = { height: !this.state.isEditing ? this.state.inputHeight : null };
      } else {
        contentStyle = {
          height: this.state.inputHeight,
          lineHeight: this.state.inputHeight != null ? this.state.inputHeight + "px" : null,
          minWidth: this.props.minWidth
        };
      }
      var tabIndex = this.state.isEditing || disabled ? null : 0;
      return React.createElement("div", {
        className: classes,
        onFocus: this.handleFocus,
        tabIndex: tabIndex
      }, this.maybeRenderInput(value), React.createElement("span", {
        className: "pt-editable-content",
        ref: this.refHandlers.content,
        style: contentStyle
      }, hasValue ? value : this.props.placeholder));
      var _b;
    };
    EditableText.prototype.componentDidMount = function () {
      this.updateInputDimensions();
    };
    EditableText.prototype.componentDidUpdate = function (_, prevState) {
      if (this.state.isEditing && !prevState.isEditing) {
        utils_1.safeInvoke(this.props.onEdit);
      }
      this.updateInputDimensions();
    };
    EditableText.prototype.componentWillReceiveProps = function (nextProps) {
      var state = {};
      if (nextProps.value != null) {
        state.value = nextProps.value;
      }
      if (nextProps.isEditing != null) {
        state.isEditing = nextProps.isEditing;
      }
      if (nextProps.disabled || nextProps.disabled == null && this.props.disabled) {
        state.isEditing = false;
      }
      this.setState(state);
    };
    EditableText.prototype.maybeRenderInput = function (value) {
      var _a = this.props,
          maxLength = _a.maxLength,
          multiline = _a.multiline;
      if (!this.state.isEditing) {
        return undefined;
      }
      var props = {
        className: "pt-editable-input",
        maxLength: maxLength,
        onBlur: this.toggleEditing,
        onChange: this.handleTextChange,
        onKeyDown: this.handleKeyEvent,
        ref: this.refHandlers.input,
        style: {
          height: this.state.inputHeight,
          lineHeight: !multiline && this.state.inputHeight != null ? this.state.inputHeight + "px" : null,
          width: multiline ? "100%" : this.state.inputWidth
        },
        value: value
      };
      return multiline ? React.createElement("textarea", tslib_1.__assign({}, props)) : React.createElement("input", tslib_1.__assign({ type: "text" }, props));
    };
    EditableText.prototype.updateInputDimensions = function () {
      if (this.valueElement != null) {
        var _a = this.props,
            maxLines = _a.maxLines,
            minLines = _a.minLines,
            minWidth = _a.minWidth,
            multiline = _a.multiline;
        var _b = this.valueElement,
            parentElement_1 = _b.parentElement,
            textContent = _b.textContent;
        var _c = this.valueElement,
            scrollHeight_1 = _c.scrollHeight,
            scrollWidth = _c.scrollWidth;
        var lineHeight = getLineHeight(this.valueElement);
        if (multiline && this.state.isEditing && /\n$/.test(textContent)) {
          scrollHeight_1 += lineHeight;
        }
        if (lineHeight > 0) {
          scrollHeight_1 = utils_1.clamp(scrollHeight_1, minLines * lineHeight, maxLines * lineHeight);
        }
        scrollHeight_1 = Math.max(scrollHeight_1, getFontSize(this.valueElement) + 1, getLineHeight(parentElement_1));
        if (compatibility_1.Browser.isEdge()) {
          scrollWidth += BUFFER_WIDTH_EDGE;
        } else if (compatibility_1.Browser.isInternetExplorer()) {
          scrollWidth += BUFFER_WIDTH_IE;
        }
        this.setState({
          inputHeight: scrollHeight_1,
          inputWidth: Math.max(scrollWidth, minWidth)
        });
        if (multiline && this.state.isEditing) {
          this.setTimeout(function () {
            return parentElement_1.style.height = scrollHeight_1 + "px";
          });
        }
      }
    };
    return EditableText;
  }(abstractComponent_1.AbstractComponent);
  EditableText.defaultProps = {
    confirmOnEnterKey: false,
    defaultValue: "",
    disabled: false,
    maxLines: Infinity,
    minLines: 1,
    minWidth: 80,
    multiline: false,
    placeholder: "Click to Edit"
  };
  EditableText = tslib_1.__decorate([PureRender], EditableText);
  exports.EditableText = EditableText;
  function getFontSize(element) {
    var fontSize = getComputedStyle(element).fontSize;
    return fontSize === "" ? 0 : parseInt(fontSize.slice(0, -2), 10);
  }
  function getLineHeight(element) {
    var lineHeight = parseInt(getComputedStyle(element).lineHeight.slice(0, -2), 10);
    if (isNaN(lineHeight)) {
      var line = document.createElement("span");
      line.innerHTML = "<br>";
      element.appendChild(line);
      var singleLineHeight = element.offsetHeight;
      line.innerHTML = "<br><br>";
      var doubleLineHeight = element.offsetHeight;
      element.removeChild(line);
      lineHeight = doubleLineHeight - singleLineHeight;
    }
    return lineHeight;
  }
  function insertAtCaret(el, text) {
    var selectionEnd = el.selectionEnd,
        selectionStart = el.selectionStart,
        value = el.value;
    if (selectionStart >= 0) {
      var before_1 = value.substring(0, selectionStart);
      var after_1 = value.substring(selectionEnd, value.length);
      var len = text.length;
      el.value = "" + before_1 + text + after_1;
      el.selectionStart = selectionStart + len;
      el.selectionEnd = selectionStart + len;
    }
  }
  exports.EditableTextFactory = React.createFactory(EditableText);
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/forms/formGroup.js", ["npm:tslib@1.8.0.js", "npm:classnames@2.2.5.js", "npm:pure-render-decorator@1.2.1.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/classes.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var classNames = $__require("npm:classnames@2.2.5.js");
  var PureRender = $__require("npm:pure-render-decorator@1.2.1.js");
  var React = $__require("npm:react@0.14.9.js");
  var Classes = $__require("npm:@blueprintjs/core@1.33.0/dist/common/classes.js");
  var FormGroup = FormGroup_1 = function (_super) {
    tslib_1.__extends(FormGroup, _super);
    function FormGroup() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    FormGroup.prototype.render = function () {
      var _a = this.props,
          children = _a.children,
          label = _a.label,
          labelFor = _a.labelFor;
      return React.createElement("div", { className: this.getClassName() }, React.createElement("label", {
        className: Classes.LABEL,
        htmlFor: labelFor
      }, label, this.maybeRenderRequiredLabel()), React.createElement("div", { className: Classes.FORM_CONTENT }, children, this.maybeRenderHelperText()));
    };
    FormGroup.prototype.getClassName = function () {
      var _a = this.props,
          className = _a.className,
          disabled = _a.disabled,
          inline = _a.inline,
          intent = _a.intent;
      return classNames(Classes.FORM_GROUP, Classes.intentClass(intent), (_b = {}, _b[Classes.DISABLED] = disabled, _b[Classes.INLINE] = inline, _b), className);
      var _b;
    };
    FormGroup.prototype.maybeRenderRequiredLabel = function () {
      var requiredLabel = this.props.requiredLabel;
      return requiredLabel === true ? FormGroup_1.DEFAULT_REQUIRED_CONTENT : requiredLabel;
    };
    FormGroup.prototype.maybeRenderHelperText = function () {
      var helperText = this.props.helperText;
      if (!helperText) {
        return null;
      }
      return React.createElement("div", { className: Classes.FORM_HELPER_TEXT }, helperText);
    };
    return FormGroup;
  }(React.Component);
  FormGroup.DEFAULT_REQUIRED_CONTENT = React.createElement("span", { className: Classes.TEXT_MUTED }, "(required)");
  FormGroup = FormGroup_1 = tslib_1.__decorate([PureRender], FormGroup);
  exports.FormGroup = FormGroup;
  var FormGroup_1;
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/forms/inputGroup.js", ["npm:tslib@1.8.0.js", "npm:classnames@2.2.5.js", "npm:pure-render-decorator@1.2.1.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/classes.js", "npm:@blueprintjs/core@1.33.0/dist/common/props.js", "npm:@blueprintjs/core@1.33.0/dist/components/icon/icon.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var classNames = $__require("npm:classnames@2.2.5.js");
  var PureRender = $__require("npm:pure-render-decorator@1.2.1.js");
  var React = $__require("npm:react@0.14.9.js");
  var Classes = $__require("npm:@blueprintjs/core@1.33.0/dist/common/classes.js");
  var props_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/props.js");
  var icon_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/icon/icon.js");
  var InputGroup = function (_super) {
    tslib_1.__extends(InputGroup, _super);
    function InputGroup() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = { rightElementWidth: 30 };
      _this.refHandlers = { rightElement: function (ref) {
          return _this.rightElement = ref;
        } };
      return _this;
    }
    InputGroup.prototype.render = function () {
      var _a = this.props,
          className = _a.className,
          intent = _a.intent,
          leftIconName = _a.leftIconName;
      var classes = classNames(Classes.INPUT_GROUP, Classes.intentClass(intent), (_b = {}, _b[Classes.DISABLED] = this.props.disabled, _b), className);
      var style = { paddingRight: this.state.rightElementWidth };
      return React.createElement("div", { className: classes }, React.createElement(icon_1.Icon, {
        iconName: leftIconName,
        iconSize: "inherit"
      }), React.createElement("input", tslib_1.__assign({ type: "text" }, props_1.removeNonHTMLProps(this.props), {
        className: Classes.INPUT,
        ref: this.props.inputRef,
        style: style
      })), this.maybeRenderRightElement());
      var _b;
    };
    InputGroup.prototype.componentDidMount = function () {
      this.updateInputWidth();
    };
    InputGroup.prototype.componentDidUpdate = function () {
      this.updateInputWidth();
    };
    InputGroup.prototype.maybeRenderRightElement = function () {
      var rightElement = this.props.rightElement;
      if (rightElement == null) {
        return undefined;
      }
      return React.createElement("span", {
        className: "pt-input-action",
        ref: this.refHandlers.rightElement
      }, rightElement);
    };
    InputGroup.prototype.updateInputWidth = function () {
      if (this.rightElement != null) {
        var clientWidth = this.rightElement.clientWidth;
        if (Math.abs(clientWidth - this.state.rightElementWidth) > 2) {
          this.setState({ rightElementWidth: clientWidth });
        }
      } else {
        this.setState({ rightElementWidth: 0 });
      }
    };
    return InputGroup;
  }(React.Component);
  InputGroup.displayName = "Blueprint.InputGroup";
  InputGroup = tslib_1.__decorate([PureRender], InputGroup);
  exports.InputGroup = InputGroup;
  exports.InputGroupFactory = React.createFactory(InputGroup);
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/forms/numericInput.js", ["npm:tslib@1.8.0.js", "npm:classnames@2.2.5.js", "npm:pure-render-decorator@1.2.1.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/index.js", "npm:@blueprintjs/core@1.33.0/dist/common/errors.js", "npm:@blueprintjs/core@1.33.0/dist/components/button/buttons.js", "npm:@blueprintjs/core@1.33.0/dist/components/forms/inputGroup.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var classNames = $__require("npm:classnames@2.2.5.js");
  var PureRender = $__require("npm:pure-render-decorator@1.2.1.js");
  var React = $__require("npm:react@0.14.9.js");
  var common_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/index.js");
  var Errors = $__require("npm:@blueprintjs/core@1.33.0/dist/common/errors.js");
  var buttons_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/button/buttons.js");
  var inputGroup_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/forms/inputGroup.js");
  var IncrementDirection;
  (function (IncrementDirection) {
    IncrementDirection[IncrementDirection["DOWN"] = -1] = "DOWN";
    IncrementDirection[IncrementDirection["UP"] = 1] = "UP";
  })(IncrementDirection || (IncrementDirection = {}));
  var NumericInput = NumericInput_1 = function (_super) {
    tslib_1.__extends(NumericInput, _super);
    function NumericInput(props, context) {
      var _this = _super.call(this, props, context) || this;
      _this.didPasteEventJustOccur = false;
      _this.shouldSelectAfterUpdate = false;
      _this.inputRef = function (input) {
        _this.inputElement = input;
      };
      _this.handleDecrementButtonClick = function (e) {
        var delta = _this.getIncrementDelta(IncrementDirection.DOWN, e.shiftKey, e.altKey);
        var nextValue = _this.incrementValue(delta);
        _this.invokeValueCallback(nextValue, _this.props.onButtonClick);
      };
      _this.handleIncrementButtonClick = function (e) {
        var delta = _this.getIncrementDelta(IncrementDirection.UP, e.shiftKey, e.altKey);
        var nextValue = _this.incrementValue(delta);
        _this.invokeValueCallback(nextValue, _this.props.onButtonClick);
      };
      _this.handleButtonFocus = function () {
        _this.setState({ isButtonGroupFocused: true });
      };
      _this.handleButtonBlur = function () {
        _this.setState({ isButtonGroupFocused: false });
      };
      _this.handleButtonKeyUp = function (e, onClick) {
        if (e.keyCode === common_1.Keys.SPACE || e.keyCode === common_1.Keys.ENTER) {
          e.preventDefault();
          var fakeClickEvent = {
            altKey: e.altKey,
            currentTarget: e.currentTarget,
            shiftKey: e.shiftKey,
            target: e.target
          };
          onClick(fakeClickEvent);
        }
      };
      _this.handleInputFocus = function (e) {
        _this.shouldSelectAfterUpdate = _this.props.selectAllOnFocus;
        _this.setState({ isInputGroupFocused: true });
        common_1.Utils.safeInvoke(_this.props.onFocus, e);
      };
      _this.handleInputBlur = function (e) {
        _this.shouldSelectAfterUpdate = false;
        var baseStateChange = { isInputGroupFocused: false };
        if (_this.props.clampValueOnBlur) {
          var value = e.target.value;
          var sanitizedValue = _this.getSanitizedValue(value);
          _this.setState(tslib_1.__assign({}, baseStateChange, { value: sanitizedValue }));
          if (value !== sanitizedValue) {
            _this.invokeValueCallback(sanitizedValue, _this.props.onValueChange);
          }
        } else {
          _this.setState(baseStateChange);
        }
        common_1.Utils.safeInvoke(_this.props.onBlur, e);
      };
      _this.handleInputKeyDown = function (e) {
        if (_this.props.disabled || _this.props.readOnly) {
          return;
        }
        var keyCode = e.keyCode;
        var direction;
        if (keyCode === common_1.Keys.ARROW_UP) {
          direction = IncrementDirection.UP;
        } else if (keyCode === common_1.Keys.ARROW_DOWN) {
          direction = IncrementDirection.DOWN;
        }
        if (direction != null) {
          e.preventDefault();
          var delta = _this.getIncrementDelta(direction, e.shiftKey, e.altKey);
          _this.incrementValue(delta);
        }
        common_1.Utils.safeInvoke(_this.props.onKeyDown, e);
      };
      _this.handleInputKeyPress = function (e) {
        if (_this.props.allowNumericCharactersOnly && _this.isKeyboardEventDisabledForBasicNumericEntry(e)) {
          e.preventDefault();
        }
        common_1.Utils.safeInvoke(_this.props.onKeyPress, e);
      };
      _this.handleInputPaste = function (e) {
        _this.didPasteEventJustOccur = true;
        common_1.Utils.safeInvoke(_this.props.onPaste, e);
      };
      _this.handleInputChange = function (e) {
        var value = e.target.value;
        var nextValue;
        if (_this.props.allowNumericCharactersOnly && _this.didPasteEventJustOccur) {
          _this.didPasteEventJustOccur = false;
          var valueChars = value.split("");
          var sanitizedValueChars = valueChars.filter(_this.isFloatingPointNumericCharacter);
          var sanitizedValue = sanitizedValueChars.join("");
          nextValue = sanitizedValue;
        } else {
          nextValue = value;
        }
        _this.shouldSelectAfterUpdate = false;
        _this.setState({ value: nextValue });
        _this.invokeValueCallback(nextValue, _this.props.onValueChange);
      };
      _this.state = {
        stepMaxPrecision: _this.getStepMaxPrecision(props),
        value: _this.getValueOrEmptyValue(props.value)
      };
      return _this;
    }
    NumericInput.prototype.componentWillReceiveProps = function (nextProps) {
      _super.prototype.componentWillReceiveProps.call(this, nextProps);
      var value = this.getValueOrEmptyValue(nextProps.value);
      var didMinChange = nextProps.min !== this.props.min;
      var didMaxChange = nextProps.max !== this.props.max;
      var didBoundsChange = didMinChange || didMaxChange;
      var sanitizedValue = value !== NumericInput_1.VALUE_EMPTY ? this.getSanitizedValue(value, 0, nextProps.min, nextProps.max) : NumericInput_1.VALUE_EMPTY;
      var stepMaxPrecision = this.getStepMaxPrecision(nextProps);
      if (didBoundsChange && sanitizedValue !== this.state.value) {
        this.setState({
          stepMaxPrecision: stepMaxPrecision,
          value: sanitizedValue
        });
        this.invokeValueCallback(sanitizedValue, this.props.onValueChange);
      } else {
        this.setState({
          stepMaxPrecision: stepMaxPrecision,
          value: value
        });
      }
    };
    NumericInput.prototype.render = function () {
      var _a = this.props,
          buttonPosition = _a.buttonPosition,
          className = _a.className,
          large = _a.large;
      var inputGroupHtmlProps = common_1.removeNonHTMLProps(this.props, ["allowNumericCharactersOnly", "buttonPosition", "clampValueOnBlur", "className", "large", "majorStepSize", "minorStepSize", "onButtonClick", "onValueChange", "selectAllOnFocus", "selectAllOnIncrement", "stepSize"], true);
      var inputGroup = React.createElement(inputGroup_1.InputGroup, tslib_1.__assign({ autoComplete: "off" }, inputGroupHtmlProps, {
        className: classNames((_b = {}, _b[common_1.Classes.LARGE] = large, _b)),
        intent: this.props.intent,
        inputRef: this.inputRef,
        key: "input-group",
        leftIconName: this.props.leftIconName,
        onFocus: this.handleInputFocus,
        onBlur: this.handleInputBlur,
        onChange: this.handleInputChange,
        onKeyDown: this.handleInputKeyDown,
        onKeyPress: this.handleInputKeyPress,
        onPaste: this.handleInputPaste,
        value: this.state.value
      }));
      if (buttonPosition === "none" || buttonPosition === null) {
        return React.createElement("div", { className: className }, inputGroup);
      } else {
        var incrementButton = this.renderButton(NumericInput_1.INCREMENT_KEY, NumericInput_1.INCREMENT_ICON_NAME, this.handleIncrementButtonClick);
        var decrementButton = this.renderButton(NumericInput_1.DECREMENT_KEY, NumericInput_1.DECREMENT_ICON_NAME, this.handleDecrementButtonClick);
        var buttonGroup = React.createElement("div", {
          key: "button-group",
          className: classNames(common_1.Classes.BUTTON_GROUP, common_1.Classes.VERTICAL, common_1.Classes.FIXED)
        }, incrementButton, decrementButton);
        var inputElems = buttonPosition === common_1.Position.LEFT ? [buttonGroup, inputGroup] : [inputGroup, buttonGroup];
        var classes = classNames(common_1.Classes.NUMERIC_INPUT, common_1.Classes.CONTROL_GROUP, (_c = {}, _c[common_1.Classes.LARGE] = large, _c), className);
        return React.createElement("div", { className: classes }, inputElems);
      }
      var _b, _c;
    };
    NumericInput.prototype.componentDidUpdate = function () {
      if (this.shouldSelectAfterUpdate) {
        this.inputElement.setSelectionRange(0, this.state.value.length);
      }
    };
    NumericInput.prototype.validateProps = function (nextProps) {
      var majorStepSize = nextProps.majorStepSize,
          max = nextProps.max,
          min = nextProps.min,
          minorStepSize = nextProps.minorStepSize,
          stepSize = nextProps.stepSize;
      if (min != null && max != null && min >= max) {
        throw new Error(Errors.NUMERIC_INPUT_MIN_MAX);
      }
      if (stepSize == null) {
        throw new Error(Errors.NUMERIC_INPUT_STEP_SIZE_NULL);
      }
      if (stepSize <= 0) {
        throw new Error(Errors.NUMERIC_INPUT_STEP_SIZE_NON_POSITIVE);
      }
      if (minorStepSize && minorStepSize <= 0) {
        throw new Error(Errors.NUMERIC_INPUT_MINOR_STEP_SIZE_NON_POSITIVE);
      }
      if (majorStepSize && majorStepSize <= 0) {
        throw new Error(Errors.NUMERIC_INPUT_MAJOR_STEP_SIZE_NON_POSITIVE);
      }
      if (minorStepSize && minorStepSize > stepSize) {
        throw new Error(Errors.NUMERIC_INPUT_MINOR_STEP_SIZE_BOUND);
      }
      if (majorStepSize && majorStepSize < stepSize) {
        throw new Error(Errors.NUMERIC_INPUT_MAJOR_STEP_SIZE_BOUND);
      }
    };
    NumericInput.prototype.renderButton = function (key, iconName, onClick) {
      var _this = this;
      var onKeyUp = function (e) {
        _this.handleButtonKeyUp(e, onClick);
      };
      return React.createElement(buttons_1.Button, {
        disabled: this.props.disabled || this.props.readOnly,
        iconName: iconName,
        intent: this.props.intent,
        key: key,
        onBlur: this.handleButtonBlur,
        onClick: onClick,
        onFocus: this.handleButtonFocus,
        onKeyUp: onKeyUp
      });
    };
    NumericInput.prototype.invokeValueCallback = function (value, callback) {
      common_1.Utils.safeInvoke(callback, +value, value);
    };
    NumericInput.prototype.incrementValue = function (delta) {
      var currValue = this.state.value || NumericInput_1.VALUE_ZERO;
      var nextValue = this.getSanitizedValue(currValue, delta);
      this.shouldSelectAfterUpdate = this.props.selectAllOnIncrement;
      this.setState({ value: nextValue });
      this.invokeValueCallback(nextValue, this.props.onValueChange);
      return nextValue;
    };
    NumericInput.prototype.getIncrementDelta = function (direction, isShiftKeyPressed, isAltKeyPressed) {
      var _a = this.props,
          majorStepSize = _a.majorStepSize,
          minorStepSize = _a.minorStepSize,
          stepSize = _a.stepSize;
      if (isShiftKeyPressed && majorStepSize != null) {
        return direction * majorStepSize;
      } else if (isAltKeyPressed && minorStepSize != null) {
        return direction * minorStepSize;
      } else {
        return direction * stepSize;
      }
    };
    NumericInput.prototype.getSanitizedValue = function (value, delta, min, max) {
      if (delta === void 0) {
        delta = 0;
      }
      if (min === void 0) {
        min = this.props.min;
      }
      if (max === void 0) {
        max = this.props.max;
      }
      if (!this.isValueNumeric(value)) {
        return NumericInput_1.VALUE_EMPTY;
      }
      var nextValue = this.toMaxPrecision(parseFloat(value) + delta);
      var adjustedMin = min != null ? min : -Infinity;
      var adjustedMax = max != null ? max : Infinity;
      nextValue = common_1.Utils.clamp(nextValue, adjustedMin, adjustedMax);
      return nextValue.toString();
    };
    NumericInput.prototype.getValueOrEmptyValue = function (value) {
      return value != null ? value.toString() : NumericInput_1.VALUE_EMPTY;
    };
    NumericInput.prototype.isValueNumeric = function (value) {
      return value != null && value - parseFloat(value) + 1 >= 0;
    };
    NumericInput.prototype.isKeyboardEventDisabledForBasicNumericEntry = function (e) {
      if (e.key == null) {
        return false;
      }
      if (e.ctrlKey || e.altKey || e.metaKey) {
        return false;
      }
      var isSingleCharKey = e.key.length === 1;
      if (!isSingleCharKey) {
        return false;
      }
      return !this.isFloatingPointNumericCharacter(e.key);
    };
    NumericInput.prototype.isFloatingPointNumericCharacter = function (character) {
      return NumericInput_1.FLOATING_POINT_NUMBER_CHARACTER_REGEX.test(character);
    };
    NumericInput.prototype.getStepMaxPrecision = function (props) {
      if (props.minorStepSize != null) {
        return common_1.Utils.countDecimalPlaces(props.minorStepSize);
      } else {
        return common_1.Utils.countDecimalPlaces(props.stepSize);
      }
    };
    NumericInput.prototype.toMaxPrecision = function (value) {
      var scaleFactor = Math.pow(10, this.state.stepMaxPrecision);
      return Math.round(value * scaleFactor) / scaleFactor;
    };
    return NumericInput;
  }(common_1.AbstractComponent);
  NumericInput.displayName = "Blueprint.NumericInput";
  NumericInput.VALUE_EMPTY = "";
  NumericInput.VALUE_ZERO = "0";
  NumericInput.defaultProps = {
    allowNumericCharactersOnly: true,
    buttonPosition: common_1.Position.RIGHT,
    clampValueOnBlur: false,
    large: false,
    majorStepSize: 10,
    minorStepSize: 0.1,
    selectAllOnFocus: false,
    selectAllOnIncrement: false,
    stepSize: 1,
    value: NumericInput_1.VALUE_EMPTY
  };
  NumericInput.DECREMENT_KEY = "decrement";
  NumericInput.INCREMENT_KEY = "increment";
  NumericInput.DECREMENT_ICON_NAME = "chevron-down";
  NumericInput.INCREMENT_ICON_NAME = "chevron-up";
  NumericInput.FLOATING_POINT_NUMBER_CHARACTER_REGEX = /^[Ee0-9\+\-\.]$/;
  NumericInput = NumericInput_1 = tslib_1.__decorate([PureRender], NumericInput);
  exports.NumericInput = NumericInput;
  exports.NumericInputFactory = React.createFactory(NumericInput);
  var NumericInput_1;
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/forms/controls.js", ["npm:tslib@1.8.0.js", "npm:classnames@2.2.5.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/classes.js", "npm:@blueprintjs/core@1.33.0/dist/common/props.js", "npm:@blueprintjs/core@1.33.0/dist/common/utils.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var classNames = $__require("npm:classnames@2.2.5.js");
  var React = $__require("npm:react@0.14.9.js");
  var Classes = $__require("npm:@blueprintjs/core@1.33.0/dist/common/classes.js");
  var props_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/props.js");
  var utils_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/utils.js");
  var INVALID_PROPS = ["children", "defaultIndeterminate", "indeterminate", "labelElement"];
  var Control = function (_super) {
    tslib_1.__extends(Control, _super);
    function Control() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Control.prototype.renderControl = function (type, typeClassName, inputRef) {
      if (inputRef === void 0) {
        inputRef = this.props.inputRef;
      }
      var className = classNames(Classes.CONTROL, typeClassName, (_a = {}, _a[Classes.DISABLED] = this.props.disabled, _a[Classes.INLINE] = this.props.inline, _a), this.props.className);
      var inputProps = props_1.removeNonHTMLProps(this.props, INVALID_PROPS, true);
      return React.createElement("label", {
        className: className,
        style: this.props.style
      }, React.createElement("input", tslib_1.__assign({}, inputProps, {
        ref: inputRef,
        type: type
      })), React.createElement("span", { className: Classes.CONTROL_INDICATOR }), this.props.label, this.props.labelElement, this.props.children);
      var _a;
    };
    return Control;
  }(React.Component);
  exports.Control = Control;
  var Checkbox = function (_super) {
    tslib_1.__extends(Checkbox, _super);
    function Checkbox() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.handleInputRef = function (ref) {
        _this.input = ref;
        utils_1.safeInvoke(_this.props.inputRef, ref);
      };
      return _this;
    }
    Checkbox.prototype.render = function () {
      return this.renderControl("checkbox", "pt-checkbox", this.handleInputRef);
    };
    Checkbox.prototype.componentDidMount = function () {
      if (this.props.defaultIndeterminate != null) {
        this.input.indeterminate = this.props.defaultIndeterminate;
      }
      this.updateIndeterminate();
    };
    Checkbox.prototype.componentDidUpdate = function () {
      this.updateIndeterminate();
    };
    Checkbox.prototype.updateIndeterminate = function () {
      if (this.props.indeterminate != null) {
        this.input.indeterminate = this.props.indeterminate;
      }
    };
    return Checkbox;
  }(Control);
  Checkbox.displayName = "Blueprint.Checkbox";
  exports.Checkbox = Checkbox;
  var Switch = function (_super) {
    tslib_1.__extends(Switch, _super);
    function Switch() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Switch.prototype.render = function () {
      return this.renderControl("checkbox", "pt-switch");
    };
    return Switch;
  }(Control);
  Switch.displayName = "Blueprint.Switch";
  exports.Switch = Switch;
  var Radio = function (_super) {
    tslib_1.__extends(Radio, _super);
    function Radio() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Radio.prototype.render = function () {
      return this.renderControl("radio", "pt-radio");
    };
    return Radio;
  }(Control);
  Radio.displayName = "Blueprint.Radio";
  exports.Radio = Radio;
  exports.CheckboxFactory = React.createFactory(Checkbox);
  exports.SwitchFactory = React.createFactory(Switch);
  exports.RadioFactory = React.createFactory(Radio);
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/forms/radioGroup.js", ["npm:tslib@1.8.0.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/abstractComponent.js", "npm:@blueprintjs/core@1.33.0/dist/common/classes.js", "npm:@blueprintjs/core@1.33.0/dist/common/errors.js", "npm:@blueprintjs/core@1.33.0/dist/components/forms/controls.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var React = $__require("npm:react@0.14.9.js");
  var abstractComponent_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/abstractComponent.js");
  var Classes = $__require("npm:@blueprintjs/core@1.33.0/dist/common/classes.js");
  var Errors = $__require("npm:@blueprintjs/core@1.33.0/dist/common/errors.js");
  var controls_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/forms/controls.js");
  var counter = 0;
  function nextName() {
    return RadioGroup.displayName + "-" + counter++;
  }
  var RadioGroup = function (_super) {
    tslib_1.__extends(RadioGroup, _super);
    function RadioGroup() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.autoGroupName = nextName();
      return _this;
    }
    RadioGroup.prototype.render = function () {
      var label = this.props.label;
      return React.createElement("div", { className: this.props.className }, label == null ? null : React.createElement("label", { className: Classes.LABEL }, label), Array.isArray(this.props.options) ? this.renderOptions() : this.renderChildren());
    };
    RadioGroup.prototype.validateProps = function () {
      if (this.props.children != null && this.props.options != null) {
        console.warn(Errors.RADIOGROUP_WARN_CHILDREN_OPTIONS_MUTEX);
      }
    };
    RadioGroup.prototype.renderChildren = function () {
      var _this = this;
      return React.Children.map(this.props.children, function (child) {
        if (isRadio(child)) {
          return React.cloneElement(child, _this.getRadioProps(child.props));
        } else {
          return child;
        }
      });
    };
    RadioGroup.prototype.renderOptions = function () {
      var _this = this;
      return this.props.options.map(function (option) {
        return React.createElement(controls_1.Radio, tslib_1.__assign({}, option, _this.getRadioProps(option), { key: option.value }));
      });
    };
    RadioGroup.prototype.getRadioProps = function (optionProps) {
      var name = this.props.name;
      var value = optionProps.value,
          disabled = optionProps.disabled;
      return {
        checked: value === this.props.selectedValue,
        disabled: disabled || this.props.disabled,
        inline: this.props.inline,
        name: name == null ? this.autoGroupName : name,
        onChange: this.props.onChange
      };
    };
    return RadioGroup;
  }(abstractComponent_1.AbstractComponent);
  RadioGroup.displayName = "Blueprint.RadioGroup";
  exports.RadioGroup = RadioGroup;
  function isRadio(child) {
    return child != null && child.type === controls_1.Radio;
  }
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/hotkeys/hotkeysEvents.js", ["npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/utils.js", "npm:@blueprintjs/core@1.33.0/dist/components/hotkeys/hotkey.js", "npm:@blueprintjs/core@1.33.0/dist/components/hotkeys/hotkeyParser.js", "npm:@blueprintjs/core@1.33.0/dist/components/hotkeys/hotkeysDialog.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var react_1 = $__require("npm:react@0.14.9.js");
  var utils_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/utils.js");
  var hotkey_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/hotkeys/hotkey.js");
  var hotkeyParser_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/hotkeys/hotkeyParser.js");
  var hotkeysDialog_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/hotkeys/hotkeysDialog.js");
  var SHOW_DIALOG_KEY = "?";
  var HotkeyScope;
  (function (HotkeyScope) {
    HotkeyScope[HotkeyScope["LOCAL"] = 0] = "LOCAL";
    HotkeyScope[HotkeyScope["GLOBAL"] = 1] = "GLOBAL";
  })(HotkeyScope = exports.HotkeyScope || (exports.HotkeyScope = {}));
  var HotkeysEvents = function () {
    function HotkeysEvents(scope) {
      var _this = this;
      this.scope = scope;
      this.actions = [];
      this.handleKeyDown = function (e) {
        var combo = hotkeyParser_1.getKeyCombo(e);
        var isTextInput = _this.isTextInput(e);
        if (!isTextInput && hotkeyParser_1.comboMatches(hotkeyParser_1.parseKeyCombo(SHOW_DIALOG_KEY), combo)) {
          if (hotkeysDialog_1.isHotkeysDialogShowing()) {
            hotkeysDialog_1.hideHotkeysDialogAfterDelay();
          } else {
            hotkeysDialog_1.showHotkeysDialog(_this.actions.map(function (action) {
              return action.props;
            }));
          }
          return;
        } else if (hotkeysDialog_1.isHotkeysDialogShowing()) {
          return;
        }
        _this.invokeNamedCallbackIfComboRecognized(combo, "onKeyDown", e);
      };
      this.handleKeyUp = function (e) {
        if (hotkeysDialog_1.isHotkeysDialogShowing()) {
          return;
        }
        _this.invokeNamedCallbackIfComboRecognized(hotkeyParser_1.getKeyCombo(e), "onKeyUp", e);
      };
    }
    HotkeysEvents.prototype.count = function () {
      return this.actions.length;
    };
    HotkeysEvents.prototype.clear = function () {
      this.actions = [];
    };
    HotkeysEvents.prototype.setHotkeys = function (props) {
      var _this = this;
      var actions = [];
      react_1.Children.forEach(props.children, function (child) {
        if (hotkey_1.Hotkey.isInstance(child) && _this.isScope(child.props)) {
          actions.push({
            combo: hotkeyParser_1.parseKeyCombo(child.props.combo),
            props: child.props
          });
        }
      });
      this.actions = actions;
    };
    HotkeysEvents.prototype.invokeNamedCallbackIfComboRecognized = function (combo, callbackName, e) {
      var isTextInput = this.isTextInput(e);
      for (var _i = 0, _a = this.actions; _i < _a.length; _i++) {
        var action = _a[_i];
        var shouldIgnore = isTextInput && !action.props.allowInInput || action.props.disabled;
        if (!shouldIgnore && hotkeyParser_1.comboMatches(action.combo, combo)) {
          if (action.props.preventDefault) {
            e.preventDefault();
          }
          if (action.props.stopPropagation) {
            e.isPropagationStopped = true;
            e.stopPropagation();
          }
          utils_1.safeInvoke(action.props[callbackName], e);
        }
      }
    };
    HotkeysEvents.prototype.isScope = function (props) {
      return (props.global ? HotkeyScope.GLOBAL : HotkeyScope.LOCAL) === this.scope;
    };
    HotkeysEvents.prototype.isTextInput = function (e) {
      var elem = e.target;
      if (elem == null || elem.closest == null) {
        return false;
      }
      var editable = elem.closest("input, textarea, [contenteditable=true]");
      if (editable == null) {
        return false;
      }
      if (editable.tagName.toLowerCase() === "input") {
        var inputType = editable.type;
        if (inputType === "checkbox" || inputType === "radio") {
          return false;
        }
      }
      if (editable.readOnly) {
        return false;
      }
      return true;
    };
    return HotkeysEvents;
  }();
  exports.HotkeysEvents = HotkeysEvents;
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/hotkeys/hotkeysTarget.js", ["npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/utils.js", "npm:@blueprintjs/core@1.33.0/dist/components/hotkeys/hotkeysEvents.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var React = $__require("npm:react@0.14.9.js");
  var utils_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/utils.js");
  var hotkeysEvents_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/hotkeys/hotkeysEvents.js");
  function HotkeysTarget(constructor) {
    var _a = constructor.prototype,
        componentWillMount = _a.componentWillMount,
        componentDidMount = _a.componentDidMount,
        componentWillUnmount = _a.componentWillUnmount,
        render = _a.render,
        renderHotkeys = _a.renderHotkeys;
    if (!utils_1.isFunction(renderHotkeys)) {
      throw new Error("@HotkeysTarget-decorated class must implement `renderHotkeys`. " + constructor);
    }
    constructor.prototype.componentWillMount = function () {
      this.localHotkeysEvents = new hotkeysEvents_1.HotkeysEvents(hotkeysEvents_1.HotkeyScope.LOCAL);
      this.globalHotkeysEvents = new hotkeysEvents_1.HotkeysEvents(hotkeysEvents_1.HotkeyScope.GLOBAL);
      if (componentWillMount != null) {
        componentWillMount.call(this);
      }
    };
    constructor.prototype.componentDidMount = function () {
      document.addEventListener("keydown", this.globalHotkeysEvents.handleKeyDown);
      document.addEventListener("keyup", this.globalHotkeysEvents.handleKeyUp);
      if (componentDidMount != null) {
        componentDidMount.call(this);
      }
    };
    constructor.prototype.componentWillUnmount = function () {
      document.removeEventListener("keydown", this.globalHotkeysEvents.handleKeyDown);
      document.removeEventListener("keyup", this.globalHotkeysEvents.handleKeyUp);
      this.globalHotkeysEvents.clear();
      this.localHotkeysEvents.clear();
      if (componentWillUnmount != null) {
        componentWillUnmount.call(this);
      }
    };
    constructor.prototype.render = function () {
      var _this = this;
      var element = render.call(this);
      var hotkeys = renderHotkeys.call(this);
      this.localHotkeysEvents.setHotkeys(hotkeys.props);
      this.globalHotkeysEvents.setHotkeys(hotkeys.props);
      if (element != null && this.localHotkeysEvents.count() > 0) {
        var tabIndex = hotkeys.props.tabIndex === undefined ? 0 : hotkeys.props.tabIndex;
        var existingKeyDown_1 = element.props.onKeyDown;
        var onKeyDown = function (e) {
          _this.localHotkeysEvents.handleKeyDown(e.nativeEvent);
          utils_1.safeInvoke(existingKeyDown_1, e);
        };
        var existingKeyUp_1 = element.props.onKeyUp;
        var onKeyUp = function (e) {
          _this.localHotkeysEvents.handleKeyUp(e.nativeEvent);
          utils_1.safeInvoke(existingKeyUp_1, e);
        };
        return React.cloneElement(element, {
          tabIndex: tabIndex,
          onKeyDown: onKeyDown,
          onKeyUp: onKeyUp
        });
      } else {
        return element;
      }
    };
  }
  exports.HotkeysTarget = HotkeysTarget;
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/hotkeys/hotkeyParser.js", [], true, function ($__require, exports, module) {
    /*
     * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
     *
     * Licensed under the terms of the LICENSE file distributed with this project.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.KeyCodes = {
        8: "backspace",
        9: "tab",
        13: "enter",
        20: "capslock",
        27: "esc",
        32: "space",
        33: "pageup",
        34: "pagedown",
        35: "end",
        36: "home",
        37: "left",
        38: "up",
        39: "right",
        40: "down",
        45: "ins",
        46: "del",
        // number keys
        48: "0",
        49: "1",
        50: "2",
        51: "3",
        52: "4",
        53: "5",
        54: "6",
        55: "7",
        56: "8",
        57: "9",
        // alphabet
        65: "a",
        66: "b",
        67: "c",
        68: "d",
        69: "e",
        70: "f",
        71: "g",
        72: "h",
        73: "i",
        74: "j",
        75: "k",
        76: "l",
        77: "m",
        78: "n",
        79: "o",
        80: "p",
        81: "q",
        82: "r",
        83: "s",
        84: "t",
        85: "u",
        86: "v",
        87: "w",
        88: "x",
        89: "y",
        90: "z",
        // punctuation
        106: "*",
        107: "+",
        109: "-",
        110: ".",
        111: "/",
        186: ";",
        187: "=",
        188: ",",
        189: "-",
        190: ".",
        191: "/",
        192: "`",
        219: "[",
        220: "\\",
        221: "]",
        222: "'"
    };
    exports.Modifiers = {
        16: "shift",
        17: "ctrl",
        18: "alt",
        91: "meta",
        93: "meta",
        224: "meta"
    };
    exports.ModifierBitMasks = {
        alt: 1,
        ctrl: 2,
        meta: 4,
        shift: 8
    };
    exports.Aliases = {
        cmd: "meta",
        command: "meta",
        escape: "esc",
        minus: "-",
        mod: isMac() ? "meta" : "ctrl",
        option: "alt",
        plus: "+",
        return: "enter",
        win: "meta"
    };
    // alph sorting is unintuitive here
    // tslint:disable object-literal-sort-keys
    exports.ShiftKeys = {
        "~": "`",
        "!": "1",
        "@": "2",
        "#": "3",
        $: "4",
        "%": "5",
        "^": "6",
        "&": "7",
        "*": "8",
        "(": "9",
        ")": "0",
        _: "-",
        "+": "=",
        "{": "[",
        "}": "]",
        "|": "\\",
        ":": ";",
        '"': "'",
        "<": ",",
        ">": ".",
        "?": "/"
    };
    // tslint:enable object-literal-sort-keys
    // Function keys
    for (var i = 1; i <= 12; ++i) {
        exports.KeyCodes[111 + i] = "f" + i;
    }
    // Numpad
    for (var i = 0; i <= 9; ++i) {
        exports.KeyCodes[96 + i] = "num" + i.toString();
    }
    function comboMatches(a, b) {
        return a.modifiers === b.modifiers && a.key === b.key;
    }
    exports.comboMatches = comboMatches;
    /**
     * Converts a key combo string into a key combo object. Key combos include
     * zero or more modifier keys, such as `shift` or `alt`, and exactly one
     * action key, such as `A`, `enter`, or `left`.
     *
     * For action keys that require a shift, e.g. `@` or `|`, we inlude the
     * necessary `shift` modifier and automatically convert the action key to the
     * unshifted version. For example, `@` is equivalent to `shift+2`.
     */
    exports.parseKeyCombo = function (combo) {
        var pieces = combo.replace(/\s/g, "").toLowerCase().split("+");
        var modifiers = 0;
        var key = null;
        for (var _i = 0, pieces_1 = pieces; _i < pieces_1.length; _i++) {
            var piece = pieces_1[_i];
            if (piece === "") {
                throw new Error("Failed to parse key combo \"" + combo + "\".\n                Valid key combos look like \"cmd + plus\", \"shift+p\", or \"!\"");
            }
            if (exports.Aliases[piece] != null) {
                piece = exports.Aliases[piece];
            }
            if (exports.ModifierBitMasks[piece] != null) {
                modifiers += exports.ModifierBitMasks[piece];
            } else if (exports.ShiftKeys[piece] != null) {
                // tslint:disable-next-line no-string-literal
                modifiers += exports.ModifierBitMasks["shift"];
                key = exports.ShiftKeys[piece];
            } else {
                key = piece.toLowerCase();
            }
        }
        return { modifiers: modifiers, key: key };
    };
    /**
     * PhantomJS's webkit totally messes up keyboard events, so we have do this
     * fancy little dance with the event data to determine which key was pressed
     * for unit tests.
     */
    var normalizeKeyCode = function (e) {
        return e.which === 0 && e.key != null ? e.key.charCodeAt(0) : e.which;
    };
    /**
     * Converts a keyboard event into a valid combo prop string
     */
    exports.getKeyComboString = function (e) {
        var keys = [];
        // modifiers first
        if (e.ctrlKey) {
            keys.push("ctrl");
        }
        if (e.altKey) {
            keys.push("alt");
        }
        if (e.shiftKey) {
            keys.push("shift");
        }
        if (e.metaKey) {
            keys.push("meta");
        }
        var which = normalizeKeyCode(e);
        if (exports.Modifiers[which] != null) {
            // no action key
        } else if (exports.KeyCodes[which] != null) {
            keys.push(exports.KeyCodes[which]);
        } else {
            keys.push(String.fromCharCode(which).toLowerCase());
        }
        // join keys with plusses
        return keys.join(" + ");
    };
    /**
     * Determines the key combo object from the given keyboard event. Again, a key
     * combo includes zero or more modifiers (represented by a bitmask) and one
     * action key, which we determine from the `e.which` property of the keyboard
     * event.
     */
    exports.getKeyCombo = function (e) {
        var key = null;
        var which = normalizeKeyCode(e);
        if (exports.Modifiers[which] != null) {
            // keep key null
        } else if (exports.KeyCodes[which] != null) {
            key = exports.KeyCodes[which];
        } else {
            key = String.fromCharCode(which).toLowerCase();
        }
        var modifiers = 0;
        // tslint:disable no-string-literal
        if (e.altKey) {
            modifiers += exports.ModifierBitMasks["alt"];
        }
        if (e.ctrlKey) {
            modifiers += exports.ModifierBitMasks["ctrl"];
        }
        if (e.metaKey) {
            modifiers += exports.ModifierBitMasks["meta"];
        }
        if (e.shiftKey) {
            modifiers += exports.ModifierBitMasks["shift"];
        }
        // tslint:enable
        return { modifiers: modifiers, key: key };
    };
    /**
     * Splits a key combo string into its constituent key values and looks up
     * aliases, such as `return` -> `enter`.
     *
     * Unlike the parseKeyCombo method, this method does NOT convert shifted
     * action keys. So `"@"` will NOT be converted to `["shift", "2"]`).
     */
    exports.normalizeKeyCombo = function (combo, platformOverride) {
        var keys = combo.replace(/\s/g, "").split("+");
        return keys.map(function (key) {
            var keyName = exports.Aliases[key] != null ? exports.Aliases[key] : key;
            return keyName === "meta" ? isMac(platformOverride) ? "cmd" : "ctrl" : keyName;
        });
    };
    /* tslint:enable:no-string-literal */
    function isMac(platformOverride) {
        var platform = platformOverride != null ? platformOverride : typeof navigator !== "undefined" ? navigator.platform : undefined;
        return platform == null ? false : /Mac|iPod|iPhone|iPad/.test(platform);
    }

    
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/hotkeys/keyCombo.js", ["npm:tslib@1.8.0.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/components/hotkeys/hotkeyParser.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var React = $__require("npm:react@0.14.9.js");
  var hotkeyParser_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/hotkeys/hotkeyParser.js");
  var KeyIcons = {
    alt: "pt-icon-key-option",
    cmd: "pt-icon-key-command",
    ctrl: "pt-icon-key-control",
    delete: "pt-icon-key-delete",
    down: "pt-icon-arrow-down",
    enter: "pt-icon-key-enter",
    left: "pt-icon-arrow-left",
    meta: "pt-icon-key-command",
    right: "pt-icon-arrow-right",
    shift: "pt-icon-key-shift",
    up: "pt-icon-arrow-up"
  };
  var KeyCombo = function (_super) {
    tslib_1.__extends(KeyCombo, _super);
    function KeyCombo() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    KeyCombo.prototype.render = function () {
      var keys = hotkeyParser_1.normalizeKeyCombo(this.props.combo);
      var components = [];
      for (var i = 0; i < keys.length; i++) {
        var key = keys[i];
        var icon = KeyIcons[key];
        if (icon != null) {
          components.push(React.createElement("kbd", {
            className: "pt-key pt-modifier-key",
            key: "key-" + i
          }, React.createElement("span", { className: "pt-icon-standard " + icon }), key));
        } else {
          if (key.length === 1) {
            key = key.toUpperCase();
          }
          components.push(React.createElement("kbd", {
            className: "pt-key",
            key: "key-" + i
          }, key));
        }
      }
      return React.createElement("div", { className: "pt-key-combo" }, components);
    };
    return KeyCombo;
  }(React.Component);
  exports.KeyCombo = KeyCombo;
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/hotkeys/hotkey.js", ["npm:tslib@1.8.0.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/index.js", "npm:@blueprintjs/core@1.33.0/dist/components/hotkeys/keyCombo.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var React = $__require("npm:react@0.14.9.js");
  var common_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/index.js");
  var keyCombo_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/hotkeys/keyCombo.js");
  var Hotkey = function (_super) {
    tslib_1.__extends(Hotkey, _super);
    function Hotkey() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Hotkey.isInstance = function (element) {
      return element != null && element.type === Hotkey;
    };
    Hotkey.prototype.render = function () {
      var _a = this.props,
          label = _a.label,
          spreadableProps = tslib_1.__rest(_a, ["label"]);
      return React.createElement("div", { className: "pt-hotkey" }, React.createElement("div", { className: "pt-hotkey-label" }, label), React.createElement(keyCombo_1.KeyCombo, tslib_1.__assign({}, spreadableProps)));
    };
    Hotkey.prototype.validateProps = function (props) {
      if (props.global !== true && props.group == null) {
        throw new Error("non-global <Hotkey>s must define a group");
      }
    };
    return Hotkey;
  }(common_1.AbstractComponent);
  Hotkey.defaultProps = {
    allowInInput: false,
    disabled: false,
    global: false,
    preventDefault: false,
    stopPropagation: false
  };
  exports.Hotkey = Hotkey;
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/hotkeys/hotkeysDialog.js", ["npm:tslib@1.8.0.js", "npm:classnames@2.2.5.js", "npm:react@0.14.9.js", "npm:react-dom@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/index.js", "npm:@blueprintjs/core@1.33.0/dist/components/index.js", "npm:@blueprintjs/core@1.33.0/dist/components/hotkeys/hotkey.js", "npm:@blueprintjs/core@1.33.0/dist/components/hotkeys/hotkeys.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var classNames = $__require("npm:classnames@2.2.5.js");
  var React = $__require("npm:react@0.14.9.js");
  var ReactDOM = $__require("npm:react-dom@0.14.9.js");
  var common_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/index.js");
  var components_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/index.js");
  var hotkey_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/hotkeys/hotkey.js");
  var hotkeys_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/hotkeys/hotkeys.js");
  var DELAY_IN_MS = 10;
  var HotkeysDialog = function () {
    function HotkeysDialog() {
      var _this = this;
      this.componentProps = { globalHotkeysGroup: "Global hotkeys" };
      this.hotkeysQueue = [];
      this.isDialogShowing = false;
      this.show = function () {
        _this.isDialogShowing = true;
        _this.render();
      };
      this.hide = function () {
        _this.isDialogShowing = false;
        _this.render();
      };
    }
    HotkeysDialog.prototype.render = function () {
      if (this.container == null) {
        this.container = this.getContainer();
      }
      ReactDOM.render(this.renderComponent(), this.container);
    };
    HotkeysDialog.prototype.unmount = function () {
      if (this.container != null) {
        ReactDOM.unmountComponentAtNode(this.container);
        this.container.remove();
        delete this.container;
      }
    };
    HotkeysDialog.prototype.enqueueHotkeysForDisplay = function (hotkeys) {
      this.hotkeysQueue.push(hotkeys);
      clearTimeout(this.showTimeoutToken);
      this.showTimeoutToken = setTimeout(this.show, DELAY_IN_MS);
    };
    HotkeysDialog.prototype.hideAfterDelay = function () {
      clearTimeout(this.hideTimeoutToken);
      this.hideTimeoutToken = setTimeout(this.hide, DELAY_IN_MS);
    };
    HotkeysDialog.prototype.isShowing = function () {
      return this.isDialogShowing;
    };
    HotkeysDialog.prototype.getContainer = function () {
      if (this.container == null) {
        this.container = document.createElement("div");
        this.container.classList.add(common_1.Classes.PORTAL);
        document.body.appendChild(this.container);
      }
      return this.container;
    };
    HotkeysDialog.prototype.renderComponent = function () {
      return React.createElement(components_1.Dialog, tslib_1.__assign({}, this.componentProps, {
        className: classNames(this.componentProps.className, "pt-hotkey-dialog"),
        isOpen: this.isDialogShowing,
        onClose: this.hide
      }), React.createElement("div", { className: common_1.Classes.DIALOG_BODY }, this.renderHotkeys()));
    };
    HotkeysDialog.prototype.renderHotkeys = function () {
      var _this = this;
      var hotkeys = this.emptyHotkeyQueue();
      var elements = hotkeys.map(function (hotkey, index) {
        var group = hotkey.global === true && hotkey.group == null ? _this.componentProps.globalHotkeysGroup : hotkey.group;
        return React.createElement(hotkey_1.Hotkey, tslib_1.__assign({ key: index }, hotkey, { group: group }));
      });
      return React.createElement(hotkeys_1.Hotkeys, null, elements);
    };
    HotkeysDialog.prototype.emptyHotkeyQueue = function () {
      var hotkeys = this.hotkeysQueue.reduce(function (arr, queued) {
        return arr.concat(queued);
      }, []);
      this.hotkeysQueue.length = 0;
      return hotkeys;
    };
    return HotkeysDialog;
  }();
  var HOTKEYS_DIALOG = new HotkeysDialog();
  function isHotkeysDialogShowing() {
    return HOTKEYS_DIALOG.isShowing();
  }
  exports.isHotkeysDialogShowing = isHotkeysDialogShowing;
  function setHotkeysDialogProps(props) {
    for (var key in props) {
      if (props.hasOwnProperty(key)) {
        HOTKEYS_DIALOG.componentProps[key] = props[key];
      }
    }
  }
  exports.setHotkeysDialogProps = setHotkeysDialogProps;
  function showHotkeysDialog(hotkeys) {
    HOTKEYS_DIALOG.enqueueHotkeysForDisplay(hotkeys);
  }
  exports.showHotkeysDialog = showHotkeysDialog;
  function hideHotkeysDialog() {
    HOTKEYS_DIALOG.hide();
  }
  exports.hideHotkeysDialog = hideHotkeysDialog;
  function hideHotkeysDialogAfterDelay() {
    HOTKEYS_DIALOG.hideAfterDelay();
  }
  exports.hideHotkeysDialogAfterDelay = hideHotkeysDialogAfterDelay;
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/hotkeys/hotkeys.js", ["npm:tslib@1.8.0.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/index.js", "npm:@blueprintjs/core@1.33.0/dist/common/errors.js", "npm:@blueprintjs/core@1.33.0/dist/components/hotkeys/hotkey.js", "npm:@blueprintjs/core@1.33.0/dist/components/hotkeys/keyCombo.js", "npm:@blueprintjs/core@1.33.0/dist/components/hotkeys/hotkeysTarget.js", "npm:@blueprintjs/core@1.33.0/dist/components/hotkeys/hotkeyParser.js", "npm:@blueprintjs/core@1.33.0/dist/components/hotkeys/hotkeysDialog.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var React = $__require("npm:react@0.14.9.js");
  var common_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/index.js");
  var errors_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/errors.js");
  var hotkey_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/hotkeys/hotkey.js");
  var hotkey_2 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/hotkeys/hotkey.js");
  exports.Hotkey = hotkey_2.Hotkey;
  var keyCombo_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/hotkeys/keyCombo.js");
  exports.KeyCombo = keyCombo_1.KeyCombo;
  var hotkeysTarget_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/hotkeys/hotkeysTarget.js");
  exports.HotkeysTarget = hotkeysTarget_1.HotkeysTarget;
  var hotkeyParser_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/hotkeys/hotkeyParser.js");
  exports.comboMatches = hotkeyParser_1.comboMatches;
  exports.getKeyCombo = hotkeyParser_1.getKeyCombo;
  exports.getKeyComboString = hotkeyParser_1.getKeyComboString;
  exports.parseKeyCombo = hotkeyParser_1.parseKeyCombo;
  var hotkeysDialog_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/hotkeys/hotkeysDialog.js");
  exports.hideHotkeysDialog = hotkeysDialog_1.hideHotkeysDialog;
  exports.setHotkeysDialogProps = hotkeysDialog_1.setHotkeysDialogProps;
  var Hotkeys = function (_super) {
    tslib_1.__extends(Hotkeys, _super);
    function Hotkeys() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Hotkeys.prototype.render = function () {
      var hotkeys = React.Children.map(this.props.children, function (child) {
        return child.props;
      });
      hotkeys.sort(function (a, b) {
        if (a.global) {
          return b.global ? 0 : -1;
        }
        if (b.global) {
          return 1;
        }
        return a.group.localeCompare(b.group);
      });
      var lastGroup = null;
      var elems = [];
      for (var _i = 0, hotkeys_1 = hotkeys; _i < hotkeys_1.length; _i++) {
        var hotkey = hotkeys_1[_i];
        var groupLabel = hotkey.group;
        if (groupLabel !== lastGroup) {
          elems.push(React.createElement("h4", {
            key: "group-" + elems.length,
            className: "pt-hotkey-group"
          }, groupLabel));
          lastGroup = groupLabel;
        }
        elems.push(React.createElement(hotkey_1.Hotkey, tslib_1.__assign({ key: elems.length }, hotkey)));
      }
      return React.createElement("div", { className: "pt-hotkey-column" }, elems);
    };
    Hotkeys.prototype.validateProps = function (props) {
      React.Children.forEach(props.children, function (child) {
        if (!hotkey_1.Hotkey.isInstance(child)) {
          throw new Error(errors_1.HOTKEYS_HOTKEY_CHILDREN);
        }
      });
    };
    return Hotkeys;
  }(common_1.AbstractComponent);
  Hotkeys.defaultProps = { tabIndex: 0 };
  exports.Hotkeys = Hotkeys;
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/menu/menuDivider.js", ["npm:tslib@1.8.0.js", "npm:classnames@2.2.5.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/classes.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var classNames = $__require("npm:classnames@2.2.5.js");
  var React = $__require("npm:react@0.14.9.js");
  var Classes = $__require("npm:@blueprintjs/core@1.33.0/dist/common/classes.js");
  var MenuDivider = function (_super) {
    tslib_1.__extends(MenuDivider, _super);
    function MenuDivider() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    MenuDivider.prototype.render = function () {
      var _a = this.props,
          className = _a.className,
          title = _a.title;
      if (title == null) {
        return React.createElement("li", { className: classNames(Classes.MENU_DIVIDER, className) });
      } else {
        return React.createElement("li", { className: classNames(Classes.MENU_HEADER, className) }, React.createElement("h6", null, title));
      }
    };
    return MenuDivider;
  }(React.Component);
  MenuDivider.displayName = "Blueprint.MenuDivider";
  exports.MenuDivider = MenuDivider;
  exports.MenuDividerFactory = React.createFactory(MenuDivider);
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/menu/menu.js", ["npm:tslib@1.8.0.js", "npm:classnames@2.2.5.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/classes.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var classNames = $__require("npm:classnames@2.2.5.js");
  var React = $__require("npm:react@0.14.9.js");
  var Classes = $__require("npm:@blueprintjs/core@1.33.0/dist/common/classes.js");
  var Menu = function (_super) {
    tslib_1.__extends(Menu, _super);
    function Menu() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Menu.prototype.render = function () {
      return React.createElement("ul", {
        className: classNames(Classes.MENU, this.props.className),
        ref: this.props.ulRef
      }, this.props.children);
    };
    return Menu;
  }(React.Component);
  Menu.displayName = "Blueprint.Menu";
  exports.Menu = Menu;
  exports.MenuFactory = React.createFactory(Menu);
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/menu/menuItem.js", ["npm:tslib@1.8.0.js", "npm:classnames@2.2.5.js", "npm:react@0.14.9.js", "npm:react-dom@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/abstractComponent.js", "npm:@blueprintjs/core@1.33.0/dist/common/classes.js", "npm:@blueprintjs/core@1.33.0/dist/common/errors.js", "npm:@blueprintjs/core@1.33.0/dist/common/position.js", "npm:@blueprintjs/core@1.33.0/dist/components/popover/popover.js", "npm:@blueprintjs/core@1.33.0/dist/components/menu/menu.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var classNames = $__require("npm:classnames@2.2.5.js");
  var React = $__require("npm:react@0.14.9.js");
  var ReactDOM = $__require("npm:react-dom@0.14.9.js");
  var abstractComponent_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/abstractComponent.js");
  var Classes = $__require("npm:@blueprintjs/core@1.33.0/dist/common/classes.js");
  var Errors = $__require("npm:@blueprintjs/core@1.33.0/dist/common/errors.js");
  var position_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/position.js");
  var popover_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/popover/popover.js");
  var menu_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/menu/menu.js");
  var REACT_CONTEXT_TYPES = { alignLeft: function (obj, key) {
      if (obj[key] != null && typeof obj[key] !== "boolean") {
        return new Error("[Blueprint] MenuItem context alignLeft must be boolean");
      }
      return undefined;
    } };
  var MenuItem = function (_super) {
    tslib_1.__extends(MenuItem, _super);
    function MenuItem() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = { alignLeft: false };
      _this.liRefHandler = function (r) {
        return _this.liElement = r;
      };
      _this.measureSubmenu = function (el) {
        if (el != null) {
          var submenuRect = ReactDOM.findDOMNode(el).getBoundingClientRect();
          var parentWidth = _this.liElement.parentElement.getBoundingClientRect().width;
          var adjustmentWidth = submenuRect.width + parentWidth;
          var submenuLeft = submenuRect.left;
          var submenuRight = submenuRect.right;
          if (_this.state.alignLeft) {
            submenuLeft += adjustmentWidth;
            submenuRight += adjustmentWidth;
          }
          var _a = _this.props.submenuViewportMargin.left,
              left = _a === void 0 ? 0 : _a;
          var _b = _this.props.submenuViewportMargin.right,
              right = _b === void 0 ? 0 : _b;
          if (typeof document !== "undefined" && typeof document.documentElement !== "undefined" && Number(document.documentElement.clientWidth)) {
            right = document.documentElement.clientWidth - right;
          }
          var alignLeft = _this.context.alignLeft || false;
          if (alignLeft) {
            if (submenuLeft - adjustmentWidth <= left) {
              alignLeft = false;
            }
          } else {
            if (submenuRight >= right) {
              alignLeft = true;
            }
          }
          _this.setState({ alignLeft: alignLeft });
        }
      };
      _this.renderChildren = function () {
        var _a = _this.props,
            children = _a.children,
            submenu = _a.submenu;
        if (children != null) {
          var childProps_1 = _this.cascadeProps();
          if (Object.keys(childProps_1).length === 0) {
            return children;
          } else {
            return React.Children.map(children, function (child) {
              return React.cloneElement(child, childProps_1);
            });
          }
        } else if (submenu != null) {
          return submenu.map(_this.cascadeProps).map(renderMenuItem);
        } else {
          return undefined;
        }
      };
      _this.cascadeProps = function (newProps) {
        if (newProps === void 0) {
          newProps = {};
        }
        var _a = _this.props,
            submenuViewportMargin = _a.submenuViewportMargin,
            useSmartPositioning = _a.useSmartPositioning;
        if (submenuViewportMargin != null && newProps.submenuViewportMargin == null) {
          newProps.submenuViewportMargin = submenuViewportMargin;
        }
        if (useSmartPositioning === false && newProps.useSmartPositioning == null) {
          newProps.useSmartPositioning = useSmartPositioning;
        }
        return newProps;
      };
      return _this;
    }
    MenuItem.prototype.render = function () {
      var _a = this.props,
          children = _a.children,
          disabled = _a.disabled,
          label = _a.label,
          submenu = _a.submenu,
          popoverProps = _a.popoverProps;
      var hasSubmenu = children != null || submenu != null;
      var liClasses = classNames((_b = {}, _b[Classes.MENU_SUBMENU] = hasSubmenu, _b));
      var anchorClasses = classNames(Classes.MENU_ITEM, Classes.intentClass(this.props.intent), (_c = {}, _c[Classes.DISABLED] = disabled, _c[Classes.POPOVER_DISMISS] = this.props.shouldDismissPopover && !disabled && !hasSubmenu, _c), Classes.iconClass(this.props.iconName), this.props.className);
      var labelElement;
      if (label != null) {
        labelElement = React.createElement("span", { className: "pt-menu-item-label" }, label);
      }
      var content = React.createElement("a", {
        className: anchorClasses,
        href: disabled ? undefined : this.props.href,
        onClick: disabled ? undefined : this.props.onClick,
        tabIndex: disabled ? undefined : 0,
        target: this.props.target
      }, labelElement, this.props.text);
      if (hasSubmenu) {
        var measureSubmenu = this.props.useSmartPositioning ? this.measureSubmenu : null;
        var submenuElement = React.createElement(menu_1.Menu, { ref: measureSubmenu }, this.renderChildren());
        var popoverClasses = classNames(Classes.MINIMAL, Classes.MENU_SUBMENU, popoverProps.popoverClassName, (_d = {}, _d[Classes.ALIGN_LEFT] = this.state.alignLeft, _d));
        content = React.createElement(popover_1.Popover, tslib_1.__assign({
          isDisabled: disabled,
          enforceFocus: false,
          hoverCloseDelay: 0,
          inline: true,
          interactionKind: popover_1.PopoverInteractionKind.HOVER,
          position: this.state.alignLeft ? position_1.Position.LEFT_TOP : position_1.Position.RIGHT_TOP,
          useSmartArrowPositioning: false
        }, popoverProps, {
          content: submenuElement,
          popoverClassName: popoverClasses
        }), content);
      }
      return React.createElement("li", {
        className: liClasses,
        ref: this.liRefHandler
      }, content);
      var _b, _c, _d;
    };
    MenuItem.prototype.getChildContext = function () {
      return { alignLeft: this.state.alignLeft };
    };
    MenuItem.prototype.validateProps = function (props) {
      if (props.children != null && props.submenu != null) {
        console.warn(Errors.MENU_WARN_CHILDREN_SUBMENU_MUTEX);
      }
    };
    return MenuItem;
  }(abstractComponent_1.AbstractComponent);
  MenuItem.defaultProps = {
    disabled: false,
    popoverProps: {},
    shouldDismissPopover: true,
    submenuViewportMargin: {},
    text: "",
    useSmartPositioning: true
  };
  MenuItem.displayName = "Blueprint.MenuItem";
  MenuItem.contextTypes = REACT_CONTEXT_TYPES;
  MenuItem.childContextTypes = REACT_CONTEXT_TYPES;
  exports.MenuItem = MenuItem;
  function renderMenuItem(props, key) {
    return React.createElement(MenuItem, tslib_1.__assign({ key: key }, props));
  }
  exports.renderMenuItem = renderMenuItem;
  exports.MenuItemFactory = React.createFactory(MenuItem);
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/non-ideal-state/nonIdealState.js", ["npm:tslib@1.8.0.js", "npm:classnames@2.2.5.js", "npm:pure-render-decorator@1.2.1.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/classes.js", "npm:@blueprintjs/core@1.33.0/dist/components/icon/icon.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var classNames = $__require("npm:classnames@2.2.5.js");
  var PureRender = $__require("npm:pure-render-decorator@1.2.1.js");
  var React = $__require("npm:react@0.14.9.js");
  var Classes = $__require("npm:@blueprintjs/core@1.33.0/dist/common/classes.js");
  var icon_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/icon/icon.js");
  var NonIdealState = function (_super) {
    tslib_1.__extends(NonIdealState, _super);
    function NonIdealState() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    NonIdealState.prototype.render = function () {
      return React.createElement("div", { className: classNames(Classes.NON_IDEAL_STATE, this.props.className) }, this.maybeRenderVisual(), this.maybeRenderTitle(), this.maybeRenderDescription(), this.maybeRenderAction());
    };
    NonIdealState.prototype.maybeRenderAction = function () {
      if (this.props.action == null) {
        return undefined;
      }
      return React.createElement("div", { className: Classes.NON_IDEAL_STATE_ACTION }, this.props.action);
    };
    NonIdealState.prototype.maybeRenderDescription = function () {
      if (this.props.description == null) {
        return undefined;
      }
      return React.createElement("div", { className: Classes.NON_IDEAL_STATE_DESCRIPTION }, this.props.description);
    };
    NonIdealState.prototype.maybeRenderTitle = function () {
      if (this.props.title == null) {
        return undefined;
      }
      return React.createElement("h4", { className: Classes.NON_IDEAL_STATE_TITLE }, this.props.title);
    };
    NonIdealState.prototype.maybeRenderVisual = function () {
      var visual = this.props.visual;
      if (visual == null) {
        return undefined;
      } else if (typeof visual === "string") {
        return React.createElement("div", { className: classNames(Classes.NON_IDEAL_STATE_VISUAL, Classes.NON_IDEAL_STATE_ICON) }, React.createElement(icon_1.Icon, {
          iconName: visual,
          iconSize: "inherit"
        }));
      } else {
        return React.createElement("div", { className: Classes.NON_IDEAL_STATE_VISUAL }, visual);
      }
    };
    return NonIdealState;
  }(React.Component);
  NonIdealState = tslib_1.__decorate([PureRender], NonIdealState);
  exports.NonIdealState = NonIdealState;
  exports.NonIdealStateFactory = React.createFactory(NonIdealState);
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/text/text.js", ["npm:tslib@1.8.0.js", "npm:classnames@2.2.5.js", "npm:pure-render-decorator@1.2.1.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/classes.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var classNames = $__require("npm:classnames@2.2.5.js");
  var PureRender = $__require("npm:pure-render-decorator@1.2.1.js");
  var React = $__require("npm:react@0.14.9.js");
  var Classes = $__require("npm:@blueprintjs/core@1.33.0/dist/common/classes.js");
  var Text = function (_super) {
    tslib_1.__extends(Text, _super);
    function Text() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = {
        isContentOverflowing: false,
        textContent: ""
      };
      _this.refHandlers = { text: function (overflowElement) {
          return _this.textRef = overflowElement;
        } };
      return _this;
    }
    Text.prototype.componentDidMount = function () {
      this.update();
    };
    Text.prototype.componentDidUpdate = function () {
      this.update();
    };
    Text.prototype.render = function () {
      var classes = classNames((_a = {}, _a[Classes.TEXT_OVERFLOW_ELLIPSIS] = this.props.ellipsize, _a), this.props.className);
      return React.createElement("div", {
        className: classes,
        ref: this.refHandlers.text,
        title: this.state.isContentOverflowing ? this.state.textContent : undefined
      }, this.props.children);
      var _a;
    };
    Text.prototype.update = function () {
      var newState = {
        isContentOverflowing: this.props.ellipsize && this.textRef.scrollWidth > this.textRef.clientWidth,
        textContent: this.textRef.textContent
      };
      this.setState(newState);
    };
    return Text;
  }(React.Component);
  Text = tslib_1.__decorate([PureRender], Text);
  exports.Text = Text;
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/popover/svgPopover.js", ["npm:tslib@1.8.0.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/components/popover/popover.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var React = $__require("npm:react@0.14.9.js");
  var popover_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/popover/popover.js");
  var SVGPopover = function (_super) {
    tslib_1.__extends(SVGPopover, _super);
    function SVGPopover() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    SVGPopover.prototype.render = function () {
      return React.createElement(popover_1.Popover, tslib_1.__assign({ rootElementTag: "g" }, this.props), this.props.children);
    };
    return SVGPopover;
  }(React.Component);
  exports.SVGPopover = SVGPopover;
  exports.SVGPopoverFactory = React.createFactory(SVGPopover);
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/progress/progressBar.js", ["npm:tslib@1.8.0.js", "npm:classnames@2.2.5.js", "npm:pure-render-decorator@1.2.1.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/classes.js", "npm:@blueprintjs/core@1.33.0/dist/common/utils.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var classNames = $__require("npm:classnames@2.2.5.js");
  var PureRender = $__require("npm:pure-render-decorator@1.2.1.js");
  var React = $__require("npm:react@0.14.9.js");
  var Classes = $__require("npm:@blueprintjs/core@1.33.0/dist/common/classes.js");
  var utils_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/utils.js");
  var ProgressBar = function (_super) {
    tslib_1.__extends(ProgressBar, _super);
    function ProgressBar() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    ProgressBar.prototype.render = function () {
      var _a = this.props,
          className = _a.className,
          intent = _a.intent,
          value = _a.value;
      var classes = classNames("pt-progress-bar", Classes.intentClass(intent), className);
      var width = value == null ? null : 100 * utils_1.clamp(value, 0, 1) + "%";
      return React.createElement("div", { className: classes }, React.createElement("div", {
        className: "pt-progress-meter",
        style: { width: width }
      }));
    };
    return ProgressBar;
  }(React.Component);
  ProgressBar.displayName = "Blueprint.ProgressBar";
  ProgressBar = tslib_1.__decorate([PureRender], ProgressBar);
  exports.ProgressBar = ProgressBar;
  exports.ProgressBarFactory = React.createFactory(ProgressBar);
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/tooltip/svgTooltip.js", ["npm:tslib@1.8.0.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/components/tooltip/tooltip.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var React = $__require("npm:react@0.14.9.js");
  var tooltip_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/tooltip/tooltip.js");
  var SVGTooltip = function (_super) {
    tslib_1.__extends(SVGTooltip, _super);
    function SVGTooltip() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    SVGTooltip.prototype.render = function () {
      return React.createElement(tooltip_1.Tooltip, tslib_1.__assign({ rootElementTag: "g" }, this.props), this.props.children);
    };
    return SVGTooltip;
  }(React.Component);
  exports.SVGTooltip = SVGTooltip;
  exports.SVGTooltipFactory = React.createFactory(SVGTooltip);
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/slider/rangeSlider.js", ["npm:tslib@1.8.0.js", "npm:classnames@2.2.5.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/classes.js", "npm:@blueprintjs/core@1.33.0/dist/common/errors.js", "npm:@blueprintjs/core@1.33.0/dist/common/utils.js", "npm:@blueprintjs/core@1.33.0/dist/components/slider/coreSlider.js", "npm:@blueprintjs/core@1.33.0/dist/components/slider/handle.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var classNames = $__require("npm:classnames@2.2.5.js");
  var React = $__require("npm:react@0.14.9.js");
  var Classes = $__require("npm:@blueprintjs/core@1.33.0/dist/common/classes.js");
  var Errors = $__require("npm:@blueprintjs/core@1.33.0/dist/common/errors.js");
  var utils_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/utils.js");
  var coreSlider_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/slider/coreSlider.js");
  var handle_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/slider/handle.js");
  var RangeIndex;
  (function (RangeIndex) {
    RangeIndex[RangeIndex["START"] = 0] = "START";
    RangeIndex[RangeIndex["END"] = 1] = "END";
  })(RangeIndex || (RangeIndex = {}));
  var RangeSlider = function (_super) {
    tslib_1.__extends(RangeSlider, _super);
    function RangeSlider() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.className = classNames(Classes.SLIDER, Classes.RANGE_SLIDER);
      _this.handles = [];
      _this.addHandleRef = function (ref) {
        if (ref != null) {
          _this.handles.push(ref);
        }
      };
      _this.getHandlerForIndex = function (index, callback) {
        return function (newValue) {
          if (utils_1.isFunction(callback)) {
            var _a = _this.props.value,
                startValue = _a[0],
                endValue = _a[1];
            if (index === RangeIndex.START) {
              callback([Math.min(newValue, endValue), endValue]);
            } else {
              callback([startValue, Math.max(newValue, startValue)]);
            }
          }
        };
      };
      _this.handleChange = function (newValue) {
        var _a = _this.props.value,
            startValue = _a[0],
            endValue = _a[1];
        var newStartValue = newValue[0],
            newEndValue = newValue[1];
        if ((startValue !== newStartValue || endValue !== newEndValue) && utils_1.isFunction(_this.props.onChange)) {
          _this.props.onChange(newValue);
        }
      };
      return _this;
    }
    RangeSlider.prototype.renderFill = function () {
      var tickSize = this.state.tickSize;
      var _a = this.props.value,
          startValue = _a[0],
          endValue = _a[1];
      if (startValue === endValue) {
        return undefined;
      }
      var offset = Math.round((startValue - this.props.min) * tickSize) - 1;
      var size = Math.round((endValue - startValue) * tickSize) + 2;
      if (size < 0) {
        offset += size;
        size = Math.abs(size);
      }
      var style = this.props.vertical ? {
        bottom: offset,
        height: size
      } : {
        left: offset,
        width: size
      };
      return React.createElement("div", {
        className: Classes.SLIDER + "-progress",
        style: style
      });
    };
    RangeSlider.prototype.renderHandles = function () {
      var _this = this;
      var _a = this.props,
          disabled = _a.disabled,
          max = _a.max,
          min = _a.min,
          onRelease = _a.onRelease,
          stepSize = _a.stepSize,
          value = _a.value,
          vertical = _a.vertical;
      return value.map(function (val, index) {
        return React.createElement(handle_1.Handle, {
          disabled: disabled,
          key: index,
          label: _this.formatLabel(val),
          max: max,
          min: min,
          onChange: _this.getHandlerForIndex(index, _this.handleChange),
          onRelease: _this.getHandlerForIndex(index, onRelease),
          ref: _this.addHandleRef,
          stepSize: stepSize,
          tickSize: _this.state.tickSize,
          value: val,
          vertical: vertical
        });
      });
    };
    RangeSlider.prototype.handleTrackClick = function (event) {
      var _this = this;
      this.handles.reduce(function (min, handle) {
        var offset = handle.mouseEventClientOffset(event);
        var value = handle.clientToValue(offset);
        return _this.nearestHandleForValue(value, min, handle);
      }).beginHandleMovement(event);
    };
    RangeSlider.prototype.handleTrackTouch = function (event) {
      var _this = this;
      this.handles.reduce(function (min, handle) {
        var value = handle.clientToValue(handle.touchEventClientOffset(event));
        return _this.nearestHandleForValue(value, min, handle);
      }).beginHandleTouchMovement(event);
    };
    RangeSlider.prototype.nearestHandleForValue = function (value, firstHandle, secondHandle) {
      var firstHandleValue = firstHandle.props.value;
      var firstDistance = Math.abs(value - firstHandleValue);
      var secondDistance = Math.abs(value - secondHandle.props.value);
      if (firstDistance < secondDistance) {
        return firstHandle;
      } else if (secondDistance < firstDistance) {
        return secondHandle;
      } else {
        return value < firstHandleValue ? firstHandle : secondHandle;
      }
    };
    RangeSlider.prototype.validateProps = function (props) {
      var value = props.value;
      if (value == null || value[RangeIndex.START] == null || value[RangeIndex.END] == null) {
        throw new Error(Errors.RANGESLIDER_NULL_VALUE);
      }
    };
    return RangeSlider;
  }(coreSlider_1.CoreSlider);
  RangeSlider.defaultProps = {
    disabled: false,
    labelStepSize: 1,
    max: 10,
    min: 0,
    showTrackFill: true,
    stepSize: 1,
    value: [0, 10],
    vertical: false
  };
  RangeSlider.displayName = "Blueprint.RangeSlider";
  exports.RangeSlider = RangeSlider;
  exports.RangeSliderFactory = React.createFactory(RangeSlider);
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/slider/coreSlider.js", ["npm:tslib@1.8.0.js", "npm:classnames@2.2.5.js", "npm:pure-render-decorator@1.2.1.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/abstractComponent.js", "npm:@blueprintjs/core@1.33.0/dist/common/classes.js", "npm:@blueprintjs/core@1.33.0/dist/common/errors.js", "npm:@blueprintjs/core@1.33.0/dist/common/utils.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var classNames = $__require("npm:classnames@2.2.5.js");
  var PureRender = $__require("npm:pure-render-decorator@1.2.1.js");
  var React = $__require("npm:react@0.14.9.js");
  var abstractComponent_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/abstractComponent.js");
  var Classes = $__require("npm:@blueprintjs/core@1.33.0/dist/common/classes.js");
  var Errors = $__require("npm:@blueprintjs/core@1.33.0/dist/common/errors.js");
  var utils_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/utils.js");
  var CoreSlider = function (_super) {
    tslib_1.__extends(CoreSlider, _super);
    function CoreSlider(props) {
      var _this = _super.call(this, props) || this;
      _this.className = Classes.SLIDER;
      _this.refHandlers = { track: function (el) {
          return _this.trackElement = el;
        } };
      _this.maybeHandleTrackClick = function (event) {
        if (_this.canHandleTrackEvent(event)) {
          _this.handleTrackClick(event);
        }
      };
      _this.maybeHandleTrackTouch = function (event) {
        if (_this.canHandleTrackEvent(event)) {
          _this.handleTrackTouch(event);
        }
      };
      _this.canHandleTrackEvent = function (event) {
        var target = event.target;
        return !_this.props.disabled && target.closest("." + Classes.SLIDER_HANDLE) == null;
      };
      _this.state = {
        labelPrecision: _this.getLabelPrecision(props),
        tickSize: 0
      };
      return _this;
    }
    CoreSlider.prototype.render = function () {
      var classes = classNames(this.className, (_a = {}, _a[Classes.DISABLED] = this.props.disabled, _a[Classes.SLIDER + "-unlabeled"] = this.props.renderLabel === false, _a[Classes.VERTICAL] = this.props.vertical, _a), this.props.className);
      return React.createElement("div", {
        className: classes,
        onMouseDown: this.maybeHandleTrackClick,
        onTouchStart: this.maybeHandleTrackTouch
      }, React.createElement("div", {
        className: Classes.SLIDER + "-track",
        ref: this.refHandlers.track
      }), this.maybeRenderFill(), this.maybeRenderAxis(), this.renderHandles());
      var _a;
    };
    CoreSlider.prototype.componentDidMount = function () {
      this.updateTickSize();
    };
    CoreSlider.prototype.componentDidUpdate = function () {
      this.updateTickSize();
    };
    CoreSlider.prototype.componentWillReceiveProps = function (props) {
      _super.prototype.componentWillReceiveProps.call(this, props);
      this.setState({ labelPrecision: this.getLabelPrecision(props) });
    };
    CoreSlider.prototype.formatLabel = function (value) {
      var renderLabel = this.props.renderLabel;
      if (renderLabel === false) {
        return undefined;
      } else if (utils_1.isFunction(renderLabel)) {
        return renderLabel(value);
      } else {
        return value.toFixed(this.state.labelPrecision);
      }
    };
    CoreSlider.prototype.validateProps = function (props) {
      if (props.stepSize <= 0) {
        throw new Error(Errors.SLIDER_ZERO_STEP);
      }
      if (props.labelStepSize <= 0) {
        throw new Error(Errors.SLIDER_ZERO_LABEL_STEP);
      }
    };
    CoreSlider.prototype.getTrackInitialPixel = function () {
      if (this.trackElement == null) {
        return undefined;
      }
      var trackRect = this.trackElement.getBoundingClientRect();
      return this.props.vertical ? trackRect.top + trackRect.height : trackRect.left;
    };
    CoreSlider.prototype.maybeRenderAxis = function () {
      var max = this.props.max;
      var min = this.props.min;
      var labelStepSize = this.props.labelStepSize;
      if (this.props.renderLabel === false) {
        return undefined;
      }
      var stepSize = Math.round(this.state.tickSize * labelStepSize);
      var labels = [];
      for (var i = min, offset = 0; i < max || utils_1.approxEqual(i, max); i += labelStepSize, offset += stepSize) {
        var style = this.props.vertical ? { bottom: offset } : { left: offset };
        labels.push(React.createElement("div", {
          className: Classes.SLIDER + "-label",
          key: i,
          style: style
        }, this.formatLabel(i)));
      }
      return React.createElement("div", { className: Classes.SLIDER + "-axis" }, labels);
    };
    CoreSlider.prototype.maybeRenderFill = function () {
      if (this.props.showTrackFill && this.trackElement != null) {
        return this.renderFill();
      }
      return undefined;
    };
    CoreSlider.prototype.getLabelPrecision = function (_a) {
      var labelPrecision = _a.labelPrecision,
          stepSize = _a.stepSize;
      return labelPrecision == null ? utils_1.countDecimalPlaces(stepSize) : labelPrecision;
    };
    CoreSlider.prototype.updateTickSize = function () {
      if (this.trackElement != null) {
        var trackSize = this.props.vertical ? this.trackElement.clientHeight : this.trackElement.clientWidth;
        var tickSize = trackSize / (this.props.max - this.props.min);
        this.setState({ tickSize: tickSize });
      }
    };
    return CoreSlider;
  }(abstractComponent_1.AbstractComponent);
  CoreSlider = tslib_1.__decorate([PureRender], CoreSlider);
  exports.CoreSlider = CoreSlider;
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/slider/handle.js", ["npm:tslib@1.8.0.js", "npm:classnames@2.2.5.js", "npm:pure-render-decorator@1.2.1.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/abstractComponent.js", "npm:@blueprintjs/core@1.33.0/dist/common/classes.js", "npm:@blueprintjs/core@1.33.0/dist/common/keys.js", "npm:@blueprintjs/core@1.33.0/dist/common/utils.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var classNames = $__require("npm:classnames@2.2.5.js");
  var PureRender = $__require("npm:pure-render-decorator@1.2.1.js");
  var React = $__require("npm:react@0.14.9.js");
  var abstractComponent_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/abstractComponent.js");
  var Classes = $__require("npm:@blueprintjs/core@1.33.0/dist/common/classes.js");
  var Keys = $__require("npm:@blueprintjs/core@1.33.0/dist/common/keys.js");
  var utils_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/utils.js");
  var NUMBER_PROPS = ["max", "min", "stepSize", "tickSize", "value"];
  var Handle = function (_super) {
    tslib_1.__extends(Handle, _super);
    function Handle() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = { isMoving: false };
      _this.refHandlers = { handle: function (el) {
          return _this.handleElement = el;
        } };
      _this.beginHandleMovement = function (event) {
        document.addEventListener("mousemove", _this.handleHandleMovement);
        document.addEventListener("mouseup", _this.endHandleMovement);
        _this.setState({ isMoving: true });
        _this.changeValue(_this.clientToValue(_this.mouseEventClientOffset(event)));
      };
      _this.beginHandleTouchMovement = function (event) {
        document.addEventListener("touchmove", _this.handleHandleTouchMovement);
        document.addEventListener("touchend", _this.endHandleTouchMovement);
        document.addEventListener("touchcancel", _this.endHandleTouchMovement);
        _this.setState({ isMoving: true });
        _this.changeValue(_this.clientToValue(_this.touchEventClientOffset(event)));
      };
      _this.endHandleMovement = function (event) {
        _this.handleMoveEndedAt(_this.mouseEventClientOffset(event));
      };
      _this.endHandleTouchMovement = function (event) {
        _this.handleMoveEndedAt(_this.touchEventClientOffset(event));
      };
      _this.handleMoveEndedAt = function (clientPixel) {
        _this.removeDocumentEventListeners();
        _this.setState({ isMoving: false });
        var onRelease = _this.props.onRelease;
        var finalValue = _this.clamp(_this.clientToValue(clientPixel));
        utils_1.safeInvoke(onRelease, finalValue);
      };
      _this.handleHandleMovement = function (event) {
        _this.handleMovedTo(_this.mouseEventClientOffset(event));
      };
      _this.handleHandleTouchMovement = function (event) {
        _this.handleMovedTo(_this.touchEventClientOffset(event));
      };
      _this.handleMovedTo = function (clientPixel) {
        if (_this.state.isMoving && !_this.props.disabled) {
          _this.changeValue(_this.clientToValue(clientPixel));
        }
      };
      _this.handleKeyDown = function (event) {
        var _a = _this.props,
            stepSize = _a.stepSize,
            value = _a.value;
        var which = event.which;
        if (which === Keys.ARROW_DOWN || which === Keys.ARROW_LEFT) {
          _this.changeValue(value - stepSize);
          event.preventDefault();
        } else if (which === Keys.ARROW_UP || which === Keys.ARROW_RIGHT) {
          _this.changeValue(value + stepSize);
          event.preventDefault();
        }
      };
      _this.handleKeyUp = function (event) {
        if ([Keys.ARROW_UP, Keys.ARROW_DOWN, Keys.ARROW_LEFT, Keys.ARROW_RIGHT].indexOf(event.which) >= 0) {
          utils_1.safeInvoke(_this.props.onRelease, _this.props.value);
        }
      };
      return _this;
    }
    Handle.prototype.render = function () {
      var _a = this.props,
          className = _a.className,
          disabled = _a.disabled,
          label = _a.label,
          min = _a.min,
          tickSize = _a.tickSize,
          value = _a.value,
          vertical = _a.vertical;
      var isMoving = this.state.isMoving;
      var handleMidpoint = this.getHandleMidpointAndOffset(this.handleElement, true).handleMidpoint;
      var offset = Math.round((value - min) * tickSize - handleMidpoint);
      var style = vertical ? { bottom: offset } : { left: offset };
      return React.createElement("span", {
        className: classNames(Classes.SLIDER_HANDLE, (_b = {}, _b[Classes.ACTIVE] = isMoving, _b), className),
        onKeyDown: disabled ? null : this.handleKeyDown,
        onKeyUp: disabled ? null : this.handleKeyUp,
        onMouseDown: disabled ? null : this.beginHandleMovement,
        onTouchStart: disabled ? null : this.beginHandleTouchMovement,
        ref: this.refHandlers.handle,
        style: style,
        tabIndex: 0
      }, label == null ? null : React.createElement("span", { className: Classes.SLIDER_LABEL }, label));
      var _b;
    };
    Handle.prototype.componentWillUnmount = function () {
      this.removeDocumentEventListeners();
    };
    Handle.prototype.clientToValue = function (clientPixel) {
      var _a = this.props,
          stepSize = _a.stepSize,
          tickSize = _a.tickSize,
          value = _a.value,
          vertical = _a.vertical;
      if (this.handleElement == null) {
        return value;
      }
      var clientPixelNormalized = vertical ? window.innerHeight - clientPixel : clientPixel;
      var handleCenterPixel = this.getHandleElementCenterPixel(this.handleElement);
      var pixelDelta = clientPixelNormalized - handleCenterPixel;
      var valueDelta = Math.round(pixelDelta / (tickSize * stepSize)) * stepSize;
      return value + valueDelta;
    };
    Handle.prototype.mouseEventClientOffset = function (event) {
      return this.props.vertical ? event.clientY : event.clientX;
    };
    Handle.prototype.touchEventClientOffset = function (event) {
      var touch = event.changedTouches[0];
      return this.props.vertical ? touch.clientY : touch.clientX;
    };
    Handle.prototype.validateProps = function (props) {
      for (var _i = 0, NUMBER_PROPS_1 = NUMBER_PROPS; _i < NUMBER_PROPS_1.length; _i++) {
        var prop = NUMBER_PROPS_1[_i];
        if (typeof props[prop] !== "number") {
          throw new Error("[Blueprint] <Handle> requires number value for " + prop + " prop");
        }
      }
    };
    Handle.prototype.changeValue = function (newValue, callback) {
      if (callback === void 0) {
        callback = this.props.onChange;
      }
      newValue = this.clamp(newValue);
      if (!isNaN(newValue) && this.props.value !== newValue) {
        utils_1.safeInvoke(callback, newValue);
      }
    };
    Handle.prototype.clamp = function (value) {
      return utils_1.clamp(value, this.props.min, this.props.max);
    };
    Handle.prototype.getHandleElementCenterPixel = function (handleElement) {
      var _a = this.getHandleMidpointAndOffset(handleElement),
          handleMidpoint = _a.handleMidpoint,
          handleOffset = _a.handleOffset;
      return handleOffset + handleMidpoint;
    };
    Handle.prototype.getHandleMidpointAndOffset = function (handleElement, useOppositeDimension) {
      if (useOppositeDimension === void 0) {
        useOppositeDimension = false;
      }
      if (handleElement == null) {
        return {
          handleMidpoint: 0,
          handleOffset: 0
        };
      }
      var vertical = this.props.vertical;
      var handleRect = handleElement.getBoundingClientRect();
      var sizeKey = vertical ? useOppositeDimension ? "width" : "height" : useOppositeDimension ? "height" : "width";
      var handleOffset = vertical ? window.innerHeight - (handleRect.top + handleRect[sizeKey]) : handleRect.left;
      return {
        handleMidpoint: handleRect[sizeKey] / 2,
        handleOffset: handleOffset
      };
    };
    Handle.prototype.removeDocumentEventListeners = function () {
      document.removeEventListener("mousemove", this.handleHandleMovement);
      document.removeEventListener("mouseup", this.endHandleMovement);
      document.removeEventListener("touchmove", this.handleHandleTouchMovement);
      document.removeEventListener("touchend", this.endHandleTouchMovement);
      document.removeEventListener("touchcancel", this.endHandleTouchMovement);
    };
    return Handle;
  }(abstractComponent_1.AbstractComponent);
  Handle.displayName = "Blueprint.SliderHandle";
  Handle = tslib_1.__decorate([PureRender], Handle);
  exports.Handle = Handle;
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/slider/slider.js", ["npm:tslib@1.8.0.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/classes.js", "npm:@blueprintjs/core@1.33.0/dist/common/utils.js", "npm:@blueprintjs/core@1.33.0/dist/components/slider/coreSlider.js", "npm:@blueprintjs/core@1.33.0/dist/components/slider/handle.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var React = $__require("npm:react@0.14.9.js");
  var Classes = $__require("npm:@blueprintjs/core@1.33.0/dist/common/classes.js");
  var utils_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/utils.js");
  var coreSlider_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/slider/coreSlider.js");
  var handle_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/slider/handle.js");
  var Slider = function (_super) {
    tslib_1.__extends(Slider, _super);
    function Slider() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.handleHandleRef = function (ref) {
        _this.handle = ref;
      };
      return _this;
    }
    Slider.prototype.renderFill = function () {
      var tickSize = this.state.tickSize;
      var initialValue = utils_1.clamp(this.props.initialValue, this.props.min, this.props.max);
      var offset = Math.round((initialValue - this.props.min) * tickSize);
      var size = Math.round((this.props.value - initialValue) * tickSize);
      if (size < 0) {
        offset += size;
        size = Math.abs(size);
      }
      var style = this.props.vertical ? {
        bottom: offset,
        height: size
      } : {
        left: offset,
        width: size
      };
      return React.createElement("div", {
        className: Classes.SLIDER + "-progress",
        style: style
      });
    };
    Slider.prototype.renderHandles = function () {
      return React.createElement(handle_1.Handle, tslib_1.__assign({}, this.props, this.state, {
        className: "",
        label: this.formatLabel(this.props.value),
        ref: this.handleHandleRef
      }));
    };
    Slider.prototype.handleTrackClick = function (event) {
      if (this.handle != null) {
        this.handle.beginHandleMovement(event);
      }
    };
    Slider.prototype.handleTrackTouch = function (event) {
      if (this.handle != null) {
        this.handle.beginHandleTouchMovement(event);
      }
    };
    return Slider;
  }(coreSlider_1.CoreSlider);
  Slider.defaultProps = {
    disabled: false,
    initialValue: 0,
    labelStepSize: 1,
    max: 10,
    min: 0,
    showTrackFill: true,
    stepSize: 1,
    value: 0,
    vertical: false
  };
  exports.Slider = Slider;
  exports.SliderFactory = React.createFactory(Slider);
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/spinner/svgSpinner.js", ["npm:tslib@1.8.0.js", "npm:classnames@2.2.5.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/classes.js", "npm:@blueprintjs/core@1.33.0/dist/components/spinner/spinner.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var classNames = $__require("npm:classnames@2.2.5.js");
  var React = $__require("npm:react@0.14.9.js");
  var Classes = $__require("npm:@blueprintjs/core@1.33.0/dist/common/classes.js");
  var spinner = $__require("npm:@blueprintjs/core@1.33.0/dist/components/spinner/spinner.js");
  var SVGSpinner = function (_super) {
    tslib_1.__extends(SVGSpinner, _super);
    function SVGSpinner() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    SVGSpinner.prototype.renderContainer = function (classes, content) {
      return React.createElement("g", { className: classNames(Classes.SVG_SPINNER, classes) }, React.createElement("g", { className: "pt-svg-spinner-transform-group" }, content));
    };
    return SVGSpinner;
  }(spinner.Spinner);
  exports.SVGSpinner = SVGSpinner;
  exports.SVGSpinnerFactory = React.createFactory(SVGSpinner);
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/tabs/tab.js", ["npm:tslib@1.8.0.js", "npm:classnames@2.2.5.js", "npm:pure-render-decorator@1.2.1.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/classes.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var classNames = $__require("npm:classnames@2.2.5.js");
  var PureRender = $__require("npm:pure-render-decorator@1.2.1.js");
  var React = $__require("npm:react@0.14.9.js");
  var Classes = $__require("npm:@blueprintjs/core@1.33.0/dist/common/classes.js");
  var Tab = function (_super) {
    tslib_1.__extends(Tab, _super);
    function Tab() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Tab.prototype.render = function () {
      return React.createElement("li", {
        "aria-controls": this.props.panelId,
        "aria-disabled": this.props.isDisabled,
        "aria-expanded": this.props.isSelected,
        "aria-selected": this.props.isSelected,
        className: classNames(Classes.TAB, this.props.className),
        id: this.props.id,
        role: "tab",
        selected: this.props.isSelected ? true : null,
        tabIndex: this.props.isDisabled ? null : 0
      }, this.props.children);
    };
    return Tab;
  }(React.Component);
  Tab.defaultProps = {
    isDisabled: false,
    isSelected: false
  };
  Tab.displayName = "Blueprint.Tab";
  Tab = tslib_1.__decorate([PureRender], Tab);
  exports.Tab = Tab;
  exports.TabFactory = React.createFactory(Tab);
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/tabs/tabs.js", ["npm:tslib@1.8.0.js", "npm:classnames@2.2.5.js", "npm:pure-render-decorator@1.2.1.js", "npm:react@0.14.9.js", "npm:react-dom@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/abstractComponent.js", "npm:@blueprintjs/core@1.33.0/dist/common/classes.js", "npm:@blueprintjs/core@1.33.0/dist/common/errors.js", "npm:@blueprintjs/core@1.33.0/dist/common/keys.js", "npm:@blueprintjs/core@1.33.0/dist/common/utils.js", "npm:@blueprintjs/core@1.33.0/dist/components/tabs/tab.js", "npm:@blueprintjs/core@1.33.0/dist/components/tabs/tabList.js", "npm:@blueprintjs/core@1.33.0/dist/components/tabs/tabPanel.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var classNames = $__require("npm:classnames@2.2.5.js");
  var PureRender = $__require("npm:pure-render-decorator@1.2.1.js");
  var React = $__require("npm:react@0.14.9.js");
  var react_dom_1 = $__require("npm:react-dom@0.14.9.js");
  var abstractComponent_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/abstractComponent.js");
  var Classes = $__require("npm:@blueprintjs/core@1.33.0/dist/common/classes.js");
  var Errors = $__require("npm:@blueprintjs/core@1.33.0/dist/common/errors.js");
  var Keys = $__require("npm:@blueprintjs/core@1.33.0/dist/common/keys.js");
  var Utils = $__require("npm:@blueprintjs/core@1.33.0/dist/common/utils.js");
  var tab_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/tabs/tab.js");
  var tabList_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/tabs/tabList.js");
  var tabPanel_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/tabs/tabPanel.js");
  var TAB_CSS_SELECTOR = "li[role=tab]";
  var Tabs = function (_super) {
    tslib_1.__extends(Tabs, _super);
    function Tabs(props, context) {
      var _this = _super.call(this, props, context) || this;
      _this.state = {};
      _this.panelIds = [];
      _this.tabIds = [];
      _this.handleClick = function (e) {
        _this.handleTabSelectingEvent(e);
      };
      _this.handleKeyPress = function (e) {
        var insideTab = e.target.closest("." + Classes.TAB) != null;
        if (insideTab && (e.which === Keys.SPACE || e.which === Keys.ENTER)) {
          e.preventDefault();
          _this.handleTabSelectingEvent(e);
        }
      };
      _this.handleKeyDown = function (e) {
        var insideTabList = e.target.closest("." + Classes.TAB_LIST) != null;
        if (!insideTabList) {
          return;
        }
        var focusedTabIndex = _this.getFocusedTabIndex();
        if (focusedTabIndex === -1) {
          return;
        }
        if (e.which === Keys.ARROW_LEFT) {
          e.preventDefault();
          var newTabIndex = focusedTabIndex - 1;
          var tabIsDisabled = _this.isTabDisabled(newTabIndex);
          while (tabIsDisabled && newTabIndex !== -1) {
            newTabIndex--;
            tabIsDisabled = _this.isTabDisabled(newTabIndex);
          }
          if (newTabIndex !== -1) {
            _this.focusTab(newTabIndex);
          }
        } else if (e.which === Keys.ARROW_RIGHT) {
          e.preventDefault();
          var tabsCount = _this.getTabsCount();
          var newTabIndex = focusedTabIndex + 1;
          var tabIsDisabled = _this.isTabDisabled(newTabIndex);
          while (tabIsDisabled && newTabIndex !== tabsCount) {
            newTabIndex++;
            tabIsDisabled = _this.isTabDisabled(newTabIndex);
          }
          if (newTabIndex !== tabsCount) {
            _this.focusTab(newTabIndex);
          }
        }
      };
      _this.handleTabSelectingEvent = function (e) {
        var tabElement = e.target.closest(TAB_CSS_SELECTOR);
        if (tabElement != null && _this.tabIds.indexOf(tabElement.id) >= 0 && tabElement.getAttribute("aria-disabled") !== "true") {
          var index = tabElement.parentElement.queryAll(TAB_CSS_SELECTOR).indexOf(tabElement);
          _this.setSelectedTabIndex(index);
        }
      };
      _this.state = _this.getStateFromProps(_this.props);
      if (!Utils.isNodeEnv("production")) {
        console.warn(Errors.TABS_WARN_DEPRECATED);
      }
      return _this;
    }
    Tabs.prototype.render = function () {
      return React.createElement("div", {
        className: classNames(Classes.TABS, this.props.className),
        onClick: this.handleClick,
        onKeyPress: this.handleKeyPress,
        onKeyDown: this.handleKeyDown
      }, this.getChildren());
    };
    Tabs.prototype.componentWillReceiveProps = function (newProps) {
      var newState = this.getStateFromProps(newProps);
      this.setState(newState);
    };
    Tabs.prototype.componentDidMount = function () {
      var _this = this;
      var selectedTab = react_dom_1.findDOMNode(this.refs["tabs-" + this.state.selectedTabIndex]);
      this.setTimeout(function () {
        return _this.moveIndicator(selectedTab);
      });
    };
    Tabs.prototype.componentDidUpdate = function (_, prevState) {
      var _this = this;
      var newIndex = this.state.selectedTabIndex;
      if (newIndex !== prevState.selectedTabIndex) {
        var tabElement_1 = react_dom_1.findDOMNode(this.refs["tabs-" + newIndex]);
        this.setTimeout(function () {
          return _this.moveIndicator(tabElement_1);
        });
      }
    };
    Tabs.prototype.validateProps = function (props) {
      if (React.Children.count(props.children) > 0) {
        var child = React.Children.toArray(props.children)[0];
        if (child != null && child.type !== tabList_1.TabList) {
          throw new Error(Errors.TABS_FIRST_CHILD);
        }
        if (this.getTabsCount() !== this.getPanelsCount()) {
          throw new Error(Errors.TABS_MISMATCH);
        }
      }
    };
    Tabs.prototype.moveIndicator = function (_a) {
      var clientHeight = _a.clientHeight,
          clientWidth = _a.clientWidth,
          offsetLeft = _a.offsetLeft,
          offsetTop = _a.offsetTop;
      var indicatorWrapperStyle = {
        height: clientHeight,
        transform: "translateX(" + Math.floor(offsetLeft) + "px) translateY(" + Math.floor(offsetTop) + "px)",
        width: clientWidth
      };
      this.setState({ indicatorWrapperStyle: indicatorWrapperStyle });
    };
    Tabs.prototype.getChildren = function () {
      var _this = this;
      for (var unassignedTabs = this.getTabsCount() - this.tabIds.length; unassignedTabs > 0; unassignedTabs--) {
        this.tabIds.push(generateTabId());
        this.panelIds.push(generatePanelId());
      }
      var childIndex = 0;
      return React.Children.map(this.props.children, function (child) {
        var result;
        if (child == null) {
          return null;
        }
        if (childIndex === 0) {
          result = _this.cloneTabList(child);
        } else {
          var tabPanelIndex = childIndex - 1;
          var shouldRenderTabPanel = _this.state.selectedTabIndex === tabPanelIndex;
          result = shouldRenderTabPanel ? _this.cloneTabPanel(child, tabPanelIndex) : null;
        }
        childIndex++;
        return result;
      });
    };
    Tabs.prototype.cloneTabList = function (child) {
      var _this = this;
      var tabIndex = 0;
      var tabs = React.Children.map(child.props.children, function (tab) {
        if (tab == null) {
          return null;
        }
        var clonedTab = React.cloneElement(tab, {
          id: _this.tabIds[tabIndex],
          isSelected: _this.state.selectedTabIndex === tabIndex,
          panelId: _this.panelIds[tabIndex],
          ref: "tabs-" + tabIndex
        });
        tabIndex++;
        return clonedTab;
      });
      return React.cloneElement(child, {
        children: tabs,
        indicatorWrapperStyle: this.state.indicatorWrapperStyle,
        ref: "tablist"
      });
    };
    Tabs.prototype.cloneTabPanel = function (child, tabIndex) {
      return React.cloneElement(child, {
        id: this.panelIds[tabIndex],
        isSelected: this.state.selectedTabIndex === tabIndex,
        ref: "panels-" + tabIndex,
        tabId: this.tabIds[tabIndex]
      });
    };
    Tabs.prototype.focusTab = function (index) {
      var ref = "tabs-" + index;
      var tab = react_dom_1.findDOMNode(this.refs[ref]);
      tab.focus();
    };
    Tabs.prototype.getFocusedTabIndex = function () {
      var focusedElement = document.activeElement;
      if (focusedElement != null && focusedElement.classList.contains(Classes.TAB)) {
        var tabId = focusedElement.id;
        return this.tabIds.indexOf(tabId);
      }
      return -1;
    };
    Tabs.prototype.getTabs = function () {
      if (this.props.children == null) {
        return [];
      }
      var tabs = [];
      if (React.Children.count(this.props.children) > 0) {
        var firstChild = React.Children.toArray(this.props.children)[0];
        if (firstChild != null) {
          React.Children.forEach(firstChild.props.children, function (tabListChild) {
            if (tabListChild.type === tab_1.Tab) {
              tabs.push(tabListChild);
            }
          });
        }
      }
      return tabs;
    };
    Tabs.prototype.getTabsCount = function () {
      return this.getTabs().length;
    };
    Tabs.prototype.getPanelsCount = function () {
      if (this.props.children == null) {
        return 0;
      }
      var index = 0;
      var panelCount = 0;
      React.Children.forEach(this.props.children, function (child) {
        if (child.type === tabPanel_1.TabPanel) {
          panelCount++;
        }
        index++;
      });
      return panelCount;
    };
    Tabs.prototype.getStateFromProps = function (props) {
      var selectedTabIndex = props.selectedTabIndex,
          initialSelectedTabIndex = props.initialSelectedTabIndex;
      if (this.isValidTabIndex(selectedTabIndex)) {
        return { selectedTabIndex: selectedTabIndex };
      } else if (this.isValidTabIndex(initialSelectedTabIndex) && this.state.selectedTabIndex == null) {
        return { selectedTabIndex: initialSelectedTabIndex };
      } else {
        return this.state;
      }
    };
    Tabs.prototype.isTabDisabled = function (index) {
      var tab = this.getTabs()[index];
      return tab != null && tab.props.isDisabled;
    };
    Tabs.prototype.isValidTabIndex = function (index) {
      return index != null && index >= 0 && index < this.getTabsCount();
    };
    Tabs.prototype.setSelectedTabIndex = function (index) {
      if (index === this.state.selectedTabIndex || !this.isValidTabIndex(index)) {
        return;
      }
      var prevSelectedIndex = this.state.selectedTabIndex;
      if (this.props.selectedTabIndex == null) {
        this.setState({ selectedTabIndex: index });
      }
      if (Utils.isFunction(this.props.onChange)) {
        this.props.onChange(index, prevSelectedIndex);
      }
    };
    return Tabs;
  }(abstractComponent_1.AbstractComponent);
  Tabs.defaultProps = { initialSelectedTabIndex: 0 };
  Tabs.displayName = "Blueprint.Tabs";
  Tabs = tslib_1.__decorate([PureRender], Tabs);
  exports.Tabs = Tabs;
  var globalTabCount = 0;
  function generateTabId() {
    return "pt-tab-" + globalTabCount++;
  }
  var globalPanelCount = 0;
  function generatePanelId() {
    return "pt-tab-panel-" + globalPanelCount++;
  }
  exports.TabsFactory = React.createFactory(Tabs);
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/tabs/tabList.js", ["npm:tslib@1.8.0.js", "npm:classnames@2.2.5.js", "npm:pure-render-decorator@1.2.1.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/abstractComponent.js", "npm:@blueprintjs/core@1.33.0/dist/common/classes.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var classNames = $__require("npm:classnames@2.2.5.js");
  var PureRender = $__require("npm:pure-render-decorator@1.2.1.js");
  var React = $__require("npm:react@0.14.9.js");
  var abstractComponent_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/abstractComponent.js");
  var Classes = $__require("npm:@blueprintjs/core@1.33.0/dist/common/classes.js");
  var TabList = function (_super) {
    tslib_1.__extends(TabList, _super);
    function TabList() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = { shouldAnimate: false };
      return _this;
    }
    TabList.prototype.render = function () {
      return React.createElement("ul", {
        className: classNames(Classes.TAB_LIST, this.props.className),
        role: "tablist"
      }, React.createElement("div", {
        className: classNames("pt-tab-indicator-wrapper", { "pt-no-animation": !this.state.shouldAnimate }),
        style: this.props.indicatorWrapperStyle
      }, React.createElement("div", { className: "pt-tab-indicator" })), this.props.children);
    };
    TabList.prototype.componentDidUpdate = function (prevProps) {
      var _this = this;
      if (prevProps.indicatorWrapperStyle == null) {
        this.setTimeout(function () {
          return _this.setState({ shouldAnimate: true });
        });
      }
    };
    return TabList;
  }(abstractComponent_1.AbstractComponent);
  TabList.displayName = "Blueprint.TabList";
  TabList = tslib_1.__decorate([PureRender], TabList);
  exports.TabList = TabList;
  exports.TabListFactory = React.createFactory(TabList);
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/tabs/tabPanel.js", ["npm:tslib@1.8.0.js", "npm:classnames@2.2.5.js", "npm:pure-render-decorator@1.2.1.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/classes.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var classNames = $__require("npm:classnames@2.2.5.js");
  var PureRender = $__require("npm:pure-render-decorator@1.2.1.js");
  var React = $__require("npm:react@0.14.9.js");
  var Classes = $__require("npm:@blueprintjs/core@1.33.0/dist/common/classes.js");
  var TabPanel = function (_super) {
    tslib_1.__extends(TabPanel, _super);
    function TabPanel() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    TabPanel.prototype.render = function () {
      return React.createElement("div", {
        "aria-labelledby": this.props._tabId,
        className: classNames(Classes.TAB_PANEL, this.props.className),
        id: this.props._id,
        role: "tabpanel"
      }, this.props.children);
    };
    return TabPanel;
  }(React.Component);
  TabPanel.displayName = "Blueprint.TabPanel";
  TabPanel = tslib_1.__decorate([PureRender], TabPanel);
  exports.TabPanel = TabPanel;
  exports.TabPanelFactory = React.createFactory(TabPanel);
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/tabs2/tab2.js", ["npm:tslib@1.8.0.js", "npm:classnames@2.2.5.js", "npm:pure-render-decorator@1.2.1.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/classes.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var classNames = $__require("npm:classnames@2.2.5.js");
  var PureRender = $__require("npm:pure-render-decorator@1.2.1.js");
  var React = $__require("npm:react@0.14.9.js");
  var Classes = $__require("npm:@blueprintjs/core@1.33.0/dist/common/classes.js");
  var Tab2 = function (_super) {
    tslib_1.__extends(Tab2, _super);
    function Tab2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Tab2.prototype.render = function () {
      var _a = this.props,
          className = _a.className,
          panel = _a.panel;
      return React.createElement("div", {
        className: classNames(Classes.TAB_PANEL, className),
        role: "tablist"
      }, panel);
    };
    return Tab2;
  }(React.Component);
  Tab2.defaultProps = {
    disabled: false,
    id: undefined
  };
  Tab2.displayName = "Blueprint.Tab2";
  Tab2 = tslib_1.__decorate([PureRender], Tab2);
  exports.Tab2 = Tab2;
  exports.Tab2Factory = React.createFactory(Tab2);
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/tabs2/tabTitle.js", ["npm:tslib@1.8.0.js", "npm:classnames@2.2.5.js", "npm:pure-render-decorator@1.2.1.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/classes.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var classNames = $__require("npm:classnames@2.2.5.js");
  var PureRender = $__require("npm:pure-render-decorator@1.2.1.js");
  var React = $__require("npm:react@0.14.9.js");
  var Classes = $__require("npm:@blueprintjs/core@1.33.0/dist/common/classes.js");
  var TabTitle = function (_super) {
    tslib_1.__extends(TabTitle, _super);
    function TabTitle() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.handleClick = function (e) {
        return _this.props.onClick(_this.props.id, e);
      };
      return _this;
    }
    TabTitle.prototype.render = function () {
      var _a = this.props,
          disabled = _a.disabled,
          id = _a.id,
          parentId = _a.parentId,
          selected = _a.selected;
      return React.createElement("div", {
        "aria-controls": generateTabPanelId(parentId, id),
        "aria-disabled": disabled,
        "aria-expanded": selected,
        "aria-selected": selected,
        className: classNames(Classes.TAB, this.props.className),
        "data-tab-id": id,
        id: generateTabTitleId(parentId, id),
        onClick: disabled ? undefined : this.handleClick,
        role: "tab",
        selected: selected ? true : undefined,
        tabIndex: disabled ? undefined : 0
      }, this.props.title, this.props.children);
    };
    return TabTitle;
  }(React.Component);
  TabTitle.displayName = "Blueprint.TabTitle";
  TabTitle = tslib_1.__decorate([PureRender], TabTitle);
  exports.TabTitle = TabTitle;
  function generateTabPanelId(parentId, tabId) {
    return Classes.TAB_PANEL + "_" + parentId + "_" + tabId;
  }
  exports.generateTabPanelId = generateTabPanelId;
  function generateTabTitleId(parentId, tabId) {
    return Classes.TAB + "-title_" + parentId + "_" + tabId;
  }
  exports.generateTabTitleId = generateTabTitleId;
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/tabs2/tabs2.js", ["npm:tslib@1.8.0.js", "npm:classnames@2.2.5.js", "npm:pure-render-decorator@1.2.1.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/abstractComponent.js", "npm:@blueprintjs/core@1.33.0/dist/common/classes.js", "npm:@blueprintjs/core@1.33.0/dist/common/keys.js", "npm:@blueprintjs/core@1.33.0/dist/common/utils.js", "npm:@blueprintjs/core@1.33.0/dist/components/tabs2/tab2.js", "npm:@blueprintjs/core@1.33.0/dist/components/tabs2/tabTitle.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var classNames = $__require("npm:classnames@2.2.5.js");
  var PureRender = $__require("npm:pure-render-decorator@1.2.1.js");
  var React = $__require("npm:react@0.14.9.js");
  var abstractComponent_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/abstractComponent.js");
  var Classes = $__require("npm:@blueprintjs/core@1.33.0/dist/common/classes.js");
  var Keys = $__require("npm:@blueprintjs/core@1.33.0/dist/common/keys.js");
  var Utils = $__require("npm:@blueprintjs/core@1.33.0/dist/common/utils.js");
  var tab2_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/tabs2/tab2.js");
  var tabTitle_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/tabs2/tabTitle.js");
  exports.Expander = function () {
    return React.createElement("div", { className: "pt-flex-expander" });
  };
  var TAB_SELECTOR = "." + Classes.TAB;
  var Tabs2 = function (_super) {
    tslib_1.__extends(Tabs2, _super);
    function Tabs2(props) {
      var _this = _super.call(this, props) || this;
      _this.refHandlers = { tablist: function (tabElement) {
          return _this.tablistElement = tabElement;
        } };
      _this.handleKeyDown = function (e) {
        var focusedElement = document.activeElement.closest(TAB_SELECTOR);
        if (focusedElement == null) {
          return;
        }
        var enabledTabElements = _this.getTabElements().filter(function (el) {
          return el.getAttribute("aria-disabled") === "false";
        });
        var focusedIndex = enabledTabElements.indexOf(focusedElement);
        var direction = _this.getKeyCodeDirection(e);
        if (focusedIndex >= 0 && direction !== undefined) {
          e.preventDefault();
          var length_1 = enabledTabElements.length;
          var nextFocusedIndex = (focusedIndex + direction + length_1) % length_1;
          enabledTabElements[nextFocusedIndex].focus();
        }
      };
      _this.handleKeyPress = function (e) {
        var targetTabElement = e.target.closest(TAB_SELECTOR);
        if (targetTabElement != null && isEventKeyCode(e, Keys.SPACE, Keys.ENTER)) {
          e.preventDefault();
          targetTabElement.click();
        }
      };
      _this.handleTabClick = function (newTabId, event) {
        Utils.safeInvoke(_this.props.onChange, newTabId, _this.state.selectedTabId, event);
        if (_this.props.selectedTabId === undefined) {
          _this.setState({ selectedTabId: newTabId });
        }
      };
      _this.renderTabPanel = function (tab) {
        var _a = tab.props,
            className = _a.className,
            panel = _a.panel,
            id = _a.id;
        if (panel === undefined) {
          return undefined;
        }
        return React.createElement("div", {
          "aria-labelledby": tabTitle_1.generateTabTitleId(_this.props.id, id),
          "aria-hidden": id !== _this.state.selectedTabId,
          className: classNames(Classes.TAB_PANEL, className),
          id: tabTitle_1.generateTabPanelId(_this.props.id, id),
          key: id,
          role: "tabpanel"
        }, panel);
      };
      _this.renderTabTitle = function (tab) {
        var id = tab.props.id;
        return React.createElement(tabTitle_1.TabTitle, tslib_1.__assign({}, tab.props, {
          parentId: _this.props.id,
          onClick: _this.handleTabClick,
          selected: id === _this.state.selectedTabId
        }));
      };
      var selectedTabId = _this.getInitialSelectedTabId();
      _this.state = { selectedTabId: selectedTabId };
      return _this;
    }
    Tabs2.prototype.render = function () {
      var _this = this;
      var _a = this.state,
          indicatorWrapperStyle = _a.indicatorWrapperStyle,
          selectedTabId = _a.selectedTabId;
      var tabTitles = React.Children.map(this.props.children, function (child) {
        return isTab(child) ? _this.renderTabTitle(child) : child;
      });
      var tabPanels = this.getTabChildren().filter(this.props.renderActiveTabPanelOnly ? function (tab) {
        return tab.props.id === selectedTabId;
      } : function () {
        return true;
      }).map(this.renderTabPanel);
      var tabIndicator = this.props.animate ? React.createElement("div", {
        className: "pt-tab-indicator-wrapper",
        style: indicatorWrapperStyle
      }, React.createElement("div", { className: "pt-tab-indicator" })) : undefined;
      var classes = classNames(Classes.TABS, (_b = {}, _b[Classes.VERTICAL] = this.props.vertical, _b), this.props.className);
      var tabListClasses = classNames(Classes.TAB_LIST, (_c = {}, _c[Classes.LARGE] = this.props.large, _c));
      return React.createElement("div", { className: classes }, React.createElement("div", {
        className: tabListClasses,
        onKeyDown: this.handleKeyDown,
        onKeyPress: this.handleKeyPress,
        ref: this.refHandlers.tablist,
        role: "tablist"
      }, tabIndicator, tabTitles), tabPanels);
      var _b, _c;
    };
    Tabs2.prototype.componentDidMount = function () {
      this.moveSelectionIndicator();
    };
    Tabs2.prototype.componentWillReceiveProps = function (_a) {
      var selectedTabId = _a.selectedTabId;
      if (selectedTabId !== undefined) {
        this.setState({ selectedTabId: selectedTabId });
      }
    };
    Tabs2.prototype.componentDidUpdate = function (prevProps, prevState) {
      if (this.state.selectedTabId !== prevState.selectedTabId) {
        this.moveSelectionIndicator();
      } else if (prevState.selectedTabId != null) {
        var didChildrenChange = !Utils.arraysEqual(this.getTabChildrenProps(prevProps), this.getTabChildrenProps(), Utils.shallowCompareKeys);
        if (didChildrenChange) {
          this.moveSelectionIndicator();
        }
      }
    };
    Tabs2.prototype.getInitialSelectedTabId = function () {
      var _a = this.props,
          defaultSelectedTabId = _a.defaultSelectedTabId,
          selectedTabId = _a.selectedTabId;
      if (selectedTabId !== undefined) {
        return selectedTabId;
      } else if (defaultSelectedTabId !== undefined) {
        return defaultSelectedTabId;
      } else {
        var tabs = this.getTabChildren();
        return tabs.length === 0 ? undefined : tabs[0].props.id;
      }
    };
    Tabs2.prototype.getKeyCodeDirection = function (e) {
      if (isEventKeyCode(e, Keys.ARROW_LEFT, Keys.ARROW_UP)) {
        return -1;
      } else if (isEventKeyCode(e, Keys.ARROW_RIGHT, Keys.ARROW_DOWN)) {
        return 1;
      }
      return undefined;
    };
    Tabs2.prototype.getTabChildrenProps = function (props) {
      if (props === void 0) {
        props = this.props;
      }
      return this.getTabChildren(props).map(function (child) {
        return child.props;
      });
    };
    Tabs2.prototype.getTabChildren = function (props) {
      if (props === void 0) {
        props = this.props;
      }
      return React.Children.toArray(props.children).filter(isTab);
    };
    Tabs2.prototype.getTabElements = function (subselector) {
      if (subselector === void 0) {
        subselector = "";
      }
      if (this.tablistElement == null) {
        return [];
      }
      return this.tablistElement.queryAll(TAB_SELECTOR + subselector);
    };
    Tabs2.prototype.moveSelectionIndicator = function () {
      if (this.tablistElement === undefined || !this.props.animate) {
        return;
      }
      var tabIdSelector = TAB_SELECTOR + "[data-tab-id=\"" + this.state.selectedTabId + "\"]";
      var selectedTabElement = this.tablistElement.query(tabIdSelector);
      var indicatorWrapperStyle = { display: "none" };
      if (selectedTabElement != null) {
        var clientHeight = selectedTabElement.clientHeight,
            clientWidth = selectedTabElement.clientWidth,
            offsetLeft = selectedTabElement.offsetLeft,
            offsetTop = selectedTabElement.offsetTop;
        indicatorWrapperStyle = {
          height: clientHeight,
          transform: "translateX(" + Math.floor(offsetLeft) + "px) translateY(" + Math.floor(offsetTop) + "px)",
          width: clientWidth
        };
      }
      this.setState({ indicatorWrapperStyle: indicatorWrapperStyle });
    };
    return Tabs2;
  }(abstractComponent_1.AbstractComponent);
  Tabs2.Expander = exports.Expander;
  Tabs2.Tab = tab2_1.Tab2;
  Tabs2.defaultProps = {
    animate: true,
    large: false,
    renderActiveTabPanelOnly: false,
    vertical: false
  };
  Tabs2.displayName = "Blueprint.Tabs2";
  Tabs2 = tslib_1.__decorate([PureRender], Tabs2);
  exports.Tabs2 = Tabs2;
  exports.Tabs2Factory = React.createFactory(Tabs2);
  function isEventKeyCode(e) {
    var codes = [];
    for (var _i = 1; _i < arguments.length; _i++) {
      codes[_i - 1] = arguments[_i];
    }
    return codes.indexOf(e.which) >= 0;
  }
  function isTab(child) {
    return child != null && child.type === tab2_1.Tab2;
  }
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/tag/tag.js", ["npm:tslib@1.8.0.js", "npm:classnames@2.2.5.js", "npm:pure-render-decorator@1.2.1.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/index.js", "npm:@blueprintjs/core@1.33.0/dist/common/props.js", "npm:@blueprintjs/core@1.33.0/dist/common/classes.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var classNames = $__require("npm:classnames@2.2.5.js");
  var PureRender = $__require("npm:pure-render-decorator@1.2.1.js");
  var React = $__require("npm:react@0.14.9.js");
  var common_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/index.js");
  var props_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/props.js");
  var Classes = $__require("npm:@blueprintjs/core@1.33.0/dist/common/classes.js");
  var Tag = function (_super) {
    tslib_1.__extends(Tag, _super);
    function Tag() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.onRemoveClick = function (e) {
        common_1.Utils.safeInvoke(_this.props.onRemove, e, _this.props);
      };
      return _this;
    }
    Tag.prototype.render = function () {
      var _a = this.props,
          active = _a.active,
          className = _a.className,
          intent = _a.intent,
          onRemove = _a.onRemove;
      var tagClasses = classNames(Classes.TAG, Classes.intentClass(intent), (_b = {}, _b[Classes.TAG_REMOVABLE] = onRemove != null, _b[Classes.ACTIVE] = active, _b), className);
      var button = common_1.Utils.isFunction(onRemove) ? React.createElement("button", {
        type: "button",
        className: Classes.TAG_REMOVE,
        onClick: this.onRemoveClick
      }) : undefined;
      return React.createElement("span", tslib_1.__assign({}, props_1.removeNonHTMLProps(this.props), { className: tagClasses }), this.props.children, button);
      var _b;
    };
    return Tag;
  }(React.Component);
  Tag.displayName = "Blueprint.Tag";
  Tag = tslib_1.__decorate([PureRender], Tag);
  exports.Tag = Tag;
  exports.TagFactory = React.createFactory(Tag);
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/spinner/spinner.js", ["npm:tslib@1.8.0.js", "npm:classnames@2.2.5.js", "npm:pure-render-decorator@1.2.1.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/classes.js", "npm:@blueprintjs/core@1.33.0/dist/common/utils.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var classNames = $__require("npm:classnames@2.2.5.js");
  var PureRender = $__require("npm:pure-render-decorator@1.2.1.js");
  var React = $__require("npm:react@0.14.9.js");
  var Classes = $__require("npm:@blueprintjs/core@1.33.0/dist/common/classes.js");
  var utils_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/utils.js");
  var SPINNER_TRACK = "M 50,50 m 0,-44.5 a 44.5,44.5 0 1 1 0,89 a 44.5,44.5 0 1 1 0,-89";
  var PATH_LENGTH = 280;
  var Spinner = function (_super) {
    tslib_1.__extends(Spinner, _super);
    function Spinner() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Spinner.prototype.render = function () {
      var _a = this.props,
          className = _a.className,
          intent = _a.intent,
          value = _a.value;
      var classes = classNames(Classes.SPINNER, Classes.intentClass(intent), { "pt-no-spin": value != null }, className);
      var style = {
        strokeDasharray: PATH_LENGTH + " " + PATH_LENGTH,
        strokeDashoffset: PATH_LENGTH - PATH_LENGTH * (value == null ? 0.25 : utils_1.clamp(value, 0, 1))
      };
      var svgPathAttributes = {
        className: "pt-spinner-head",
        d: SPINNER_TRACK,
        pathLength: PATH_LENGTH,
        style: style
      };
      return this.renderContainer(classes, React.createElement("svg", { viewBox: classes.indexOf(Classes.SMALL) >= 0 ? "-15 -15 130 130" : "0 0 100 100" }, React.createElement("path", {
        className: "pt-spinner-track",
        d: SPINNER_TRACK
      }), React.createElement("path", tslib_1.__assign({}, svgPathAttributes))));
    };
    Spinner.prototype.renderContainer = function (classes, content) {
      return React.createElement("div", { className: classes }, React.createElement("div", { className: "pt-spinner-svg-container" }, content));
    };
    return Spinner;
  }(React.Component);
  Spinner.displayName = "Blueprint.Spinner";
  Spinner = tslib_1.__decorate([PureRender], Spinner);
  exports.Spinner = Spinner;
  exports.SpinnerFactory = React.createFactory(Spinner);
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/button/abstractButton.js", ["npm:tslib@1.8.0.js", "npm:classnames@2.2.5.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/classes.js", "npm:@blueprintjs/core@1.33.0/dist/common/keys.js", "npm:@blueprintjs/core@1.33.0/dist/common/utils.js", "npm:@blueprintjs/core@1.33.0/dist/components/icon/icon.js", "npm:@blueprintjs/core@1.33.0/dist/components/spinner/spinner.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var classNames = $__require("npm:classnames@2.2.5.js");
  var React = $__require("npm:react@0.14.9.js");
  var Classes = $__require("npm:@blueprintjs/core@1.33.0/dist/common/classes.js");
  var Keys = $__require("npm:@blueprintjs/core@1.33.0/dist/common/keys.js");
  var utils_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/utils.js");
  var icon_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/icon/icon.js");
  var spinner_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/spinner/spinner.js");
  var AbstractButton = function (_super) {
    tslib_1.__extends(AbstractButton, _super);
    function AbstractButton() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = { isActive: false };
      _this.refHandlers = { button: function (ref) {
          _this.buttonRef = ref;
          utils_1.safeInvoke(_this.props.elementRef, ref);
        } };
      _this.currentKeyDown = null;
      _this.handleKeyDown = function (e) {
        if (isKeyboardClick(e.which)) {
          e.preventDefault();
          if (e.which !== _this.currentKeyDown) {
            _this.setState({ isActive: true });
          }
        }
        _this.currentKeyDown = e.which;
        utils_1.safeInvoke(_this.props.onKeyDown, e);
      };
      _this.handleKeyUp = function (e) {
        if (isKeyboardClick(e.which)) {
          _this.setState({ isActive: false });
          _this.buttonRef.click();
        }
        _this.currentKeyDown = null;
        utils_1.safeInvoke(_this.props.onKeyUp, e);
      };
      return _this;
    }
    AbstractButton.prototype.getCommonButtonProps = function () {
      var disabled = this.props.disabled || this.props.loading;
      var className = classNames(Classes.BUTTON, (_a = {}, _a[Classes.ACTIVE] = this.state.isActive || this.props.active, _a[Classes.DISABLED] = disabled, _a[Classes.LOADING] = this.props.loading, _a), Classes.iconClass(this.props.iconName), Classes.intentClass(this.props.intent), this.props.className);
      return {
        className: className,
        disabled: disabled,
        onClick: disabled ? undefined : this.props.onClick,
        onKeyDown: this.handleKeyDown,
        onKeyUp: this.handleKeyUp,
        ref: this.refHandlers.button
      };
      var _a;
    };
    AbstractButton.prototype.renderChildren = function () {
      var _a = this.props,
          loading = _a.loading,
          rightIconName = _a.rightIconName,
          text = _a.text;
      var children = React.Children.map(this.props.children, function (child, index) {
        if (child === "") {
          return undefined;
        } else if (typeof child === "string") {
          return React.createElement("span", { key: "text-" + index }, child);
        }
        return child;
      });
      return [loading ? React.createElement(spinner_1.Spinner, {
        className: "pt-small pt-button-spinner",
        key: "spinner"
      }) : undefined, text != null ? React.createElement("span", { key: "text" }, text) : undefined].concat(children, [React.createElement(icon_1.Icon, {
        className: Classes.ALIGN_RIGHT,
        iconName: rightIconName,
        key: "icon"
      })]);
    };
    return AbstractButton;
  }(React.Component);
  exports.AbstractButton = AbstractButton;
  function isKeyboardClick(keyCode) {
    return keyCode === Keys.ENTER || keyCode === Keys.SPACE;
  }
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/button/buttons.js", ["npm:tslib@1.8.0.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/props.js", "npm:@blueprintjs/core@1.33.0/dist/components/button/abstractButton.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var React = $__require("npm:react@0.14.9.js");
  var props_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/props.js");
  var abstractButton_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/button/abstractButton.js");
  var Button = function (_super) {
    tslib_1.__extends(Button, _super);
    function Button() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Button.prototype.render = function () {
      return React.createElement("button", tslib_1.__assign({ type: "button" }, props_1.removeNonHTMLProps(this.props), this.getCommonButtonProps()), this.renderChildren());
    };
    return Button;
  }(abstractButton_1.AbstractButton);
  Button.displayName = "Blueprint.Button";
  exports.Button = Button;
  exports.ButtonFactory = React.createFactory(Button);
  var AnchorButton = function (_super) {
    tslib_1.__extends(AnchorButton, _super);
    function AnchorButton() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    AnchorButton.prototype.render = function () {
      var _a = this.props,
          href = _a.href,
          _b = _a.tabIndex,
          tabIndex = _b === void 0 ? 0 : _b;
      var commonProps = this.getCommonButtonProps();
      return React.createElement("a", tslib_1.__assign({ role: "button" }, props_1.removeNonHTMLProps(this.props), commonProps, {
        href: commonProps.disabled ? undefined : href,
        tabIndex: commonProps.disabled ? undefined : tabIndex
      }), this.renderChildren());
    };
    return AnchorButton;
  }(abstractButton_1.AbstractButton);
  AnchorButton.displayName = "Blueprint.AnchorButton";
  exports.AnchorButton = AnchorButton;
  exports.AnchorButtonFactory = React.createFactory(AnchorButton);
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/toast/toast.js", ["npm:tslib@1.8.0.js", "npm:classnames@2.2.5.js", "npm:pure-render-decorator@1.2.1.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/abstractComponent.js", "npm:@blueprintjs/core@1.33.0/dist/common/classes.js", "npm:@blueprintjs/core@1.33.0/dist/common/utils.js", "npm:@blueprintjs/core@1.33.0/dist/components/button/buttons.js", "npm:@blueprintjs/core@1.33.0/dist/components/icon/icon.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var classNames = $__require("npm:classnames@2.2.5.js");
  var PureRender = $__require("npm:pure-render-decorator@1.2.1.js");
  var React = $__require("npm:react@0.14.9.js");
  var abstractComponent_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/abstractComponent.js");
  var Classes = $__require("npm:@blueprintjs/core@1.33.0/dist/common/classes.js");
  var utils_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/utils.js");
  var buttons_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/button/buttons.js");
  var icon_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/icon/icon.js");
  var Toast = function (_super) {
    tslib_1.__extends(Toast, _super);
    function Toast() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.handleActionClick = function (e) {
        utils_1.safeInvoke(_this.props.action.onClick, e);
        _this.triggerDismiss(false);
      };
      _this.handleCloseClick = function () {
        return _this.triggerDismiss(false);
      };
      _this.startTimeout = function () {
        if (_this.props.timeout > 0) {
          _this.setTimeout(function () {
            return _this.triggerDismiss(true);
          }, _this.props.timeout);
        }
      };
      return _this;
    }
    Toast.prototype.render = function () {
      var _a = this.props,
          className = _a.className,
          iconName = _a.iconName,
          intent = _a.intent,
          message = _a.message;
      return React.createElement("div", {
        className: classNames(Classes.TOAST, Classes.intentClass(intent), className),
        onBlur: this.startTimeout,
        onFocus: this.clearTimeouts,
        onMouseEnter: this.clearTimeouts,
        onMouseLeave: this.startTimeout,
        tabIndex: 0
      }, React.createElement(icon_1.Icon, { iconName: iconName }), React.createElement("span", { className: Classes.TOAST_MESSAGE }, message), React.createElement("div", { className: classNames(Classes.BUTTON_GROUP, Classes.MINIMAL) }, this.maybeRenderActionButton(), React.createElement(buttons_1.Button, {
        iconName: "cross",
        onClick: this.handleCloseClick
      })));
    };
    Toast.prototype.componentDidMount = function () {
      this.startTimeout();
    };
    Toast.prototype.componentDidUpdate = function (prevProps) {
      if (prevProps.timeout <= 0 && this.props.timeout > 0) {
        this.startTimeout();
      } else if (prevProps.timeout > 0 && this.props.timeout <= 0) {
        this.clearTimeouts();
      }
    };
    Toast.prototype.componentWillUnmount = function () {
      this.clearTimeouts();
    };
    Toast.prototype.maybeRenderActionButton = function () {
      var action = this.props.action;
      if (action == null) {
        return undefined;
      } else {
        return React.createElement(buttons_1.AnchorButton, tslib_1.__assign({}, action, {
          intent: undefined,
          onClick: this.handleActionClick
        }));
      }
    };
    Toast.prototype.triggerDismiss = function (didTimeoutExpire) {
      utils_1.safeInvoke(this.props.onDismiss, didTimeoutExpire);
      this.clearTimeouts();
    };
    return Toast;
  }(abstractComponent_1.AbstractComponent);
  Toast.defaultProps = {
    className: "",
    message: "",
    timeout: 5000
  };
  Toast.displayName = "Blueprint.Toast";
  Toast = tslib_1.__decorate([PureRender], Toast);
  exports.Toast = Toast;
  exports.ToastFactory = React.createFactory(Toast);
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/toast/toaster.js", ["npm:tslib@1.8.0.js", "npm:classnames@2.2.5.js", "npm:pure-render-decorator@1.2.1.js", "npm:react@0.14.9.js", "npm:react-dom@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/abstractComponent.js", "npm:@blueprintjs/core@1.33.0/dist/common/classes.js", "npm:@blueprintjs/core@1.33.0/dist/common/errors.js", "npm:@blueprintjs/core@1.33.0/dist/common/keys.js", "npm:@blueprintjs/core@1.33.0/dist/common/position.js", "npm:@blueprintjs/core@1.33.0/dist/common/utils.js", "npm:@blueprintjs/core@1.33.0/dist/components/overlay/overlay.js", "npm:@blueprintjs/core@1.33.0/dist/components/toast/toast.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var classNames = $__require("npm:classnames@2.2.5.js");
  var PureRender = $__require("npm:pure-render-decorator@1.2.1.js");
  var React = $__require("npm:react@0.14.9.js");
  var ReactDOM = $__require("npm:react-dom@0.14.9.js");
  var abstractComponent_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/abstractComponent.js");
  var Classes = $__require("npm:@blueprintjs/core@1.33.0/dist/common/classes.js");
  var errors_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/errors.js");
  var keys_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/keys.js");
  var position_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/position.js");
  var utils_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/utils.js");
  var overlay_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/overlay/overlay.js");
  var toast_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/toast/toast.js");
  var Toaster = Toaster_1 = function (_super) {
    tslib_1.__extends(Toaster, _super);
    function Toaster() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = { toasts: [] };
      _this.toastId = 0;
      _this.getDismissHandler = function (toast) {
        return function (timeoutExpired) {
          _this.dismiss(toast.key, timeoutExpired);
        };
      };
      _this.handleClose = function (e) {
        if (e.which === keys_1.ESCAPE) {
          _this.clear();
        }
      };
      return _this;
    }
    Toaster.create = function (props, container) {
      if (container === void 0) {
        container = document.body;
      }
      if (props != null && props.inline != null && !utils_1.isNodeEnv("production")) {
        console.warn(errors_1.TOASTER_WARN_INLINE);
      }
      var containerElement = document.createElement("div");
      container.appendChild(containerElement);
      return ReactDOM.render(React.createElement(Toaster_1, tslib_1.__assign({}, props, { inline: true })), containerElement);
    };
    Toaster.prototype.show = function (props) {
      var options = this.createToastOptions(props);
      this.setState(function (prevState) {
        return { toasts: [options].concat(prevState.toasts) };
      });
      return options.key;
    };
    Toaster.prototype.update = function (key, props) {
      var options = this.createToastOptions(props, key);
      this.setState(function (prevState) {
        return { toasts: prevState.toasts.map(function (t) {
            return t.key === key ? options : t;
          }) };
      });
    };
    Toaster.prototype.dismiss = function (key, timeoutExpired) {
      if (timeoutExpired === void 0) {
        timeoutExpired = false;
      }
      this.setState(function (_a) {
        var toasts = _a.toasts;
        return { toasts: toasts.filter(function (t) {
            var matchesKey = t.key === key;
            if (matchesKey) {
              utils_1.safeInvoke(t.onDismiss, timeoutExpired);
            }
            return !matchesKey;
          }) };
      });
    };
    Toaster.prototype.clear = function () {
      this.state.toasts.map(function (t) {
        return utils_1.safeInvoke(t.onDismiss, false);
      });
      this.setState({ toasts: [] });
    };
    Toaster.prototype.getToasts = function () {
      return this.state.toasts;
    };
    Toaster.prototype.render = function () {
      var classes = classNames(Classes.TOAST_CONTAINER, this.getPositionClasses(), this.props.className);
      return React.createElement(overlay_1.Overlay, {
        autoFocus: this.props.autoFocus,
        canEscapeKeyClose: this.props.canEscapeKeyClear,
        canOutsideClickClose: false,
        className: classes,
        enforceFocus: false,
        hasBackdrop: false,
        inline: this.props.inline,
        isOpen: this.state.toasts.length > 0,
        onClose: this.handleClose,
        transitionDuration: 350,
        transitionName: "pt-toast"
      }, this.state.toasts.map(this.renderToast, this));
    };
    Toaster.prototype.validateProps = function (props) {
      if (props.position === position_1.Position.LEFT || props.position === position_1.Position.RIGHT) {
        console.warn(errors_1.TOASTER_WARN_LEFT_RIGHT);
      }
    };
    Toaster.prototype.renderToast = function (toast) {
      return React.createElement(toast_1.Toast, tslib_1.__assign({}, toast, { onDismiss: this.getDismissHandler(toast) }));
    };
    Toaster.prototype.createToastOptions = function (props, key) {
      if (key === void 0) {
        key = "toast-" + this.toastId++;
      }
      return tslib_1.__assign({}, props, { key: key });
    };
    Toaster.prototype.getPositionClasses = function () {
      var positions = position_1.Position[this.props.position].split("_");
      return positions.map(function (p) {
        return Classes.TOAST_CONTAINER + "-" + p.toLowerCase();
      });
    };
    return Toaster;
  }(abstractComponent_1.AbstractComponent);
  Toaster.defaultProps = {
    autoFocus: false,
    canEscapeKeyClear: true,
    inline: false,
    position: position_1.Position.TOP
  };
  Toaster = Toaster_1 = tslib_1.__decorate([PureRender], Toaster);
  exports.Toaster = Toaster;
  var Toaster_1;
});
System.registerDynamic('npm:tether@1.4.1/dist/js/tether.js', [], true, function ($__require, exports, module) {
  /* */
  "format cjs";
  /*! tether 1.4.1 */

  var global = this || self,
      GLOBAL = global;
  (function (root, factory) {
    if (typeof undefined === 'function' && define.amd) {
      define(factory);
    } else if (typeof exports === 'object') {
      module.exports = factory($__require, exports, module);
    } else {
      root.Tether = factory();
    }
  })(this, function (require, exports, module) {

    'use strict';

    var _createClass = function () {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
        }
      }return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
      };
    }();

    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError('Cannot call a class as a function');
      }
    }

    var TetherBase = undefined;
    if (typeof TetherBase === 'undefined') {
      TetherBase = { modules: [] };
    }

    var zeroElement = null;

    // Same as native getBoundingClientRect, except it takes into account parent <frame> offsets
    // if the element lies within a nested document (<frame> or <iframe>-like).
    function getActualBoundingClientRect(node) {
      var boundingRect = node.getBoundingClientRect();

      // The original object returned by getBoundingClientRect is immutable, so we clone it
      // We can't use extend because the properties are not considered part of the object by hasOwnProperty in IE9
      var rect = {};
      for (var k in boundingRect) {
        rect[k] = boundingRect[k];
      }

      if (node.ownerDocument !== document) {
        var _frameElement = node.ownerDocument.defaultView.frameElement;
        if (_frameElement) {
          var frameRect = getActualBoundingClientRect(_frameElement);
          rect.top += frameRect.top;
          rect.bottom += frameRect.top;
          rect.left += frameRect.left;
          rect.right += frameRect.left;
        }
      }

      return rect;
    }

    function getScrollParents(el) {
      // In firefox if the el is inside an iframe with display: none; window.getComputedStyle() will return null;
      // https://bugzilla.mozilla.org/show_bug.cgi?id=548397
      var computedStyle = getComputedStyle(el) || {};
      var position = computedStyle.position;
      var parents = [];

      if (position === 'fixed') {
        return [el];
      }

      var parent = el;
      while ((parent = parent.parentNode) && parent && parent.nodeType === 1) {
        var style = undefined;
        try {
          style = getComputedStyle(parent);
        } catch (err) {}

        if (typeof style === 'undefined' || style === null) {
          parents.push(parent);
          return parents;
        }

        var _style = style;
        var overflow = _style.overflow;
        var overflowX = _style.overflowX;
        var overflowY = _style.overflowY;

        if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {
          if (position !== 'absolute' || ['relative', 'absolute', 'fixed'].indexOf(style.position) >= 0) {
            parents.push(parent);
          }
        }
      }

      parents.push(el.ownerDocument.body);

      // If the node is within a frame, account for the parent window scroll
      if (el.ownerDocument !== document) {
        parents.push(el.ownerDocument.defaultView);
      }

      return parents;
    }

    var uniqueId = function () {
      var id = 0;
      return function () {
        return ++id;
      };
    }();

    var zeroPosCache = {};
    var getOrigin = function getOrigin() {
      // getBoundingClientRect is unfortunately too accurate.  It introduces a pixel or two of
      // jitter as the user scrolls that messes with our ability to detect if two positions
      // are equivilant or not.  We place an element at the top left of the page that will
      // get the same jitter, so we can cancel the two out.
      var node = zeroElement;
      if (!node || !document.body.contains(node)) {
        node = document.createElement('div');
        node.setAttribute('data-tether-id', uniqueId());
        extend(node.style, {
          top: 0,
          left: 0,
          position: 'absolute'
        });

        document.body.appendChild(node);

        zeroElement = node;
      }

      var id = node.getAttribute('data-tether-id');
      if (typeof zeroPosCache[id] === 'undefined') {
        zeroPosCache[id] = getActualBoundingClientRect(node);

        // Clear the cache when this position call is done
        defer(function () {
          delete zeroPosCache[id];
        });
      }

      return zeroPosCache[id];
    };

    function removeUtilElements() {
      if (zeroElement) {
        document.body.removeChild(zeroElement);
      }
      zeroElement = null;
    };

    function getBounds(el) {
      var doc = undefined;
      if (el === document) {
        doc = document;
        el = document.documentElement;
      } else {
        doc = el.ownerDocument;
      }

      var docEl = doc.documentElement;

      var box = getActualBoundingClientRect(el);

      var origin = getOrigin();

      box.top -= origin.top;
      box.left -= origin.left;

      if (typeof box.width === 'undefined') {
        box.width = document.body.scrollWidth - box.left - box.right;
      }
      if (typeof box.height === 'undefined') {
        box.height = document.body.scrollHeight - box.top - box.bottom;
      }

      box.top = box.top - docEl.clientTop;
      box.left = box.left - docEl.clientLeft;
      box.right = doc.body.clientWidth - box.width - box.left;
      box.bottom = doc.body.clientHeight - box.height - box.top;

      return box;
    }

    function getOffsetParent(el) {
      return el.offsetParent || document.documentElement;
    }

    var _scrollBarSize = null;
    function getScrollBarSize() {
      if (_scrollBarSize) {
        return _scrollBarSize;
      }
      var inner = document.createElement('div');
      inner.style.width = '100%';
      inner.style.height = '200px';

      var outer = document.createElement('div');
      extend(outer.style, {
        position: 'absolute',
        top: 0,
        left: 0,
        pointerEvents: 'none',
        visibility: 'hidden',
        width: '200px',
        height: '150px',
        overflow: 'hidden'
      });

      outer.appendChild(inner);

      document.body.appendChild(outer);

      var widthContained = inner.offsetWidth;
      outer.style.overflow = 'scroll';
      var widthScroll = inner.offsetWidth;

      if (widthContained === widthScroll) {
        widthScroll = outer.clientWidth;
      }

      document.body.removeChild(outer);

      var width = widthContained - widthScroll;

      _scrollBarSize = { width: width, height: width };
      return _scrollBarSize;
    }

    function extend() {
      var out = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

      var args = [];

      Array.prototype.push.apply(args, arguments);

      args.slice(1).forEach(function (obj) {
        if (obj) {
          for (var key in obj) {
            if ({}.hasOwnProperty.call(obj, key)) {
              out[key] = obj[key];
            }
          }
        }
      });

      return out;
    }

    function removeClass(el, name) {
      if (typeof el.classList !== 'undefined') {
        name.split(' ').forEach(function (cls) {
          if (cls.trim()) {
            el.classList.remove(cls);
          }
        });
      } else {
        var regex = new RegExp('(^| )' + name.split(' ').join('|') + '( |$)', 'gi');
        var className = getClassName(el).replace(regex, ' ');
        setClassName(el, className);
      }
    }

    function addClass(el, name) {
      if (typeof el.classList !== 'undefined') {
        name.split(' ').forEach(function (cls) {
          if (cls.trim()) {
            el.classList.add(cls);
          }
        });
      } else {
        removeClass(el, name);
        var cls = getClassName(el) + (' ' + name);
        setClassName(el, cls);
      }
    }

    function hasClass(el, name) {
      if (typeof el.classList !== 'undefined') {
        return el.classList.contains(name);
      }
      var className = getClassName(el);
      return new RegExp('(^| )' + name + '( |$)', 'gi').test(className);
    }

    function getClassName(el) {
      // Can't use just SVGAnimatedString here since nodes within a Frame in IE have
      // completely separately SVGAnimatedString base classes
      if (el.className instanceof el.ownerDocument.defaultView.SVGAnimatedString) {
        return el.className.baseVal;
      }
      return el.className;
    }

    function setClassName(el, className) {
      el.setAttribute('class', className);
    }

    function updateClasses(el, add, all) {
      // Of the set of 'all' classes, we need the 'add' classes, and only the
      // 'add' classes to be set.
      all.forEach(function (cls) {
        if (add.indexOf(cls) === -1 && hasClass(el, cls)) {
          removeClass(el, cls);
        }
      });

      add.forEach(function (cls) {
        if (!hasClass(el, cls)) {
          addClass(el, cls);
        }
      });
    }

    var deferred = [];

    var defer = function defer(fn) {
      deferred.push(fn);
    };

    var flush = function flush() {
      var fn = undefined;
      while (fn = deferred.pop()) {
        fn();
      }
    };

    var Evented = function () {
      function Evented() {
        _classCallCheck(this, Evented);
      }

      _createClass(Evented, [{
        key: 'on',
        value: function on(event, handler, ctx) {
          var once = arguments.length <= 3 || arguments[3] === undefined ? false : arguments[3];

          if (typeof this.bindings === 'undefined') {
            this.bindings = {};
          }
          if (typeof this.bindings[event] === 'undefined') {
            this.bindings[event] = [];
          }
          this.bindings[event].push({ handler: handler, ctx: ctx, once: once });
        }
      }, {
        key: 'once',
        value: function once(event, handler, ctx) {
          this.on(event, handler, ctx, true);
        }
      }, {
        key: 'off',
        value: function off(event, handler) {
          if (typeof this.bindings === 'undefined' || typeof this.bindings[event] === 'undefined') {
            return;
          }

          if (typeof handler === 'undefined') {
            delete this.bindings[event];
          } else {
            var i = 0;
            while (i < this.bindings[event].length) {
              if (this.bindings[event][i].handler === handler) {
                this.bindings[event].splice(i, 1);
              } else {
                ++i;
              }
            }
          }
        }
      }, {
        key: 'trigger',
        value: function trigger(event) {
          if (typeof this.bindings !== 'undefined' && this.bindings[event]) {
            var i = 0;

            for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
              args[_key - 1] = arguments[_key];
            }

            while (i < this.bindings[event].length) {
              var _bindings$event$i = this.bindings[event][i];
              var handler = _bindings$event$i.handler;
              var ctx = _bindings$event$i.ctx;
              var once = _bindings$event$i.once;

              var context = ctx;
              if (typeof context === 'undefined') {
                context = this;
              }

              handler.apply(context, args);

              if (once) {
                this.bindings[event].splice(i, 1);
              } else {
                ++i;
              }
            }
          }
        }
      }]);

      return Evented;
    }();

    TetherBase.Utils = {
      getActualBoundingClientRect: getActualBoundingClientRect,
      getScrollParents: getScrollParents,
      getBounds: getBounds,
      getOffsetParent: getOffsetParent,
      extend: extend,
      addClass: addClass,
      removeClass: removeClass,
      hasClass: hasClass,
      updateClasses: updateClasses,
      defer: defer,
      flush: flush,
      uniqueId: uniqueId,
      Evented: Evented,
      getScrollBarSize: getScrollBarSize,
      removeUtilElements: removeUtilElements
    };
    /* globals TetherBase, performance */

    'use strict';

    var _slicedToArray = function () {
      function sliceIterator(arr, i) {
        var _arr = [];var _n = true;var _d = false;var _e = undefined;try {
          for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
            _arr.push(_s.value);if (i && _arr.length === i) break;
          }
        } catch (err) {
          _d = true;_e = err;
        } finally {
          try {
            if (!_n && _i['return']) _i['return']();
          } finally {
            if (_d) throw _e;
          }
        }return _arr;
      }return function (arr, i) {
        if (Array.isArray(arr)) {
          return arr;
        } else if (Symbol.iterator in Object(arr)) {
          return sliceIterator(arr, i);
        } else {
          throw new TypeError('Invalid attempt to destructure non-iterable instance');
        }
      };
    }();

    var _createClass = function () {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
        }
      }return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
      };
    }();

    var _get = function get(_x6, _x7, _x8) {
      var _again = true;_function: while (_again) {
        var object = _x6,
            property = _x7,
            receiver = _x8;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);if (parent === null) {
            return undefined;
          } else {
            _x6 = parent;_x7 = property;_x8 = receiver;_again = true;desc = parent = undefined;continue _function;
          }
        } else if ('value' in desc) {
          return desc.value;
        } else {
          var getter = desc.get;if (getter === undefined) {
            return undefined;
          }return getter.call(receiver);
        }
      }
    };

    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError('Cannot call a class as a function');
      }
    }

    function _inherits(subClass, superClass) {
      if (typeof superClass !== 'function' && superClass !== null) {
        throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
      }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }

    if (typeof TetherBase === 'undefined') {
      throw new Error('You must include the utils.js file before tether.js');
    }

    var _TetherBase$Utils = TetherBase.Utils;
    var getScrollParents = _TetherBase$Utils.getScrollParents;
    var getBounds = _TetherBase$Utils.getBounds;
    var getOffsetParent = _TetherBase$Utils.getOffsetParent;
    var extend = _TetherBase$Utils.extend;
    var addClass = _TetherBase$Utils.addClass;
    var removeClass = _TetherBase$Utils.removeClass;
    var updateClasses = _TetherBase$Utils.updateClasses;
    var defer = _TetherBase$Utils.defer;
    var flush = _TetherBase$Utils.flush;
    var getScrollBarSize = _TetherBase$Utils.getScrollBarSize;
    var removeUtilElements = _TetherBase$Utils.removeUtilElements;

    function within(a, b) {
      var diff = arguments.length <= 2 || arguments[2] === undefined ? 1 : arguments[2];

      return a + diff >= b && b >= a - diff;
    }

    var transformKey = function () {
      if (typeof document === 'undefined') {
        return '';
      }
      var el = document.createElement('div');

      var transforms = ['transform', 'WebkitTransform', 'OTransform', 'MozTransform', 'msTransform'];
      for (var i = 0; i < transforms.length; ++i) {
        var key = transforms[i];
        if (el.style[key] !== undefined) {
          return key;
        }
      }
    }();

    var tethers = [];

    var position = function position() {
      tethers.forEach(function (tether) {
        tether.position(false);
      });
      flush();
    };

    function now() {
      if (performance && performance.now) {
        return performance.now();
      }
      return +new Date();
    }

    (function () {
      var lastCall = null;
      var lastDuration = null;
      var pendingTimeout = null;

      var tick = function tick() {
        if (typeof lastDuration !== 'undefined' && lastDuration > 16) {
          // We voluntarily throttle ourselves if we can't manage 60fps
          lastDuration = Math.min(lastDuration - 16, 250);

          // Just in case this is the last event, remember to position just once more
          pendingTimeout = setTimeout(tick, 250);
          return;
        }

        if (typeof lastCall !== 'undefined' && now() - lastCall < 10) {
          // Some browsers call events a little too frequently, refuse to run more than is reasonable
          return;
        }

        if (pendingTimeout != null) {
          clearTimeout(pendingTimeout);
          pendingTimeout = null;
        }

        lastCall = now();
        position();
        lastDuration = now() - lastCall;
      };

      if (typeof window !== 'undefined' && typeof window.addEventListener !== 'undefined') {
        ['resize', 'scroll', 'touchmove'].forEach(function (event) {
          window.addEventListener(event, tick);
        });
      }
    })();

    var MIRROR_LR = {
      center: 'center',
      left: 'right',
      right: 'left'
    };

    var MIRROR_TB = {
      middle: 'middle',
      top: 'bottom',
      bottom: 'top'
    };

    var OFFSET_MAP = {
      top: 0,
      left: 0,
      middle: '50%',
      center: '50%',
      bottom: '100%',
      right: '100%'
    };

    var autoToFixedAttachment = function autoToFixedAttachment(attachment, relativeToAttachment) {
      var left = attachment.left;
      var top = attachment.top;

      if (left === 'auto') {
        left = MIRROR_LR[relativeToAttachment.left];
      }

      if (top === 'auto') {
        top = MIRROR_TB[relativeToAttachment.top];
      }

      return { left: left, top: top };
    };

    var attachmentToOffset = function attachmentToOffset(attachment) {
      var left = attachment.left;
      var top = attachment.top;

      if (typeof OFFSET_MAP[attachment.left] !== 'undefined') {
        left = OFFSET_MAP[attachment.left];
      }

      if (typeof OFFSET_MAP[attachment.top] !== 'undefined') {
        top = OFFSET_MAP[attachment.top];
      }

      return { left: left, top: top };
    };

    function addOffset() {
      var out = { top: 0, left: 0 };

      for (var _len = arguments.length, offsets = Array(_len), _key = 0; _key < _len; _key++) {
        offsets[_key] = arguments[_key];
      }

      offsets.forEach(function (_ref) {
        var top = _ref.top;
        var left = _ref.left;

        if (typeof top === 'string') {
          top = parseFloat(top, 10);
        }
        if (typeof left === 'string') {
          left = parseFloat(left, 10);
        }

        out.top += top;
        out.left += left;
      });

      return out;
    }

    function offsetToPx(offset, size) {
      if (typeof offset.left === 'string' && offset.left.indexOf('%') !== -1) {
        offset.left = parseFloat(offset.left, 10) / 100 * size.width;
      }
      if (typeof offset.top === 'string' && offset.top.indexOf('%') !== -1) {
        offset.top = parseFloat(offset.top, 10) / 100 * size.height;
      }

      return offset;
    }

    var parseOffset = function parseOffset(value) {
      var _value$split = value.split(' ');

      var _value$split2 = _slicedToArray(_value$split, 2);

      var top = _value$split2[0];
      var left = _value$split2[1];

      return { top: top, left: left };
    };
    var parseAttachment = parseOffset;

    var TetherClass = function (_Evented) {
      _inherits(TetherClass, _Evented);

      function TetherClass(options) {
        var _this = this;

        _classCallCheck(this, TetherClass);

        _get(Object.getPrototypeOf(TetherClass.prototype), 'constructor', this).call(this);
        this.position = this.position.bind(this);

        tethers.push(this);

        this.history = [];

        this.setOptions(options, false);

        TetherBase.modules.forEach(function (module) {
          if (typeof module.initialize !== 'undefined') {
            module.initialize.call(_this);
          }
        });

        this.position();
      }

      _createClass(TetherClass, [{
        key: 'getClass',
        value: function getClass() {
          var key = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];
          var classes = this.options.classes;

          if (typeof classes !== 'undefined' && classes[key]) {
            return this.options.classes[key];
          } else if (this.options.classPrefix) {
            return this.options.classPrefix + '-' + key;
          } else {
            return key;
          }
        }
      }, {
        key: 'setOptions',
        value: function setOptions(options) {
          var _this2 = this;

          var pos = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];

          var defaults = {
            offset: '0 0',
            targetOffset: '0 0',
            targetAttachment: 'auto auto',
            classPrefix: 'tether'
          };

          this.options = extend(defaults, options);

          var _options = this.options;
          var element = _options.element;
          var target = _options.target;
          var targetModifier = _options.targetModifier;

          this.element = element;
          this.target = target;
          this.targetModifier = targetModifier;

          if (this.target === 'viewport') {
            this.target = document.body;
            this.targetModifier = 'visible';
          } else if (this.target === 'scroll-handle') {
            this.target = document.body;
            this.targetModifier = 'scroll-handle';
          }

          ['element', 'target'].forEach(function (key) {
            if (typeof _this2[key] === 'undefined') {
              throw new Error('Tether Error: Both element and target must be defined');
            }

            if (typeof _this2[key].jquery !== 'undefined') {
              _this2[key] = _this2[key][0];
            } else if (typeof _this2[key] === 'string') {
              _this2[key] = document.querySelector(_this2[key]);
            }
          });

          addClass(this.element, this.getClass('element'));
          if (!(this.options.addTargetClasses === false)) {
            addClass(this.target, this.getClass('target'));
          }

          if (!this.options.attachment) {
            throw new Error('Tether Error: You must provide an attachment');
          }

          this.targetAttachment = parseAttachment(this.options.targetAttachment);
          this.attachment = parseAttachment(this.options.attachment);
          this.offset = parseOffset(this.options.offset);
          this.targetOffset = parseOffset(this.options.targetOffset);

          if (typeof this.scrollParents !== 'undefined') {
            this.disable();
          }

          if (this.targetModifier === 'scroll-handle') {
            this.scrollParents = [this.target];
          } else {
            this.scrollParents = getScrollParents(this.target);
          }

          if (!(this.options.enabled === false)) {
            this.enable(pos);
          }
        }
      }, {
        key: 'getTargetBounds',
        value: function getTargetBounds() {
          if (typeof this.targetModifier !== 'undefined') {
            if (this.targetModifier === 'visible') {
              if (this.target === document.body) {
                return { top: pageYOffset, left: pageXOffset, height: innerHeight, width: innerWidth };
              } else {
                var bounds = getBounds(this.target);

                var out = {
                  height: bounds.height,
                  width: bounds.width,
                  top: bounds.top,
                  left: bounds.left
                };

                out.height = Math.min(out.height, bounds.height - (pageYOffset - bounds.top));
                out.height = Math.min(out.height, bounds.height - (bounds.top + bounds.height - (pageYOffset + innerHeight)));
                out.height = Math.min(innerHeight, out.height);
                out.height -= 2;

                out.width = Math.min(out.width, bounds.width - (pageXOffset - bounds.left));
                out.width = Math.min(out.width, bounds.width - (bounds.left + bounds.width - (pageXOffset + innerWidth)));
                out.width = Math.min(innerWidth, out.width);
                out.width -= 2;

                if (out.top < pageYOffset) {
                  out.top = pageYOffset;
                }
                if (out.left < pageXOffset) {
                  out.left = pageXOffset;
                }

                return out;
              }
            } else if (this.targetModifier === 'scroll-handle') {
              var bounds = undefined;
              var target = this.target;
              if (target === document.body) {
                target = document.documentElement;

                bounds = {
                  left: pageXOffset,
                  top: pageYOffset,
                  height: innerHeight,
                  width: innerWidth
                };
              } else {
                bounds = getBounds(target);
              }

              var style = getComputedStyle(target);

              var hasBottomScroll = target.scrollWidth > target.clientWidth || [style.overflow, style.overflowX].indexOf('scroll') >= 0 || this.target !== document.body;

              var scrollBottom = 0;
              if (hasBottomScroll) {
                scrollBottom = 15;
              }

              var height = bounds.height - parseFloat(style.borderTopWidth) - parseFloat(style.borderBottomWidth) - scrollBottom;

              var out = {
                width: 15,
                height: height * 0.975 * (height / target.scrollHeight),
                left: bounds.left + bounds.width - parseFloat(style.borderLeftWidth) - 15
              };

              var fitAdj = 0;
              if (height < 408 && this.target === document.body) {
                fitAdj = -0.00011 * Math.pow(height, 2) - 0.00727 * height + 22.58;
              }

              if (this.target !== document.body) {
                out.height = Math.max(out.height, 24);
              }

              var scrollPercentage = this.target.scrollTop / (target.scrollHeight - height);
              out.top = scrollPercentage * (height - out.height - fitAdj) + bounds.top + parseFloat(style.borderTopWidth);

              if (this.target === document.body) {
                out.height = Math.max(out.height, 24);
              }

              return out;
            }
          } else {
            return getBounds(this.target);
          }
        }
      }, {
        key: 'clearCache',
        value: function clearCache() {
          this._cache = {};
        }
      }, {
        key: 'cache',
        value: function cache(k, getter) {
          // More than one module will often need the same DOM info, so
          // we keep a cache which is cleared on each position call
          if (typeof this._cache === 'undefined') {
            this._cache = {};
          }

          if (typeof this._cache[k] === 'undefined') {
            this._cache[k] = getter.call(this);
          }

          return this._cache[k];
        }
      }, {
        key: 'enable',
        value: function enable() {
          var _this3 = this;

          var pos = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];

          if (!(this.options.addTargetClasses === false)) {
            addClass(this.target, this.getClass('enabled'));
          }
          addClass(this.element, this.getClass('enabled'));
          this.enabled = true;

          this.scrollParents.forEach(function (parent) {
            if (parent !== _this3.target.ownerDocument) {
              parent.addEventListener('scroll', _this3.position);
            }
          });

          if (pos) {
            this.position();
          }
        }
      }, {
        key: 'disable',
        value: function disable() {
          var _this4 = this;

          removeClass(this.target, this.getClass('enabled'));
          removeClass(this.element, this.getClass('enabled'));
          this.enabled = false;

          if (typeof this.scrollParents !== 'undefined') {
            this.scrollParents.forEach(function (parent) {
              parent.removeEventListener('scroll', _this4.position);
            });
          }
        }
      }, {
        key: 'destroy',
        value: function destroy() {
          var _this5 = this;

          this.disable();

          tethers.forEach(function (tether, i) {
            if (tether === _this5) {
              tethers.splice(i, 1);
            }
          });

          // Remove any elements we were using for convenience from the DOM
          if (tethers.length === 0) {
            removeUtilElements();
          }
        }
      }, {
        key: 'updateAttachClasses',
        value: function updateAttachClasses(elementAttach, targetAttach) {
          var _this6 = this;

          elementAttach = elementAttach || this.attachment;
          targetAttach = targetAttach || this.targetAttachment;
          var sides = ['left', 'top', 'bottom', 'right', 'middle', 'center'];

          if (typeof this._addAttachClasses !== 'undefined' && this._addAttachClasses.length) {
            // updateAttachClasses can be called more than once in a position call, so
            // we need to clean up after ourselves such that when the last defer gets
            // ran it doesn't add any extra classes from previous calls.
            this._addAttachClasses.splice(0, this._addAttachClasses.length);
          }

          if (typeof this._addAttachClasses === 'undefined') {
            this._addAttachClasses = [];
          }
          var add = this._addAttachClasses;

          if (elementAttach.top) {
            add.push(this.getClass('element-attached') + '-' + elementAttach.top);
          }
          if (elementAttach.left) {
            add.push(this.getClass('element-attached') + '-' + elementAttach.left);
          }
          if (targetAttach.top) {
            add.push(this.getClass('target-attached') + '-' + targetAttach.top);
          }
          if (targetAttach.left) {
            add.push(this.getClass('target-attached') + '-' + targetAttach.left);
          }

          var all = [];
          sides.forEach(function (side) {
            all.push(_this6.getClass('element-attached') + '-' + side);
            all.push(_this6.getClass('target-attached') + '-' + side);
          });

          defer(function () {
            if (!(typeof _this6._addAttachClasses !== 'undefined')) {
              return;
            }

            updateClasses(_this6.element, _this6._addAttachClasses, all);
            if (!(_this6.options.addTargetClasses === false)) {
              updateClasses(_this6.target, _this6._addAttachClasses, all);
            }

            delete _this6._addAttachClasses;
          });
        }
      }, {
        key: 'position',
        value: function position() {
          var _this7 = this;

          var flushChanges = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];

          // flushChanges commits the changes immediately, leave true unless you are positioning multiple
          // tethers (in which case call Tether.Utils.flush yourself when you're done)

          if (!this.enabled) {
            return;
          }

          this.clearCache();

          // Turn 'auto' attachments into the appropriate corner or edge
          var targetAttachment = autoToFixedAttachment(this.targetAttachment, this.attachment);

          this.updateAttachClasses(this.attachment, targetAttachment);

          var elementPos = this.cache('element-bounds', function () {
            return getBounds(_this7.element);
          });

          var width = elementPos.width;
          var height = elementPos.height;

          if (width === 0 && height === 0 && typeof this.lastSize !== 'undefined') {
            var _lastSize = this.lastSize;

            // We cache the height and width to make it possible to position elements that are
            // getting hidden.
            width = _lastSize.width;
            height = _lastSize.height;
          } else {
            this.lastSize = { width: width, height: height };
          }

          var targetPos = this.cache('target-bounds', function () {
            return _this7.getTargetBounds();
          });
          var targetSize = targetPos;

          // Get an actual px offset from the attachment
          var offset = offsetToPx(attachmentToOffset(this.attachment), { width: width, height: height });
          var targetOffset = offsetToPx(attachmentToOffset(targetAttachment), targetSize);

          var manualOffset = offsetToPx(this.offset, { width: width, height: height });
          var manualTargetOffset = offsetToPx(this.targetOffset, targetSize);

          // Add the manually provided offset
          offset = addOffset(offset, manualOffset);
          targetOffset = addOffset(targetOffset, manualTargetOffset);

          // It's now our goal to make (element position + offset) == (target position + target offset)
          var left = targetPos.left + targetOffset.left - offset.left;
          var top = targetPos.top + targetOffset.top - offset.top;

          for (var i = 0; i < TetherBase.modules.length; ++i) {
            var _module2 = TetherBase.modules[i];
            var ret = _module2.position.call(this, {
              left: left,
              top: top,
              targetAttachment: targetAttachment,
              targetPos: targetPos,
              elementPos: elementPos,
              offset: offset,
              targetOffset: targetOffset,
              manualOffset: manualOffset,
              manualTargetOffset: manualTargetOffset,
              scrollbarSize: scrollbarSize,
              attachment: this.attachment
            });

            if (ret === false) {
              return false;
            } else if (typeof ret === 'undefined' || typeof ret !== 'object') {
              continue;
            } else {
              top = ret.top;
              left = ret.left;
            }
          }

          // We describe the position three different ways to give the optimizer
          // a chance to decide the best possible way to position the element
          // with the fewest repaints.
          var next = {
            // It's position relative to the page (absolute positioning when
            // the element is a child of the body)
            page: {
              top: top,
              left: left
            },

            // It's position relative to the viewport (fixed positioning)
            viewport: {
              top: top - pageYOffset,
              bottom: pageYOffset - top - height + innerHeight,
              left: left - pageXOffset,
              right: pageXOffset - left - width + innerWidth
            }
          };

          var doc = this.target.ownerDocument;
          var win = doc.defaultView;

          var scrollbarSize = undefined;
          if (win.innerHeight > doc.documentElement.clientHeight) {
            scrollbarSize = this.cache('scrollbar-size', getScrollBarSize);
            next.viewport.bottom -= scrollbarSize.height;
          }

          if (win.innerWidth > doc.documentElement.clientWidth) {
            scrollbarSize = this.cache('scrollbar-size', getScrollBarSize);
            next.viewport.right -= scrollbarSize.width;
          }

          if (['', 'static'].indexOf(doc.body.style.position) === -1 || ['', 'static'].indexOf(doc.body.parentElement.style.position) === -1) {
            // Absolute positioning in the body will be relative to the page, not the 'initial containing block'
            next.page.bottom = doc.body.scrollHeight - top - height;
            next.page.right = doc.body.scrollWidth - left - width;
          }

          if (typeof this.options.optimizations !== 'undefined' && this.options.optimizations.moveElement !== false && !(typeof this.targetModifier !== 'undefined')) {
            (function () {
              var offsetParent = _this7.cache('target-offsetparent', function () {
                return getOffsetParent(_this7.target);
              });
              var offsetPosition = _this7.cache('target-offsetparent-bounds', function () {
                return getBounds(offsetParent);
              });
              var offsetParentStyle = getComputedStyle(offsetParent);
              var offsetParentSize = offsetPosition;

              var offsetBorder = {};
              ['Top', 'Left', 'Bottom', 'Right'].forEach(function (side) {
                offsetBorder[side.toLowerCase()] = parseFloat(offsetParentStyle['border' + side + 'Width']);
              });

              offsetPosition.right = doc.body.scrollWidth - offsetPosition.left - offsetParentSize.width + offsetBorder.right;
              offsetPosition.bottom = doc.body.scrollHeight - offsetPosition.top - offsetParentSize.height + offsetBorder.bottom;

              if (next.page.top >= offsetPosition.top + offsetBorder.top && next.page.bottom >= offsetPosition.bottom) {
                if (next.page.left >= offsetPosition.left + offsetBorder.left && next.page.right >= offsetPosition.right) {
                  // We're within the visible part of the target's scroll parent
                  var scrollTop = offsetParent.scrollTop;
                  var scrollLeft = offsetParent.scrollLeft;

                  // It's position relative to the target's offset parent (absolute positioning when
                  // the element is moved to be a child of the target's offset parent).
                  next.offset = {
                    top: next.page.top - offsetPosition.top + scrollTop - offsetBorder.top,
                    left: next.page.left - offsetPosition.left + scrollLeft - offsetBorder.left
                  };
                }
              }
            })();
          }

          // We could also travel up the DOM and try each containing context, rather than only
          // looking at the body, but we're gonna get diminishing returns.

          this.move(next);

          this.history.unshift(next);

          if (this.history.length > 3) {
            this.history.pop();
          }

          if (flushChanges) {
            flush();
          }

          return true;
        }

        // THE ISSUE
      }, {
        key: 'move',
        value: function move(pos) {
          var _this8 = this;

          if (!(typeof this.element.parentNode !== 'undefined')) {
            return;
          }

          var same = {};

          for (var type in pos) {
            same[type] = {};

            for (var key in pos[type]) {
              var found = false;

              for (var i = 0; i < this.history.length; ++i) {
                var point = this.history[i];
                if (typeof point[type] !== 'undefined' && !within(point[type][key], pos[type][key])) {
                  found = true;
                  break;
                }
              }

              if (!found) {
                same[type][key] = true;
              }
            }
          }

          var css = { top: '', left: '', right: '', bottom: '' };

          var transcribe = function transcribe(_same, _pos) {
            var hasOptimizations = typeof _this8.options.optimizations !== 'undefined';
            var gpu = hasOptimizations ? _this8.options.optimizations.gpu : null;
            if (gpu !== false) {
              var yPos = undefined,
                  xPos = undefined;
              if (_same.top) {
                css.top = 0;
                yPos = _pos.top;
              } else {
                css.bottom = 0;
                yPos = -_pos.bottom;
              }

              if (_same.left) {
                css.left = 0;
                xPos = _pos.left;
              } else {
                css.right = 0;
                xPos = -_pos.right;
              }

              if (window.matchMedia) {
                // HubSpot/tether#207
                var retina = window.matchMedia('only screen and (min-resolution: 1.3dppx)').matches || window.matchMedia('only screen and (-webkit-min-device-pixel-ratio: 1.3)').matches;
                if (!retina) {
                  xPos = Math.round(xPos);
                  yPos = Math.round(yPos);
                }
              }

              css[transformKey] = 'translateX(' + xPos + 'px) translateY(' + yPos + 'px)';

              if (transformKey !== 'msTransform') {
                // The Z transform will keep this in the GPU (faster, and prevents artifacts),
                // but IE9 doesn't support 3d transforms and will choke.
                css[transformKey] += " translateZ(0)";
              }
            } else {
              if (_same.top) {
                css.top = _pos.top + 'px';
              } else {
                css.bottom = _pos.bottom + 'px';
              }

              if (_same.left) {
                css.left = _pos.left + 'px';
              } else {
                css.right = _pos.right + 'px';
              }
            }
          };

          var moved = false;
          if ((same.page.top || same.page.bottom) && (same.page.left || same.page.right)) {
            css.position = 'absolute';
            transcribe(same.page, pos.page);
          } else if ((same.viewport.top || same.viewport.bottom) && (same.viewport.left || same.viewport.right)) {
            css.position = 'fixed';
            transcribe(same.viewport, pos.viewport);
          } else if (typeof same.offset !== 'undefined' && same.offset.top && same.offset.left) {
            (function () {
              css.position = 'absolute';
              var offsetParent = _this8.cache('target-offsetparent', function () {
                return getOffsetParent(_this8.target);
              });

              if (getOffsetParent(_this8.element) !== offsetParent) {
                defer(function () {
                  _this8.element.parentNode.removeChild(_this8.element);
                  offsetParent.appendChild(_this8.element);
                });
              }

              transcribe(same.offset, pos.offset);
              moved = true;
            })();
          } else {
            css.position = 'absolute';
            transcribe({ top: true, left: true }, pos.page);
          }

          if (!moved) {
            if (this.options.bodyElement) {
              if (this.element.parentNode !== this.options.bodyElement) {
                this.options.bodyElement.appendChild(this.element);
              }
            } else {
              var offsetParentIsBody = true;
              var currentNode = this.element.parentNode;
              while (currentNode && currentNode.nodeType === 1 && currentNode.tagName !== 'BODY') {
                if (getComputedStyle(currentNode).position !== 'static') {
                  offsetParentIsBody = false;
                  break;
                }

                currentNode = currentNode.parentNode;
              }

              if (!offsetParentIsBody) {
                this.element.parentNode.removeChild(this.element);
                this.element.ownerDocument.body.appendChild(this.element);
              }
            }
          }

          // Any css change will trigger a repaint, so let's avoid one if nothing changed
          var writeCSS = {};
          var write = false;
          for (var key in css) {
            var val = css[key];
            var elVal = this.element.style[key];

            if (elVal !== val) {
              write = true;
              writeCSS[key] = val;
            }
          }

          if (write) {
            defer(function () {
              extend(_this8.element.style, writeCSS);
              _this8.trigger('repositioned');
            });
          }
        }
      }]);

      return TetherClass;
    }(Evented);

    TetherClass.modules = [];

    TetherBase.position = position;

    var Tether = extend(TetherClass, TetherBase);
    /* globals TetherBase */

    'use strict';

    var _slicedToArray = function () {
      function sliceIterator(arr, i) {
        var _arr = [];var _n = true;var _d = false;var _e = undefined;try {
          for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
            _arr.push(_s.value);if (i && _arr.length === i) break;
          }
        } catch (err) {
          _d = true;_e = err;
        } finally {
          try {
            if (!_n && _i['return']) _i['return']();
          } finally {
            if (_d) throw _e;
          }
        }return _arr;
      }return function (arr, i) {
        if (Array.isArray(arr)) {
          return arr;
        } else if (Symbol.iterator in Object(arr)) {
          return sliceIterator(arr, i);
        } else {
          throw new TypeError('Invalid attempt to destructure non-iterable instance');
        }
      };
    }();

    var _TetherBase$Utils = TetherBase.Utils;
    var getBounds = _TetherBase$Utils.getBounds;
    var extend = _TetherBase$Utils.extend;
    var updateClasses = _TetherBase$Utils.updateClasses;
    var defer = _TetherBase$Utils.defer;

    var BOUNDS_FORMAT = ['left', 'top', 'right', 'bottom'];

    function getBoundingRect(tether, to) {
      if (to === 'scrollParent') {
        to = tether.scrollParents[0];
      } else if (to === 'window') {
        to = [pageXOffset, pageYOffset, innerWidth + pageXOffset, innerHeight + pageYOffset];
      }

      if (to === document) {
        to = to.documentElement;
      }

      if (typeof to.nodeType !== 'undefined') {
        (function () {
          var node = to;
          var size = getBounds(to);
          var pos = size;
          var style = getComputedStyle(to);

          to = [pos.left, pos.top, size.width + pos.left, size.height + pos.top];

          // Account any parent Frames scroll offset
          if (node.ownerDocument !== document) {
            var win = node.ownerDocument.defaultView;
            to[0] += win.pageXOffset;
            to[1] += win.pageYOffset;
            to[2] += win.pageXOffset;
            to[3] += win.pageYOffset;
          }

          BOUNDS_FORMAT.forEach(function (side, i) {
            side = side[0].toUpperCase() + side.substr(1);
            if (side === 'Top' || side === 'Left') {
              to[i] += parseFloat(style['border' + side + 'Width']);
            } else {
              to[i] -= parseFloat(style['border' + side + 'Width']);
            }
          });
        })();
      }

      return to;
    }

    TetherBase.modules.push({
      position: function position(_ref) {
        var _this = this;

        var top = _ref.top;
        var left = _ref.left;
        var targetAttachment = _ref.targetAttachment;

        if (!this.options.constraints) {
          return true;
        }

        var _cache = this.cache('element-bounds', function () {
          return getBounds(_this.element);
        });

        var height = _cache.height;
        var width = _cache.width;

        if (width === 0 && height === 0 && typeof this.lastSize !== 'undefined') {
          var _lastSize = this.lastSize;

          // Handle the item getting hidden as a result of our positioning without glitching
          // the classes in and out
          width = _lastSize.width;
          height = _lastSize.height;
        }

        var targetSize = this.cache('target-bounds', function () {
          return _this.getTargetBounds();
        });

        var targetHeight = targetSize.height;
        var targetWidth = targetSize.width;

        var allClasses = [this.getClass('pinned'), this.getClass('out-of-bounds')];

        this.options.constraints.forEach(function (constraint) {
          var outOfBoundsClass = constraint.outOfBoundsClass;
          var pinnedClass = constraint.pinnedClass;

          if (outOfBoundsClass) {
            allClasses.push(outOfBoundsClass);
          }
          if (pinnedClass) {
            allClasses.push(pinnedClass);
          }
        });

        allClasses.forEach(function (cls) {
          ['left', 'top', 'right', 'bottom'].forEach(function (side) {
            allClasses.push(cls + '-' + side);
          });
        });

        var addClasses = [];

        var tAttachment = extend({}, targetAttachment);
        var eAttachment = extend({}, this.attachment);

        this.options.constraints.forEach(function (constraint) {
          var to = constraint.to;
          var attachment = constraint.attachment;
          var pin = constraint.pin;

          if (typeof attachment === 'undefined') {
            attachment = '';
          }

          var changeAttachX = undefined,
              changeAttachY = undefined;
          if (attachment.indexOf(' ') >= 0) {
            var _attachment$split = attachment.split(' ');

            var _attachment$split2 = _slicedToArray(_attachment$split, 2);

            changeAttachY = _attachment$split2[0];
            changeAttachX = _attachment$split2[1];
          } else {
            changeAttachX = changeAttachY = attachment;
          }

          var bounds = getBoundingRect(_this, to);

          if (changeAttachY === 'target' || changeAttachY === 'both') {
            if (top < bounds[1] && tAttachment.top === 'top') {
              top += targetHeight;
              tAttachment.top = 'bottom';
            }

            if (top + height > bounds[3] && tAttachment.top === 'bottom') {
              top -= targetHeight;
              tAttachment.top = 'top';
            }
          }

          if (changeAttachY === 'together') {
            if (tAttachment.top === 'top') {
              if (eAttachment.top === 'bottom' && top < bounds[1]) {
                top += targetHeight;
                tAttachment.top = 'bottom';

                top += height;
                eAttachment.top = 'top';
              } else if (eAttachment.top === 'top' && top + height > bounds[3] && top - (height - targetHeight) >= bounds[1]) {
                top -= height - targetHeight;
                tAttachment.top = 'bottom';

                eAttachment.top = 'bottom';
              }
            }

            if (tAttachment.top === 'bottom') {
              if (eAttachment.top === 'top' && top + height > bounds[3]) {
                top -= targetHeight;
                tAttachment.top = 'top';

                top -= height;
                eAttachment.top = 'bottom';
              } else if (eAttachment.top === 'bottom' && top < bounds[1] && top + (height * 2 - targetHeight) <= bounds[3]) {
                top += height - targetHeight;
                tAttachment.top = 'top';

                eAttachment.top = 'top';
              }
            }

            if (tAttachment.top === 'middle') {
              if (top + height > bounds[3] && eAttachment.top === 'top') {
                top -= height;
                eAttachment.top = 'bottom';
              } else if (top < bounds[1] && eAttachment.top === 'bottom') {
                top += height;
                eAttachment.top = 'top';
              }
            }
          }

          if (changeAttachX === 'target' || changeAttachX === 'both') {
            if (left < bounds[0] && tAttachment.left === 'left') {
              left += targetWidth;
              tAttachment.left = 'right';
            }

            if (left + width > bounds[2] && tAttachment.left === 'right') {
              left -= targetWidth;
              tAttachment.left = 'left';
            }
          }

          if (changeAttachX === 'together') {
            if (left < bounds[0] && tAttachment.left === 'left') {
              if (eAttachment.left === 'right') {
                left += targetWidth;
                tAttachment.left = 'right';

                left += width;
                eAttachment.left = 'left';
              } else if (eAttachment.left === 'left') {
                left += targetWidth;
                tAttachment.left = 'right';

                left -= width;
                eAttachment.left = 'right';
              }
            } else if (left + width > bounds[2] && tAttachment.left === 'right') {
              if (eAttachment.left === 'left') {
                left -= targetWidth;
                tAttachment.left = 'left';

                left -= width;
                eAttachment.left = 'right';
              } else if (eAttachment.left === 'right') {
                left -= targetWidth;
                tAttachment.left = 'left';

                left += width;
                eAttachment.left = 'left';
              }
            } else if (tAttachment.left === 'center') {
              if (left + width > bounds[2] && eAttachment.left === 'left') {
                left -= width;
                eAttachment.left = 'right';
              } else if (left < bounds[0] && eAttachment.left === 'right') {
                left += width;
                eAttachment.left = 'left';
              }
            }
          }

          if (changeAttachY === 'element' || changeAttachY === 'both') {
            if (top < bounds[1] && eAttachment.top === 'bottom') {
              top += height;
              eAttachment.top = 'top';
            }

            if (top + height > bounds[3] && eAttachment.top === 'top') {
              top -= height;
              eAttachment.top = 'bottom';
            }
          }

          if (changeAttachX === 'element' || changeAttachX === 'both') {
            if (left < bounds[0]) {
              if (eAttachment.left === 'right') {
                left += width;
                eAttachment.left = 'left';
              } else if (eAttachment.left === 'center') {
                left += width / 2;
                eAttachment.left = 'left';
              }
            }

            if (left + width > bounds[2]) {
              if (eAttachment.left === 'left') {
                left -= width;
                eAttachment.left = 'right';
              } else if (eAttachment.left === 'center') {
                left -= width / 2;
                eAttachment.left = 'right';
              }
            }
          }

          if (typeof pin === 'string') {
            pin = pin.split(',').map(function (p) {
              return p.trim();
            });
          } else if (pin === true) {
            pin = ['top', 'left', 'right', 'bottom'];
          }

          pin = pin || [];

          var pinned = [];
          var oob = [];

          if (top < bounds[1]) {
            if (pin.indexOf('top') >= 0) {
              top = bounds[1];
              pinned.push('top');
            } else {
              oob.push('top');
            }
          }

          if (top + height > bounds[3]) {
            if (pin.indexOf('bottom') >= 0) {
              top = bounds[3] - height;
              pinned.push('bottom');
            } else {
              oob.push('bottom');
            }
          }

          if (left < bounds[0]) {
            if (pin.indexOf('left') >= 0) {
              left = bounds[0];
              pinned.push('left');
            } else {
              oob.push('left');
            }
          }

          if (left + width > bounds[2]) {
            if (pin.indexOf('right') >= 0) {
              left = bounds[2] - width;
              pinned.push('right');
            } else {
              oob.push('right');
            }
          }

          if (pinned.length) {
            (function () {
              var pinnedClass = undefined;
              if (typeof _this.options.pinnedClass !== 'undefined') {
                pinnedClass = _this.options.pinnedClass;
              } else {
                pinnedClass = _this.getClass('pinned');
              }

              addClasses.push(pinnedClass);
              pinned.forEach(function (side) {
                addClasses.push(pinnedClass + '-' + side);
              });
            })();
          }

          if (oob.length) {
            (function () {
              var oobClass = undefined;
              if (typeof _this.options.outOfBoundsClass !== 'undefined') {
                oobClass = _this.options.outOfBoundsClass;
              } else {
                oobClass = _this.getClass('out-of-bounds');
              }

              addClasses.push(oobClass);
              oob.forEach(function (side) {
                addClasses.push(oobClass + '-' + side);
              });
            })();
          }

          if (pinned.indexOf('left') >= 0 || pinned.indexOf('right') >= 0) {
            eAttachment.left = tAttachment.left = false;
          }
          if (pinned.indexOf('top') >= 0 || pinned.indexOf('bottom') >= 0) {
            eAttachment.top = tAttachment.top = false;
          }

          if (tAttachment.top !== targetAttachment.top || tAttachment.left !== targetAttachment.left || eAttachment.top !== _this.attachment.top || eAttachment.left !== _this.attachment.left) {
            _this.updateAttachClasses(eAttachment, tAttachment);
            _this.trigger('update', {
              attachment: eAttachment,
              targetAttachment: tAttachment
            });
          }
        });

        defer(function () {
          if (!(_this.options.addTargetClasses === false)) {
            updateClasses(_this.target, addClasses, allClasses);
          }
          updateClasses(_this.element, addClasses, allClasses);
        });

        return { top: top, left: left };
      }
    });
    /* globals TetherBase */

    'use strict';

    var _TetherBase$Utils = TetherBase.Utils;
    var getBounds = _TetherBase$Utils.getBounds;
    var updateClasses = _TetherBase$Utils.updateClasses;
    var defer = _TetherBase$Utils.defer;

    TetherBase.modules.push({
      position: function position(_ref) {
        var _this = this;

        var top = _ref.top;
        var left = _ref.left;

        var _cache = this.cache('element-bounds', function () {
          return getBounds(_this.element);
        });

        var height = _cache.height;
        var width = _cache.width;

        var targetPos = this.getTargetBounds();

        var bottom = top + height;
        var right = left + width;

        var abutted = [];
        if (top <= targetPos.bottom && bottom >= targetPos.top) {
          ['left', 'right'].forEach(function (side) {
            var targetPosSide = targetPos[side];
            if (targetPosSide === left || targetPosSide === right) {
              abutted.push(side);
            }
          });
        }

        if (left <= targetPos.right && right >= targetPos.left) {
          ['top', 'bottom'].forEach(function (side) {
            var targetPosSide = targetPos[side];
            if (targetPosSide === top || targetPosSide === bottom) {
              abutted.push(side);
            }
          });
        }

        var allClasses = [];
        var addClasses = [];

        var sides = ['left', 'top', 'right', 'bottom'];
        allClasses.push(this.getClass('abutted'));
        sides.forEach(function (side) {
          allClasses.push(_this.getClass('abutted') + '-' + side);
        });

        if (abutted.length) {
          addClasses.push(this.getClass('abutted'));
        }

        abutted.forEach(function (side) {
          addClasses.push(_this.getClass('abutted') + '-' + side);
        });

        defer(function () {
          if (!(_this.options.addTargetClasses === false)) {
            updateClasses(_this.target, addClasses, allClasses);
          }
          updateClasses(_this.element, addClasses, allClasses);
        });

        return true;
      }
    });
    /* globals TetherBase */

    'use strict';

    var _slicedToArray = function () {
      function sliceIterator(arr, i) {
        var _arr = [];var _n = true;var _d = false;var _e = undefined;try {
          for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
            _arr.push(_s.value);if (i && _arr.length === i) break;
          }
        } catch (err) {
          _d = true;_e = err;
        } finally {
          try {
            if (!_n && _i['return']) _i['return']();
          } finally {
            if (_d) throw _e;
          }
        }return _arr;
      }return function (arr, i) {
        if (Array.isArray(arr)) {
          return arr;
        } else if (Symbol.iterator in Object(arr)) {
          return sliceIterator(arr, i);
        } else {
          throw new TypeError('Invalid attempt to destructure non-iterable instance');
        }
      };
    }();

    TetherBase.modules.push({
      position: function position(_ref) {
        var top = _ref.top;
        var left = _ref.left;

        if (!this.options.shift) {
          return;
        }

        var shift = this.options.shift;
        if (typeof this.options.shift === 'function') {
          shift = this.options.shift.call(this, { top: top, left: left });
        }

        var shiftTop = undefined,
            shiftLeft = undefined;
        if (typeof shift === 'string') {
          shift = shift.split(' ');
          shift[1] = shift[1] || shift[0];

          var _shift = shift;

          var _shift2 = _slicedToArray(_shift, 2);

          shiftTop = _shift2[0];
          shiftLeft = _shift2[1];

          shiftTop = parseFloat(shiftTop, 10);
          shiftLeft = parseFloat(shiftLeft, 10);
        } else {
          shiftTop = shift.top;
          shiftLeft = shift.left;
        }

        top += shiftTop;
        left += shiftLeft;

        return { top: top, left: left };
      }
    });
    return Tether;
  });
});
System.registerDynamic("npm:tether@1.4.1.js", ["npm:tether@1.4.1/dist/js/tether.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:tether@1.4.1/dist/js/tether.js");
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/common/utils/isDarkTheme.js", ["npm:@blueprintjs/core@1.33.0/dist/common/index.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var _1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/index.js");
  function isDarkTheme(element) {
    return element.closest("." + _1.Classes.DARK) != null;
  }
  exports.isDarkTheme = isDarkTheme;
});
System.registerDynamic('npm:react@0.14.9/lib/ReactTransitionChildMapping.js', ['npm:react@0.14.9/lib/flattenChildren.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var flattenChildren = $__require('npm:react@0.14.9/lib/flattenChildren.js');
  var ReactTransitionChildMapping = {
    getChildMapping: function (children) {
      if (!children) {
        return children;
      }
      return flattenChildren(children);
    },
    mergeChildMappings: function (prev, next) {
      prev = prev || {};
      next = next || {};
      function getValueForKey(key) {
        if (next.hasOwnProperty(key)) {
          return next[key];
        } else {
          return prev[key];
        }
      }
      var nextKeysPending = {};
      var pendingKeys = [];
      for (var prevKey in prev) {
        if (next.hasOwnProperty(prevKey)) {
          if (pendingKeys.length) {
            nextKeysPending[prevKey] = pendingKeys;
            pendingKeys = [];
          }
        } else {
          pendingKeys.push(prevKey);
        }
      }
      var i;
      var childMapping = {};
      for (var nextKey in next) {
        if (nextKeysPending.hasOwnProperty(nextKey)) {
          for (i = 0; i < nextKeysPending[nextKey].length; i++) {
            var pendingNextKey = nextKeysPending[nextKey][i];
            childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
          }
        }
        childMapping[nextKey] = getValueForKey(nextKey);
      }
      for (i = 0; i < pendingKeys.length; i++) {
        childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
      }
      return childMapping;
    }
  };
  module.exports = ReactTransitionChildMapping;
});
System.registerDynamic('npm:react@0.14.9/lib/ReactTransitionGroup.js', ['npm:react@0.14.9/lib/React.js', 'npm:react@0.14.9/lib/ReactTransitionChildMapping.js', 'npm:react@0.14.9/lib/Object.assign.js', 'npm:fbjs@0.6.1/lib/emptyFunction.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var React = $__require('npm:react@0.14.9/lib/React.js');
  var ReactTransitionChildMapping = $__require('npm:react@0.14.9/lib/ReactTransitionChildMapping.js');
  var assign = $__require('npm:react@0.14.9/lib/Object.assign.js');
  var emptyFunction = $__require('npm:fbjs@0.6.1/lib/emptyFunction.js');
  var ReactTransitionGroup = React.createClass({
    displayName: 'ReactTransitionGroup',
    propTypes: {
      component: React.PropTypes.any,
      childFactory: React.PropTypes.func
    },
    getDefaultProps: function () {
      return {
        component: 'span',
        childFactory: emptyFunction.thatReturnsArgument
      };
    },
    getInitialState: function () {
      return { children: ReactTransitionChildMapping.getChildMapping(this.props.children) };
    },
    componentWillMount: function () {
      this.currentlyTransitioningKeys = {};
      this.keysToEnter = [];
      this.keysToLeave = [];
    },
    componentDidMount: function () {
      var initialChildMapping = this.state.children;
      for (var key in initialChildMapping) {
        if (initialChildMapping[key]) {
          this.performAppear(key);
        }
      }
    },
    componentWillReceiveProps: function (nextProps) {
      var nextChildMapping = ReactTransitionChildMapping.getChildMapping(nextProps.children);
      var prevChildMapping = this.state.children;
      this.setState({ children: ReactTransitionChildMapping.mergeChildMappings(prevChildMapping, nextChildMapping) });
      var key;
      for (key in nextChildMapping) {
        var hasPrev = prevChildMapping && prevChildMapping.hasOwnProperty(key);
        if (nextChildMapping[key] && !hasPrev && !this.currentlyTransitioningKeys[key]) {
          this.keysToEnter.push(key);
        }
      }
      for (key in prevChildMapping) {
        var hasNext = nextChildMapping && nextChildMapping.hasOwnProperty(key);
        if (prevChildMapping[key] && !hasNext && !this.currentlyTransitioningKeys[key]) {
          this.keysToLeave.push(key);
        }
      }
    },
    componentDidUpdate: function () {
      var keysToEnter = this.keysToEnter;
      this.keysToEnter = [];
      keysToEnter.forEach(this.performEnter);
      var keysToLeave = this.keysToLeave;
      this.keysToLeave = [];
      keysToLeave.forEach(this.performLeave);
    },
    performAppear: function (key) {
      this.currentlyTransitioningKeys[key] = true;
      var component = this.refs[key];
      if (component.componentWillAppear) {
        component.componentWillAppear(this._handleDoneAppearing.bind(this, key));
      } else {
        this._handleDoneAppearing(key);
      }
    },
    _handleDoneAppearing: function (key) {
      var component = this.refs[key];
      if (component.componentDidAppear) {
        component.componentDidAppear();
      }
      delete this.currentlyTransitioningKeys[key];
      var currentChildMapping = ReactTransitionChildMapping.getChildMapping(this.props.children);
      if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {
        this.performLeave(key);
      }
    },
    performEnter: function (key) {
      this.currentlyTransitioningKeys[key] = true;
      var component = this.refs[key];
      if (component.componentWillEnter) {
        component.componentWillEnter(this._handleDoneEntering.bind(this, key));
      } else {
        this._handleDoneEntering(key);
      }
    },
    _handleDoneEntering: function (key) {
      var component = this.refs[key];
      if (component.componentDidEnter) {
        component.componentDidEnter();
      }
      delete this.currentlyTransitioningKeys[key];
      var currentChildMapping = ReactTransitionChildMapping.getChildMapping(this.props.children);
      if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {
        this.performLeave(key);
      }
    },
    performLeave: function (key) {
      this.currentlyTransitioningKeys[key] = true;
      var component = this.refs[key];
      if (component.componentWillLeave) {
        component.componentWillLeave(this._handleDoneLeaving.bind(this, key));
      } else {
        this._handleDoneLeaving(key);
      }
    },
    _handleDoneLeaving: function (key) {
      var component = this.refs[key];
      if (component.componentDidLeave) {
        component.componentDidLeave();
      }
      delete this.currentlyTransitioningKeys[key];
      var currentChildMapping = ReactTransitionChildMapping.getChildMapping(this.props.children);
      if (currentChildMapping && currentChildMapping.hasOwnProperty(key)) {
        this.performEnter(key);
      } else {
        this.setState(function (state) {
          var newChildren = assign({}, state.children);
          delete newChildren[key];
          return { children: newChildren };
        });
      }
    },
    render: function () {
      var childrenToRender = [];
      for (var key in this.state.children) {
        var child = this.state.children[key];
        if (child) {
          childrenToRender.push(React.cloneElement(this.props.childFactory(child), {
            ref: key,
            key: key
          }));
        }
      }
      return React.createElement(this.props.component, this.props, childrenToRender);
    }
  });
  module.exports = ReactTransitionGroup;
});
System.registerDynamic('npm:fbjs@0.6.1/lib/CSSCore.js', ['npm:fbjs@0.6.1/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var invariant = $__require('npm:fbjs@0.6.1/lib/invariant.js');
    var CSSCore = {
      addClass: function (element, className) {
        !!/\s/.test(className) ? 'production' !== 'production' ? invariant(false, 'CSSCore.addClass takes only a single class name. "%s" contains ' + 'multiple classes.', className) : invariant(false) : undefined;
        if (className) {
          if (element.classList) {
            element.classList.add(className);
          } else if (!CSSCore.hasClass(element, className)) {
            element.className = element.className + ' ' + className;
          }
        }
        return element;
      },
      removeClass: function (element, className) {
        !!/\s/.test(className) ? 'production' !== 'production' ? invariant(false, 'CSSCore.removeClass takes only a single class name. "%s" contains ' + 'multiple classes.', className) : invariant(false) : undefined;
        if (className) {
          if (element.classList) {
            element.classList.remove(className);
          } else if (CSSCore.hasClass(element, className)) {
            element.className = element.className.replace(new RegExp('(^|\\s)' + className + '(?:\\s|$)', 'g'), '$1').replace(/\s+/g, ' ').replace(/^\s*|\s*$/g, '');
          }
        }
        return element;
      },
      conditionClass: function (element, className, bool) {
        return (bool ? CSSCore.addClass : CSSCore.removeClass)(element, className);
      },
      hasClass: function (element, className) {
        !!/\s/.test(className) ? 'production' !== 'production' ? invariant(false, 'CSS.hasClass takes only a single class name.') : invariant(false) : undefined;
        if (element.classList) {
          return !!className && element.classList.contains(className);
        }
        return (' ' + element.className + ' ').indexOf(' ' + className + ' ') > -1;
      }
    };
    module.exports = CSSCore;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/ReactTransitionEvents.js', ['npm:fbjs@0.6.1/lib/ExecutionEnvironment.js'], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule ReactTransitionEvents
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ExecutionEnvironment = $__require('npm:fbjs@0.6.1/lib/ExecutionEnvironment.js');

  /**
   * EVENT_NAME_MAP is used to determine which event fired when a
   * transition/animation ends, based on the style property used to
   * define that event.
   */
  var EVENT_NAME_MAP = {
    transitionend: {
      'transition': 'transitionend',
      'WebkitTransition': 'webkitTransitionEnd',
      'MozTransition': 'mozTransitionEnd',
      'OTransition': 'oTransitionEnd',
      'msTransition': 'MSTransitionEnd'
    },

    animationend: {
      'animation': 'animationend',
      'WebkitAnimation': 'webkitAnimationEnd',
      'MozAnimation': 'mozAnimationEnd',
      'OAnimation': 'oAnimationEnd',
      'msAnimation': 'MSAnimationEnd'
    }
  };

  var endEvents = [];

  function detectEvents() {
    var testEl = document.createElement('div');
    var style = testEl.style;

    // On some platforms, in particular some releases of Android 4.x,
    // the un-prefixed "animation" and "transition" properties are defined on the
    // style object but the events that fire will still be prefixed, so we need
    // to check if the un-prefixed events are useable, and if not remove them
    // from the map
    if (!('AnimationEvent' in window)) {
      delete EVENT_NAME_MAP.animationend.animation;
    }

    if (!('TransitionEvent' in window)) {
      delete EVENT_NAME_MAP.transitionend.transition;
    }

    for (var baseEventName in EVENT_NAME_MAP) {
      var baseEvents = EVENT_NAME_MAP[baseEventName];
      for (var styleName in baseEvents) {
        if (styleName in style) {
          endEvents.push(baseEvents[styleName]);
          break;
        }
      }
    }
  }

  if (ExecutionEnvironment.canUseDOM) {
    detectEvents();
  }

  // We use the raw {add|remove}EventListener() call because EventListener
  // does not know how to remove event listeners and we really should
  // clean up. Also, these events are not triggered in older browsers
  // so we should be A-OK here.

  function addEventListener(node, eventName, eventListener) {
    node.addEventListener(eventName, eventListener, false);
  }

  function removeEventListener(node, eventName, eventListener) {
    node.removeEventListener(eventName, eventListener, false);
  }

  var ReactTransitionEvents = {
    addEndEventListener: function (node, eventListener) {
      if (endEvents.length === 0) {
        // If CSS transitions are not supported, trigger an "end animation"
        // event immediately.
        window.setTimeout(eventListener, 0);
        return;
      }
      endEvents.forEach(function (endEvent) {
        addEventListener(node, endEvent, eventListener);
      });
    },

    removeEndEventListener: function (node, eventListener) {
      if (endEvents.length === 0) {
        return;
      }
      endEvents.forEach(function (endEvent) {
        removeEventListener(node, endEvent, eventListener);
      });
    }
  };

  module.exports = ReactTransitionEvents;
});
System.registerDynamic('npm:react@0.14.9/lib/ReactCSSTransitionGroupChild.js', ['npm:react@0.14.9/lib/React.js', 'npm:react@0.14.9/lib/ReactDOM.js', 'npm:fbjs@0.6.1/lib/CSSCore.js', 'npm:react@0.14.9/lib/ReactTransitionEvents.js', 'npm:react@0.14.9/lib/onlyChild.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var React = $__require('npm:react@0.14.9/lib/React.js');
  var ReactDOM = $__require('npm:react@0.14.9/lib/ReactDOM.js');
  var CSSCore = $__require('npm:fbjs@0.6.1/lib/CSSCore.js');
  var ReactTransitionEvents = $__require('npm:react@0.14.9/lib/ReactTransitionEvents.js');
  var onlyChild = $__require('npm:react@0.14.9/lib/onlyChild.js');
  var TICK = 17;
  var ReactCSSTransitionGroupChild = React.createClass({
    displayName: 'ReactCSSTransitionGroupChild',
    propTypes: {
      name: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.shape({
        enter: React.PropTypes.string,
        leave: React.PropTypes.string,
        active: React.PropTypes.string
      }), React.PropTypes.shape({
        enter: React.PropTypes.string,
        enterActive: React.PropTypes.string,
        leave: React.PropTypes.string,
        leaveActive: React.PropTypes.string,
        appear: React.PropTypes.string,
        appearActive: React.PropTypes.string
      })]).isRequired,
      appear: React.PropTypes.bool,
      enter: React.PropTypes.bool,
      leave: React.PropTypes.bool,
      appearTimeout: React.PropTypes.number,
      enterTimeout: React.PropTypes.number,
      leaveTimeout: React.PropTypes.number
    },
    transition: function (animationType, finishCallback, userSpecifiedDelay) {
      var node = ReactDOM.findDOMNode(this);
      if (!node) {
        if (finishCallback) {
          finishCallback();
        }
        return;
      }
      var className = this.props.name[animationType] || this.props.name + '-' + animationType;
      var activeClassName = this.props.name[animationType + 'Active'] || className + '-active';
      var timeout = null;
      var endListener = function (e) {
        if (e && e.target !== node) {
          return;
        }
        clearTimeout(timeout);
        CSSCore.removeClass(node, className);
        CSSCore.removeClass(node, activeClassName);
        ReactTransitionEvents.removeEndEventListener(node, endListener);
        if (finishCallback) {
          finishCallback();
        }
      };
      CSSCore.addClass(node, className);
      this.queueClass(activeClassName);
      if (userSpecifiedDelay) {
        timeout = setTimeout(endListener, userSpecifiedDelay);
        this.transitionTimeouts.push(timeout);
      } else {
        ReactTransitionEvents.addEndEventListener(node, endListener);
      }
    },
    queueClass: function (className) {
      this.classNameQueue.push(className);
      if (!this.timeout) {
        this.timeout = setTimeout(this.flushClassNameQueue, TICK);
      }
    },
    flushClassNameQueue: function () {
      if (this.isMounted()) {
        this.classNameQueue.forEach(CSSCore.addClass.bind(CSSCore, ReactDOM.findDOMNode(this)));
      }
      this.classNameQueue.length = 0;
      this.timeout = null;
    },
    componentWillMount: function () {
      this.classNameQueue = [];
      this.transitionTimeouts = [];
    },
    componentWillUnmount: function () {
      if (this.timeout) {
        clearTimeout(this.timeout);
      }
      this.transitionTimeouts.forEach(function (timeout) {
        clearTimeout(timeout);
      });
    },
    componentWillAppear: function (done) {
      if (this.props.appear) {
        this.transition('appear', done, this.props.appearTimeout);
      } else {
        done();
      }
    },
    componentWillEnter: function (done) {
      if (this.props.enter) {
        this.transition('enter', done, this.props.enterTimeout);
      } else {
        done();
      }
    },
    componentWillLeave: function (done) {
      if (this.props.leave) {
        this.transition('leave', done, this.props.leaveTimeout);
      } else {
        done();
      }
    },
    render: function () {
      return onlyChild(this.props.children);
    }
  });
  module.exports = ReactCSSTransitionGroupChild;
});
System.registerDynamic('npm:react@0.14.9/lib/ReactCSSTransitionGroup.js', ['npm:react@0.14.9/lib/React.js', 'npm:react@0.14.9/lib/Object.assign.js', 'npm:react@0.14.9/lib/ReactTransitionGroup.js', 'npm:react@0.14.9/lib/ReactCSSTransitionGroupChild.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var React = $__require('npm:react@0.14.9/lib/React.js');
  var assign = $__require('npm:react@0.14.9/lib/Object.assign.js');
  var ReactTransitionGroup = $__require('npm:react@0.14.9/lib/ReactTransitionGroup.js');
  var ReactCSSTransitionGroupChild = $__require('npm:react@0.14.9/lib/ReactCSSTransitionGroupChild.js');
  function createTransitionTimeoutPropValidator(transitionType) {
    var timeoutPropName = 'transition' + transitionType + 'Timeout';
    var enabledPropName = 'transition' + transitionType;
    return function (props) {
      if (props[enabledPropName]) {
        if (props[timeoutPropName] == null) {
          return new Error(timeoutPropName + ' wasn\'t supplied to ReactCSSTransitionGroup: ' + 'this can cause unreliable animations and won\'t be supported in ' + 'a future version of React. See ' + 'https://fb.me/react-animation-transition-group-timeout for more ' + 'information.');
        } else if (typeof props[timeoutPropName] !== 'number') {
          return new Error(timeoutPropName + ' must be a number (in milliseconds)');
        }
      }
    };
  }
  var ReactCSSTransitionGroup = React.createClass({
    displayName: 'ReactCSSTransitionGroup',
    propTypes: {
      transitionName: ReactCSSTransitionGroupChild.propTypes.name,
      transitionAppear: React.PropTypes.bool,
      transitionEnter: React.PropTypes.bool,
      transitionLeave: React.PropTypes.bool,
      transitionAppearTimeout: createTransitionTimeoutPropValidator('Appear'),
      transitionEnterTimeout: createTransitionTimeoutPropValidator('Enter'),
      transitionLeaveTimeout: createTransitionTimeoutPropValidator('Leave')
    },
    getDefaultProps: function () {
      return {
        transitionAppear: false,
        transitionEnter: true,
        transitionLeave: true
      };
    },
    _wrapChild: function (child) {
      return React.createElement(ReactCSSTransitionGroupChild, {
        name: this.props.transitionName,
        appear: this.props.transitionAppear,
        enter: this.props.transitionEnter,
        leave: this.props.transitionLeave,
        appearTimeout: this.props.transitionAppearTimeout,
        enterTimeout: this.props.transitionEnterTimeout,
        leaveTimeout: this.props.transitionLeaveTimeout
      }, child);
    },
    render: function () {
      return React.createElement(ReactTransitionGroup, assign({}, this.props, { childFactory: this._wrapChild }));
    }
  });
  module.exports = ReactCSSTransitionGroup;
});
System.registerDynamic('npm:react-addons-css-transition-group@0.14.8/index.js', ['npm:react@0.14.9/lib/ReactCSSTransitionGroup.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = $__require('npm:react@0.14.9/lib/ReactCSSTransitionGroup.js');
});
System.registerDynamic("npm:react-addons-css-transition-group@0.14.8.js", ["npm:react-addons-css-transition-group@0.14.8/index.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:react-addons-css-transition-group@0.14.8/index.js");
});
System.registerDynamic('npm:react-dom@0.14.9/index.js', ['npm:react@0.14.9/lib/ReactDOM.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:react@0.14.9/lib/ReactDOM.js');
});
System.registerDynamic("npm:react-dom@0.14.9.js", ["npm:react-dom@0.14.9/index.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:react-dom@0.14.9/index.js");
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/portal/portal.js", ["npm:tslib@1.8.0.js", "npm:react@0.14.9.js", "npm:react-dom@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/classes.js", "npm:@blueprintjs/core@1.33.0/dist/common/errors.js", "npm:@blueprintjs/core@1.33.0/dist/common/props.js", "npm:@blueprintjs/core@1.33.0/dist/common/utils.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var React = $__require("npm:react@0.14.9.js");
  var ReactDOM = $__require("npm:react-dom@0.14.9.js");
  var Classes = $__require("npm:@blueprintjs/core@1.33.0/dist/common/classes.js");
  var Errors = $__require("npm:@blueprintjs/core@1.33.0/dist/common/errors.js");
  var props_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/props.js");
  var utils_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/utils.js");
  var REACT_CONTEXT_TYPES = { blueprintPortalClassName: function (obj, key) {
      if (obj[key] != null && typeof obj[key] !== "string") {
        return new Error(Errors.PORTAL_CONTEXT_CLASS_NAME_STRING);
      }
      return undefined;
    } };
  var Portal = function (_super) {
    tslib_1.__extends(Portal, _super);
    function Portal() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Portal.prototype.render = function () {
      return null;
    };
    Portal.prototype.componentDidMount = function () {
      var targetElement = document.createElement("div");
      targetElement.classList.add(Classes.PORTAL);
      if (this.context.blueprintPortalClassName != null) {
        targetElement.classList.add(this.context.blueprintPortalClassName);
      }
      document.body.appendChild(targetElement);
      this.targetElement = targetElement;
      this.componentDidUpdate();
    };
    Portal.prototype.componentDidUpdate = function () {
      var _this = this;
      ReactDOM.unstable_renderSubtreeIntoContainer(this, React.createElement("div", tslib_1.__assign({}, props_1.removeNonHTMLProps(this.props), { ref: this.props.containerRef }), this.props.children), this.targetElement, function () {
        return utils_1.safeInvoke(_this.props.onChildrenMount);
      });
    };
    Portal.prototype.componentWillUnmount = function () {
      ReactDOM.unmountComponentAtNode(this.targetElement);
      this.targetElement.remove();
    };
    return Portal;
  }(React.Component);
  Portal.displayName = "Blueprint.Portal";
  Portal.contextTypes = REACT_CONTEXT_TYPES;
  exports.Portal = Portal;
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/overlay/overlay.js", ["npm:tslib@1.8.0.js", "npm:classnames@2.2.5.js", "npm:pure-render-decorator@1.2.1.js", "npm:react@0.14.9.js", "npm:react-addons-css-transition-group@0.14.8.js", "npm:@blueprintjs/core@1.33.0/dist/common/classes.js", "npm:@blueprintjs/core@1.33.0/dist/common/keys.js", "npm:@blueprintjs/core@1.33.0/dist/common/utils.js", "npm:@blueprintjs/core@1.33.0/dist/components/portal/portal.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var classNames = $__require("npm:classnames@2.2.5.js");
  var PureRender = $__require("npm:pure-render-decorator@1.2.1.js");
  var React = $__require("npm:react@0.14.9.js");
  var CSSTransitionGroup = $__require("npm:react-addons-css-transition-group@0.14.8.js");
  var Classes = $__require("npm:@blueprintjs/core@1.33.0/dist/common/classes.js");
  var Keys = $__require("npm:@blueprintjs/core@1.33.0/dist/common/keys.js");
  var utils_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/utils.js");
  var portal_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/portal/portal.js");
  var Overlay = Overlay_1 = function (_super) {
    tslib_1.__extends(Overlay, _super);
    function Overlay(props, context) {
      var _this = _super.call(this, props, context) || this;
      _this.refHandlers = { container: function (ref) {
          return _this.containerElement = ref;
        } };
      _this.handleBackdropMouseDown = function (e) {
        var _a = _this.props,
            backdropProps = _a.backdropProps,
            canOutsideClickClose = _a.canOutsideClickClose,
            enforceFocus = _a.enforceFocus,
            onClose = _a.onClose;
        if (canOutsideClickClose) {
          utils_1.safeInvoke(onClose, e);
        }
        if (enforceFocus) {
          _this.bringFocusInsideOverlay();
        }
        utils_1.safeInvoke(backdropProps.onMouseDown, e);
      };
      _this.handleDocumentClick = function (e) {
        var _a = _this.props,
            isOpen = _a.isOpen,
            onClose = _a.onClose;
        var eventTarget = e.target;
        var isClickInOverlay = _this.containerElement != null && _this.containerElement.contains(eventTarget);
        if (isOpen && _this.props.canOutsideClickClose && !isClickInOverlay) {
          utils_1.safeInvoke(onClose, e);
        }
      };
      _this.handleContentMount = function () {
        if (_this.props.isOpen) {
          utils_1.safeInvoke(_this.props.didOpen);
        }
        if (_this.props.autoFocus) {
          _this.bringFocusInsideOverlay();
        }
      };
      _this.handleDocumentFocus = function (e) {
        if (_this.props.enforceFocus && _this.containerElement != null && !_this.containerElement.contains(e.target)) {
          e.preventDefault();
          e.stopImmediatePropagation();
          _this.bringFocusInsideOverlay();
        }
      };
      _this.handleKeyDown = function (e) {
        var _a = _this.props,
            canEscapeKeyClose = _a.canEscapeKeyClose,
            onClose = _a.onClose;
        if (e.which === Keys.ESCAPE && canEscapeKeyClose) {
          utils_1.safeInvoke(onClose, e);
          e.preventDefault();
        }
      };
      _this.state = { hasEverOpened: props.isOpen };
      return _this;
    }
    Overlay.prototype.render = function () {
      if (this.props.lazy && !this.state.hasEverOpened) {
        return null;
      }
      var _a = this.props,
          children = _a.children,
          className = _a.className,
          inline = _a.inline,
          isOpen = _a.isOpen,
          transitionDuration = _a.transitionDuration,
          transitionName = _a.transitionName;
      var decoratedChildren = React.Children.map(children, function (child) {
        return React.cloneElement(child, {
          className: classNames(child.props.className, Classes.OVERLAY_CONTENT),
          tabIndex: 0
        });
      });
      var transitionGroup = React.createElement(CSSTransitionGroup, {
        transitionAppear: true,
        transitionAppearTimeout: transitionDuration,
        transitionEnterTimeout: transitionDuration,
        transitionLeaveTimeout: transitionDuration,
        transitionName: transitionName
      }, this.maybeRenderBackdrop(), isOpen ? decoratedChildren : null);
      var mergedClassName = classNames(Classes.OVERLAY, (_b = {}, _b[Classes.OVERLAY_OPEN] = isOpen, _b[Classes.OVERLAY_INLINE] = inline, _b), className);
      var elementProps = {
        className: mergedClassName,
        onKeyDown: this.handleKeyDown
      };
      if (inline) {
        return React.createElement("span", tslib_1.__assign({}, elementProps, { ref: this.refHandlers.container }), transitionGroup);
      } else {
        return React.createElement(portal_1.Portal, tslib_1.__assign({}, elementProps, {
          containerRef: this.refHandlers.container,
          onChildrenMount: this.handleContentMount
        }), transitionGroup);
      }
      var _b;
    };
    Overlay.prototype.componentDidMount = function () {
      if (this.props.isOpen) {
        this.overlayWillOpen();
      }
    };
    Overlay.prototype.componentWillReceiveProps = function (nextProps) {
      this.setState({ hasEverOpened: this.state.hasEverOpened || nextProps.isOpen });
    };
    Overlay.prototype.componentDidUpdate = function (prevProps) {
      if (prevProps.isOpen && !this.props.isOpen) {
        this.overlayWillClose();
      } else if (!prevProps.isOpen && this.props.isOpen) {
        this.overlayWillOpen();
      }
    };
    Overlay.prototype.componentWillUnmount = function () {
      this.overlayWillClose();
    };
    Overlay.prototype.maybeRenderBackdrop = function () {
      var _a = this.props,
          backdropClassName = _a.backdropClassName,
          backdropProps = _a.backdropProps,
          hasBackdrop = _a.hasBackdrop,
          isOpen = _a.isOpen;
      if (hasBackdrop && isOpen) {
        return React.createElement("div", tslib_1.__assign({}, backdropProps, {
          className: classNames(Classes.OVERLAY_BACKDROP, backdropClassName, backdropProps.className),
          onMouseDown: this.handleBackdropMouseDown,
          tabIndex: this.props.canOutsideClickClose ? 0 : null
        }));
      } else {
        return undefined;
      }
    };
    Overlay.prototype.overlayWillClose = function () {
      document.removeEventListener("focus", this.handleDocumentFocus, true);
      document.removeEventListener("mousedown", this.handleDocumentClick);
      var openStack = Overlay_1.openStack;
      var stackIndex = openStack.indexOf(this);
      if (stackIndex !== -1) {
        openStack.splice(stackIndex, 1);
        if (openStack.length > 0) {
          var lastOpenedOverlay = Overlay_1.getLastOpened();
          if (lastOpenedOverlay.props.enforceFocus) {
            document.addEventListener("focus", lastOpenedOverlay.handleDocumentFocus, true);
          }
        }
        if (openStack.filter(function (o) {
          return !o.props.inline && o.props.hasBackdrop;
        }).length === 0) {
          document.body.classList.remove(Classes.OVERLAY_OPEN);
        }
      }
    };
    Overlay.prototype.overlayWillOpen = function () {
      var openStack = Overlay_1.openStack;
      if (openStack.length > 0) {
        document.removeEventListener("focus", Overlay_1.getLastOpened().handleDocumentFocus, true);
      }
      openStack.push(this);
      if (this.props.canOutsideClickClose && !this.props.hasBackdrop) {
        document.addEventListener("mousedown", this.handleDocumentClick);
      }
      if (this.props.enforceFocus) {
        document.addEventListener("focus", this.handleDocumentFocus, true);
      }
      if (this.props.inline) {
        utils_1.safeInvoke(this.props.didOpen);
        if (this.props.autoFocus) {
          this.bringFocusInsideOverlay();
        }
      } else if (this.props.hasBackdrop) {
        document.body.classList.add(Classes.OVERLAY_OPEN);
      }
    };
    Overlay.prototype.bringFocusInsideOverlay = function () {
      var _this = this;
      return requestAnimationFrame(function () {
        if (_this.containerElement == null || document.activeElement == null || !_this.props.isOpen) {
          return;
        }
        var isFocusOutsideModal = !_this.containerElement.contains(document.activeElement);
        if (isFocusOutsideModal) {
          var autofocusElement = _this.containerElement.query("[autofocus]");
          var wrapperElement = _this.containerElement.query("[tabindex]");
          if (autofocusElement != null) {
            autofocusElement.focus();
          } else if (wrapperElement != null) {
            wrapperElement.focus();
          }
        }
      });
    };
    return Overlay;
  }(React.Component);
  Overlay.displayName = "Blueprint.Overlay";
  Overlay.defaultProps = {
    autoFocus: true,
    backdropProps: {},
    canEscapeKeyClose: true,
    canOutsideClickClose: true,
    enforceFocus: true,
    hasBackdrop: true,
    inline: false,
    isOpen: false,
    lazy: true,
    transitionDuration: 300,
    transitionName: "pt-overlay"
  };
  Overlay.openStack = [];
  Overlay.getLastOpened = function () {
    return Overlay_1.openStack[Overlay_1.openStack.length - 1];
  };
  Overlay = Overlay_1 = tslib_1.__decorate([PureRender], Overlay);
  exports.Overlay = Overlay;
  exports.OverlayFactory = React.createFactory(Overlay);
  var Overlay_1;
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/popover/arrows.js", ["npm:@blueprintjs/core@1.33.0/dist/common/position.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var position_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/position.js");
  exports.MIN_ARROW_SPACING = 18;
  function computeArrowOffset(sideLength, arrowSize, minimum) {
    if (minimum === void 0) {
      minimum = exports.MIN_ARROW_SPACING;
    }
    return Math.max(Math.round((sideLength - arrowSize) / 2), minimum);
  }
  exports.computeArrowOffset = computeArrowOffset;
  function getPopoverTransformOrigin(position, arrowSize, targetDimensions) {
    var offsetX = computeArrowOffset(targetDimensions.width, arrowSize);
    var offsetY = computeArrowOffset(targetDimensions.height, arrowSize);
    switch (position) {
      case position_1.Position.TOP_LEFT:
        return offsetX + "px bottom";
      case position_1.Position.TOP_RIGHT:
        return "calc(100% - " + offsetX + "px) bottom";
      case position_1.Position.BOTTOM_LEFT:
        return offsetX + "px top";
      case position_1.Position.BOTTOM_RIGHT:
        return "calc(100% - " + offsetX + "px) top";
      case position_1.Position.LEFT_TOP:
        return "right " + offsetY + "px";
      case position_1.Position.LEFT_BOTTOM:
        return "right calc(100% - " + offsetY + "px)";
      case position_1.Position.RIGHT_TOP:
        return "left " + offsetY + "px";
      case position_1.Position.RIGHT_BOTTOM:
        return "left calc(100% - " + offsetY + "px)";
      default:
        return undefined;
    }
  }
  exports.getPopoverTransformOrigin = getPopoverTransformOrigin;
  function getArrowPositionStyles(position, arrowSize, ignoreTargetDimensions, targetDimensions, inline) {
    var popoverOffset = function (sideLength) {
      var offset = computeArrowOffset(sideLength, arrowSize, 0);
      return offset < exports.MIN_ARROW_SPACING ? exports.MIN_ARROW_SPACING - offset : 0;
    };
    var popoverOffsetX = popoverOffset(targetDimensions.width);
    var popoverOffsetY = popoverOffset(targetDimensions.height);
    switch (position) {
      case position_1.Position.TOP_LEFT:
      case position_1.Position.BOTTOM_LEFT:
        return {
          arrow: ignoreTargetDimensions ? {} : { left: computeArrowOffset(targetDimensions.width, arrowSize) },
          container: { marginLeft: -popoverOffsetX }
        };
      case position_1.Position.TOP_RIGHT:
      case position_1.Position.BOTTOM_RIGHT:
        return {
          arrow: ignoreTargetDimensions ? {} : { right: computeArrowOffset(targetDimensions.width, arrowSize) },
          container: { marginLeft: popoverOffsetX }
        };
      case position_1.Position.RIGHT_TOP:
      case position_1.Position.LEFT_TOP:
        return {
          arrow: ignoreTargetDimensions ? {} : { top: computeArrowOffset(targetDimensions.height, arrowSize) },
          container: inline ? { top: -popoverOffsetY } : { marginTop: -popoverOffsetY }
        };
      case position_1.Position.RIGHT_BOTTOM:
      case position_1.Position.LEFT_BOTTOM:
        return {
          arrow: ignoreTargetDimensions ? {} : { bottom: computeArrowOffset(targetDimensions.height, arrowSize) },
          container: inline ? { bottom: -popoverOffsetY } : { marginTop: popoverOffsetY }
        };
      default:
        return {};
    }
  }
  exports.getArrowPositionStyles = getArrowPositionStyles;
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/popover/popover.js", ["npm:tslib@1.8.0.js", "npm:classnames@2.2.5.js", "npm:pure-render-decorator@1.2.1.js", "npm:react@0.14.9.js", "npm:react-dom@0.14.9.js", "npm:tether@1.4.1.js", "npm:@blueprintjs/core@1.33.0/dist/common/abstractComponent.js", "npm:@blueprintjs/core@1.33.0/dist/common/classes.js", "npm:@blueprintjs/core@1.33.0/dist/common/errors.js", "npm:@blueprintjs/core@1.33.0/dist/common/position.js", "npm:@blueprintjs/core@1.33.0/dist/common/tetherUtils.js", "npm:@blueprintjs/core@1.33.0/dist/common/utils.js", "npm:@blueprintjs/core@1.33.0/dist/common/utils/isDarkTheme.js", "npm:@blueprintjs/core@1.33.0/dist/components/overlay/overlay.js", "npm:@blueprintjs/core@1.33.0/dist/components/tooltip/tooltip.js", "npm:@blueprintjs/core@1.33.0/dist/components/popover/arrows.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var classNames = $__require("npm:classnames@2.2.5.js");
  var PureRender = $__require("npm:pure-render-decorator@1.2.1.js");
  var React = $__require("npm:react@0.14.9.js");
  var react_dom_1 = $__require("npm:react-dom@0.14.9.js");
  var Tether = $__require("npm:tether@1.4.1.js");
  var abstractComponent_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/abstractComponent.js");
  var Classes = $__require("npm:@blueprintjs/core@1.33.0/dist/common/classes.js");
  var Errors = $__require("npm:@blueprintjs/core@1.33.0/dist/common/errors.js");
  var PosUtils = $__require("npm:@blueprintjs/core@1.33.0/dist/common/position.js");
  var TetherUtils = $__require("npm:@blueprintjs/core@1.33.0/dist/common/tetherUtils.js");
  var Utils = $__require("npm:@blueprintjs/core@1.33.0/dist/common/utils.js");
  var isDarkTheme_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/utils/isDarkTheme.js");
  var overlay_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/overlay/overlay.js");
  var tooltip_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/tooltip/tooltip.js");
  var Arrows = $__require("npm:@blueprintjs/core@1.33.0/dist/components/popover/arrows.js");
  var SVG_SHADOW_PATH = "M8.11 6.302c1.015-.936 1.887-2.922 1.887-4.297v26c0-1.378" + "-.868-3.357-1.888-4.297L.925 17.09c-1.237-1.14-1.233-3.034 0-4.17L8.11 6.302z";
  var SVG_ARROW_PATH = "M8.787 7.036c1.22-1.125 2.21-3.376 2.21-5.03V0v30-2.005" + "c0-1.654-.983-3.9-2.21-5.03l-7.183-6.616c-.81-.746-.802-1.96 0-2.7l7.183-6.614z";
  var SMART_POSITIONING = {
    attachment: "together",
    to: "scrollParent"
  };
  var PopoverInteractionKind;
  (function (PopoverInteractionKind) {
    PopoverInteractionKind[PopoverInteractionKind["CLICK"] = 0] = "CLICK";
    PopoverInteractionKind[PopoverInteractionKind["CLICK_TARGET_ONLY"] = 1] = "CLICK_TARGET_ONLY";
    PopoverInteractionKind[PopoverInteractionKind["HOVER"] = 2] = "HOVER";
    PopoverInteractionKind[PopoverInteractionKind["HOVER_TARGET_ONLY"] = 3] = "HOVER_TARGET_ONLY";
  })(PopoverInteractionKind = exports.PopoverInteractionKind || (exports.PopoverInteractionKind = {}));
  var Popover = function (_super) {
    tslib_1.__extends(Popover, _super);
    function Popover(props, context) {
      var _this = _super.call(this, props, context) || this;
      _this.hasDarkParent = false;
      _this.isContentMounting = false;
      _this.refHandlers = {
        popover: function (ref) {
          _this.popoverElement = ref;
          _this.updateTether();
          _this.updateArrowPosition();
        },
        target: function (ref) {
          _this.targetElement = ref;
        }
      };
      _this.handleContentMount = function () {
        if (Utils.isFunction(_this.props.popoverDidOpen) && _this.isContentMounting) {
          _this.props.popoverDidOpen();
          _this.isContentMounting = false;
        }
      };
      _this.handleTargetFocus = function (e) {
        if (_this.props.openOnTargetFocus && _this.isHoverInteractionKind()) {
          _this.handleMouseEnter(e);
        }
      };
      _this.handleTargetBlur = function (e) {
        if (_this.props.openOnTargetFocus && _this.isHoverInteractionKind()) {
          requestAnimationFrame(function () {
            if (_this.popoverElement == null || !_this.popoverElement.contains(document.activeElement)) {
              _this.handleMouseLeave(e);
            }
          });
        }
      };
      _this.handleMouseEnter = function (e) {
        if (_this.props.inline && _this.isElementInPopover(e.target) && _this.props.interactionKind === PopoverInteractionKind.HOVER_TARGET_ONLY && !_this.props.openOnTargetFocus) {
          _this.handleMouseLeave(e);
        } else if (!_this.props.isDisabled) {
          _this.setOpenState(true, e, _this.props.hoverOpenDelay);
        }
      };
      _this.handleMouseLeave = function (e) {
        _this.setOpenState(false, e, _this.props.hoverCloseDelay);
      };
      _this.handlePopoverClick = function (e) {
        var eventTarget = e.target;
        var shouldDismiss = eventTarget.closest("." + Classes.POPOVER_DISMISS) != null;
        var overrideDismiss = eventTarget.closest("." + Classes.POPOVER_DISMISS_OVERRIDE) != null;
        if (shouldDismiss && !overrideDismiss) {
          _this.setOpenState(false, e);
        }
      };
      _this.handleOverlayClose = function (e) {
        var eventTarget = e.target;
        if (!Utils.elementIsOrContains(_this.targetElement, eventTarget) || e.nativeEvent instanceof KeyboardEvent) {
          _this.setOpenState(false, e);
        }
      };
      _this.handleTargetClick = function (e) {
        if (!_this.props.isDisabled && !_this.isElementInPopover(e.target)) {
          if (_this.props.isOpen == null) {
            _this.setState(function (prevState) {
              return { isOpen: !prevState.isOpen };
            });
          } else {
            _this.setOpenState(!_this.props.isOpen, e);
          }
        }
      };
      var isOpen = props.defaultIsOpen && !props.isDisabled;
      if (props.isOpen != null) {
        isOpen = props.isOpen;
      }
      _this.state = {
        ignoreTargetDimensions: false,
        isOpen: isOpen,
        targetHeight: 0,
        targetWidth: 0
      };
      return _this;
    }
    Popover.prototype.render = function () {
      var className = this.props.className;
      var isOpen = this.state.isOpen;
      var targetProps;
      if (this.isHoverInteractionKind()) {
        targetProps = {
          onBlur: this.handleTargetBlur,
          onFocus: this.handleTargetFocus,
          onMouseEnter: this.handleMouseEnter,
          onMouseLeave: this.handleMouseLeave
        };
      } else {
        targetProps = { onClick: this.handleTargetClick };
      }
      targetProps.className = classNames(Classes.POPOVER_TARGET, (_a = {}, _a[Classes.POPOVER_OPEN] = isOpen, _a), className);
      targetProps.ref = this.refHandlers.target;
      var children = this.understandChildren();
      var targetTabIndex = this.props.openOnTargetFocus && this.isHoverInteractionKind() ? 0 : undefined;
      var target = React.cloneElement(children.target, isOpen && children.target.type === tooltip_1.Tooltip ? {
        isDisabled: true,
        tabIndex: targetTabIndex
      } : { tabIndex: targetTabIndex });
      var isContentEmpty = children.content == null;
      if (isContentEmpty && !this.props.isDisabled && isOpen !== false && !Utils.isNodeEnv("production")) {
        console.warn(Errors.POPOVER_WARN_EMPTY_CONTENT);
      }
      return React.createElement(this.props.rootElementTag, targetProps, target, React.createElement(overlay_1.Overlay, {
        autoFocus: this.props.autoFocus,
        backdropClassName: Classes.POPOVER_BACKDROP,
        backdropProps: this.props.backdropProps,
        canEscapeKeyClose: this.props.canEscapeKeyClose,
        canOutsideClickClose: this.props.interactionKind === PopoverInteractionKind.CLICK,
        className: this.props.portalClassName,
        didOpen: this.handleContentMount,
        enforceFocus: this.props.enforceFocus,
        hasBackdrop: this.props.isModal,
        inline: this.props.inline,
        isOpen: isOpen && !isContentEmpty,
        lazy: this.props.lazy,
        onClose: this.handleOverlayClose,
        transitionDuration: this.props.transitionDuration,
        transitionName: Classes.POPOVER
      }, this.renderPopover(children.content)));
      var _a;
    };
    Popover.prototype.componentDidMount = function () {
      this.componentDOMChange();
    };
    Popover.prototype.componentWillReceiveProps = function (nextProps) {
      _super.prototype.componentWillReceiveProps.call(this, nextProps);
      if (nextProps.isOpen == null && nextProps.isDisabled && !this.props.isDisabled) {
        this.setOpenState(false);
      } else if (nextProps.isOpen !== this.props.isOpen) {
        this.setState({ isOpen: nextProps.isOpen });
      }
    };
    Popover.prototype.componentWillUpdate = function (_, nextState) {
      if (!this.state.isOpen && nextState.isOpen) {
        this.isContentMounting = true;
        Utils.safeInvoke(this.props.popoverWillOpen);
      } else if (this.state.isOpen && !nextState.isOpen) {
        Utils.safeInvoke(this.props.popoverWillClose);
      }
    };
    Popover.prototype.componentDidUpdate = function () {
      this.componentDOMChange();
    };
    Popover.prototype.componentWillUnmount = function () {
      _super.prototype.componentWillUnmount.call(this);
      this.destroyTether();
    };
    Popover.prototype.validateProps = function (props) {
      if (props.useSmartPositioning || props.constraints != null) {
        console.warn(Errors.POPOVER_WARN_DEPRECATED_CONSTRAINTS);
      }
      if (props.isOpen == null && props.onInteraction != null) {
        console.warn(Errors.POPOVER_WARN_UNCONTROLLED_ONINTERACTION);
      }
      if (props.inline && (props.useSmartPositioning || props.constraints != null || props.tetherOptions != null)) {
        console.warn(Errors.POPOVER_WARN_INLINE_NO_TETHER);
      }
      if (props.isModal && props.inline) {
        console.warn(Errors.POPOVER_WARN_MODAL_INLINE);
      }
      if (props.isModal && props.interactionKind !== PopoverInteractionKind.CLICK) {
        throw new Error(Errors.POPOVER_MODAL_INTERACTION);
      }
      var childrenCount = React.Children.count(props.children);
      var hasContentProp = props.content !== undefined;
      var hasTargetProp = props.target !== undefined;
      if (childrenCount === 0 && !hasTargetProp) {
        throw new Error(Errors.POPOVER_REQUIRES_TARGET);
      }
      if (childrenCount > 2) {
        console.warn(Errors.POPOVER_WARN_TOO_MANY_CHILDREN);
      }
      if (childrenCount > 0 && hasTargetProp) {
        console.warn(Errors.POPOVER_WARN_DOUBLE_TARGET);
      }
      if (childrenCount === 2 && hasContentProp) {
        console.warn(Errors.POPOVER_WARN_DOUBLE_CONTENT);
      }
    };
    Popover.prototype.componentDOMChange = function () {
      if (this.targetElement == null) {
        return;
      }
      if (this.props.useSmartArrowPositioning) {
        this.setState({
          targetHeight: this.targetElement.clientHeight,
          targetWidth: this.targetElement.clientWidth
        });
      }
      if (!this.props.inline) {
        this.hasDarkParent = isDarkTheme_1.isDarkTheme(this.targetElement);
        this.updateTether();
      }
    };
    Popover.prototype.renderPopover = function (content) {
      var _a = this.props,
          inline = _a.inline,
          interactionKind = _a.interactionKind;
      var popoverHandlers = { onClick: this.handlePopoverClick };
      if (interactionKind === PopoverInteractionKind.HOVER || inline && interactionKind === PopoverInteractionKind.HOVER_TARGET_ONLY) {
        popoverHandlers.onMouseEnter = this.handleMouseEnter;
        popoverHandlers.onMouseLeave = this.handleMouseLeave;
      }
      var positionClasses = TetherUtils.getAttachmentClasses(this.props.position).join(" ");
      var containerClasses = classNames(Classes.TRANSITION_CONTAINER, (_b = {}, _b[positionClasses] = inline, _b));
      var popoverClasses = classNames(Classes.POPOVER, (_c = {}, _c[Classes.DARK] = this.props.inheritDarkTheme && this.hasDarkParent && !inline, _c), this.props.popoverClassName);
      var styles = this.getArrowPositionStyles();
      var transform = { transformOrigin: this.getPopoverTransformOrigin() };
      return React.createElement("div", {
        className: containerClasses,
        ref: this.refHandlers.popover,
        style: styles.container
      }, React.createElement("div", tslib_1.__assign({
        className: popoverClasses,
        style: transform
      }, popoverHandlers), React.createElement("div", {
        className: Classes.POPOVER_ARROW,
        style: styles.arrow
      }, React.createElement("svg", { viewBox: "0 0 30 30" }, React.createElement("path", {
        className: Classes.POPOVER_ARROW + "-border",
        d: SVG_SHADOW_PATH
      }), React.createElement("path", {
        className: Classes.POPOVER_ARROW + "-fill",
        d: SVG_ARROW_PATH
      }))), React.createElement("div", { className: Classes.POPOVER_CONTENT }, content)));
      var _b, _c;
    };
    Popover.prototype.understandChildren = function () {
      var _a = this.props,
          children = _a.children,
          contentProp = _a.content,
          targetProp = _a.target;
      var _b = React.Children.toArray(children),
          targetChild = _b[0],
          contentChild = _b[1];
      return {
        content: ensureElement(contentChild == null ? contentProp : contentChild),
        target: ensureElement(targetChild == null ? targetProp : targetChild)
      };
    };
    Popover.prototype.getArrowPositionStyles = function () {
      if (this.props.useSmartArrowPositioning) {
        var dimensions = {
          height: this.state.targetHeight,
          width: this.state.targetWidth
        };
        return Arrows.getArrowPositionStyles(this.props.position, this.props.arrowSize, this.state.ignoreTargetDimensions, dimensions, this.props.inline);
      } else {
        return {};
      }
    };
    Popover.prototype.getPopoverTransformOrigin = function () {
      if (this.props.useSmartArrowPositioning && !this.props.useSmartPositioning) {
        var dimensions = {
          height: this.state.targetHeight,
          width: this.state.targetWidth
        };
        return Arrows.getPopoverTransformOrigin(this.props.position, this.props.arrowSize, dimensions);
      } else {
        return undefined;
      }
    };
    Popover.prototype.updateArrowPosition = function () {
      if (this.popoverElement != null) {
        var arrow = this.popoverElement.getElementsByClassName(Classes.POPOVER_ARROW)[0];
        var centerWidth = (this.state.targetWidth + arrow.clientWidth) / 2;
        var centerHeight = (this.state.targetHeight + arrow.clientHeight) / 2;
        var ignoreWidth = centerWidth > this.popoverElement.clientWidth && PosUtils.isPositionHorizontal(this.props.position);
        var ignoreHeight = centerHeight > this.popoverElement.clientHeight && PosUtils.isPositionVertical(this.props.position);
        if (!this.state.ignoreTargetDimensions && (ignoreWidth || ignoreHeight)) {
          this.setState({ ignoreTargetDimensions: true });
        } else if (this.state.ignoreTargetDimensions && !ignoreWidth && !ignoreHeight) {
          this.setState({ ignoreTargetDimensions: false });
        }
      }
    };
    Popover.prototype.updateTether = function () {
      var _this = this;
      if (this.state.isOpen && !this.props.inline && this.popoverElement != null) {
        var _a = this.props,
            constraints = _a.constraints,
            position = _a.position,
            _b = _a.tetherOptions,
            tetherOptions = _b === void 0 ? {} : _b,
            useSmartPositioning = _a.useSmartPositioning;
        var target = react_dom_1.findDOMNode(this).childNodes[0];
        var options = constraints == null && !useSmartPositioning ? tetherOptions : tslib_1.__assign({}, tetherOptions, { constraints: useSmartPositioning ? [SMART_POSITIONING] : constraints });
        var finalTetherOptions = TetherUtils.createTetherOptions(this.popoverElement, target, position, options);
        if (this.tether == null) {
          this.tether = new Tether(finalTetherOptions);
        } else {
          this.tether.setOptions(finalTetherOptions);
        }
        setTimeout(function () {
          return _this.tether.position();
        });
      } else {
        this.destroyTether();
      }
    };
    Popover.prototype.destroyTether = function () {
      if (this.tether != null) {
        this.tether.destroy();
      }
    };
    Popover.prototype.setOpenState = function (isOpen, e, timeout) {
      var _this = this;
      Utils.safeInvoke(this.cancelOpenTimeout);
      if (timeout > 0) {
        this.cancelOpenTimeout = this.setTimeout(function () {
          return _this.setOpenState(isOpen, e);
        }, timeout);
      } else {
        if (this.props.isOpen == null) {
          this.setState({ isOpen: isOpen });
        } else {
          Utils.safeInvoke(this.props.onInteraction, isOpen);
        }
        if (!isOpen) {
          Utils.safeInvoke(this.props.onClose, e);
        }
      }
    };
    Popover.prototype.isElementInPopover = function (element) {
      return this.popoverElement != null && this.popoverElement.contains(element);
    };
    Popover.prototype.isHoverInteractionKind = function () {
      return this.props.interactionKind === PopoverInteractionKind.HOVER || this.props.interactionKind === PopoverInteractionKind.HOVER_TARGET_ONLY;
    };
    return Popover;
  }(abstractComponent_1.AbstractComponent);
  Popover.defaultProps = {
    arrowSize: 30,
    className: "",
    defaultIsOpen: false,
    hoverCloseDelay: 300,
    hoverOpenDelay: 150,
    inheritDarkTheme: true,
    inline: false,
    interactionKind: PopoverInteractionKind.CLICK,
    isDisabled: false,
    isModal: false,
    openOnTargetFocus: true,
    popoverClassName: "",
    position: PosUtils.Position.RIGHT,
    rootElementTag: "span",
    transitionDuration: 300,
    useSmartArrowPositioning: true,
    useSmartPositioning: false
  };
  Popover.displayName = "Blueprint.Popover";
  Popover = tslib_1.__decorate([PureRender], Popover);
  exports.Popover = Popover;
  function ensureElement(child) {
    if (typeof child === "string") {
      return child.trim().length > 0 ? React.createElement("span", null, child) : undefined;
    } else if (typeof child === "number") {
      return React.createElement("span", null, child);
    } else {
      return child;
    }
  }
  exports.PopoverFactory = React.createFactory(Popover);
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/tooltip/tooltip.js", ["npm:tslib@1.8.0.js", "npm:classnames@2.2.5.js", "npm:pure-render-decorator@1.2.1.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/classes.js", "npm:@blueprintjs/core@1.33.0/dist/common/position.js", "npm:@blueprintjs/core@1.33.0/dist/components/popover/popover.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var classNames = $__require("npm:classnames@2.2.5.js");
  var PureRender = $__require("npm:pure-render-decorator@1.2.1.js");
  var React = $__require("npm:react@0.14.9.js");
  var Classes = $__require("npm:@blueprintjs/core@1.33.0/dist/common/classes.js");
  var position_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/position.js");
  var popover_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/popover/popover.js");
  var Tooltip = function (_super) {
    tslib_1.__extends(Tooltip, _super);
    function Tooltip() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Tooltip.prototype.render = function () {
      var _a = this.props,
          children = _a.children,
          intent = _a.intent,
          openOnTargetFocus = _a.openOnTargetFocus,
          tooltipClassName = _a.tooltipClassName;
      var classes = classNames(Classes.TOOLTIP, Classes.intentClass(intent), tooltipClassName);
      return React.createElement(popover_1.Popover, tslib_1.__assign({}, this.props, {
        arrowSize: 22,
        autoFocus: false,
        canEscapeKeyClose: false,
        enforceFocus: false,
        interactionKind: popover_1.PopoverInteractionKind.HOVER_TARGET_ONLY,
        lazy: true,
        openOnTargetFocus: openOnTargetFocus,
        popoverClassName: classes
      }), children);
    };
    return Tooltip;
  }(React.Component);
  Tooltip.defaultProps = {
    hoverCloseDelay: 0,
    hoverOpenDelay: 100,
    isDisabled: false,
    openOnTargetFocus: true,
    position: position_1.Position.TOP,
    rootElementTag: "span",
    transitionDuration: 100,
    useSmartArrowPositioning: true,
    useSmartPositioning: false
  };
  Tooltip.displayName = "Blueprint.Tooltip";
  Tooltip = tslib_1.__decorate([PureRender], Tooltip);
  exports.Tooltip = Tooltip;
  exports.TooltipFactory = React.createFactory(Tooltip);
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/tree/tree.js", ["npm:tslib@1.8.0.js", "npm:classnames@2.2.5.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/classes.js", "npm:@blueprintjs/core@1.33.0/dist/common/utils.js", "npm:@blueprintjs/core@1.33.0/dist/components/tree/treeNode.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var classNames = $__require("npm:classnames@2.2.5.js");
  var React = $__require("npm:react@0.14.9.js");
  var Classes = $__require("npm:@blueprintjs/core@1.33.0/dist/common/classes.js");
  var utils_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/utils.js");
  var treeNode_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/tree/treeNode.js");
  var Tree = function (_super) {
    tslib_1.__extends(Tree, _super);
    function Tree() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.nodeRefs = {};
      _this.handleNodeCollapse = function (node, e) {
        _this.handlerHelper(_this.props.onNodeCollapse, node, e);
      };
      _this.handleNodeClick = function (node, e) {
        _this.handlerHelper(_this.props.onNodeClick, node, e);
      };
      _this.handleContentRef = function (node, element) {
        if (element != null) {
          _this.nodeRefs[node.props.id] = element;
        } else {
          delete _this.nodeRefs[node.props.id];
        }
      };
      _this.handleNodeContextMenu = function (node, e) {
        _this.handlerHelper(_this.props.onNodeContextMenu, node, e);
      };
      _this.handleNodeDoubleClick = function (node, e) {
        _this.handlerHelper(_this.props.onNodeDoubleClick, node, e);
      };
      _this.handleNodeExpand = function (node, e) {
        _this.handlerHelper(_this.props.onNodeExpand, node, e);
      };
      return _this;
    }
    Tree.nodeFromPath = function (path, treeNodes) {
      if (path.length === 1) {
        return treeNodes[path[0]];
      } else {
        return Tree.nodeFromPath(path.slice(1), treeNodes[path[0]].childNodes);
      }
    };
    Tree.prototype.render = function () {
      return React.createElement("div", { className: classNames(Classes.TREE, this.props.className) }, this.renderNodes(this.props.contents, [], Classes.TREE_ROOT));
    };
    Tree.prototype.getNodeContentElement = function (nodeId) {
      return this.nodeRefs[nodeId];
    };
    Tree.prototype.renderNodes = function (treeNodes, currentPath, className) {
      var _this = this;
      if (treeNodes == null) {
        return null;
      }
      var nodeItems = treeNodes.map(function (node, i) {
        var elementPath = currentPath.concat(i);
        return React.createElement(treeNode_1.TreeNode, tslib_1.__assign({}, node, {
          key: node.id,
          contentRef: _this.handleContentRef,
          depth: elementPath.length - 1,
          onClick: _this.handleNodeClick,
          onContextMenu: _this.handleNodeContextMenu,
          onCollapse: _this.handleNodeCollapse,
          onDoubleClick: _this.handleNodeDoubleClick,
          onExpand: _this.handleNodeExpand,
          path: elementPath
        }), _this.renderNodes(node.childNodes, elementPath));
      });
      return React.createElement("ul", { className: classNames(Classes.TREE_NODE_LIST, className) }, nodeItems);
    };
    Tree.prototype.handlerHelper = function (handlerFromProps, node, e) {
      if (utils_1.isFunction(handlerFromProps)) {
        var nodeData = Tree.nodeFromPath(node.props.path, this.props.contents);
        handlerFromProps(nodeData, node.props.path, e);
      }
    };
    return Tree;
  }(React.Component);
  exports.Tree = Tree;
  exports.TreeFactory = React.createFactory(Tree);
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/collapse/collapse.js", ["npm:tslib@1.8.0.js", "npm:classnames@2.2.5.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/abstractComponent.js", "npm:@blueprintjs/core@1.33.0/dist/common/classes.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var classNames = $__require("npm:classnames@2.2.5.js");
  var React = $__require("npm:react@0.14.9.js");
  var abstractComponent_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/abstractComponent.js");
  var Classes = $__require("npm:@blueprintjs/core@1.33.0/dist/common/classes.js");
  var AnimationStates;
  (function (AnimationStates) {
    AnimationStates[AnimationStates["CLOSED"] = 0] = "CLOSED";
    AnimationStates[AnimationStates["OPENING"] = 1] = "OPENING";
    AnimationStates[AnimationStates["OPEN"] = 2] = "OPEN";
    AnimationStates[AnimationStates["CLOSING_START"] = 3] = "CLOSING_START";
    AnimationStates[AnimationStates["CLOSING_END"] = 4] = "CLOSING_END";
  })(AnimationStates = exports.AnimationStates || (exports.AnimationStates = {}));
  var Collapse = function (_super) {
    tslib_1.__extends(Collapse, _super);
    function Collapse() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = {
        animationState: AnimationStates.OPEN,
        height: "0px"
      };
      _this.height = 0;
      _this.contentsRefHandler = function (el) {
        _this.contents = el;
        if (el != null) {
          _this.height = _this.contents.clientHeight;
          _this.setState({
            animationState: _this.props.isOpen ? AnimationStates.OPEN : AnimationStates.CLOSED,
            height: _this.height + "px"
          });
        }
      };
      return _this;
    }
    Collapse.prototype.componentWillReceiveProps = function (nextProps) {
      var _this = this;
      if (this.contents != null && this.contents.clientHeight !== 0) {
        this.height = this.contents.clientHeight;
      }
      if (this.props.isOpen !== nextProps.isOpen) {
        this.clearTimeouts();
        if (this.state.animationState !== AnimationStates.CLOSED && !nextProps.isOpen) {
          this.setState({
            animationState: AnimationStates.CLOSING_START,
            height: this.height + "px"
          });
        } else if (this.state.animationState !== AnimationStates.OPEN && nextProps.isOpen) {
          this.setState({
            animationState: AnimationStates.OPENING,
            height: this.height + "px"
          });
          this.setTimeout(function () {
            return _this.onDelayedStateChange();
          }, this.props.transitionDuration);
        }
      }
    };
    Collapse.prototype.render = function () {
      var isContentVisible = this.state.animationState !== AnimationStates.CLOSED;
      var shouldRenderChildren = isContentVisible || this.props.keepChildrenMounted;
      var displayWithTransform = isContentVisible && this.state.animationState !== AnimationStates.CLOSING_END;
      var isAutoHeight = this.state.height === "auto";
      var containerStyle = {
        height: isContentVisible ? this.state.height : undefined,
        overflowY: isAutoHeight ? "visible" : undefined,
        transition: isAutoHeight ? "none" : undefined
      };
      var contentsStyle = {
        transform: displayWithTransform ? "translateY(0)" : "translateY(-" + this.height + "px)",
        transition: isAutoHeight ? "none" : undefined
      };
      return React.createElement(this.props.component, {
        className: classNames(Classes.COLLAPSE, this.props.className),
        style: containerStyle
      }, React.createElement("div", {
        className: "pt-collapse-body",
        ref: this.contentsRefHandler,
        style: contentsStyle,
        "aria-hidden": !isContentVisible && this.props.keepChildrenMounted
      }, shouldRenderChildren ? this.props.children : null));
    };
    Collapse.prototype.componentDidMount = function () {
      this.forceUpdate();
      if (this.props.isOpen) {
        this.setState({
          animationState: AnimationStates.OPEN,
          height: "auto"
        });
      } else {
        this.setState({ animationState: AnimationStates.CLOSED });
      }
    };
    Collapse.prototype.componentDidUpdate = function () {
      var _this = this;
      if (this.state.animationState === AnimationStates.CLOSING_START) {
        this.setTimeout(function () {
          return _this.setState({
            animationState: AnimationStates.CLOSING_END,
            height: "0px"
          });
        });
        this.setTimeout(function () {
          return _this.onDelayedStateChange();
        }, this.props.transitionDuration);
      }
    };
    Collapse.prototype.onDelayedStateChange = function () {
      switch (this.state.animationState) {
        case AnimationStates.OPENING:
          this.setState({
            animationState: AnimationStates.OPEN,
            height: "auto"
          });
          break;
        case AnimationStates.CLOSING_END:
          this.setState({ animationState: AnimationStates.CLOSED });
          break;
        default:
          break;
      }
    };
    return Collapse;
  }(abstractComponent_1.AbstractComponent);
  Collapse.displayName = "Blueprint.Collapse";
  Collapse.defaultProps = {
    component: "div",
    isOpen: false,
    keepChildrenMounted: false,
    transitionDuration: 200
  };
  exports.Collapse = Collapse;
});
System.registerDynamic('npm:classnames@2.2.5/index.js', [], true, function ($__require, exports, module) {
	/* */
	"format cjs";
	/*!
   Copyright (c) 2016 Jed Watson.
   Licensed under the MIT License (MIT), see
   http://jedwatson.github.io/classnames
 */
	/* global define */

	var global = this || self,
	    GLOBAL = global;
	(function () {
		'use strict';

		var hasOwn = {}.hasOwnProperty;

		function classNames() {
			var classes = [];

			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;

				var argType = typeof arg;

				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}

			return classes.join(' ');
		}

		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (typeof undefined === 'function' && typeof define.amd === 'object' && define.amd) {
			// register as 'classnames', consistent with npm package name
			define('classnames', [], function () {
				return classNames;
			});
		} else {
			window.classNames = classNames;
		}
	})();
});
System.registerDynamic("npm:classnames@2.2.5.js", ["npm:classnames@2.2.5/index.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:classnames@2.2.5/index.js");
});
System.registerDynamic('npm:fbjs@0.8.16/lib/shallowEqual.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * @typechecks
   * 
   */

  /*eslint-disable no-self-compare */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var hasOwnProperty = Object.prototype.hasOwnProperty;

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      // Added the nonzero y check to make Flow happy, but it is redundant
      return x !== 0 || y !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }

  /**
   * Performs equality by iterating through keys on an object and returning false
   * when any key has values which are not strictly equal between the arguments.
   * Returns true when the values of all keys are strictly equal.
   */
  function shallowEqual(objA, objB) {
    if (is(objA, objB)) {
      return true;
    }

    if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
      return false;
    }

    var keysA = Object.keys(objA);
    var keysB = Object.keys(objB);

    if (keysA.length !== keysB.length) {
      return false;
    }

    // Test for A's keys different from B.
    for (var i = 0; i < keysA.length; i++) {
      if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
        return false;
      }
    }

    return true;
  }

  module.exports = shallowEqual;
});
System.registerDynamic('npm:pure-render-decorator@1.2.1/index.js', ['npm:fbjs@0.8.16/lib/warning.js', 'npm:fbjs@0.8.16/lib/shallowEqual.js'], true, function ($__require, exports, module) {
  /**
   * @author Félix Girault <felix.girault@gmail.com>
   * @license MIT
   */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var warning = $__require('npm:fbjs@0.8.16/lib/warning.js');
  var shallowEqual = $__require('npm:fbjs@0.8.16/lib/shallowEqual.js');

  /**
   * Tells if a component should update given it's next props
   * and state.
   *
   * @param object nextProps Next props.
   * @param object nextState Next state.
   */
  function shouldComponentUpdate(nextProps, nextState) {
    return !shallowEqual(this.props, nextProps) || !shallowEqual(this.state, nextState);
  }

  /**
   * Returns a text description of the component that can be
   * used to identify it in error messages.
   *
   * @see https://github.com/facebook/react/blob/v15.4.0-rc.3/src/renderers/shared/stack/reconciler/ReactCompositeComponent.js#L1143
   * @param {function} component The component.
   * @return {string} The name of the component.
   */
  function getComponentName(component) {
    var constructor = component.prototype && component.prototype.constructor;

    return component.displayName || constructor && constructor.displayName || component.name || constructor && constructor.name || 'a component';
  }

  /**
   * Makes the given component "pure".
   *
   * @param object component Component.
   */
  function pureRenderDecorator(component) {
    if (component.prototype.shouldComponentUpdate !== undefined) {
      // We're not using the condition mecanism of warning()
      // here to avoid useless calls to getComponentName().
      warning(false, 'Cannot decorate `%s` with @pureRenderDecorator, ' + 'because it already implements `shouldComponentUpdate().', getComponentName(component));
    }

    component.prototype.shouldComponentUpdate = shouldComponentUpdate;
    return component;
  }

  module.exports = pureRenderDecorator;
});
System.registerDynamic("npm:pure-render-decorator@1.2.1.js", ["npm:pure-render-decorator@1.2.1/index.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:pure-render-decorator@1.2.1/index.js");
});
System.registerDynamic('npm:react@0.14.9/lib/renderSubtreeIntoContainer.js', ['npm:react@0.14.9/lib/ReactMount.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ReactMount = $__require('npm:react@0.14.9/lib/ReactMount.js');
  module.exports = ReactMount.renderSubtreeIntoContainer;
});
System.registerDynamic('npm:react@0.14.9/lib/ReactDOM.js', ['npm:react@0.14.9/lib/ReactCurrentOwner.js', 'npm:react@0.14.9/lib/ReactDOMTextComponent.js', 'npm:react@0.14.9/lib/ReactDefaultInjection.js', 'npm:react@0.14.9/lib/ReactInstanceHandles.js', 'npm:react@0.14.9/lib/ReactMount.js', 'npm:react@0.14.9/lib/ReactPerf.js', 'npm:react@0.14.9/lib/ReactReconciler.js', 'npm:react@0.14.9/lib/ReactUpdates.js', 'npm:react@0.14.9/lib/ReactVersion.js', 'npm:react@0.14.9/lib/findDOMNode.js', 'npm:react@0.14.9/lib/renderSubtreeIntoContainer.js', 'npm:fbjs@0.6.1/lib/warning.js', 'npm:fbjs@0.6.1/lib/ExecutionEnvironment.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactCurrentOwner = $__require('npm:react@0.14.9/lib/ReactCurrentOwner.js');
    var ReactDOMTextComponent = $__require('npm:react@0.14.9/lib/ReactDOMTextComponent.js');
    var ReactDefaultInjection = $__require('npm:react@0.14.9/lib/ReactDefaultInjection.js');
    var ReactInstanceHandles = $__require('npm:react@0.14.9/lib/ReactInstanceHandles.js');
    var ReactMount = $__require('npm:react@0.14.9/lib/ReactMount.js');
    var ReactPerf = $__require('npm:react@0.14.9/lib/ReactPerf.js');
    var ReactReconciler = $__require('npm:react@0.14.9/lib/ReactReconciler.js');
    var ReactUpdates = $__require('npm:react@0.14.9/lib/ReactUpdates.js');
    var ReactVersion = $__require('npm:react@0.14.9/lib/ReactVersion.js');
    var findDOMNode = $__require('npm:react@0.14.9/lib/findDOMNode.js');
    var renderSubtreeIntoContainer = $__require('npm:react@0.14.9/lib/renderSubtreeIntoContainer.js');
    var warning = $__require('npm:fbjs@0.6.1/lib/warning.js');
    ReactDefaultInjection.inject();
    var render = ReactPerf.measure('React', 'render', ReactMount.render);
    var React = {
      findDOMNode: findDOMNode,
      render: render,
      unmountComponentAtNode: ReactMount.unmountComponentAtNode,
      version: ReactVersion,
      unstable_batchedUpdates: ReactUpdates.batchedUpdates,
      unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
    };
    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
      __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
        CurrentOwner: ReactCurrentOwner,
        InstanceHandles: ReactInstanceHandles,
        Mount: ReactMount,
        Reconciler: ReactReconciler,
        TextComponent: ReactDOMTextComponent
      });
    }
    if ('production' !== 'production') {
      var ExecutionEnvironment = $__require('npm:fbjs@0.6.1/lib/ExecutionEnvironment.js');
      if (ExecutionEnvironment.canUseDOM && window.top === window.self) {
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
          if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
            console.debug('Download the React DevTools for a better development experience: ' + 'https://fb.me/react-devtools');
          }
        }
        var ieCompatibilityMode = document.documentMode && document.documentMode < 8;
        'production' !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : undefined;
        var expectedFeatures = [Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.split, String.prototype.trim, Object.create, Object.freeze];
        for (var i = 0; i < expectedFeatures.length; i++) {
          if (!expectedFeatures[i]) {
            console.error('One or more ES5 shim/shams expected by React are not available: ' + 'https://fb.me/react-warning-polyfills');
            break;
          }
        }
      }
    }
    module.exports = React;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/FallbackCompositionState.js', ['npm:react@0.14.9/lib/PooledClass.js', 'npm:react@0.14.9/lib/Object.assign.js', 'npm:react@0.14.9/lib/getTextContentAccessor.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var PooledClass = $__require('npm:react@0.14.9/lib/PooledClass.js');
  var assign = $__require('npm:react@0.14.9/lib/Object.assign.js');
  var getTextContentAccessor = $__require('npm:react@0.14.9/lib/getTextContentAccessor.js');
  function FallbackCompositionState(root) {
    this._root = root;
    this._startText = this.getText();
    this._fallbackText = null;
  }
  assign(FallbackCompositionState.prototype, {
    destructor: function () {
      this._root = null;
      this._startText = null;
      this._fallbackText = null;
    },
    getText: function () {
      if ('value' in this._root) {
        return this._root.value;
      }
      return this._root[getTextContentAccessor()];
    },
    getData: function () {
      if (this._fallbackText) {
        return this._fallbackText;
      }
      var start;
      var startValue = this._startText;
      var startLength = startValue.length;
      var end;
      var endValue = this.getText();
      var endLength = endValue.length;
      for (start = 0; start < startLength; start++) {
        if (startValue[start] !== endValue[start]) {
          break;
        }
      }
      var minEnd = startLength - start;
      for (end = 1; end <= minEnd; end++) {
        if (startValue[startLength - end] !== endValue[endLength - end]) {
          break;
        }
      }
      var sliceTail = end > 1 ? 1 - end : undefined;
      this._fallbackText = endValue.slice(start, sliceTail);
      return this._fallbackText;
    }
  });
  PooledClass.addPoolingTo(FallbackCompositionState);
  module.exports = FallbackCompositionState;
});
System.registerDynamic('npm:react@0.14.9/lib/SyntheticCompositionEvent.js', ['npm:react@0.14.9/lib/SyntheticEvent.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var SyntheticEvent = $__require('npm:react@0.14.9/lib/SyntheticEvent.js');
  var CompositionEventInterface = { data: null };
  function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);
  module.exports = SyntheticCompositionEvent;
});
System.registerDynamic('npm:react@0.14.9/lib/SyntheticInputEvent.js', ['npm:react@0.14.9/lib/SyntheticEvent.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var SyntheticEvent = $__require('npm:react@0.14.9/lib/SyntheticEvent.js');
  var InputEventInterface = { data: null };
  function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);
  module.exports = SyntheticInputEvent;
});
System.registerDynamic('npm:react@0.14.9/lib/BeforeInputEventPlugin.js', ['npm:react@0.14.9/lib/EventConstants.js', 'npm:react@0.14.9/lib/EventPropagators.js', 'npm:fbjs@0.6.1/lib/ExecutionEnvironment.js', 'npm:react@0.14.9/lib/FallbackCompositionState.js', 'npm:react@0.14.9/lib/SyntheticCompositionEvent.js', 'npm:react@0.14.9/lib/SyntheticInputEvent.js', 'npm:fbjs@0.6.1/lib/keyOf.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var EventConstants = $__require('npm:react@0.14.9/lib/EventConstants.js');
  var EventPropagators = $__require('npm:react@0.14.9/lib/EventPropagators.js');
  var ExecutionEnvironment = $__require('npm:fbjs@0.6.1/lib/ExecutionEnvironment.js');
  var FallbackCompositionState = $__require('npm:react@0.14.9/lib/FallbackCompositionState.js');
  var SyntheticCompositionEvent = $__require('npm:react@0.14.9/lib/SyntheticCompositionEvent.js');
  var SyntheticInputEvent = $__require('npm:react@0.14.9/lib/SyntheticInputEvent.js');
  var keyOf = $__require('npm:fbjs@0.6.1/lib/keyOf.js');
  var END_KEYCODES = [9, 13, 27, 32];
  var START_KEYCODE = 229;
  var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;
  var documentMode = null;
  if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
    documentMode = document.documentMode;
  }
  var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();
  var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
  function isPresto() {
    var opera = window.opera;
    return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
  }
  var SPACEBAR_CODE = 32;
  var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
  var topLevelTypes = EventConstants.topLevelTypes;
  var eventTypes = {
    beforeInput: {
      phasedRegistrationNames: {
        bubbled: keyOf({ onBeforeInput: null }),
        captured: keyOf({ onBeforeInputCapture: null })
      },
      dependencies: [topLevelTypes.topCompositionEnd, topLevelTypes.topKeyPress, topLevelTypes.topTextInput, topLevelTypes.topPaste]
    },
    compositionEnd: {
      phasedRegistrationNames: {
        bubbled: keyOf({ onCompositionEnd: null }),
        captured: keyOf({ onCompositionEndCapture: null })
      },
      dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionEnd, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
    },
    compositionStart: {
      phasedRegistrationNames: {
        bubbled: keyOf({ onCompositionStart: null }),
        captured: keyOf({ onCompositionStartCapture: null })
      },
      dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionStart, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
    },
    compositionUpdate: {
      phasedRegistrationNames: {
        bubbled: keyOf({ onCompositionUpdate: null }),
        captured: keyOf({ onCompositionUpdateCapture: null })
      },
      dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionUpdate, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
    }
  };
  var hasSpaceKeypress = false;
  function isKeypressCommand(nativeEvent) {
    return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) && !(nativeEvent.ctrlKey && nativeEvent.altKey);
  }
  function getCompositionEventType(topLevelType) {
    switch (topLevelType) {
      case topLevelTypes.topCompositionStart:
        return eventTypes.compositionStart;
      case topLevelTypes.topCompositionEnd:
        return eventTypes.compositionEnd;
      case topLevelTypes.topCompositionUpdate:
        return eventTypes.compositionUpdate;
    }
  }
  function isFallbackCompositionStart(topLevelType, nativeEvent) {
    return topLevelType === topLevelTypes.topKeyDown && nativeEvent.keyCode === START_KEYCODE;
  }
  function isFallbackCompositionEnd(topLevelType, nativeEvent) {
    switch (topLevelType) {
      case topLevelTypes.topKeyUp:
        return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
      case topLevelTypes.topKeyDown:
        return nativeEvent.keyCode !== START_KEYCODE;
      case topLevelTypes.topKeyPress:
      case topLevelTypes.topMouseDown:
      case topLevelTypes.topBlur:
        return true;
      default:
        return false;
    }
  }
  function getDataFromCustomEvent(nativeEvent) {
    var detail = nativeEvent.detail;
    if (typeof detail === 'object' && 'data' in detail) {
      return detail.data;
    }
    return null;
  }
  var currentComposition = null;
  function extractCompositionEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
    var eventType;
    var fallbackData;
    if (canUseCompositionEvent) {
      eventType = getCompositionEventType(topLevelType);
    } else if (!currentComposition) {
      if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
        eventType = eventTypes.compositionStart;
      }
    } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
      eventType = eventTypes.compositionEnd;
    }
    if (!eventType) {
      return null;
    }
    if (useFallbackCompositionData) {
      if (!currentComposition && eventType === eventTypes.compositionStart) {
        currentComposition = FallbackCompositionState.getPooled(topLevelTarget);
      } else if (eventType === eventTypes.compositionEnd) {
        if (currentComposition) {
          fallbackData = currentComposition.getData();
        }
      }
    }
    var event = SyntheticCompositionEvent.getPooled(eventType, topLevelTargetID, nativeEvent, nativeEventTarget);
    if (fallbackData) {
      event.data = fallbackData;
    } else {
      var customData = getDataFromCustomEvent(nativeEvent);
      if (customData !== null) {
        event.data = customData;
      }
    }
    EventPropagators.accumulateTwoPhaseDispatches(event);
    return event;
  }
  function getNativeBeforeInputChars(topLevelType, nativeEvent) {
    switch (topLevelType) {
      case topLevelTypes.topCompositionEnd:
        return getDataFromCustomEvent(nativeEvent);
      case topLevelTypes.topKeyPress:
        var which = nativeEvent.which;
        if (which !== SPACEBAR_CODE) {
          return null;
        }
        hasSpaceKeypress = true;
        return SPACEBAR_CHAR;
      case topLevelTypes.topTextInput:
        var chars = nativeEvent.data;
        if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
          return null;
        }
        return chars;
      default:
        return null;
    }
  }
  function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
    if (currentComposition) {
      if (topLevelType === topLevelTypes.topCompositionEnd || isFallbackCompositionEnd(topLevelType, nativeEvent)) {
        var chars = currentComposition.getData();
        FallbackCompositionState.release(currentComposition);
        currentComposition = null;
        return chars;
      }
      return null;
    }
    switch (topLevelType) {
      case topLevelTypes.topPaste:
        return null;
      case topLevelTypes.topKeyPress:
        if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
          return String.fromCharCode(nativeEvent.which);
        }
        return null;
      case topLevelTypes.topCompositionEnd:
        return useFallbackCompositionData ? null : nativeEvent.data;
      default:
        return null;
    }
  }
  function extractBeforeInputEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
    var chars;
    if (canUseTextInputEvent) {
      chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
    } else {
      chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
    }
    if (!chars) {
      return null;
    }
    var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, topLevelTargetID, nativeEvent, nativeEventTarget);
    event.data = chars;
    EventPropagators.accumulateTwoPhaseDispatches(event);
    return event;
  }
  var BeforeInputEventPlugin = {
    eventTypes: eventTypes,
    extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
      return [extractCompositionEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget)];
    }
  };
  module.exports = BeforeInputEventPlugin;
});
System.registerDynamic('npm:react@0.14.9/lib/ChangeEventPlugin.js', ['npm:react@0.14.9/lib/EventConstants.js', 'npm:react@0.14.9/lib/EventPluginHub.js', 'npm:react@0.14.9/lib/EventPropagators.js', 'npm:fbjs@0.6.1/lib/ExecutionEnvironment.js', 'npm:react@0.14.9/lib/ReactUpdates.js', 'npm:react@0.14.9/lib/SyntheticEvent.js', 'npm:react@0.14.9/lib/getEventTarget.js', 'npm:react@0.14.9/lib/isEventSupported.js', 'npm:react@0.14.9/lib/isTextInputElement.js', 'npm:fbjs@0.6.1/lib/keyOf.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var EventConstants = $__require('npm:react@0.14.9/lib/EventConstants.js');
    var EventPluginHub = $__require('npm:react@0.14.9/lib/EventPluginHub.js');
    var EventPropagators = $__require('npm:react@0.14.9/lib/EventPropagators.js');
    var ExecutionEnvironment = $__require('npm:fbjs@0.6.1/lib/ExecutionEnvironment.js');
    var ReactUpdates = $__require('npm:react@0.14.9/lib/ReactUpdates.js');
    var SyntheticEvent = $__require('npm:react@0.14.9/lib/SyntheticEvent.js');
    var getEventTarget = $__require('npm:react@0.14.9/lib/getEventTarget.js');
    var isEventSupported = $__require('npm:react@0.14.9/lib/isEventSupported.js');
    var isTextInputElement = $__require('npm:react@0.14.9/lib/isTextInputElement.js');
    var keyOf = $__require('npm:fbjs@0.6.1/lib/keyOf.js');
    var topLevelTypes = EventConstants.topLevelTypes;
    var eventTypes = { change: {
        phasedRegistrationNames: {
          bubbled: keyOf({ onChange: null }),
          captured: keyOf({ onChangeCapture: null })
        },
        dependencies: [topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]
      } };
    var activeElement = null;
    var activeElementID = null;
    var activeElementValue = null;
    var activeElementValueProp = null;
    function shouldUseChangeEvent(elem) {
      var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
      return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
    }
    var doesChangeEventBubble = false;
    if (ExecutionEnvironment.canUseDOM) {
      doesChangeEventBubble = isEventSupported('change') && (!('documentMode' in document) || document.documentMode > 8);
    }
    function manualDispatchChangeEvent(nativeEvent) {
      var event = SyntheticEvent.getPooled(eventTypes.change, activeElementID, nativeEvent, getEventTarget(nativeEvent));
      EventPropagators.accumulateTwoPhaseDispatches(event);
      ReactUpdates.batchedUpdates(runEventInBatch, event);
    }
    function runEventInBatch(event) {
      EventPluginHub.enqueueEvents(event);
      EventPluginHub.processEventQueue(false);
    }
    function startWatchingForChangeEventIE8(target, targetID) {
      activeElement = target;
      activeElementID = targetID;
      activeElement.attachEvent('onchange', manualDispatchChangeEvent);
    }
    function stopWatchingForChangeEventIE8() {
      if (!activeElement) {
        return;
      }
      activeElement.detachEvent('onchange', manualDispatchChangeEvent);
      activeElement = null;
      activeElementID = null;
    }
    function getTargetIDForChangeEvent(topLevelType, topLevelTarget, topLevelTargetID) {
      if (topLevelType === topLevelTypes.topChange) {
        return topLevelTargetID;
      }
    }
    function handleEventsForChangeEventIE8(topLevelType, topLevelTarget, topLevelTargetID) {
      if (topLevelType === topLevelTypes.topFocus) {
        stopWatchingForChangeEventIE8();
        startWatchingForChangeEventIE8(topLevelTarget, topLevelTargetID);
      } else if (topLevelType === topLevelTypes.topBlur) {
        stopWatchingForChangeEventIE8();
      }
    }
    var isInputEventSupported = false;
    if (ExecutionEnvironment.canUseDOM) {
      isInputEventSupported = isEventSupported('input') && (!('documentMode' in document) || document.documentMode > 9);
    }
    var newValueProp = {
      get: function () {
        return activeElementValueProp.get.call(this);
      },
      set: function (val) {
        activeElementValue = '' + val;
        activeElementValueProp.set.call(this, val);
      }
    };
    function startWatchingForValueChange(target, targetID) {
      activeElement = target;
      activeElementID = targetID;
      activeElementValue = target.value;
      activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');
      Object.defineProperty(activeElement, 'value', newValueProp);
      activeElement.attachEvent('onpropertychange', handlePropertyChange);
    }
    function stopWatchingForValueChange() {
      if (!activeElement) {
        return;
      }
      delete activeElement.value;
      activeElement.detachEvent('onpropertychange', handlePropertyChange);
      activeElement = null;
      activeElementID = null;
      activeElementValue = null;
      activeElementValueProp = null;
    }
    function handlePropertyChange(nativeEvent) {
      if (nativeEvent.propertyName !== 'value') {
        return;
      }
      var value = nativeEvent.srcElement.value;
      if (value === activeElementValue) {
        return;
      }
      activeElementValue = value;
      manualDispatchChangeEvent(nativeEvent);
    }
    function getTargetIDForInputEvent(topLevelType, topLevelTarget, topLevelTargetID) {
      if (topLevelType === topLevelTypes.topInput) {
        return topLevelTargetID;
      }
    }
    function handleEventsForInputEventIE(topLevelType, topLevelTarget, topLevelTargetID) {
      if (topLevelType === topLevelTypes.topFocus) {
        stopWatchingForValueChange();
        startWatchingForValueChange(topLevelTarget, topLevelTargetID);
      } else if (topLevelType === topLevelTypes.topBlur) {
        stopWatchingForValueChange();
      }
    }
    function getTargetIDForInputEventIE(topLevelType, topLevelTarget, topLevelTargetID) {
      if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {
        if (activeElement && activeElement.value !== activeElementValue) {
          activeElementValue = activeElement.value;
          return activeElementID;
        }
      }
    }
    function shouldUseClickEvent(elem) {
      return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
    }
    function getTargetIDForClickEvent(topLevelType, topLevelTarget, topLevelTargetID) {
      if (topLevelType === topLevelTypes.topClick) {
        return topLevelTargetID;
      }
    }
    var ChangeEventPlugin = {
      eventTypes: eventTypes,
      extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
        var getTargetIDFunc, handleEventFunc;
        if (shouldUseChangeEvent(topLevelTarget)) {
          if (doesChangeEventBubble) {
            getTargetIDFunc = getTargetIDForChangeEvent;
          } else {
            handleEventFunc = handleEventsForChangeEventIE8;
          }
        } else if (isTextInputElement(topLevelTarget)) {
          if (isInputEventSupported) {
            getTargetIDFunc = getTargetIDForInputEvent;
          } else {
            getTargetIDFunc = getTargetIDForInputEventIE;
            handleEventFunc = handleEventsForInputEventIE;
          }
        } else if (shouldUseClickEvent(topLevelTarget)) {
          getTargetIDFunc = getTargetIDForClickEvent;
        }
        if (getTargetIDFunc) {
          var targetID = getTargetIDFunc(topLevelType, topLevelTarget, topLevelTargetID);
          if (targetID) {
            var event = SyntheticEvent.getPooled(eventTypes.change, targetID, nativeEvent, nativeEventTarget);
            event.type = 'change';
            EventPropagators.accumulateTwoPhaseDispatches(event);
            return event;
          }
        }
        if (handleEventFunc) {
          handleEventFunc(topLevelType, topLevelTarget, topLevelTargetID);
        }
      }
    };
    module.exports = ChangeEventPlugin;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/ClientReactRootIndex.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule ClientReactRootIndex
   * @typechecks
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var nextReactRootIndex = 0;

  var ClientReactRootIndex = {
    createReactRootIndex: function () {
      return nextReactRootIndex++;
    }
  };

  module.exports = ClientReactRootIndex;
});
System.registerDynamic('npm:react@0.14.9/lib/DefaultEventPluginOrder.js', ['npm:fbjs@0.6.1/lib/keyOf.js'], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule DefaultEventPluginOrder
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var keyOf = $__require('npm:fbjs@0.6.1/lib/keyOf.js');

  /**
   * Module that is injectable into `EventPluginHub`, that specifies a
   * deterministic ordering of `EventPlugin`s. A convenient way to reason about
   * plugins, without having to package every one of them. This is better than
   * having plugins be ordered in the same order that they are injected because
   * that ordering would be influenced by the packaging order.
   * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
   * preventing default on events is convenient in `SimpleEventPlugin` handlers.
   */
  var DefaultEventPluginOrder = [keyOf({ ResponderEventPlugin: null }), keyOf({ SimpleEventPlugin: null }), keyOf({ TapEventPlugin: null }), keyOf({ EnterLeaveEventPlugin: null }), keyOf({ ChangeEventPlugin: null }), keyOf({ SelectEventPlugin: null }), keyOf({ BeforeInputEventPlugin: null })];

  module.exports = DefaultEventPluginOrder;
});
System.registerDynamic('npm:react@0.14.9/lib/EnterLeaveEventPlugin.js', ['npm:react@0.14.9/lib/EventConstants.js', 'npm:react@0.14.9/lib/EventPropagators.js', 'npm:react@0.14.9/lib/SyntheticMouseEvent.js', 'npm:react@0.14.9/lib/ReactMount.js', 'npm:fbjs@0.6.1/lib/keyOf.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var EventConstants = $__require('npm:react@0.14.9/lib/EventConstants.js');
  var EventPropagators = $__require('npm:react@0.14.9/lib/EventPropagators.js');
  var SyntheticMouseEvent = $__require('npm:react@0.14.9/lib/SyntheticMouseEvent.js');
  var ReactMount = $__require('npm:react@0.14.9/lib/ReactMount.js');
  var keyOf = $__require('npm:fbjs@0.6.1/lib/keyOf.js');
  var topLevelTypes = EventConstants.topLevelTypes;
  var getFirstReactDOM = ReactMount.getFirstReactDOM;
  var eventTypes = {
    mouseEnter: {
      registrationName: keyOf({ onMouseEnter: null }),
      dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
    },
    mouseLeave: {
      registrationName: keyOf({ onMouseLeave: null }),
      dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
    }
  };
  var extractedEvents = [null, null];
  var EnterLeaveEventPlugin = {
    eventTypes: eventTypes,
    extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
      if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
        return null;
      }
      if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {
        return null;
      }
      var win;
      if (topLevelTarget.window === topLevelTarget) {
        win = topLevelTarget;
      } else {
        var doc = topLevelTarget.ownerDocument;
        if (doc) {
          win = doc.defaultView || doc.parentWindow;
        } else {
          win = window;
        }
      }
      var from;
      var to;
      var fromID = '';
      var toID = '';
      if (topLevelType === topLevelTypes.topMouseOut) {
        from = topLevelTarget;
        fromID = topLevelTargetID;
        to = getFirstReactDOM(nativeEvent.relatedTarget || nativeEvent.toElement);
        if (to) {
          toID = ReactMount.getID(to);
        } else {
          to = win;
        }
        to = to || win;
      } else {
        from = win;
        to = topLevelTarget;
        toID = topLevelTargetID;
      }
      if (from === to) {
        return null;
      }
      var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, fromID, nativeEvent, nativeEventTarget);
      leave.type = 'mouseleave';
      leave.target = from;
      leave.relatedTarget = to;
      var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, toID, nativeEvent, nativeEventTarget);
      enter.type = 'mouseenter';
      enter.target = to;
      enter.relatedTarget = from;
      EventPropagators.accumulateEnterLeaveDispatches(leave, enter, fromID, toID);
      extractedEvents[0] = leave;
      extractedEvents[1] = enter;
      return extractedEvents;
    }
  };
  module.exports = EnterLeaveEventPlugin;
});
System.registerDynamic('npm:react@0.14.9/lib/HTMLDOMPropertyConfig.js', ['npm:react@0.14.9/lib/DOMProperty.js', 'npm:fbjs@0.6.1/lib/ExecutionEnvironment.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var DOMProperty = $__require('npm:react@0.14.9/lib/DOMProperty.js');
  var ExecutionEnvironment = $__require('npm:fbjs@0.6.1/lib/ExecutionEnvironment.js');
  var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;
  var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
  var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
  var HAS_SIDE_EFFECTS = DOMProperty.injection.HAS_SIDE_EFFECTS;
  var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
  var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
  var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;
  var hasSVG;
  if (ExecutionEnvironment.canUseDOM) {
    var implementation = document.implementation;
    hasSVG = implementation && implementation.hasFeature && implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1');
  }
  var HTMLDOMPropertyConfig = {
    isCustomAttribute: RegExp.prototype.test.bind(/^(data|aria)-[a-z_][a-z\d_.\-]*$/),
    Properties: {
      accept: null,
      acceptCharset: null,
      accessKey: null,
      action: null,
      allowFullScreen: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
      allowTransparency: MUST_USE_ATTRIBUTE,
      alt: null,
      async: HAS_BOOLEAN_VALUE,
      autoComplete: null,
      autoPlay: HAS_BOOLEAN_VALUE,
      capture: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
      cellPadding: null,
      cellSpacing: null,
      charSet: MUST_USE_ATTRIBUTE,
      challenge: MUST_USE_ATTRIBUTE,
      checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
      classID: MUST_USE_ATTRIBUTE,
      className: hasSVG ? MUST_USE_ATTRIBUTE : MUST_USE_PROPERTY,
      cols: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
      colSpan: null,
      content: null,
      contentEditable: null,
      contextMenu: MUST_USE_ATTRIBUTE,
      controls: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
      coords: null,
      crossOrigin: null,
      data: null,
      dateTime: MUST_USE_ATTRIBUTE,
      'default': HAS_BOOLEAN_VALUE,
      defer: HAS_BOOLEAN_VALUE,
      dir: null,
      disabled: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
      download: HAS_OVERLOADED_BOOLEAN_VALUE,
      draggable: null,
      encType: null,
      form: MUST_USE_ATTRIBUTE,
      formAction: MUST_USE_ATTRIBUTE,
      formEncType: MUST_USE_ATTRIBUTE,
      formMethod: MUST_USE_ATTRIBUTE,
      formNoValidate: HAS_BOOLEAN_VALUE,
      formTarget: MUST_USE_ATTRIBUTE,
      frameBorder: MUST_USE_ATTRIBUTE,
      headers: null,
      height: MUST_USE_ATTRIBUTE,
      hidden: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
      high: null,
      href: null,
      hrefLang: null,
      htmlFor: null,
      httpEquiv: null,
      icon: null,
      id: MUST_USE_PROPERTY,
      inputMode: MUST_USE_ATTRIBUTE,
      integrity: null,
      is: MUST_USE_ATTRIBUTE,
      keyParams: MUST_USE_ATTRIBUTE,
      keyType: MUST_USE_ATTRIBUTE,
      kind: null,
      label: null,
      lang: null,
      list: MUST_USE_ATTRIBUTE,
      loop: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
      low: null,
      manifest: MUST_USE_ATTRIBUTE,
      marginHeight: null,
      marginWidth: null,
      max: null,
      maxLength: MUST_USE_ATTRIBUTE,
      media: MUST_USE_ATTRIBUTE,
      mediaGroup: null,
      method: null,
      min: null,
      minLength: MUST_USE_ATTRIBUTE,
      multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
      muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
      name: null,
      nonce: MUST_USE_ATTRIBUTE,
      noValidate: HAS_BOOLEAN_VALUE,
      open: HAS_BOOLEAN_VALUE,
      optimum: null,
      pattern: null,
      placeholder: null,
      poster: null,
      preload: null,
      radioGroup: null,
      readOnly: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
      rel: null,
      required: HAS_BOOLEAN_VALUE,
      reversed: HAS_BOOLEAN_VALUE,
      role: MUST_USE_ATTRIBUTE,
      rows: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
      rowSpan: null,
      sandbox: null,
      scope: null,
      scoped: HAS_BOOLEAN_VALUE,
      scrolling: null,
      seamless: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
      selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
      shape: null,
      size: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
      sizes: MUST_USE_ATTRIBUTE,
      span: HAS_POSITIVE_NUMERIC_VALUE,
      spellCheck: null,
      src: null,
      srcDoc: MUST_USE_PROPERTY,
      srcLang: null,
      srcSet: MUST_USE_ATTRIBUTE,
      start: HAS_NUMERIC_VALUE,
      step: null,
      style: null,
      summary: null,
      tabIndex: null,
      target: null,
      title: null,
      type: null,
      useMap: null,
      value: MUST_USE_PROPERTY | HAS_SIDE_EFFECTS,
      width: MUST_USE_ATTRIBUTE,
      wmode: MUST_USE_ATTRIBUTE,
      wrap: null,
      about: MUST_USE_ATTRIBUTE,
      datatype: MUST_USE_ATTRIBUTE,
      inlist: MUST_USE_ATTRIBUTE,
      prefix: MUST_USE_ATTRIBUTE,
      property: MUST_USE_ATTRIBUTE,
      resource: MUST_USE_ATTRIBUTE,
      'typeof': MUST_USE_ATTRIBUTE,
      vocab: MUST_USE_ATTRIBUTE,
      autoCapitalize: MUST_USE_ATTRIBUTE,
      autoCorrect: MUST_USE_ATTRIBUTE,
      autoSave: null,
      color: null,
      itemProp: MUST_USE_ATTRIBUTE,
      itemScope: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
      itemType: MUST_USE_ATTRIBUTE,
      itemID: MUST_USE_ATTRIBUTE,
      itemRef: MUST_USE_ATTRIBUTE,
      results: null,
      security: MUST_USE_ATTRIBUTE,
      unselectable: MUST_USE_ATTRIBUTE
    },
    DOMAttributeNames: {
      acceptCharset: 'accept-charset',
      className: 'class',
      htmlFor: 'for',
      httpEquiv: 'http-equiv'
    },
    DOMPropertyNames: {
      autoComplete: 'autocomplete',
      autoFocus: 'autofocus',
      autoPlay: 'autoplay',
      autoSave: 'autosave',
      encType: 'encoding',
      hrefLang: 'hreflang',
      radioGroup: 'radiogroup',
      spellCheck: 'spellcheck',
      srcDoc: 'srcdoc',
      srcSet: 'srcset'
    }
  };
  module.exports = HTMLDOMPropertyConfig;
});
System.registerDynamic('npm:react@0.14.9/lib/ReactBrowserComponentMixin.js', ['npm:react@0.14.9/lib/ReactInstanceMap.js', 'npm:react@0.14.9/lib/findDOMNode.js', 'npm:fbjs@0.6.1/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactInstanceMap = $__require('npm:react@0.14.9/lib/ReactInstanceMap.js');
    var findDOMNode = $__require('npm:react@0.14.9/lib/findDOMNode.js');
    var warning = $__require('npm:fbjs@0.6.1/lib/warning.js');
    var didWarnKey = '_getDOMNodeDidWarn';
    var ReactBrowserComponentMixin = { getDOMNode: function () {
        'production' !== 'production' ? warning(this.constructor[didWarnKey], '%s.getDOMNode(...) is deprecated. Please use ' + 'ReactDOM.findDOMNode(instance) instead.', ReactInstanceMap.get(this).getName() || this.tagName || 'Unknown') : undefined;
        this.constructor[didWarnKey] = true;
        return findDOMNode(this);
      } };
    module.exports = ReactBrowserComponentMixin;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/findDOMNode.js', ['npm:react@0.14.9/lib/ReactCurrentOwner.js', 'npm:react@0.14.9/lib/ReactInstanceMap.js', 'npm:react@0.14.9/lib/ReactMount.js', 'npm:fbjs@0.6.1/lib/invariant.js', 'npm:fbjs@0.6.1/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactCurrentOwner = $__require('npm:react@0.14.9/lib/ReactCurrentOwner.js');
    var ReactInstanceMap = $__require('npm:react@0.14.9/lib/ReactInstanceMap.js');
    var ReactMount = $__require('npm:react@0.14.9/lib/ReactMount.js');
    var invariant = $__require('npm:fbjs@0.6.1/lib/invariant.js');
    var warning = $__require('npm:fbjs@0.6.1/lib/warning.js');
    function findDOMNode(componentOrElement) {
      if ('production' !== 'production') {
        var owner = ReactCurrentOwner.current;
        if (owner !== null) {
          'production' !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing getDOMNode or findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : undefined;
          owner._warnedAboutRefsInRender = true;
        }
      }
      if (componentOrElement == null) {
        return null;
      }
      if (componentOrElement.nodeType === 1) {
        return componentOrElement;
      }
      if (ReactInstanceMap.has(componentOrElement)) {
        return ReactMount.getNodeFromInstance(componentOrElement);
      }
      !(componentOrElement.render == null || typeof componentOrElement.render !== 'function') ? 'production' !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : invariant(false) : undefined;
      !false ? 'production' !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : invariant(false) : undefined;
    }
    module.exports = findDOMNode;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/AutoFocusUtils.js', ['npm:react@0.14.9/lib/ReactMount.js', 'npm:react@0.14.9/lib/findDOMNode.js', 'npm:fbjs@0.6.1/lib/focusNode.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ReactMount = $__require('npm:react@0.14.9/lib/ReactMount.js');
  var findDOMNode = $__require('npm:react@0.14.9/lib/findDOMNode.js');
  var focusNode = $__require('npm:fbjs@0.6.1/lib/focusNode.js');
  var Mixin = { componentDidMount: function () {
      if (this.props.autoFocus) {
        focusNode(findDOMNode(this));
      }
    } };
  var AutoFocusUtils = {
    Mixin: Mixin,
    focusDOMComponent: function () {
      focusNode(ReactMount.getNode(this._rootNodeID));
    }
  };
  module.exports = AutoFocusUtils;
});
System.registerDynamic("npm:fbjs@0.6.1/lib/camelize.js", [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule camelize
   * @typechecks
   */

  "use strict";

  var global = this || self,
      GLOBAL = global;
  var _hyphenPattern = /-(.)/g;

  /**
   * Camelcases a hyphenated string, for example:
   *
   *   > camelize('background-color')
   *   < "backgroundColor"
   *
   * @param {string} string
   * @return {string}
   */
  function camelize(string) {
    return string.replace(_hyphenPattern, function (_, character) {
      return character.toUpperCase();
    });
  }

  module.exports = camelize;
});
System.registerDynamic('npm:fbjs@0.6.1/lib/camelizeStyleName.js', ['npm:fbjs@0.6.1/lib/camelize.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var camelize = $__require('npm:fbjs@0.6.1/lib/camelize.js');
  var msPattern = /^-ms-/;
  function camelizeStyleName(string) {
    return camelize(string.replace(msPattern, 'ms-'));
  }
  module.exports = camelizeStyleName;
});
System.registerDynamic('npm:react@0.14.9/lib/CSSProperty.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule CSSProperty
   */

  'use strict';

  /**
   * CSS properties which accept numbers but are not in units of "px".
   */

  var global = this || self,
      GLOBAL = global;
  var isUnitlessNumber = {
    animationIterationCount: true,
    boxFlex: true,
    boxFlexGroup: true,
    boxOrdinalGroup: true,
    columnCount: true,
    flex: true,
    flexGrow: true,
    flexPositive: true,
    flexShrink: true,
    flexNegative: true,
    flexOrder: true,
    fontWeight: true,
    lineClamp: true,
    lineHeight: true,
    opacity: true,
    order: true,
    orphans: true,
    tabSize: true,
    widows: true,
    zIndex: true,
    zoom: true,

    // SVG-related properties
    fillOpacity: true,
    stopOpacity: true,
    strokeDashoffset: true,
    strokeOpacity: true,
    strokeWidth: true
  };

  /**
   * @param {string} prefix vendor-specific prefix, eg: Webkit
   * @param {string} key style name, eg: transitionDuration
   * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
   * WebkitTransitionDuration
   */
  function prefixKey(prefix, key) {
    return prefix + key.charAt(0).toUpperCase() + key.substring(1);
  }

  /**
   * Support style names that may come passed in prefixed by adding permutations
   * of vendor prefixes.
   */
  var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

  // Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
  // infinite loop, because it iterates over the newly added props too.
  Object.keys(isUnitlessNumber).forEach(function (prop) {
    prefixes.forEach(function (prefix) {
      isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
    });
  });

  /**
   * Most style properties can be unset by doing .style[prop] = '' but IE8
   * doesn't like doing that with shorthand properties so for the properties that
   * IE8 breaks on, which are listed here, we instead unset each of the
   * individual properties. See http://bugs.jquery.com/ticket/12385.
   * The 4-value 'clock' properties like margin, padding, border-width seem to
   * behave without any problems. Curiously, list-style works too without any
   * special prodding.
   */
  var shorthandPropertyExpansions = {
    background: {
      backgroundAttachment: true,
      backgroundColor: true,
      backgroundImage: true,
      backgroundPositionX: true,
      backgroundPositionY: true,
      backgroundRepeat: true
    },
    backgroundPosition: {
      backgroundPositionX: true,
      backgroundPositionY: true
    },
    border: {
      borderWidth: true,
      borderStyle: true,
      borderColor: true
    },
    borderBottom: {
      borderBottomWidth: true,
      borderBottomStyle: true,
      borderBottomColor: true
    },
    borderLeft: {
      borderLeftWidth: true,
      borderLeftStyle: true,
      borderLeftColor: true
    },
    borderRight: {
      borderRightWidth: true,
      borderRightStyle: true,
      borderRightColor: true
    },
    borderTop: {
      borderTopWidth: true,
      borderTopStyle: true,
      borderTopColor: true
    },
    font: {
      fontStyle: true,
      fontVariant: true,
      fontWeight: true,
      fontSize: true,
      lineHeight: true,
      fontFamily: true
    },
    outline: {
      outlineWidth: true,
      outlineStyle: true,
      outlineColor: true
    }
  };

  var CSSProperty = {
    isUnitlessNumber: isUnitlessNumber,
    shorthandPropertyExpansions: shorthandPropertyExpansions
  };

  module.exports = CSSProperty;
});
System.registerDynamic('npm:react@0.14.9/lib/dangerousStyleValue.js', ['npm:react@0.14.9/lib/CSSProperty.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var CSSProperty = $__require('npm:react@0.14.9/lib/CSSProperty.js');
  var isUnitlessNumber = CSSProperty.isUnitlessNumber;
  function dangerousStyleValue(name, value) {
    var isEmpty = value == null || typeof value === 'boolean' || value === '';
    if (isEmpty) {
      return '';
    }
    var isNonNumeric = isNaN(value);
    if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
      return '' + value;
    }
    if (typeof value === 'string') {
      value = value.trim();
    }
    return value + 'px';
  }
  module.exports = dangerousStyleValue;
});
System.registerDynamic('npm:fbjs@0.6.1/lib/hyphenate.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule hyphenate
   * @typechecks
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var _uppercasePattern = /([A-Z])/g;

  /**
   * Hyphenates a camelcased string, for example:
   *
   *   > hyphenate('backgroundColor')
   *   < "background-color"
   *
   * For CSS style names, use `hyphenateStyleName` instead which works properly
   * with all vendor prefixes, including `ms`.
   *
   * @param {string} string
   * @return {string}
   */
  function hyphenate(string) {
    return string.replace(_uppercasePattern, '-$1').toLowerCase();
  }

  module.exports = hyphenate;
});
System.registerDynamic('npm:fbjs@0.6.1/lib/hyphenateStyleName.js', ['npm:fbjs@0.6.1/lib/hyphenate.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var hyphenate = $__require('npm:fbjs@0.6.1/lib/hyphenate.js');
  var msPattern = /^ms-/;
  function hyphenateStyleName(string) {
    return hyphenate(string).replace(msPattern, '-ms-');
  }
  module.exports = hyphenateStyleName;
});
System.registerDynamic('npm:fbjs@0.6.1/lib/memoizeStringOnly.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule memoizeStringOnly
   * @typechecks static-only
   */

  'use strict';

  /**
   * Memoizes the return value of a function that accepts one string argument.
   *
   * @param {function} callback
   * @return {function}
   */

  var global = this || self,
      GLOBAL = global;
  function memoizeStringOnly(callback) {
    var cache = {};
    return function (string) {
      if (!cache.hasOwnProperty(string)) {
        cache[string] = callback.call(this, string);
      }
      return cache[string];
    };
  }

  module.exports = memoizeStringOnly;
});
System.registerDynamic('npm:react@0.14.9/lib/CSSPropertyOperations.js', ['npm:react@0.14.9/lib/CSSProperty.js', 'npm:fbjs@0.6.1/lib/ExecutionEnvironment.js', 'npm:react@0.14.9/lib/ReactPerf.js', 'npm:fbjs@0.6.1/lib/camelizeStyleName.js', 'npm:react@0.14.9/lib/dangerousStyleValue.js', 'npm:fbjs@0.6.1/lib/hyphenateStyleName.js', 'npm:fbjs@0.6.1/lib/memoizeStringOnly.js', 'npm:fbjs@0.6.1/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var CSSProperty = $__require('npm:react@0.14.9/lib/CSSProperty.js');
    var ExecutionEnvironment = $__require('npm:fbjs@0.6.1/lib/ExecutionEnvironment.js');
    var ReactPerf = $__require('npm:react@0.14.9/lib/ReactPerf.js');
    var camelizeStyleName = $__require('npm:fbjs@0.6.1/lib/camelizeStyleName.js');
    var dangerousStyleValue = $__require('npm:react@0.14.9/lib/dangerousStyleValue.js');
    var hyphenateStyleName = $__require('npm:fbjs@0.6.1/lib/hyphenateStyleName.js');
    var memoizeStringOnly = $__require('npm:fbjs@0.6.1/lib/memoizeStringOnly.js');
    var warning = $__require('npm:fbjs@0.6.1/lib/warning.js');
    var processStyleName = memoizeStringOnly(function (styleName) {
      return hyphenateStyleName(styleName);
    });
    var hasShorthandPropertyBug = false;
    var styleFloatAccessor = 'cssFloat';
    if (ExecutionEnvironment.canUseDOM) {
      var tempStyle = document.createElement('div').style;
      try {
        tempStyle.font = '';
      } catch (e) {
        hasShorthandPropertyBug = true;
      }
      if (document.documentElement.style.cssFloat === undefined) {
        styleFloatAccessor = 'styleFloat';
      }
    }
    if ('production' !== 'production') {
      var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
      var badStyleValueWithSemicolonPattern = /;\s*$/;
      var warnedStyleNames = {};
      var warnedStyleValues = {};
      var warnHyphenatedStyleName = function (name) {
        if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
          return;
        }
        warnedStyleNames[name] = true;
        'production' !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?', name, camelizeStyleName(name)) : undefined;
      };
      var warnBadVendoredStyleName = function (name) {
        if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
          return;
        }
        warnedStyleNames[name] = true;
        'production' !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1)) : undefined;
      };
      var warnStyleValueWithSemicolon = function (name, value) {
        if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
          return;
        }
        warnedStyleValues[value] = true;
        'production' !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon. ' + 'Try "%s: %s" instead.', name, value.replace(badStyleValueWithSemicolonPattern, '')) : undefined;
      };
      var warnValidStyle = function (name, value) {
        if (name.indexOf('-') > -1) {
          warnHyphenatedStyleName(name);
        } else if (badVendoredStyleNamePattern.test(name)) {
          warnBadVendoredStyleName(name);
        } else if (badStyleValueWithSemicolonPattern.test(value)) {
          warnStyleValueWithSemicolon(name, value);
        }
      };
    }
    var CSSPropertyOperations = {
      createMarkupForStyles: function (styles) {
        var serialized = '';
        for (var styleName in styles) {
          if (!styles.hasOwnProperty(styleName)) {
            continue;
          }
          var styleValue = styles[styleName];
          if ('production' !== 'production') {
            warnValidStyle(styleName, styleValue);
          }
          if (styleValue != null) {
            serialized += processStyleName(styleName) + ':';
            serialized += dangerousStyleValue(styleName, styleValue) + ';';
          }
        }
        return serialized || null;
      },
      setValueForStyles: function (node, styles) {
        var style = node.style;
        for (var styleName in styles) {
          if (!styles.hasOwnProperty(styleName)) {
            continue;
          }
          if ('production' !== 'production') {
            warnValidStyle(styleName, styles[styleName]);
          }
          var styleValue = dangerousStyleValue(styleName, styles[styleName]);
          if (styleName === 'float') {
            styleName = styleFloatAccessor;
          }
          if (styleValue) {
            style[styleName] = styleValue;
          } else {
            var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
            if (expansion) {
              for (var individualStyleName in expansion) {
                style[individualStyleName] = '';
              }
            } else {
              style[styleName] = '';
            }
          }
        }
      }
    };
    ReactPerf.measureMethods(CSSPropertyOperations, 'CSSPropertyOperations', { setValueForStyles: 'setValueForStyles' });
    module.exports = CSSPropertyOperations;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/ReactDOMButton.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule ReactDOMButton
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var mouseListenerNames = {
    onClick: true,
    onDoubleClick: true,
    onMouseDown: true,
    onMouseMove: true,
    onMouseUp: true,

    onClickCapture: true,
    onDoubleClickCapture: true,
    onMouseDownCapture: true,
    onMouseMoveCapture: true,
    onMouseUpCapture: true
  };

  /**
   * Implements a <button> native component that does not receive mouse events
   * when `disabled` is set.
   */
  var ReactDOMButton = {
    getNativeProps: function (inst, props, context) {
      if (!props.disabled) {
        return props;
      }

      // Copy the props, except the mouse listeners
      var nativeProps = {};
      for (var key in props) {
        if (props.hasOwnProperty(key) && !mouseListenerNames[key]) {
          nativeProps[key] = props[key];
        }
      }

      return nativeProps;
    }
  };

  module.exports = ReactDOMButton;
});
System.registerDynamic('npm:react@0.14.9/lib/ReactDOMInput.js', ['npm:react@0.14.9/lib/ReactDOMIDOperations.js', 'npm:react@0.14.9/lib/LinkedValueUtils.js', 'npm:react@0.14.9/lib/ReactMount.js', 'npm:react@0.14.9/lib/ReactUpdates.js', 'npm:react@0.14.9/lib/Object.assign.js', 'npm:fbjs@0.6.1/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactDOMIDOperations = $__require('npm:react@0.14.9/lib/ReactDOMIDOperations.js');
    var LinkedValueUtils = $__require('npm:react@0.14.9/lib/LinkedValueUtils.js');
    var ReactMount = $__require('npm:react@0.14.9/lib/ReactMount.js');
    var ReactUpdates = $__require('npm:react@0.14.9/lib/ReactUpdates.js');
    var assign = $__require('npm:react@0.14.9/lib/Object.assign.js');
    var invariant = $__require('npm:fbjs@0.6.1/lib/invariant.js');
    var instancesByReactID = {};
    function forceUpdateIfMounted() {
      if (this._rootNodeID) {
        ReactDOMInput.updateWrapper(this);
      }
    }
    var ReactDOMInput = {
      getNativeProps: function (inst, props, context) {
        var value = LinkedValueUtils.getValue(props);
        var checked = LinkedValueUtils.getChecked(props);
        var nativeProps = assign({}, props, {
          defaultChecked: undefined,
          defaultValue: undefined,
          value: value != null ? value : inst._wrapperState.initialValue,
          checked: checked != null ? checked : inst._wrapperState.initialChecked,
          onChange: inst._wrapperState.onChange
        });
        return nativeProps;
      },
      mountWrapper: function (inst, props) {
        if ('production' !== 'production') {
          LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);
        }
        var defaultValue = props.defaultValue;
        inst._wrapperState = {
          initialChecked: props.defaultChecked || false,
          initialValue: defaultValue != null ? defaultValue : null,
          onChange: _handleChange.bind(inst)
        };
      },
      mountReadyWrapper: function (inst) {
        instancesByReactID[inst._rootNodeID] = inst;
      },
      unmountWrapper: function (inst) {
        delete instancesByReactID[inst._rootNodeID];
      },
      updateWrapper: function (inst) {
        var props = inst._currentElement.props;
        var checked = props.checked;
        if (checked != null) {
          ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'checked', checked || false);
        }
        var value = LinkedValueUtils.getValue(props);
        if (value != null) {
          ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'value', '' + value);
        }
      }
    };
    function _handleChange(event) {
      var props = this._currentElement.props;
      var returnValue = LinkedValueUtils.executeOnChange(props, event);
      ReactUpdates.asap(forceUpdateIfMounted, this);
      var name = props.name;
      if (props.type === 'radio' && name != null) {
        var rootNode = ReactMount.getNode(this._rootNodeID);
        var queryRoot = rootNode;
        while (queryRoot.parentNode) {
          queryRoot = queryRoot.parentNode;
        }
        var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');
        for (var i = 0; i < group.length; i++) {
          var otherNode = group[i];
          if (otherNode === rootNode || otherNode.form !== rootNode.form) {
            continue;
          }
          var otherID = ReactMount.getID(otherNode);
          !otherID ? 'production' !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the ' + 'same `name` is not supported.') : invariant(false) : undefined;
          var otherInstance = instancesByReactID[otherID];
          !otherInstance ? 'production' !== 'production' ? invariant(false, 'ReactDOMInput: Unknown radio button ID %s.', otherID) : invariant(false) : undefined;
          ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
        }
      }
      return returnValue;
    }
    module.exports = ReactDOMInput;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/ReactDOMOption.js', ['npm:react@0.14.9/lib/ReactChildren.js', 'npm:react@0.14.9/lib/ReactDOMSelect.js', 'npm:react@0.14.9/lib/Object.assign.js', 'npm:fbjs@0.6.1/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactChildren = $__require('npm:react@0.14.9/lib/ReactChildren.js');
    var ReactDOMSelect = $__require('npm:react@0.14.9/lib/ReactDOMSelect.js');
    var assign = $__require('npm:react@0.14.9/lib/Object.assign.js');
    var warning = $__require('npm:fbjs@0.6.1/lib/warning.js');
    var valueContextKey = ReactDOMSelect.valueContextKey;
    var ReactDOMOption = {
      mountWrapper: function (inst, props, context) {
        if ('production' !== 'production') {
          'production' !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : undefined;
        }
        var selectValue = context[valueContextKey];
        var selected = null;
        if (selectValue != null) {
          selected = false;
          if (Array.isArray(selectValue)) {
            for (var i = 0; i < selectValue.length; i++) {
              if ('' + selectValue[i] === '' + props.value) {
                selected = true;
                break;
              }
            }
          } else {
            selected = '' + selectValue === '' + props.value;
          }
        }
        inst._wrapperState = { selected: selected };
      },
      getNativeProps: function (inst, props, context) {
        var nativeProps = assign({
          selected: undefined,
          children: undefined
        }, props);
        if (inst._wrapperState.selected != null) {
          nativeProps.selected = inst._wrapperState.selected;
        }
        var content = '';
        ReactChildren.forEach(props.children, function (child) {
          if (child == null) {
            return;
          }
          if (typeof child === 'string' || typeof child === 'number') {
            content += child;
          } else {
            'production' !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : undefined;
          }
        });
        if (content) {
          nativeProps.children = content;
        }
        return nativeProps;
      }
    };
    module.exports = ReactDOMOption;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/ReactDOMSelect.js', ['npm:react@0.14.9/lib/LinkedValueUtils.js', 'npm:react@0.14.9/lib/ReactMount.js', 'npm:react@0.14.9/lib/ReactUpdates.js', 'npm:react@0.14.9/lib/Object.assign.js', 'npm:fbjs@0.6.1/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var LinkedValueUtils = $__require('npm:react@0.14.9/lib/LinkedValueUtils.js');
    var ReactMount = $__require('npm:react@0.14.9/lib/ReactMount.js');
    var ReactUpdates = $__require('npm:react@0.14.9/lib/ReactUpdates.js');
    var assign = $__require('npm:react@0.14.9/lib/Object.assign.js');
    var warning = $__require('npm:fbjs@0.6.1/lib/warning.js');
    var valueContextKey = '__ReactDOMSelect_value$' + Math.random().toString(36).slice(2);
    function updateOptionsIfPendingUpdateAndMounted() {
      if (this._rootNodeID && this._wrapperState.pendingUpdate) {
        this._wrapperState.pendingUpdate = false;
        var props = this._currentElement.props;
        var value = LinkedValueUtils.getValue(props);
        if (value != null) {
          updateOptions(this, Boolean(props.multiple), value);
        }
      }
    }
    function getDeclarationErrorAddendum(owner) {
      if (owner) {
        var name = owner.getName();
        if (name) {
          return ' Check the render method of `' + name + '`.';
        }
      }
      return '';
    }
    var valuePropNames = ['value', 'defaultValue'];
    function checkSelectPropTypes(inst, props) {
      var owner = inst._currentElement._owner;
      LinkedValueUtils.checkPropTypes('select', props, owner);
      for (var i = 0; i < valuePropNames.length; i++) {
        var propName = valuePropNames[i];
        if (props[propName] == null) {
          continue;
        }
        if (props.multiple) {
          'production' !== 'production' ? warning(Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : undefined;
        } else {
          'production' !== 'production' ? warning(!Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : undefined;
        }
      }
    }
    function updateOptions(inst, multiple, propValue) {
      var selectedValue, i;
      var options = ReactMount.getNode(inst._rootNodeID).options;
      if (multiple) {
        selectedValue = {};
        for (i = 0; i < propValue.length; i++) {
          selectedValue['' + propValue[i]] = true;
        }
        for (i = 0; i < options.length; i++) {
          var selected = selectedValue.hasOwnProperty(options[i].value);
          if (options[i].selected !== selected) {
            options[i].selected = selected;
          }
        }
      } else {
        selectedValue = '' + propValue;
        for (i = 0; i < options.length; i++) {
          if (options[i].value === selectedValue) {
            options[i].selected = true;
            return;
          }
        }
        if (options.length) {
          options[0].selected = true;
        }
      }
    }
    var ReactDOMSelect = {
      valueContextKey: valueContextKey,
      getNativeProps: function (inst, props, context) {
        return assign({}, props, {
          onChange: inst._wrapperState.onChange,
          value: undefined
        });
      },
      mountWrapper: function (inst, props) {
        if ('production' !== 'production') {
          checkSelectPropTypes(inst, props);
        }
        var value = LinkedValueUtils.getValue(props);
        inst._wrapperState = {
          pendingUpdate: false,
          initialValue: value != null ? value : props.defaultValue,
          onChange: _handleChange.bind(inst),
          wasMultiple: Boolean(props.multiple)
        };
      },
      processChildContext: function (inst, props, context) {
        var childContext = assign({}, context);
        childContext[valueContextKey] = inst._wrapperState.initialValue;
        return childContext;
      },
      postUpdateWrapper: function (inst) {
        var props = inst._currentElement.props;
        inst._wrapperState.initialValue = undefined;
        var wasMultiple = inst._wrapperState.wasMultiple;
        inst._wrapperState.wasMultiple = Boolean(props.multiple);
        var value = LinkedValueUtils.getValue(props);
        if (value != null) {
          inst._wrapperState.pendingUpdate = false;
          updateOptions(inst, Boolean(props.multiple), value);
        } else if (wasMultiple !== Boolean(props.multiple)) {
          if (props.defaultValue != null) {
            updateOptions(inst, Boolean(props.multiple), props.defaultValue);
          } else {
            updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
          }
        }
      }
    };
    function _handleChange(event) {
      var props = this._currentElement.props;
      var returnValue = LinkedValueUtils.executeOnChange(props, event);
      this._wrapperState.pendingUpdate = true;
      ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
      return returnValue;
    }
    module.exports = ReactDOMSelect;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/LinkedValueUtils.js', ['npm:react@0.14.9/lib/ReactPropTypes.js', 'npm:react@0.14.9/lib/ReactPropTypeLocations.js', 'npm:fbjs@0.6.1/lib/invariant.js', 'npm:fbjs@0.6.1/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactPropTypes = $__require('npm:react@0.14.9/lib/ReactPropTypes.js');
    var ReactPropTypeLocations = $__require('npm:react@0.14.9/lib/ReactPropTypeLocations.js');
    var invariant = $__require('npm:fbjs@0.6.1/lib/invariant.js');
    var warning = $__require('npm:fbjs@0.6.1/lib/warning.js');
    var hasReadOnlyValue = {
      'button': true,
      'checkbox': true,
      'image': true,
      'hidden': true,
      'radio': true,
      'reset': true,
      'submit': true
    };
    function _assertSingleLink(inputProps) {
      !(inputProps.checkedLink == null || inputProps.valueLink == null) ? 'production' !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use ' + 'checkedLink, you probably don\'t want to use valueLink and vice versa.') : invariant(false) : undefined;
    }
    function _assertValueLink(inputProps) {
      _assertSingleLink(inputProps);
      !(inputProps.value == null && inputProps.onChange == null) ? 'production' !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want ' + 'to use value or onChange, you probably don\'t want to use valueLink.') : invariant(false) : undefined;
    }
    function _assertCheckedLink(inputProps) {
      _assertSingleLink(inputProps);
      !(inputProps.checked == null && inputProps.onChange == null) ? 'production' !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. ' + 'If you want to use checked or onChange, you probably don\'t want to ' + 'use checkedLink') : invariant(false) : undefined;
    }
    var propTypes = {
      value: function (props, propName, componentName) {
        if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
          return null;
        }
        return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
      },
      checked: function (props, propName, componentName) {
        if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
          return null;
        }
        return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
      },
      onChange: ReactPropTypes.func
    };
    var loggedTypeFailures = {};
    function getDeclarationErrorAddendum(owner) {
      if (owner) {
        var name = owner.getName();
        if (name) {
          return ' Check the render method of `' + name + '`.';
        }
      }
      return '';
    }
    var LinkedValueUtils = {
      checkPropTypes: function (tagName, props, owner) {
        for (var propName in propTypes) {
          if (propTypes.hasOwnProperty(propName)) {
            var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
          }
          if (error instanceof Error && !(error.message in loggedTypeFailures)) {
            loggedTypeFailures[error.message] = true;
            var addendum = getDeclarationErrorAddendum(owner);
            'production' !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : undefined;
          }
        }
      },
      getValue: function (inputProps) {
        if (inputProps.valueLink) {
          _assertValueLink(inputProps);
          return inputProps.valueLink.value;
        }
        return inputProps.value;
      },
      getChecked: function (inputProps) {
        if (inputProps.checkedLink) {
          _assertCheckedLink(inputProps);
          return inputProps.checkedLink.value;
        }
        return inputProps.checked;
      },
      executeOnChange: function (inputProps, event) {
        if (inputProps.valueLink) {
          _assertValueLink(inputProps);
          return inputProps.valueLink.requestChange(event.target.value);
        } else if (inputProps.checkedLink) {
          _assertCheckedLink(inputProps);
          return inputProps.checkedLink.requestChange(event.target.checked);
        } else if (inputProps.onChange) {
          return inputProps.onChange.call(undefined, event);
        }
      }
    };
    module.exports = LinkedValueUtils;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/ReactDOMTextarea.js', ['npm:react@0.14.9/lib/LinkedValueUtils.js', 'npm:react@0.14.9/lib/ReactDOMIDOperations.js', 'npm:react@0.14.9/lib/ReactUpdates.js', 'npm:react@0.14.9/lib/Object.assign.js', 'npm:fbjs@0.6.1/lib/invariant.js', 'npm:fbjs@0.6.1/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var LinkedValueUtils = $__require('npm:react@0.14.9/lib/LinkedValueUtils.js');
    var ReactDOMIDOperations = $__require('npm:react@0.14.9/lib/ReactDOMIDOperations.js');
    var ReactUpdates = $__require('npm:react@0.14.9/lib/ReactUpdates.js');
    var assign = $__require('npm:react@0.14.9/lib/Object.assign.js');
    var invariant = $__require('npm:fbjs@0.6.1/lib/invariant.js');
    var warning = $__require('npm:fbjs@0.6.1/lib/warning.js');
    function forceUpdateIfMounted() {
      if (this._rootNodeID) {
        ReactDOMTextarea.updateWrapper(this);
      }
    }
    var ReactDOMTextarea = {
      getNativeProps: function (inst, props, context) {
        !(props.dangerouslySetInnerHTML == null) ? 'production' !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : invariant(false) : undefined;
        var nativeProps = assign({}, props, {
          defaultValue: undefined,
          value: undefined,
          children: inst._wrapperState.initialValue,
          onChange: inst._wrapperState.onChange
        });
        return nativeProps;
      },
      mountWrapper: function (inst, props) {
        if ('production' !== 'production') {
          LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
        }
        var defaultValue = props.defaultValue;
        var children = props.children;
        if (children != null) {
          if ('production' !== 'production') {
            'production' !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : undefined;
          }
          !(defaultValue == null) ? 'production' !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : invariant(false) : undefined;
          if (Array.isArray(children)) {
            !(children.length <= 1) ? 'production' !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : invariant(false) : undefined;
            children = children[0];
          }
          defaultValue = '' + children;
        }
        if (defaultValue == null) {
          defaultValue = '';
        }
        var value = LinkedValueUtils.getValue(props);
        inst._wrapperState = {
          initialValue: '' + (value != null ? value : defaultValue),
          onChange: _handleChange.bind(inst)
        };
      },
      updateWrapper: function (inst) {
        var props = inst._currentElement.props;
        var value = LinkedValueUtils.getValue(props);
        if (value != null) {
          ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'value', '' + value);
        }
      }
    };
    function _handleChange(event) {
      var props = this._currentElement.props;
      var returnValue = LinkedValueUtils.executeOnChange(props, event);
      ReactUpdates.asap(forceUpdateIfMounted, this);
      return returnValue;
    }
    module.exports = ReactDOMTextarea;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/ReactChildReconciler.js', ['npm:react@0.14.9/lib/ReactReconciler.js', 'npm:react@0.14.9/lib/instantiateReactComponent.js', 'npm:react@0.14.9/lib/shouldUpdateReactComponent.js', 'npm:react@0.14.9/lib/traverseAllChildren.js', 'npm:fbjs@0.6.1/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactReconciler = $__require('npm:react@0.14.9/lib/ReactReconciler.js');
    var instantiateReactComponent = $__require('npm:react@0.14.9/lib/instantiateReactComponent.js');
    var shouldUpdateReactComponent = $__require('npm:react@0.14.9/lib/shouldUpdateReactComponent.js');
    var traverseAllChildren = $__require('npm:react@0.14.9/lib/traverseAllChildren.js');
    var warning = $__require('npm:fbjs@0.6.1/lib/warning.js');
    function instantiateChild(childInstances, child, name) {
      var keyUnique = childInstances[name] === undefined;
      if ('production' !== 'production') {
        'production' !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : undefined;
      }
      if (child != null && keyUnique) {
        childInstances[name] = instantiateReactComponent(child, null);
      }
    }
    var ReactChildReconciler = {
      instantiateChildren: function (nestedChildNodes, transaction, context) {
        if (nestedChildNodes == null) {
          return null;
        }
        var childInstances = {};
        traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
        return childInstances;
      },
      updateChildren: function (prevChildren, nextChildren, transaction, context) {
        if (!nextChildren && !prevChildren) {
          return null;
        }
        var name;
        for (name in nextChildren) {
          if (!nextChildren.hasOwnProperty(name)) {
            continue;
          }
          var prevChild = prevChildren && prevChildren[name];
          var prevElement = prevChild && prevChild._currentElement;
          var nextElement = nextChildren[name];
          if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
            ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
            nextChildren[name] = prevChild;
          } else {
            if (prevChild) {
              ReactReconciler.unmountComponent(prevChild, name);
            }
            var nextChildInstance = instantiateReactComponent(nextElement, null);
            nextChildren[name] = nextChildInstance;
          }
        }
        for (name in prevChildren) {
          if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
            ReactReconciler.unmountComponent(prevChildren[name]);
          }
        }
        return nextChildren;
      },
      unmountChildren: function (renderedChildren) {
        for (var name in renderedChildren) {
          if (renderedChildren.hasOwnProperty(name)) {
            var renderedChild = renderedChildren[name];
            ReactReconciler.unmountComponent(renderedChild);
          }
        }
      }
    };
    module.exports = ReactChildReconciler;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/flattenChildren.js', ['npm:react@0.14.9/lib/traverseAllChildren.js', 'npm:fbjs@0.6.1/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var traverseAllChildren = $__require('npm:react@0.14.9/lib/traverseAllChildren.js');
    var warning = $__require('npm:fbjs@0.6.1/lib/warning.js');
    function flattenSingleChildIntoContext(traverseContext, child, name) {
      var result = traverseContext;
      var keyUnique = result[name] === undefined;
      if ('production' !== 'production') {
        'production' !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : undefined;
      }
      if (keyUnique && child != null) {
        result[name] = child;
      }
    }
    function flattenChildren(children) {
      if (children == null) {
        return children;
      }
      var result = {};
      traverseAllChildren(children, flattenSingleChildIntoContext, result);
      return result;
    }
    module.exports = flattenChildren;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/ReactMultiChild.js', ['npm:react@0.14.9/lib/ReactComponentEnvironment.js', 'npm:react@0.14.9/lib/ReactMultiChildUpdateTypes.js', 'npm:react@0.14.9/lib/ReactCurrentOwner.js', 'npm:react@0.14.9/lib/ReactReconciler.js', 'npm:react@0.14.9/lib/ReactChildReconciler.js', 'npm:react@0.14.9/lib/flattenChildren.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactComponentEnvironment = $__require('npm:react@0.14.9/lib/ReactComponentEnvironment.js');
    var ReactMultiChildUpdateTypes = $__require('npm:react@0.14.9/lib/ReactMultiChildUpdateTypes.js');
    var ReactCurrentOwner = $__require('npm:react@0.14.9/lib/ReactCurrentOwner.js');
    var ReactReconciler = $__require('npm:react@0.14.9/lib/ReactReconciler.js');
    var ReactChildReconciler = $__require('npm:react@0.14.9/lib/ReactChildReconciler.js');
    var flattenChildren = $__require('npm:react@0.14.9/lib/flattenChildren.js');
    var updateDepth = 0;
    var updateQueue = [];
    var markupQueue = [];
    function enqueueInsertMarkup(parentID, markup, toIndex) {
      updateQueue.push({
        parentID: parentID,
        parentNode: null,
        type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
        markupIndex: markupQueue.push(markup) - 1,
        content: null,
        fromIndex: null,
        toIndex: toIndex
      });
    }
    function enqueueMove(parentID, fromIndex, toIndex) {
      updateQueue.push({
        parentID: parentID,
        parentNode: null,
        type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
        markupIndex: null,
        content: null,
        fromIndex: fromIndex,
        toIndex: toIndex
      });
    }
    function enqueueRemove(parentID, fromIndex) {
      updateQueue.push({
        parentID: parentID,
        parentNode: null,
        type: ReactMultiChildUpdateTypes.REMOVE_NODE,
        markupIndex: null,
        content: null,
        fromIndex: fromIndex,
        toIndex: null
      });
    }
    function enqueueSetMarkup(parentID, markup) {
      updateQueue.push({
        parentID: parentID,
        parentNode: null,
        type: ReactMultiChildUpdateTypes.SET_MARKUP,
        markupIndex: null,
        content: markup,
        fromIndex: null,
        toIndex: null
      });
    }
    function enqueueTextContent(parentID, textContent) {
      updateQueue.push({
        parentID: parentID,
        parentNode: null,
        type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
        markupIndex: null,
        content: textContent,
        fromIndex: null,
        toIndex: null
      });
    }
    function processQueue() {
      if (updateQueue.length) {
        ReactComponentEnvironment.processChildrenUpdates(updateQueue, markupQueue);
        clearQueue();
      }
    }
    function clearQueue() {
      updateQueue.length = 0;
      markupQueue.length = 0;
    }
    var ReactMultiChild = { Mixin: {
        _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
          if ('production' !== 'production') {
            if (this._currentElement) {
              try {
                ReactCurrentOwner.current = this._currentElement._owner;
                return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
              } finally {
                ReactCurrentOwner.current = null;
              }
            }
          }
          return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
        },
        _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, transaction, context) {
          var nextChildren;
          if ('production' !== 'production') {
            if (this._currentElement) {
              try {
                ReactCurrentOwner.current = this._currentElement._owner;
                nextChildren = flattenChildren(nextNestedChildrenElements);
              } finally {
                ReactCurrentOwner.current = null;
              }
              return ReactChildReconciler.updateChildren(prevChildren, nextChildren, transaction, context);
            }
          }
          nextChildren = flattenChildren(nextNestedChildrenElements);
          return ReactChildReconciler.updateChildren(prevChildren, nextChildren, transaction, context);
        },
        mountChildren: function (nestedChildren, transaction, context) {
          var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
          this._renderedChildren = children;
          var mountImages = [];
          var index = 0;
          for (var name in children) {
            if (children.hasOwnProperty(name)) {
              var child = children[name];
              var rootID = this._rootNodeID + name;
              var mountImage = ReactReconciler.mountComponent(child, rootID, transaction, context);
              child._mountIndex = index++;
              mountImages.push(mountImage);
            }
          }
          return mountImages;
        },
        updateTextContent: function (nextContent) {
          updateDepth++;
          var errorThrown = true;
          try {
            var prevChildren = this._renderedChildren;
            ReactChildReconciler.unmountChildren(prevChildren);
            for (var name in prevChildren) {
              if (prevChildren.hasOwnProperty(name)) {
                this._unmountChild(prevChildren[name]);
              }
            }
            this.setTextContent(nextContent);
            errorThrown = false;
          } finally {
            updateDepth--;
            if (!updateDepth) {
              if (errorThrown) {
                clearQueue();
              } else {
                processQueue();
              }
            }
          }
        },
        updateMarkup: function (nextMarkup) {
          updateDepth++;
          var errorThrown = true;
          try {
            var prevChildren = this._renderedChildren;
            ReactChildReconciler.unmountChildren(prevChildren);
            for (var name in prevChildren) {
              if (prevChildren.hasOwnProperty(name)) {
                this._unmountChildByName(prevChildren[name], name);
              }
            }
            this.setMarkup(nextMarkup);
            errorThrown = false;
          } finally {
            updateDepth--;
            if (!updateDepth) {
              if (errorThrown) {
                clearQueue();
              } else {
                processQueue();
              }
            }
          }
        },
        updateChildren: function (nextNestedChildrenElements, transaction, context) {
          updateDepth++;
          var errorThrown = true;
          try {
            this._updateChildren(nextNestedChildrenElements, transaction, context);
            errorThrown = false;
          } finally {
            updateDepth--;
            if (!updateDepth) {
              if (errorThrown) {
                clearQueue();
              } else {
                processQueue();
              }
            }
          }
        },
        _updateChildren: function (nextNestedChildrenElements, transaction, context) {
          var prevChildren = this._renderedChildren;
          var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, transaction, context);
          this._renderedChildren = nextChildren;
          if (!nextChildren && !prevChildren) {
            return;
          }
          var name;
          var lastIndex = 0;
          var nextIndex = 0;
          for (name in nextChildren) {
            if (!nextChildren.hasOwnProperty(name)) {
              continue;
            }
            var prevChild = prevChildren && prevChildren[name];
            var nextChild = nextChildren[name];
            if (prevChild === nextChild) {
              this.moveChild(prevChild, nextIndex, lastIndex);
              lastIndex = Math.max(prevChild._mountIndex, lastIndex);
              prevChild._mountIndex = nextIndex;
            } else {
              if (prevChild) {
                lastIndex = Math.max(prevChild._mountIndex, lastIndex);
                this._unmountChild(prevChild);
              }
              this._mountChildByNameAtIndex(nextChild, name, nextIndex, transaction, context);
            }
            nextIndex++;
          }
          for (name in prevChildren) {
            if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
              this._unmountChild(prevChildren[name]);
            }
          }
        },
        unmountChildren: function () {
          var renderedChildren = this._renderedChildren;
          ReactChildReconciler.unmountChildren(renderedChildren);
          this._renderedChildren = null;
        },
        moveChild: function (child, toIndex, lastIndex) {
          if (child._mountIndex < lastIndex) {
            enqueueMove(this._rootNodeID, child._mountIndex, toIndex);
          }
        },
        createChild: function (child, mountImage) {
          enqueueInsertMarkup(this._rootNodeID, mountImage, child._mountIndex);
        },
        removeChild: function (child) {
          enqueueRemove(this._rootNodeID, child._mountIndex);
        },
        setTextContent: function (textContent) {
          enqueueTextContent(this._rootNodeID, textContent);
        },
        setMarkup: function (markup) {
          enqueueSetMarkup(this._rootNodeID, markup);
        },
        _mountChildByNameAtIndex: function (child, name, index, transaction, context) {
          var rootID = this._rootNodeID + name;
          var mountImage = ReactReconciler.mountComponent(child, rootID, transaction, context);
          child._mountIndex = index;
          this.createChild(child, mountImage);
        },
        _unmountChild: function (child) {
          this.removeChild(child);
          child._mountIndex = null;
        }
      } };
    module.exports = ReactMultiChild;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/ReactDOMComponent.js', ['npm:react@0.14.9/lib/AutoFocusUtils.js', 'npm:react@0.14.9/lib/CSSPropertyOperations.js', 'npm:react@0.14.9/lib/DOMProperty.js', 'npm:react@0.14.9/lib/DOMPropertyOperations.js', 'npm:react@0.14.9/lib/EventConstants.js', 'npm:react@0.14.9/lib/ReactBrowserEventEmitter.js', 'npm:react@0.14.9/lib/ReactComponentBrowserEnvironment.js', 'npm:react@0.14.9/lib/ReactDOMButton.js', 'npm:react@0.14.9/lib/ReactDOMInput.js', 'npm:react@0.14.9/lib/ReactDOMOption.js', 'npm:react@0.14.9/lib/ReactDOMSelect.js', 'npm:react@0.14.9/lib/ReactDOMTextarea.js', 'npm:react@0.14.9/lib/ReactMount.js', 'npm:react@0.14.9/lib/ReactMultiChild.js', 'npm:react@0.14.9/lib/ReactPerf.js', 'npm:react@0.14.9/lib/ReactUpdateQueue.js', 'npm:react@0.14.9/lib/Object.assign.js', 'npm:react@0.14.9/lib/canDefineProperty.js', 'npm:react@0.14.9/lib/escapeTextContentForBrowser.js', 'npm:fbjs@0.6.1/lib/invariant.js', 'npm:react@0.14.9/lib/isEventSupported.js', 'npm:fbjs@0.6.1/lib/keyOf.js', 'npm:react@0.14.9/lib/setInnerHTML.js', 'npm:react@0.14.9/lib/setTextContent.js', 'npm:fbjs@0.6.1/lib/shallowEqual.js', 'npm:react@0.14.9/lib/validateDOMNesting.js', 'npm:fbjs@0.6.1/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var AutoFocusUtils = $__require('npm:react@0.14.9/lib/AutoFocusUtils.js');
    var CSSPropertyOperations = $__require('npm:react@0.14.9/lib/CSSPropertyOperations.js');
    var DOMProperty = $__require('npm:react@0.14.9/lib/DOMProperty.js');
    var DOMPropertyOperations = $__require('npm:react@0.14.9/lib/DOMPropertyOperations.js');
    var EventConstants = $__require('npm:react@0.14.9/lib/EventConstants.js');
    var ReactBrowserEventEmitter = $__require('npm:react@0.14.9/lib/ReactBrowserEventEmitter.js');
    var ReactComponentBrowserEnvironment = $__require('npm:react@0.14.9/lib/ReactComponentBrowserEnvironment.js');
    var ReactDOMButton = $__require('npm:react@0.14.9/lib/ReactDOMButton.js');
    var ReactDOMInput = $__require('npm:react@0.14.9/lib/ReactDOMInput.js');
    var ReactDOMOption = $__require('npm:react@0.14.9/lib/ReactDOMOption.js');
    var ReactDOMSelect = $__require('npm:react@0.14.9/lib/ReactDOMSelect.js');
    var ReactDOMTextarea = $__require('npm:react@0.14.9/lib/ReactDOMTextarea.js');
    var ReactMount = $__require('npm:react@0.14.9/lib/ReactMount.js');
    var ReactMultiChild = $__require('npm:react@0.14.9/lib/ReactMultiChild.js');
    var ReactPerf = $__require('npm:react@0.14.9/lib/ReactPerf.js');
    var ReactUpdateQueue = $__require('npm:react@0.14.9/lib/ReactUpdateQueue.js');
    var assign = $__require('npm:react@0.14.9/lib/Object.assign.js');
    var canDefineProperty = $__require('npm:react@0.14.9/lib/canDefineProperty.js');
    var escapeTextContentForBrowser = $__require('npm:react@0.14.9/lib/escapeTextContentForBrowser.js');
    var invariant = $__require('npm:fbjs@0.6.1/lib/invariant.js');
    var isEventSupported = $__require('npm:react@0.14.9/lib/isEventSupported.js');
    var keyOf = $__require('npm:fbjs@0.6.1/lib/keyOf.js');
    var setInnerHTML = $__require('npm:react@0.14.9/lib/setInnerHTML.js');
    var setTextContent = $__require('npm:react@0.14.9/lib/setTextContent.js');
    var shallowEqual = $__require('npm:fbjs@0.6.1/lib/shallowEqual.js');
    var validateDOMNesting = $__require('npm:react@0.14.9/lib/validateDOMNesting.js');
    var warning = $__require('npm:fbjs@0.6.1/lib/warning.js');
    var deleteListener = ReactBrowserEventEmitter.deleteListener;
    var listenTo = ReactBrowserEventEmitter.listenTo;
    var registrationNameModules = ReactBrowserEventEmitter.registrationNameModules;
    var CONTENT_TYPES = {
      'string': true,
      'number': true
    };
    var CHILDREN = keyOf({ children: null });
    var STYLE = keyOf({ style: null });
    var HTML = keyOf({ __html: null });
    var ELEMENT_NODE_TYPE = 1;
    function getDeclarationErrorAddendum(internalInstance) {
      if (internalInstance) {
        var owner = internalInstance._currentElement._owner || null;
        if (owner) {
          var name = owner.getName();
          if (name) {
            return ' This DOM node was rendered by `' + name + '`.';
          }
        }
      }
      return '';
    }
    var legacyPropsDescriptor;
    if ('production' !== 'production') {
      legacyPropsDescriptor = { props: {
          enumerable: false,
          get: function () {
            var component = this._reactInternalComponent;
            'production' !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .props of a DOM node; instead, ' + 'recreate the props as `render` did originally or read the DOM ' + 'properties/attributes directly from this node (e.g., ' + 'this.refs.box.className).%s', getDeclarationErrorAddendum(component)) : undefined;
            return component._currentElement.props;
          }
        } };
    }
    function legacyGetDOMNode() {
      if ('production' !== 'production') {
        var component = this._reactInternalComponent;
        'production' !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .getDOMNode() of a DOM node; ' + 'instead, use the node directly.%s', getDeclarationErrorAddendum(component)) : undefined;
      }
      return this;
    }
    function legacyIsMounted() {
      var component = this._reactInternalComponent;
      if ('production' !== 'production') {
        'production' !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .isMounted() of a DOM node.%s', getDeclarationErrorAddendum(component)) : undefined;
      }
      return !!component;
    }
    function legacySetStateEtc() {
      if ('production' !== 'production') {
        var component = this._reactInternalComponent;
        'production' !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .setState(), .replaceState(), or ' + '.forceUpdate() of a DOM node. This is a no-op.%s', getDeclarationErrorAddendum(component)) : undefined;
      }
    }
    function legacySetProps(partialProps, callback) {
      var component = this._reactInternalComponent;
      if ('production' !== 'production') {
        'production' !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .setProps() of a DOM node. ' + 'Instead, call ReactDOM.render again at the top level.%s', getDeclarationErrorAddendum(component)) : undefined;
      }
      if (!component) {
        return;
      }
      ReactUpdateQueue.enqueueSetPropsInternal(component, partialProps);
      if (callback) {
        ReactUpdateQueue.enqueueCallbackInternal(component, callback);
      }
    }
    function legacyReplaceProps(partialProps, callback) {
      var component = this._reactInternalComponent;
      if ('production' !== 'production') {
        'production' !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .replaceProps() of a DOM node. ' + 'Instead, call ReactDOM.render again at the top level.%s', getDeclarationErrorAddendum(component)) : undefined;
      }
      if (!component) {
        return;
      }
      ReactUpdateQueue.enqueueReplacePropsInternal(component, partialProps);
      if (callback) {
        ReactUpdateQueue.enqueueCallbackInternal(component, callback);
      }
    }
    function friendlyStringify(obj) {
      if (typeof obj === 'object') {
        if (Array.isArray(obj)) {
          return '[' + obj.map(friendlyStringify).join(', ') + ']';
        } else {
          var pairs = [];
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
              var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
              pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
            }
          }
          return '{' + pairs.join(', ') + '}';
        }
      } else if (typeof obj === 'string') {
        return JSON.stringify(obj);
      } else if (typeof obj === 'function') {
        return '[function object]';
      }
      return String(obj);
    }
    var styleMutationWarning = {};
    function checkAndWarnForMutatedStyle(style1, style2, component) {
      if (style1 == null || style2 == null) {
        return;
      }
      if (shallowEqual(style1, style2)) {
        return;
      }
      var componentName = component._tag;
      var owner = component._currentElement._owner;
      var ownerName;
      if (owner) {
        ownerName = owner.getName();
      }
      var hash = ownerName + '|' + componentName;
      if (styleMutationWarning.hasOwnProperty(hash)) {
        return;
      }
      styleMutationWarning[hash] = true;
      'production' !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : undefined;
    }
    function assertValidProps(component, props) {
      if (!props) {
        return;
      }
      if ('production' !== 'production') {
        if (voidElementTags[component._tag]) {
          'production' !== 'production' ? warning(props.children == null && props.dangerouslySetInnerHTML == null, '%s is a void element tag and must not have `children` or ' + 'use `props.dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : undefined;
        }
      }
      if (props.dangerouslySetInnerHTML != null) {
        !(props.children == null) ? 'production' !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : invariant(false) : undefined;
        !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? 'production' !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' + 'Please visit https://fb.me/react-invariant-dangerously-set-inner-html ' + 'for more information.') : invariant(false) : undefined;
      }
      if ('production' !== 'production') {
        'production' !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : undefined;
        'production' !== 'production' ? warning(!props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : undefined;
      }
      !(props.style == null || typeof props.style === 'object') ? 'production' !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, ' + 'not a string. For example, style={{marginRight: spacing + \'em\'}} when ' + 'using JSX.%s', getDeclarationErrorAddendum(component)) : invariant(false) : undefined;
    }
    function enqueuePutListener(id, registrationName, listener, transaction) {
      if ('production' !== 'production') {
        'production' !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : undefined;
      }
      var container = ReactMount.findReactContainerForID(id);
      if (container) {
        var doc = container.nodeType === ELEMENT_NODE_TYPE ? container.ownerDocument : container;
        listenTo(registrationName, doc);
      }
      transaction.getReactMountReady().enqueue(putListener, {
        id: id,
        registrationName: registrationName,
        listener: listener
      });
    }
    function putListener() {
      var listenerToPut = this;
      ReactBrowserEventEmitter.putListener(listenerToPut.id, listenerToPut.registrationName, listenerToPut.listener);
    }
    var mediaEvents = {
      topAbort: 'abort',
      topCanPlay: 'canplay',
      topCanPlayThrough: 'canplaythrough',
      topDurationChange: 'durationchange',
      topEmptied: 'emptied',
      topEncrypted: 'encrypted',
      topEnded: 'ended',
      topError: 'error',
      topLoadedData: 'loadeddata',
      topLoadedMetadata: 'loadedmetadata',
      topLoadStart: 'loadstart',
      topPause: 'pause',
      topPlay: 'play',
      topPlaying: 'playing',
      topProgress: 'progress',
      topRateChange: 'ratechange',
      topSeeked: 'seeked',
      topSeeking: 'seeking',
      topStalled: 'stalled',
      topSuspend: 'suspend',
      topTimeUpdate: 'timeupdate',
      topVolumeChange: 'volumechange',
      topWaiting: 'waiting'
    };
    function trapBubbledEventsLocal() {
      var inst = this;
      !inst._rootNodeID ? 'production' !== 'production' ? invariant(false, 'Must be mounted to trap events') : invariant(false) : undefined;
      var node = ReactMount.getNode(inst._rootNodeID);
      !node ? 'production' !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : invariant(false) : undefined;
      switch (inst._tag) {
        case 'iframe':
          inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
          break;
        case 'video':
        case 'audio':
          inst._wrapperState.listeners = [];
          for (var event in mediaEvents) {
            if (mediaEvents.hasOwnProperty(event)) {
              inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes[event], mediaEvents[event], node));
            }
          }
          break;
        case 'img':
          inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
          break;
        case 'form':
          inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit', node)];
          break;
      }
    }
    function mountReadyInputWrapper() {
      ReactDOMInput.mountReadyWrapper(this);
    }
    function postUpdateSelectWrapper() {
      ReactDOMSelect.postUpdateWrapper(this);
    }
    var omittedCloseTags = {
      'area': true,
      'base': true,
      'br': true,
      'col': true,
      'embed': true,
      'hr': true,
      'img': true,
      'input': true,
      'keygen': true,
      'link': true,
      'meta': true,
      'param': true,
      'source': true,
      'track': true,
      'wbr': true
    };
    var newlineEatingTags = {
      'listing': true,
      'pre': true,
      'textarea': true
    };
    var voidElementTags = assign({ 'menuitem': true }, omittedCloseTags);
    var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/;
    var validatedTagCache = {};
    var hasOwnProperty = {}.hasOwnProperty;
    function validateDangerousTag(tag) {
      if (!hasOwnProperty.call(validatedTagCache, tag)) {
        !VALID_TAG_REGEX.test(tag) ? 'production' !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : invariant(false) : undefined;
        validatedTagCache[tag] = true;
      }
    }
    function processChildContextDev(context, inst) {
      context = assign({}, context);
      var info = context[validateDOMNesting.ancestorInfoContextKey];
      context[validateDOMNesting.ancestorInfoContextKey] = validateDOMNesting.updatedAncestorInfo(info, inst._tag, inst);
      return context;
    }
    function isCustomComponent(tagName, props) {
      return tagName.indexOf('-') >= 0 || props.is != null;
    }
    function ReactDOMComponent(tag) {
      validateDangerousTag(tag);
      this._tag = tag.toLowerCase();
      this._renderedChildren = null;
      this._previousStyle = null;
      this._previousStyleCopy = null;
      this._rootNodeID = null;
      this._wrapperState = null;
      this._topLevelWrapper = null;
      this._nodeWithLegacyProperties = null;
      if ('production' !== 'production') {
        this._unprocessedContextDev = null;
        this._processedContextDev = null;
      }
    }
    ReactDOMComponent.displayName = 'ReactDOMComponent';
    ReactDOMComponent.Mixin = {
      construct: function (element) {
        this._currentElement = element;
      },
      mountComponent: function (rootID, transaction, context) {
        this._rootNodeID = rootID;
        var props = this._currentElement.props;
        switch (this._tag) {
          case 'iframe':
          case 'img':
          case 'form':
          case 'video':
          case 'audio':
            this._wrapperState = { listeners: null };
            transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
            break;
          case 'button':
            props = ReactDOMButton.getNativeProps(this, props, context);
            break;
          case 'input':
            ReactDOMInput.mountWrapper(this, props, context);
            props = ReactDOMInput.getNativeProps(this, props, context);
            break;
          case 'option':
            ReactDOMOption.mountWrapper(this, props, context);
            props = ReactDOMOption.getNativeProps(this, props, context);
            break;
          case 'select':
            ReactDOMSelect.mountWrapper(this, props, context);
            props = ReactDOMSelect.getNativeProps(this, props, context);
            context = ReactDOMSelect.processChildContext(this, props, context);
            break;
          case 'textarea':
            ReactDOMTextarea.mountWrapper(this, props, context);
            props = ReactDOMTextarea.getNativeProps(this, props, context);
            break;
        }
        assertValidProps(this, props);
        if ('production' !== 'production') {
          if (context[validateDOMNesting.ancestorInfoContextKey]) {
            validateDOMNesting(this._tag, this, context[validateDOMNesting.ancestorInfoContextKey]);
          }
        }
        if ('production' !== 'production') {
          this._unprocessedContextDev = context;
          this._processedContextDev = processChildContextDev(context, this);
          context = this._processedContextDev;
        }
        var mountImage;
        if (transaction.useCreateElement) {
          var ownerDocument = context[ReactMount.ownerDocumentContextKey];
          var el = ownerDocument.createElement(this._currentElement.type);
          DOMPropertyOperations.setAttributeForID(el, this._rootNodeID);
          ReactMount.getID(el);
          this._updateDOMProperties({}, props, transaction, el);
          this._createInitialChildren(transaction, props, context, el);
          mountImage = el;
        } else {
          var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
          var tagContent = this._createContentMarkup(transaction, props, context);
          if (!tagContent && omittedCloseTags[this._tag]) {
            mountImage = tagOpen + '/>';
          } else {
            mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
          }
        }
        switch (this._tag) {
          case 'input':
            transaction.getReactMountReady().enqueue(mountReadyInputWrapper, this);
          case 'button':
          case 'select':
          case 'textarea':
            if (props.autoFocus) {
              transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
            }
            break;
        }
        return mountImage;
      },
      _createOpenTagMarkupAndPutListeners: function (transaction, props) {
        var ret = '<' + this._currentElement.type;
        for (var propKey in props) {
          if (!props.hasOwnProperty(propKey)) {
            continue;
          }
          var propValue = props[propKey];
          if (propValue == null) {
            continue;
          }
          if (registrationNameModules.hasOwnProperty(propKey)) {
            if (propValue) {
              enqueuePutListener(this._rootNodeID, propKey, propValue, transaction);
            }
          } else {
            if (propKey === STYLE) {
              if (propValue) {
                if ('production' !== 'production') {
                  this._previousStyle = propValue;
                }
                propValue = this._previousStyleCopy = assign({}, props.style);
              }
              propValue = CSSPropertyOperations.createMarkupForStyles(propValue);
            }
            var markup = null;
            if (this._tag != null && isCustomComponent(this._tag, props)) {
              if (propKey !== CHILDREN) {
                markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
              }
            } else {
              markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
            }
            if (markup) {
              ret += ' ' + markup;
            }
          }
        }
        if (transaction.renderToStaticMarkup) {
          return ret;
        }
        var markupForID = DOMPropertyOperations.createMarkupForID(this._rootNodeID);
        return ret + ' ' + markupForID;
      },
      _createContentMarkup: function (transaction, props, context) {
        var ret = '';
        var innerHTML = props.dangerouslySetInnerHTML;
        if (innerHTML != null) {
          if (innerHTML.__html != null) {
            ret = innerHTML.__html;
          }
        } else {
          var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
          var childrenToUse = contentToUse != null ? null : props.children;
          if (contentToUse != null) {
            ret = escapeTextContentForBrowser(contentToUse);
          } else if (childrenToUse != null) {
            var mountImages = this.mountChildren(childrenToUse, transaction, context);
            ret = mountImages.join('');
          }
        }
        if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
          return '\n' + ret;
        } else {
          return ret;
        }
      },
      _createInitialChildren: function (transaction, props, context, el) {
        var innerHTML = props.dangerouslySetInnerHTML;
        if (innerHTML != null) {
          if (innerHTML.__html != null) {
            setInnerHTML(el, innerHTML.__html);
          }
        } else {
          var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
          var childrenToUse = contentToUse != null ? null : props.children;
          if (contentToUse != null) {
            setTextContent(el, contentToUse);
          } else if (childrenToUse != null) {
            var mountImages = this.mountChildren(childrenToUse, transaction, context);
            for (var i = 0; i < mountImages.length; i++) {
              el.appendChild(mountImages[i]);
            }
          }
        }
      },
      receiveComponent: function (nextElement, transaction, context) {
        var prevElement = this._currentElement;
        this._currentElement = nextElement;
        this.updateComponent(transaction, prevElement, nextElement, context);
      },
      updateComponent: function (transaction, prevElement, nextElement, context) {
        var lastProps = prevElement.props;
        var nextProps = this._currentElement.props;
        switch (this._tag) {
          case 'button':
            lastProps = ReactDOMButton.getNativeProps(this, lastProps);
            nextProps = ReactDOMButton.getNativeProps(this, nextProps);
            break;
          case 'input':
            ReactDOMInput.updateWrapper(this);
            lastProps = ReactDOMInput.getNativeProps(this, lastProps);
            nextProps = ReactDOMInput.getNativeProps(this, nextProps);
            break;
          case 'option':
            lastProps = ReactDOMOption.getNativeProps(this, lastProps);
            nextProps = ReactDOMOption.getNativeProps(this, nextProps);
            break;
          case 'select':
            lastProps = ReactDOMSelect.getNativeProps(this, lastProps);
            nextProps = ReactDOMSelect.getNativeProps(this, nextProps);
            break;
          case 'textarea':
            ReactDOMTextarea.updateWrapper(this);
            lastProps = ReactDOMTextarea.getNativeProps(this, lastProps);
            nextProps = ReactDOMTextarea.getNativeProps(this, nextProps);
            break;
        }
        if ('production' !== 'production') {
          if (this._unprocessedContextDev !== context) {
            this._unprocessedContextDev = context;
            this._processedContextDev = processChildContextDev(context, this);
          }
          context = this._processedContextDev;
        }
        assertValidProps(this, nextProps);
        this._updateDOMProperties(lastProps, nextProps, transaction, null);
        this._updateDOMChildren(lastProps, nextProps, transaction, context);
        if (!canDefineProperty && this._nodeWithLegacyProperties) {
          this._nodeWithLegacyProperties.props = nextProps;
        }
        if (this._tag === 'select') {
          transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
        }
      },
      _updateDOMProperties: function (lastProps, nextProps, transaction, node) {
        var propKey;
        var styleName;
        var styleUpdates;
        for (propKey in lastProps) {
          if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey)) {
            continue;
          }
          if (propKey === STYLE) {
            var lastStyle = this._previousStyleCopy;
            for (styleName in lastStyle) {
              if (lastStyle.hasOwnProperty(styleName)) {
                styleUpdates = styleUpdates || {};
                styleUpdates[styleName] = '';
              }
            }
            this._previousStyleCopy = null;
          } else if (registrationNameModules.hasOwnProperty(propKey)) {
            if (lastProps[propKey]) {
              deleteListener(this._rootNodeID, propKey);
            }
          } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
            if (!node) {
              node = ReactMount.getNode(this._rootNodeID);
            }
            DOMPropertyOperations.deleteValueForProperty(node, propKey);
          }
        }
        for (propKey in nextProps) {
          var nextProp = nextProps[propKey];
          var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps[propKey];
          if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp) {
            continue;
          }
          if (propKey === STYLE) {
            if (nextProp) {
              if ('production' !== 'production') {
                checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
                this._previousStyle = nextProp;
              }
              nextProp = this._previousStyleCopy = assign({}, nextProp);
            } else {
              this._previousStyleCopy = null;
            }
            if (lastProp) {
              for (styleName in lastProp) {
                if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
                  styleUpdates = styleUpdates || {};
                  styleUpdates[styleName] = '';
                }
              }
              for (styleName in nextProp) {
                if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
                  styleUpdates = styleUpdates || {};
                  styleUpdates[styleName] = nextProp[styleName];
                }
              }
            } else {
              styleUpdates = nextProp;
            }
          } else if (registrationNameModules.hasOwnProperty(propKey)) {
            if (nextProp) {
              enqueuePutListener(this._rootNodeID, propKey, nextProp, transaction);
            } else if (lastProp) {
              deleteListener(this._rootNodeID, propKey);
            }
          } else if (isCustomComponent(this._tag, nextProps)) {
            if (!node) {
              node = ReactMount.getNode(this._rootNodeID);
            }
            if (propKey === CHILDREN) {
              nextProp = null;
            }
            DOMPropertyOperations.setValueForAttribute(node, propKey, nextProp);
          } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
            if (!node) {
              node = ReactMount.getNode(this._rootNodeID);
            }
            if (nextProp != null) {
              DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
            } else {
              DOMPropertyOperations.deleteValueForProperty(node, propKey);
            }
          }
        }
        if (styleUpdates) {
          if (!node) {
            node = ReactMount.getNode(this._rootNodeID);
          }
          CSSPropertyOperations.setValueForStyles(node, styleUpdates);
        }
      },
      _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
        var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
        var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;
        var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
        var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;
        var lastChildren = lastContent != null ? null : lastProps.children;
        var nextChildren = nextContent != null ? null : nextProps.children;
        var lastHasContentOrHtml = lastContent != null || lastHtml != null;
        var nextHasContentOrHtml = nextContent != null || nextHtml != null;
        if (lastChildren != null && nextChildren == null) {
          this.updateChildren(null, transaction, context);
        } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
          this.updateTextContent('');
        }
        if (nextContent != null) {
          if (lastContent !== nextContent) {
            this.updateTextContent('' + nextContent);
          }
        } else if (nextHtml != null) {
          if (lastHtml !== nextHtml) {
            this.updateMarkup('' + nextHtml);
          }
        } else if (nextChildren != null) {
          this.updateChildren(nextChildren, transaction, context);
        }
      },
      unmountComponent: function () {
        switch (this._tag) {
          case 'iframe':
          case 'img':
          case 'form':
          case 'video':
          case 'audio':
            var listeners = this._wrapperState.listeners;
            if (listeners) {
              for (var i = 0; i < listeners.length; i++) {
                listeners[i].remove();
              }
            }
            break;
          case 'input':
            ReactDOMInput.unmountWrapper(this);
            break;
          case 'html':
          case 'head':
          case 'body':
            !false ? 'production' !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is ' + 'impossible to unmount some top-level components (eg <html>, ' + '<head>, and <body>) reliably and efficiently. To fix this, have a ' + 'single top-level component that never unmounts render these ' + 'elements.', this._tag) : invariant(false) : undefined;
            break;
        }
        this.unmountChildren();
        ReactBrowserEventEmitter.deleteAllListeners(this._rootNodeID);
        ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
        this._rootNodeID = null;
        this._wrapperState = null;
        if (this._nodeWithLegacyProperties) {
          var node = this._nodeWithLegacyProperties;
          node._reactInternalComponent = null;
          this._nodeWithLegacyProperties = null;
        }
      },
      getPublicInstance: function () {
        if (!this._nodeWithLegacyProperties) {
          var node = ReactMount.getNode(this._rootNodeID);
          node._reactInternalComponent = this;
          node.getDOMNode = legacyGetDOMNode;
          node.isMounted = legacyIsMounted;
          node.setState = legacySetStateEtc;
          node.replaceState = legacySetStateEtc;
          node.forceUpdate = legacySetStateEtc;
          node.setProps = legacySetProps;
          node.replaceProps = legacyReplaceProps;
          if ('production' !== 'production') {
            if (canDefineProperty) {
              Object.defineProperties(node, legacyPropsDescriptor);
            } else {
              node.props = this._currentElement.props;
            }
          } else {
            node.props = this._currentElement.props;
          }
          this._nodeWithLegacyProperties = node;
        }
        return this._nodeWithLegacyProperties;
      }
    };
    ReactPerf.measureMethods(ReactDOMComponent, 'ReactDOMComponent', {
      mountComponent: 'mountComponent',
      updateComponent: 'updateComponent'
    });
    assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);
    module.exports = ReactDOMComponent;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:fbjs@0.6.1/lib/toArray.js', ['npm:fbjs@0.6.1/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var invariant = $__require('npm:fbjs@0.6.1/lib/invariant.js');
    function toArray(obj) {
      var length = obj.length;
      !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? 'production' !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : undefined;
      !(typeof length === 'number') ? 'production' !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : undefined;
      !(length === 0 || length - 1 in obj) ? 'production' !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : undefined;
      if (obj.hasOwnProperty) {
        try {
          return Array.prototype.slice.call(obj);
        } catch (e) {}
      }
      var ret = Array(length);
      for (var ii = 0; ii < length; ii++) {
        ret[ii] = obj[ii];
      }
      return ret;
    }
    module.exports = toArray;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:fbjs@0.6.1/lib/createArrayFromMixed.js', ['npm:fbjs@0.6.1/lib/toArray.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var toArray = $__require('npm:fbjs@0.6.1/lib/toArray.js');
  function hasArrayNature(obj) {
    return !!obj && (typeof obj == 'object' || typeof obj == 'function') && 'length' in obj && !('setInterval' in obj) && typeof obj.nodeType != 'number' && (Array.isArray(obj) || 'callee' in obj || 'item' in obj);
  }
  function createArrayFromMixed(obj) {
    if (!hasArrayNature(obj)) {
      return [obj];
    } else if (Array.isArray(obj)) {
      return obj.slice();
    } else {
      return toArray(obj);
    }
  }
  module.exports = createArrayFromMixed;
});
System.registerDynamic('npm:fbjs@0.6.1/lib/createNodesFromMarkup.js', ['npm:fbjs@0.6.1/lib/ExecutionEnvironment.js', 'npm:fbjs@0.6.1/lib/createArrayFromMixed.js', 'npm:fbjs@0.6.1/lib/getMarkupWrap.js', 'npm:fbjs@0.6.1/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ExecutionEnvironment = $__require('npm:fbjs@0.6.1/lib/ExecutionEnvironment.js');
    var createArrayFromMixed = $__require('npm:fbjs@0.6.1/lib/createArrayFromMixed.js');
    var getMarkupWrap = $__require('npm:fbjs@0.6.1/lib/getMarkupWrap.js');
    var invariant = $__require('npm:fbjs@0.6.1/lib/invariant.js');
    var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
    var nodeNamePattern = /^\s*<(\w+)/;
    function getNodeName(markup) {
      var nodeNameMatch = markup.match(nodeNamePattern);
      return nodeNameMatch && nodeNameMatch[1].toLowerCase();
    }
    function createNodesFromMarkup(markup, handleScript) {
      var node = dummyNode;
      !!!dummyNode ? 'production' !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : undefined;
      var nodeName = getNodeName(markup);
      var wrap = nodeName && getMarkupWrap(nodeName);
      if (wrap) {
        node.innerHTML = wrap[1] + markup + wrap[2];
        var wrapDepth = wrap[0];
        while (wrapDepth--) {
          node = node.lastChild;
        }
      } else {
        node.innerHTML = markup;
      }
      var scripts = node.getElementsByTagName('script');
      if (scripts.length) {
        !handleScript ? 'production' !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : undefined;
        createArrayFromMixed(scripts).forEach(handleScript);
      }
      var nodes = createArrayFromMixed(node.childNodes);
      while (node.lastChild) {
        node.removeChild(node.lastChild);
      }
      return nodes;
    }
    module.exports = createNodesFromMarkup;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:fbjs@0.6.1/lib/getMarkupWrap.js', ['npm:fbjs@0.6.1/lib/ExecutionEnvironment.js', 'npm:fbjs@0.6.1/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ExecutionEnvironment = $__require('npm:fbjs@0.6.1/lib/ExecutionEnvironment.js');
    var invariant = $__require('npm:fbjs@0.6.1/lib/invariant.js');
    var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
    var shouldWrap = {};
    var selectWrap = [1, '<select multiple="true">', '</select>'];
    var tableWrap = [1, '<table>', '</table>'];
    var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];
    var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];
    var markupWrap = {
      '*': [1, '?<div>', '</div>'],
      'area': [1, '<map>', '</map>'],
      'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
      'legend': [1, '<fieldset>', '</fieldset>'],
      'param': [1, '<object>', '</object>'],
      'tr': [2, '<table><tbody>', '</tbody></table>'],
      'optgroup': selectWrap,
      'option': selectWrap,
      'caption': tableWrap,
      'colgroup': tableWrap,
      'tbody': tableWrap,
      'tfoot': tableWrap,
      'thead': tableWrap,
      'td': trWrap,
      'th': trWrap
    };
    var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
    svgElements.forEach(function (nodeName) {
      markupWrap[nodeName] = svgWrap;
      shouldWrap[nodeName] = true;
    });
    function getMarkupWrap(nodeName) {
      !!!dummyNode ? 'production' !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : undefined;
      if (!markupWrap.hasOwnProperty(nodeName)) {
        nodeName = '*';
      }
      if (!shouldWrap.hasOwnProperty(nodeName)) {
        if (nodeName === '*') {
          dummyNode.innerHTML = '<link />';
        } else {
          dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
        }
        shouldWrap[nodeName] = !dummyNode.firstChild;
      }
      return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
    }
    module.exports = getMarkupWrap;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/Danger.js', ['npm:fbjs@0.6.1/lib/ExecutionEnvironment.js', 'npm:fbjs@0.6.1/lib/createNodesFromMarkup.js', 'npm:fbjs@0.6.1/lib/emptyFunction.js', 'npm:fbjs@0.6.1/lib/getMarkupWrap.js', 'npm:fbjs@0.6.1/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ExecutionEnvironment = $__require('npm:fbjs@0.6.1/lib/ExecutionEnvironment.js');
    var createNodesFromMarkup = $__require('npm:fbjs@0.6.1/lib/createNodesFromMarkup.js');
    var emptyFunction = $__require('npm:fbjs@0.6.1/lib/emptyFunction.js');
    var getMarkupWrap = $__require('npm:fbjs@0.6.1/lib/getMarkupWrap.js');
    var invariant = $__require('npm:fbjs@0.6.1/lib/invariant.js');
    var OPEN_TAG_NAME_EXP = /^(<[^ \/>]+)/;
    var RESULT_INDEX_ATTR = 'data-danger-index';
    function getNodeName(markup) {
      return markup.substring(1, markup.indexOf(' '));
    }
    var Danger = {
      dangerouslyRenderMarkup: function (markupList) {
        !ExecutionEnvironment.canUseDOM ? 'production' !== 'production' ? invariant(false, 'dangerouslyRenderMarkup(...): Cannot render markup in a worker ' + 'thread. Make sure `window` and `document` are available globally ' + 'before requiring React when unit testing or use ' + 'ReactDOMServer.renderToString for server rendering.') : invariant(false) : undefined;
        var nodeName;
        var markupByNodeName = {};
        for (var i = 0; i < markupList.length; i++) {
          !markupList[i] ? 'production' !== 'production' ? invariant(false, 'dangerouslyRenderMarkup(...): Missing markup.') : invariant(false) : undefined;
          nodeName = getNodeName(markupList[i]);
          nodeName = getMarkupWrap(nodeName) ? nodeName : '*';
          markupByNodeName[nodeName] = markupByNodeName[nodeName] || [];
          markupByNodeName[nodeName][i] = markupList[i];
        }
        var resultList = [];
        var resultListAssignmentCount = 0;
        for (nodeName in markupByNodeName) {
          if (!markupByNodeName.hasOwnProperty(nodeName)) {
            continue;
          }
          var markupListByNodeName = markupByNodeName[nodeName];
          var resultIndex;
          for (resultIndex in markupListByNodeName) {
            if (markupListByNodeName.hasOwnProperty(resultIndex)) {
              var markup = markupListByNodeName[resultIndex];
              markupListByNodeName[resultIndex] = markup.replace(OPEN_TAG_NAME_EXP, '$1 ' + RESULT_INDEX_ATTR + '="' + resultIndex + '" ');
            }
          }
          var renderNodes = createNodesFromMarkup(markupListByNodeName.join(''), emptyFunction);
          for (var j = 0; j < renderNodes.length; ++j) {
            var renderNode = renderNodes[j];
            if (renderNode.hasAttribute && renderNode.hasAttribute(RESULT_INDEX_ATTR)) {
              resultIndex = +renderNode.getAttribute(RESULT_INDEX_ATTR);
              renderNode.removeAttribute(RESULT_INDEX_ATTR);
              !!resultList.hasOwnProperty(resultIndex) ? 'production' !== 'production' ? invariant(false, 'Danger: Assigning to an already-occupied result index.') : invariant(false) : undefined;
              resultList[resultIndex] = renderNode;
              resultListAssignmentCount += 1;
            } else if ('production' !== 'production') {
              console.error('Danger: Discarding unexpected node:', renderNode);
            }
          }
        }
        !(resultListAssignmentCount === resultList.length) ? 'production' !== 'production' ? invariant(false, 'Danger: Did not assign to every index of resultList.') : invariant(false) : undefined;
        !(resultList.length === markupList.length) ? 'production' !== 'production' ? invariant(false, 'Danger: Expected markup to render %s nodes, but rendered %s.', markupList.length, resultList.length) : invariant(false) : undefined;
        return resultList;
      },
      dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
        !ExecutionEnvironment.canUseDOM ? 'production' !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a ' + 'worker thread. Make sure `window` and `document` are available ' + 'globally before requiring React when unit testing or use ' + 'ReactDOMServer.renderToString() for server rendering.') : invariant(false) : undefined;
        !markup ? 'production' !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : invariant(false) : undefined;
        !(oldChild.tagName.toLowerCase() !== 'html') ? 'production' !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the ' + '<html> node. This is because browser quirks make this unreliable ' + 'and/or slow. If you want to render to the root you must use ' + 'server rendering. See ReactDOMServer.renderToString().') : invariant(false) : undefined;
        var newChild;
        if (typeof markup === 'string') {
          newChild = createNodesFromMarkup(markup, emptyFunction)[0];
        } else {
          newChild = markup;
        }
        oldChild.parentNode.replaceChild(newChild, oldChild);
      }
    };
    module.exports = Danger;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/ReactMultiChildUpdateTypes.js', ['npm:fbjs@0.6.1/lib/keyMirror.js'], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule ReactMultiChildUpdateTypes
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var keyMirror = $__require('npm:fbjs@0.6.1/lib/keyMirror.js');

  /**
   * When a component's children are updated, a series of update configuration
   * objects are created in order to batch and serialize the required changes.
   *
   * Enumerates all the possible types of update configurations.
   *
   * @internal
   */
  var ReactMultiChildUpdateTypes = keyMirror({
    INSERT_MARKUP: null,
    MOVE_EXISTING: null,
    REMOVE_NODE: null,
    SET_MARKUP: null,
    TEXT_CONTENT: null
  });

  module.exports = ReactMultiChildUpdateTypes;
});
System.registerDynamic('npm:react@0.14.9/lib/DOMChildrenOperations.js', ['npm:react@0.14.9/lib/Danger.js', 'npm:react@0.14.9/lib/ReactMultiChildUpdateTypes.js', 'npm:react@0.14.9/lib/ReactPerf.js', 'npm:react@0.14.9/lib/setInnerHTML.js', 'npm:react@0.14.9/lib/setTextContent.js', 'npm:fbjs@0.6.1/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var Danger = $__require('npm:react@0.14.9/lib/Danger.js');
    var ReactMultiChildUpdateTypes = $__require('npm:react@0.14.9/lib/ReactMultiChildUpdateTypes.js');
    var ReactPerf = $__require('npm:react@0.14.9/lib/ReactPerf.js');
    var setInnerHTML = $__require('npm:react@0.14.9/lib/setInnerHTML.js');
    var setTextContent = $__require('npm:react@0.14.9/lib/setTextContent.js');
    var invariant = $__require('npm:fbjs@0.6.1/lib/invariant.js');
    function insertChildAt(parentNode, childNode, index) {
      var beforeChild = index >= parentNode.childNodes.length ? null : parentNode.childNodes.item(index);
      parentNode.insertBefore(childNode, beforeChild);
    }
    var DOMChildrenOperations = {
      dangerouslyReplaceNodeWithMarkup: Danger.dangerouslyReplaceNodeWithMarkup,
      updateTextContent: setTextContent,
      processUpdates: function (updates, markupList) {
        var update;
        var initialChildren = null;
        var updatedChildren = null;
        for (var i = 0; i < updates.length; i++) {
          update = updates[i];
          if (update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING || update.type === ReactMultiChildUpdateTypes.REMOVE_NODE) {
            var updatedIndex = update.fromIndex;
            var updatedChild = update.parentNode.childNodes[updatedIndex];
            var parentID = update.parentID;
            !updatedChild ? 'production' !== 'production' ? invariant(false, 'processUpdates(): Unable to find child %s of element. This ' + 'probably means the DOM was unexpectedly mutated (e.g., by the ' + 'browser), usually due to forgetting a <tbody> when using tables, ' + 'nesting tags like <form>, <p>, or <a>, or using non-SVG elements ' + 'in an <svg> parent. Try inspecting the child nodes of the element ' + 'with React ID `%s`.', updatedIndex, parentID) : invariant(false) : undefined;
            initialChildren = initialChildren || {};
            initialChildren[parentID] = initialChildren[parentID] || [];
            initialChildren[parentID][updatedIndex] = updatedChild;
            updatedChildren = updatedChildren || [];
            updatedChildren.push(updatedChild);
          }
        }
        var renderedMarkup;
        if (markupList.length && typeof markupList[0] === 'string') {
          renderedMarkup = Danger.dangerouslyRenderMarkup(markupList);
        } else {
          renderedMarkup = markupList;
        }
        if (updatedChildren) {
          for (var j = 0; j < updatedChildren.length; j++) {
            updatedChildren[j].parentNode.removeChild(updatedChildren[j]);
          }
        }
        for (var k = 0; k < updates.length; k++) {
          update = updates[k];
          switch (update.type) {
            case ReactMultiChildUpdateTypes.INSERT_MARKUP:
              insertChildAt(update.parentNode, renderedMarkup[update.markupIndex], update.toIndex);
              break;
            case ReactMultiChildUpdateTypes.MOVE_EXISTING:
              insertChildAt(update.parentNode, initialChildren[update.parentID][update.fromIndex], update.toIndex);
              break;
            case ReactMultiChildUpdateTypes.SET_MARKUP:
              setInnerHTML(update.parentNode, update.content);
              break;
            case ReactMultiChildUpdateTypes.TEXT_CONTENT:
              setTextContent(update.parentNode, update.content);
              break;
            case ReactMultiChildUpdateTypes.REMOVE_NODE:
              break;
          }
        }
      }
    };
    ReactPerf.measureMethods(DOMChildrenOperations, 'DOMChildrenOperations', { updateTextContent: 'updateTextContent' });
    module.exports = DOMChildrenOperations;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/quoteAttributeValueForBrowser.js', ['npm:react@0.14.9/lib/escapeTextContentForBrowser.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var escapeTextContentForBrowser = $__require('npm:react@0.14.9/lib/escapeTextContentForBrowser.js');
  function quoteAttributeValueForBrowser(value) {
    return '"' + escapeTextContentForBrowser(value) + '"';
  }
  module.exports = quoteAttributeValueForBrowser;
});
System.registerDynamic('npm:react@0.14.9/lib/DOMPropertyOperations.js', ['npm:react@0.14.9/lib/DOMProperty.js', 'npm:react@0.14.9/lib/ReactPerf.js', 'npm:react@0.14.9/lib/quoteAttributeValueForBrowser.js', 'npm:fbjs@0.6.1/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var DOMProperty = $__require('npm:react@0.14.9/lib/DOMProperty.js');
    var ReactPerf = $__require('npm:react@0.14.9/lib/ReactPerf.js');
    var quoteAttributeValueForBrowser = $__require('npm:react@0.14.9/lib/quoteAttributeValueForBrowser.js');
    var warning = $__require('npm:fbjs@0.6.1/lib/warning.js');
    var VALID_ATTRIBUTE_NAME_REGEX = /^[a-zA-Z_][\w\.\-]*$/;
    var illegalAttributeNameCache = {};
    var validatedAttributeNameCache = {};
    function isAttributeNameSafe(attributeName) {
      if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
        return true;
      }
      if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
        return false;
      }
      if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
        validatedAttributeNameCache[attributeName] = true;
        return true;
      }
      illegalAttributeNameCache[attributeName] = true;
      'production' !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : undefined;
      return false;
    }
    function shouldIgnoreValue(propertyInfo, value) {
      return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
    }
    if ('production' !== 'production') {
      var reactProps = {
        children: true,
        dangerouslySetInnerHTML: true,
        key: true,
        ref: true
      };
      var warnedProperties = {};
      var warnUnknownProperty = function (name) {
        if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
          return;
        }
        warnedProperties[name] = true;
        var lowerCasedName = name.toLowerCase();
        var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;
        'production' !== 'production' ? warning(standardName == null, 'Unknown DOM property %s. Did you mean %s?', name, standardName) : undefined;
      };
    }
    var DOMPropertyOperations = {
      createMarkupForID: function (id) {
        return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
      },
      setAttributeForID: function (node, id) {
        node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
      },
      createMarkupForProperty: function (name, value) {
        var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
        if (propertyInfo) {
          if (shouldIgnoreValue(propertyInfo, value)) {
            return '';
          }
          var attributeName = propertyInfo.attributeName;
          if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
            return attributeName + '=""';
          }
          return attributeName + '=' + quoteAttributeValueForBrowser(value);
        } else if (DOMProperty.isCustomAttribute(name)) {
          if (value == null) {
            return '';
          }
          return name + '=' + quoteAttributeValueForBrowser(value);
        } else if ('production' !== 'production') {
          warnUnknownProperty(name);
        }
        return null;
      },
      createMarkupForCustomAttribute: function (name, value) {
        if (!isAttributeNameSafe(name) || value == null) {
          return '';
        }
        return name + '=' + quoteAttributeValueForBrowser(value);
      },
      setValueForProperty: function (node, name, value) {
        var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
        if (propertyInfo) {
          var mutationMethod = propertyInfo.mutationMethod;
          if (mutationMethod) {
            mutationMethod(node, value);
          } else if (shouldIgnoreValue(propertyInfo, value)) {
            this.deleteValueForProperty(node, name);
          } else if (propertyInfo.mustUseAttribute) {
            var attributeName = propertyInfo.attributeName;
            var namespace = propertyInfo.attributeNamespace;
            if (namespace) {
              node.setAttributeNS(namespace, attributeName, '' + value);
            } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
              node.setAttribute(attributeName, '');
            } else {
              node.setAttribute(attributeName, '' + value);
            }
          } else {
            var propName = propertyInfo.propertyName;
            if (!propertyInfo.hasSideEffects || '' + node[propName] !== '' + value) {
              node[propName] = value;
            }
          }
        } else if (DOMProperty.isCustomAttribute(name)) {
          DOMPropertyOperations.setValueForAttribute(node, name, value);
        } else if ('production' !== 'production') {
          warnUnknownProperty(name);
        }
      },
      setValueForAttribute: function (node, name, value) {
        if (!isAttributeNameSafe(name)) {
          return;
        }
        if (value == null) {
          node.removeAttribute(name);
        } else {
          node.setAttribute(name, '' + value);
        }
      },
      deleteValueForProperty: function (node, name) {
        var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
        if (propertyInfo) {
          var mutationMethod = propertyInfo.mutationMethod;
          if (mutationMethod) {
            mutationMethod(node, undefined);
          } else if (propertyInfo.mustUseAttribute) {
            node.removeAttribute(propertyInfo.attributeName);
          } else {
            var propName = propertyInfo.propertyName;
            var defaultValue = DOMProperty.getDefaultValueForProperty(node.nodeName, propName);
            if (!propertyInfo.hasSideEffects || '' + node[propName] !== defaultValue) {
              node[propName] = defaultValue;
            }
          }
        } else if (DOMProperty.isCustomAttribute(name)) {
          node.removeAttribute(name);
        } else if ('production' !== 'production') {
          warnUnknownProperty(name);
        }
      }
    };
    ReactPerf.measureMethods(DOMPropertyOperations, 'DOMPropertyOperations', {
      setValueForProperty: 'setValueForProperty',
      setValueForAttribute: 'setValueForAttribute',
      deleteValueForProperty: 'deleteValueForProperty'
    });
    module.exports = DOMPropertyOperations;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/ReactDOMIDOperations.js', ['npm:react@0.14.9/lib/DOMChildrenOperations.js', 'npm:react@0.14.9/lib/DOMPropertyOperations.js', 'npm:react@0.14.9/lib/ReactMount.js', 'npm:react@0.14.9/lib/ReactPerf.js', 'npm:fbjs@0.6.1/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var DOMChildrenOperations = $__require('npm:react@0.14.9/lib/DOMChildrenOperations.js');
    var DOMPropertyOperations = $__require('npm:react@0.14.9/lib/DOMPropertyOperations.js');
    var ReactMount = $__require('npm:react@0.14.9/lib/ReactMount.js');
    var ReactPerf = $__require('npm:react@0.14.9/lib/ReactPerf.js');
    var invariant = $__require('npm:fbjs@0.6.1/lib/invariant.js');
    var INVALID_PROPERTY_ERRORS = {
      dangerouslySetInnerHTML: '`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.',
      style: '`style` must be set using `updateStylesByID()`.'
    };
    var ReactDOMIDOperations = {
      updatePropertyByID: function (id, name, value) {
        var node = ReactMount.getNode(id);
        !!INVALID_PROPERTY_ERRORS.hasOwnProperty(name) ? 'production' !== 'production' ? invariant(false, 'updatePropertyByID(...): %s', INVALID_PROPERTY_ERRORS[name]) : invariant(false) : undefined;
        if (value != null) {
          DOMPropertyOperations.setValueForProperty(node, name, value);
        } else {
          DOMPropertyOperations.deleteValueForProperty(node, name);
        }
      },
      dangerouslyReplaceNodeWithMarkupByID: function (id, markup) {
        var node = ReactMount.getNode(id);
        DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup(node, markup);
      },
      dangerouslyProcessChildrenUpdates: function (updates, markup) {
        for (var i = 0; i < updates.length; i++) {
          updates[i].parentNode = ReactMount.getNode(updates[i].parentID);
        }
        DOMChildrenOperations.processUpdates(updates, markup);
      }
    };
    ReactPerf.measureMethods(ReactDOMIDOperations, 'ReactDOMIDOperations', {
      dangerouslyReplaceNodeWithMarkupByID: 'dangerouslyReplaceNodeWithMarkupByID',
      dangerouslyProcessChildrenUpdates: 'dangerouslyProcessChildrenUpdates'
    });
    module.exports = ReactDOMIDOperations;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/ReactComponentBrowserEnvironment.js', ['npm:react@0.14.9/lib/ReactDOMIDOperations.js', 'npm:react@0.14.9/lib/ReactMount.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactDOMIDOperations = $__require('npm:react@0.14.9/lib/ReactDOMIDOperations.js');
    var ReactMount = $__require('npm:react@0.14.9/lib/ReactMount.js');
    var ReactComponentBrowserEnvironment = {
      processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,
      replaceNodeWithMarkupByID: ReactDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,
      unmountIDFromEnvironment: function (rootNodeID) {
        ReactMount.purgeID(rootNodeID);
      }
    };
    module.exports = ReactComponentBrowserEnvironment;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/escapeTextContentForBrowser.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule escapeTextContentForBrowser
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ESCAPE_LOOKUP = {
    '&': '&amp;',
    '>': '&gt;',
    '<': '&lt;',
    '"': '&quot;',
    '\'': '&#x27;'
  };

  var ESCAPE_REGEX = /[&><"']/g;

  function escaper(match) {
    return ESCAPE_LOOKUP[match];
  }

  /**
   * Escapes text to prevent scripting attacks.
   *
   * @param {*} text Text value to escape.
   * @return {string} An escaped string.
   */
  function escapeTextContentForBrowser(text) {
    return ('' + text).replace(ESCAPE_REGEX, escaper);
  }

  module.exports = escapeTextContentForBrowser;
});
System.registerDynamic('npm:react@0.14.9/lib/setTextContent.js', ['npm:fbjs@0.6.1/lib/ExecutionEnvironment.js', 'npm:react@0.14.9/lib/escapeTextContentForBrowser.js', 'npm:react@0.14.9/lib/setInnerHTML.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ExecutionEnvironment = $__require('npm:fbjs@0.6.1/lib/ExecutionEnvironment.js');
  var escapeTextContentForBrowser = $__require('npm:react@0.14.9/lib/escapeTextContentForBrowser.js');
  var setInnerHTML = $__require('npm:react@0.14.9/lib/setInnerHTML.js');
  var setTextContent = function (node, text) {
    node.textContent = text;
  };
  if (ExecutionEnvironment.canUseDOM) {
    if (!('textContent' in document.documentElement)) {
      setTextContent = function (node, text) {
        setInnerHTML(node, escapeTextContentForBrowser(text));
      };
    }
  }
  module.exports = setTextContent;
});
System.registerDynamic('npm:react@0.14.9/lib/ReactDOMTextComponent.js', ['npm:react@0.14.9/lib/DOMChildrenOperations.js', 'npm:react@0.14.9/lib/DOMPropertyOperations.js', 'npm:react@0.14.9/lib/ReactComponentBrowserEnvironment.js', 'npm:react@0.14.9/lib/ReactMount.js', 'npm:react@0.14.9/lib/Object.assign.js', 'npm:react@0.14.9/lib/escapeTextContentForBrowser.js', 'npm:react@0.14.9/lib/setTextContent.js', 'npm:react@0.14.9/lib/validateDOMNesting.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var DOMChildrenOperations = $__require('npm:react@0.14.9/lib/DOMChildrenOperations.js');
    var DOMPropertyOperations = $__require('npm:react@0.14.9/lib/DOMPropertyOperations.js');
    var ReactComponentBrowserEnvironment = $__require('npm:react@0.14.9/lib/ReactComponentBrowserEnvironment.js');
    var ReactMount = $__require('npm:react@0.14.9/lib/ReactMount.js');
    var assign = $__require('npm:react@0.14.9/lib/Object.assign.js');
    var escapeTextContentForBrowser = $__require('npm:react@0.14.9/lib/escapeTextContentForBrowser.js');
    var setTextContent = $__require('npm:react@0.14.9/lib/setTextContent.js');
    var validateDOMNesting = $__require('npm:react@0.14.9/lib/validateDOMNesting.js');
    var ReactDOMTextComponent = function (props) {};
    assign(ReactDOMTextComponent.prototype, {
      construct: function (text) {
        this._currentElement = text;
        this._stringText = '' + text;
        this._rootNodeID = null;
        this._mountIndex = 0;
      },
      mountComponent: function (rootID, transaction, context) {
        if ('production' !== 'production') {
          if (context[validateDOMNesting.ancestorInfoContextKey]) {
            validateDOMNesting('span', null, context[validateDOMNesting.ancestorInfoContextKey]);
          }
        }
        this._rootNodeID = rootID;
        if (transaction.useCreateElement) {
          var ownerDocument = context[ReactMount.ownerDocumentContextKey];
          var el = ownerDocument.createElement('span');
          DOMPropertyOperations.setAttributeForID(el, rootID);
          ReactMount.getID(el);
          setTextContent(el, this._stringText);
          return el;
        } else {
          var escapedText = escapeTextContentForBrowser(this._stringText);
          if (transaction.renderToStaticMarkup) {
            return escapedText;
          }
          return '<span ' + DOMPropertyOperations.createMarkupForID(rootID) + '>' + escapedText + '</span>';
        }
      },
      receiveComponent: function (nextText, transaction) {
        if (nextText !== this._currentElement) {
          this._currentElement = nextText;
          var nextStringText = '' + nextText;
          if (nextStringText !== this._stringText) {
            this._stringText = nextStringText;
            var node = ReactMount.getNode(this._rootNodeID);
            DOMChildrenOperations.updateTextContent(node, nextStringText);
          }
        }
      },
      unmountComponent: function () {
        ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
      }
    });
    module.exports = ReactDOMTextComponent;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:fbjs@0.6.1/lib/getUnboundedScrollPosition.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule getUnboundedScrollPosition
   * @typechecks
   */

  'use strict';

  /**
   * Gets the scroll position of the supplied element or window.
   *
   * The return values are unbounded, unlike `getScrollPosition`. This means they
   * may be negative or exceed the element boundaries (which is possible using
   * inertial scrolling).
   *
   * @param {DOMWindow|DOMElement} scrollable
   * @return {object} Map with `x` and `y` keys.
   */

  var global = this || self,
      GLOBAL = global;
  function getUnboundedScrollPosition(scrollable) {
    if (scrollable === window) {
      return {
        x: window.pageXOffset || document.documentElement.scrollLeft,
        y: window.pageYOffset || document.documentElement.scrollTop
      };
    }
    return {
      x: scrollable.scrollLeft,
      y: scrollable.scrollTop
    };
  }

  module.exports = getUnboundedScrollPosition;
});
System.registerDynamic('npm:react@0.14.9/lib/ReactEventListener.js', ['npm:fbjs@0.6.1/lib/EventListener.js', 'npm:fbjs@0.6.1/lib/ExecutionEnvironment.js', 'npm:react@0.14.9/lib/PooledClass.js', 'npm:react@0.14.9/lib/ReactInstanceHandles.js', 'npm:react@0.14.9/lib/ReactMount.js', 'npm:react@0.14.9/lib/ReactUpdates.js', 'npm:react@0.14.9/lib/Object.assign.js', 'npm:react@0.14.9/lib/getEventTarget.js', 'npm:fbjs@0.6.1/lib/getUnboundedScrollPosition.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var EventListener = $__require('npm:fbjs@0.6.1/lib/EventListener.js');
    var ExecutionEnvironment = $__require('npm:fbjs@0.6.1/lib/ExecutionEnvironment.js');
    var PooledClass = $__require('npm:react@0.14.9/lib/PooledClass.js');
    var ReactInstanceHandles = $__require('npm:react@0.14.9/lib/ReactInstanceHandles.js');
    var ReactMount = $__require('npm:react@0.14.9/lib/ReactMount.js');
    var ReactUpdates = $__require('npm:react@0.14.9/lib/ReactUpdates.js');
    var assign = $__require('npm:react@0.14.9/lib/Object.assign.js');
    var getEventTarget = $__require('npm:react@0.14.9/lib/getEventTarget.js');
    var getUnboundedScrollPosition = $__require('npm:fbjs@0.6.1/lib/getUnboundedScrollPosition.js');
    var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
    function findParent(node) {
      var nodeID = ReactMount.getID(node);
      var rootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);
      var container = ReactMount.findReactContainerForID(rootID);
      var parent = ReactMount.getFirstReactDOM(container);
      return parent;
    }
    function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
      this.topLevelType = topLevelType;
      this.nativeEvent = nativeEvent;
      this.ancestors = [];
    }
    assign(TopLevelCallbackBookKeeping.prototype, { destructor: function () {
        this.topLevelType = null;
        this.nativeEvent = null;
        this.ancestors.length = 0;
      } });
    PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);
    function handleTopLevelImpl(bookKeeping) {
      void handleTopLevelWithPath;
      handleTopLevelWithoutPath(bookKeeping);
    }
    function handleTopLevelWithoutPath(bookKeeping) {
      var topLevelTarget = ReactMount.getFirstReactDOM(getEventTarget(bookKeeping.nativeEvent)) || window;
      var ancestor = topLevelTarget;
      while (ancestor) {
        bookKeeping.ancestors.push(ancestor);
        ancestor = findParent(ancestor);
      }
      for (var i = 0; i < bookKeeping.ancestors.length; i++) {
        topLevelTarget = bookKeeping.ancestors[i];
        var topLevelTargetID = ReactMount.getID(topLevelTarget) || '';
        ReactEventListener._handleTopLevel(bookKeeping.topLevelType, topLevelTarget, topLevelTargetID, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
      }
    }
    function handleTopLevelWithPath(bookKeeping) {
      var path = bookKeeping.nativeEvent.path;
      var currentNativeTarget = path[0];
      var eventsFired = 0;
      for (var i = 0; i < path.length; i++) {
        var currentPathElement = path[i];
        if (currentPathElement.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE) {
          currentNativeTarget = path[i + 1];
        }
        var reactParent = ReactMount.getFirstReactDOM(currentPathElement);
        if (reactParent === currentPathElement) {
          var currentPathElementID = ReactMount.getID(currentPathElement);
          var newRootID = ReactInstanceHandles.getReactRootIDFromNodeID(currentPathElementID);
          bookKeeping.ancestors.push(currentPathElement);
          var topLevelTargetID = ReactMount.getID(currentPathElement) || '';
          eventsFired++;
          ReactEventListener._handleTopLevel(bookKeeping.topLevelType, currentPathElement, topLevelTargetID, bookKeeping.nativeEvent, currentNativeTarget);
          while (currentPathElementID !== newRootID) {
            i++;
            currentPathElement = path[i];
            currentPathElementID = ReactMount.getID(currentPathElement);
          }
        }
      }
      if (eventsFired === 0) {
        ReactEventListener._handleTopLevel(bookKeeping.topLevelType, window, '', bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
      }
    }
    function scrollValueMonitor(cb) {
      var scrollPosition = getUnboundedScrollPosition(window);
      cb(scrollPosition);
    }
    var ReactEventListener = {
      _enabled: true,
      _handleTopLevel: null,
      WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,
      setHandleTopLevel: function (handleTopLevel) {
        ReactEventListener._handleTopLevel = handleTopLevel;
      },
      setEnabled: function (enabled) {
        ReactEventListener._enabled = !!enabled;
      },
      isEnabled: function () {
        return ReactEventListener._enabled;
      },
      trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
        var element = handle;
        if (!element) {
          return null;
        }
        return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
      },
      trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
        var element = handle;
        if (!element) {
          return null;
        }
        return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
      },
      monitorScrollValue: function (refresh) {
        var callback = scrollValueMonitor.bind(null, refresh);
        EventListener.listen(window, 'scroll', callback);
      },
      dispatchEvent: function (topLevelType, nativeEvent) {
        if (!ReactEventListener._enabled) {
          return;
        }
        var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
        try {
          ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
        } finally {
          TopLevelCallbackBookKeeping.release(bookKeeping);
        }
      }
    };
    module.exports = ReactEventListener;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/ReactInjection.js', ['npm:react@0.14.9/lib/DOMProperty.js', 'npm:react@0.14.9/lib/EventPluginHub.js', 'npm:react@0.14.9/lib/ReactComponentEnvironment.js', 'npm:react@0.14.9/lib/ReactClass.js', 'npm:react@0.14.9/lib/ReactEmptyComponent.js', 'npm:react@0.14.9/lib/ReactBrowserEventEmitter.js', 'npm:react@0.14.9/lib/ReactNativeComponent.js', 'npm:react@0.14.9/lib/ReactPerf.js', 'npm:react@0.14.9/lib/ReactRootIndex.js', 'npm:react@0.14.9/lib/ReactUpdates.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var DOMProperty = $__require('npm:react@0.14.9/lib/DOMProperty.js');
  var EventPluginHub = $__require('npm:react@0.14.9/lib/EventPluginHub.js');
  var ReactComponentEnvironment = $__require('npm:react@0.14.9/lib/ReactComponentEnvironment.js');
  var ReactClass = $__require('npm:react@0.14.9/lib/ReactClass.js');
  var ReactEmptyComponent = $__require('npm:react@0.14.9/lib/ReactEmptyComponent.js');
  var ReactBrowserEventEmitter = $__require('npm:react@0.14.9/lib/ReactBrowserEventEmitter.js');
  var ReactNativeComponent = $__require('npm:react@0.14.9/lib/ReactNativeComponent.js');
  var ReactPerf = $__require('npm:react@0.14.9/lib/ReactPerf.js');
  var ReactRootIndex = $__require('npm:react@0.14.9/lib/ReactRootIndex.js');
  var ReactUpdates = $__require('npm:react@0.14.9/lib/ReactUpdates.js');
  var ReactInjection = {
    Component: ReactComponentEnvironment.injection,
    Class: ReactClass.injection,
    DOMProperty: DOMProperty.injection,
    EmptyComponent: ReactEmptyComponent.injection,
    EventPluginHub: EventPluginHub.injection,
    EventEmitter: ReactBrowserEventEmitter.injection,
    NativeComponent: ReactNativeComponent.injection,
    Perf: ReactPerf.injection,
    RootIndex: ReactRootIndex.injection,
    Updates: ReactUpdates.injection
  };
  module.exports = ReactInjection;
});
System.registerDynamic('npm:react@0.14.9/lib/ReactReconcileTransaction.js', ['npm:react@0.14.9/lib/CallbackQueue.js', 'npm:react@0.14.9/lib/PooledClass.js', 'npm:react@0.14.9/lib/ReactBrowserEventEmitter.js', 'npm:react@0.14.9/lib/ReactDOMFeatureFlags.js', 'npm:react@0.14.9/lib/ReactInputSelection.js', 'npm:react@0.14.9/lib/Transaction.js', 'npm:react@0.14.9/lib/Object.assign.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var CallbackQueue = $__require('npm:react@0.14.9/lib/CallbackQueue.js');
  var PooledClass = $__require('npm:react@0.14.9/lib/PooledClass.js');
  var ReactBrowserEventEmitter = $__require('npm:react@0.14.9/lib/ReactBrowserEventEmitter.js');
  var ReactDOMFeatureFlags = $__require('npm:react@0.14.9/lib/ReactDOMFeatureFlags.js');
  var ReactInputSelection = $__require('npm:react@0.14.9/lib/ReactInputSelection.js');
  var Transaction = $__require('npm:react@0.14.9/lib/Transaction.js');
  var assign = $__require('npm:react@0.14.9/lib/Object.assign.js');
  var SELECTION_RESTORATION = {
    initialize: ReactInputSelection.getSelectionInformation,
    close: ReactInputSelection.restoreSelection
  };
  var EVENT_SUPPRESSION = {
    initialize: function () {
      var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
      ReactBrowserEventEmitter.setEnabled(false);
      return currentlyEnabled;
    },
    close: function (previouslyEnabled) {
      ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
    }
  };
  var ON_DOM_READY_QUEUEING = {
    initialize: function () {
      this.reactMountReady.reset();
    },
    close: function () {
      this.reactMountReady.notifyAll();
    }
  };
  var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];
  function ReactReconcileTransaction(forceHTML) {
    this.reinitializeTransaction();
    this.renderToStaticMarkup = false;
    this.reactMountReady = CallbackQueue.getPooled(null);
    this.useCreateElement = !forceHTML && ReactDOMFeatureFlags.useCreateElement;
  }
  var Mixin = {
    getTransactionWrappers: function () {
      return TRANSACTION_WRAPPERS;
    },
    getReactMountReady: function () {
      return this.reactMountReady;
    },
    destructor: function () {
      CallbackQueue.release(this.reactMountReady);
      this.reactMountReady = null;
    }
  };
  assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);
  PooledClass.addPoolingTo(ReactReconcileTransaction);
  module.exports = ReactReconcileTransaction;
});
System.registerDynamic('npm:react@0.14.9/lib/getNodeForCharacterOffset.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule getNodeForCharacterOffset
   */

  'use strict';

  /**
   * Given any node return the first leaf node without children.
   *
   * @param {DOMElement|DOMTextNode} node
   * @return {DOMElement|DOMTextNode}
   */

  var global = this || self,
      GLOBAL = global;
  function getLeafNode(node) {
    while (node && node.firstChild) {
      node = node.firstChild;
    }
    return node;
  }

  /**
   * Get the next sibling within a container. This will walk up the
   * DOM if a node's siblings have been exhausted.
   *
   * @param {DOMElement|DOMTextNode} node
   * @return {?DOMElement|DOMTextNode}
   */
  function getSiblingNode(node) {
    while (node) {
      if (node.nextSibling) {
        return node.nextSibling;
      }
      node = node.parentNode;
    }
  }

  /**
   * Get object describing the nodes which contain characters at offset.
   *
   * @param {DOMElement|DOMTextNode} root
   * @param {number} offset
   * @return {?object}
   */
  function getNodeForCharacterOffset(root, offset) {
    var node = getLeafNode(root);
    var nodeStart = 0;
    var nodeEnd = 0;

    while (node) {
      if (node.nodeType === 3) {
        nodeEnd = nodeStart + node.textContent.length;

        if (nodeStart <= offset && nodeEnd >= offset) {
          return {
            node: node,
            offset: offset - nodeStart
          };
        }

        nodeStart = nodeEnd;
      }

      node = getLeafNode(getSiblingNode(node));
    }
  }

  module.exports = getNodeForCharacterOffset;
});
System.registerDynamic('npm:react@0.14.9/lib/getTextContentAccessor.js', ['npm:fbjs@0.6.1/lib/ExecutionEnvironment.js'], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule getTextContentAccessor
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ExecutionEnvironment = $__require('npm:fbjs@0.6.1/lib/ExecutionEnvironment.js');

  var contentKey = null;

  /**
   * Gets the key used to access text content on a DOM node.
   *
   * @return {?string} Key used to access text content.
   * @internal
   */
  function getTextContentAccessor() {
    if (!contentKey && ExecutionEnvironment.canUseDOM) {
      // Prefer textContent to innerText because many browsers support both but
      // SVG <text> elements don't support innerText even when <div> does.
      contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
    }
    return contentKey;
  }

  module.exports = getTextContentAccessor;
});
System.registerDynamic('npm:react@0.14.9/lib/ReactDOMSelection.js', ['npm:fbjs@0.6.1/lib/ExecutionEnvironment.js', 'npm:react@0.14.9/lib/getNodeForCharacterOffset.js', 'npm:react@0.14.9/lib/getTextContentAccessor.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ExecutionEnvironment = $__require('npm:fbjs@0.6.1/lib/ExecutionEnvironment.js');
  var getNodeForCharacterOffset = $__require('npm:react@0.14.9/lib/getNodeForCharacterOffset.js');
  var getTextContentAccessor = $__require('npm:react@0.14.9/lib/getTextContentAccessor.js');
  function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
    return anchorNode === focusNode && anchorOffset === focusOffset;
  }
  function getIEOffsets(node) {
    var selection = document.selection;
    var selectedRange = selection.createRange();
    var selectedLength = selectedRange.text.length;
    var fromStart = selectedRange.duplicate();
    fromStart.moveToElementText(node);
    fromStart.setEndPoint('EndToStart', selectedRange);
    var startOffset = fromStart.text.length;
    var endOffset = startOffset + selectedLength;
    return {
      start: startOffset,
      end: endOffset
    };
  }
  function getModernOffsets(node) {
    var selection = window.getSelection && window.getSelection();
    if (!selection || selection.rangeCount === 0) {
      return null;
    }
    var anchorNode = selection.anchorNode;
    var anchorOffset = selection.anchorOffset;
    var focusNode = selection.focusNode;
    var focusOffset = selection.focusOffset;
    var currentRange = selection.getRangeAt(0);
    try {
      currentRange.startContainer.nodeType;
      currentRange.endContainer.nodeType;
    } catch (e) {
      return null;
    }
    var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);
    var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;
    var tempRange = currentRange.cloneRange();
    tempRange.selectNodeContents(node);
    tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);
    var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);
    var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
    var end = start + rangeLength;
    var detectionRange = document.createRange();
    detectionRange.setStart(anchorNode, anchorOffset);
    detectionRange.setEnd(focusNode, focusOffset);
    var isBackward = detectionRange.collapsed;
    return {
      start: isBackward ? end : start,
      end: isBackward ? start : end
    };
  }
  function setIEOffsets(node, offsets) {
    var range = document.selection.createRange().duplicate();
    var start, end;
    if (typeof offsets.end === 'undefined') {
      start = offsets.start;
      end = start;
    } else if (offsets.start > offsets.end) {
      start = offsets.end;
      end = offsets.start;
    } else {
      start = offsets.start;
      end = offsets.end;
    }
    range.moveToElementText(node);
    range.moveStart('character', start);
    range.setEndPoint('EndToStart', range);
    range.moveEnd('character', end - start);
    range.select();
  }
  function setModernOffsets(node, offsets) {
    if (!window.getSelection) {
      return;
    }
    var selection = window.getSelection();
    var length = node[getTextContentAccessor()].length;
    var start = Math.min(offsets.start, length);
    var end = typeof offsets.end === 'undefined' ? start : Math.min(offsets.end, length);
    if (!selection.extend && start > end) {
      var temp = end;
      end = start;
      start = temp;
    }
    var startMarker = getNodeForCharacterOffset(node, start);
    var endMarker = getNodeForCharacterOffset(node, end);
    if (startMarker && endMarker) {
      var range = document.createRange();
      range.setStart(startMarker.node, startMarker.offset);
      selection.removeAllRanges();
      if (start > end) {
        selection.addRange(range);
        selection.extend(endMarker.node, endMarker.offset);
      } else {
        range.setEnd(endMarker.node, endMarker.offset);
        selection.addRange(range);
      }
    }
  }
  var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);
  var ReactDOMSelection = {
    getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,
    setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
  };
  module.exports = ReactDOMSelection;
});
System.registerDynamic('npm:fbjs@0.6.1/lib/focusNode.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule focusNode
   */

  'use strict';

  /**
   * @param {DOMElement} node input/textarea to focus
   */

  var global = this || self,
      GLOBAL = global;
  function focusNode(node) {
    // IE8 can throw "Can't move focus to the control because it is invisible,
    // not enabled, or of a type that does not accept the focus." for all kinds of
    // reasons that are too expensive and fragile to test.
    try {
      node.focus();
    } catch (e) {}
  }

  module.exports = focusNode;
});
System.registerDynamic('npm:react@0.14.9/lib/ReactInputSelection.js', ['npm:react@0.14.9/lib/ReactDOMSelection.js', 'npm:fbjs@0.6.1/lib/containsNode.js', 'npm:fbjs@0.6.1/lib/focusNode.js', 'npm:fbjs@0.6.1/lib/getActiveElement.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ReactDOMSelection = $__require('npm:react@0.14.9/lib/ReactDOMSelection.js');
  var containsNode = $__require('npm:fbjs@0.6.1/lib/containsNode.js');
  var focusNode = $__require('npm:fbjs@0.6.1/lib/focusNode.js');
  var getActiveElement = $__require('npm:fbjs@0.6.1/lib/getActiveElement.js');
  function isInDocument(node) {
    return containsNode(document.documentElement, node);
  }
  var ReactInputSelection = {
    hasSelectionCapabilities: function (elem) {
      var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
      return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
    },
    getSelectionInformation: function () {
      var focusedElem = getActiveElement();
      return {
        focusedElem: focusedElem,
        selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
      };
    },
    restoreSelection: function (priorSelectionInformation) {
      var curFocusedElem = getActiveElement();
      var priorFocusedElem = priorSelectionInformation.focusedElem;
      var priorSelectionRange = priorSelectionInformation.selectionRange;
      if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
        if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
          ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
        }
        focusNode(priorFocusedElem);
      }
    },
    getSelection: function (input) {
      var selection;
      if ('selectionStart' in input) {
        selection = {
          start: input.selectionStart,
          end: input.selectionEnd
        };
      } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
        var range = document.selection.createRange();
        if (range.parentElement() === input) {
          selection = {
            start: -range.moveStart('character', -input.value.length),
            end: -range.moveEnd('character', -input.value.length)
          };
        }
      } else {
        selection = ReactDOMSelection.getOffsets(input);
      }
      return selection || {
        start: 0,
        end: 0
      };
    },
    setSelection: function (input, offsets) {
      var start = offsets.start;
      var end = offsets.end;
      if (typeof end === 'undefined') {
        end = start;
      }
      if ('selectionStart' in input) {
        input.selectionStart = start;
        input.selectionEnd = Math.min(end, input.value.length);
      } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
        var range = input.createTextRange();
        range.collapse(true);
        range.moveStart('character', start);
        range.moveEnd('character', end - start);
        range.select();
      } else {
        ReactDOMSelection.setOffsets(input, offsets);
      }
    }
  };
  module.exports = ReactInputSelection;
});
System.registerDynamic('npm:fbjs@0.6.1/lib/getActiveElement.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule getActiveElement
   * @typechecks
   */

  /* eslint-disable fb-www/typeof-undefined */

  /**
   * Same as document.activeElement but wraps in a try-catch block. In IE it is
   * not safe to call document.activeElement if there is nothing focused.
   *
   * The activeElement will be null only if the document or document body is not
   * yet defined.
   */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  function getActiveElement() /*?DOMElement*/{
    if (typeof document === 'undefined') {
      return null;
    }
    try {
      return document.activeElement || document.body;
    } catch (e) {
      return document.body;
    }
  }

  module.exports = getActiveElement;
});
System.registerDynamic('npm:react@0.14.9/lib/isTextInputElement.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule isTextInputElement
   */

  'use strict';

  /**
   * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
   */

  var global = this || self,
      GLOBAL = global;
  var supportedInputTypes = {
    'color': true,
    'date': true,
    'datetime': true,
    'datetime-local': true,
    'email': true,
    'month': true,
    'number': true,
    'password': true,
    'range': true,
    'search': true,
    'tel': true,
    'text': true,
    'time': true,
    'url': true,
    'week': true
  };

  function isTextInputElement(elem) {
    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
    return nodeName && (nodeName === 'input' && supportedInputTypes[elem.type] || nodeName === 'textarea');
  }

  module.exports = isTextInputElement;
});
System.registerDynamic('npm:fbjs@0.6.1/lib/shallowEqual.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule shallowEqual
   * @typechecks
   * 
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var hasOwnProperty = Object.prototype.hasOwnProperty;

  /**
   * Performs equality by iterating through keys on an object and returning false
   * when any key has values which are not strictly equal between the arguments.
   * Returns true when the values of all keys are strictly equal.
   */
  function shallowEqual(objA, objB) {
    if (objA === objB) {
      return true;
    }

    if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
      return false;
    }

    var keysA = Object.keys(objA);
    var keysB = Object.keys(objB);

    if (keysA.length !== keysB.length) {
      return false;
    }

    // Test for A's keys different from B.
    var bHasOwnProperty = hasOwnProperty.bind(objB);
    for (var i = 0; i < keysA.length; i++) {
      if (!bHasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {
        return false;
      }
    }

    return true;
  }

  module.exports = shallowEqual;
});
System.registerDynamic('npm:react@0.14.9/lib/SelectEventPlugin.js', ['npm:react@0.14.9/lib/EventConstants.js', 'npm:react@0.14.9/lib/EventPropagators.js', 'npm:fbjs@0.6.1/lib/ExecutionEnvironment.js', 'npm:react@0.14.9/lib/ReactInputSelection.js', 'npm:react@0.14.9/lib/SyntheticEvent.js', 'npm:fbjs@0.6.1/lib/getActiveElement.js', 'npm:react@0.14.9/lib/isTextInputElement.js', 'npm:fbjs@0.6.1/lib/keyOf.js', 'npm:fbjs@0.6.1/lib/shallowEqual.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var EventConstants = $__require('npm:react@0.14.9/lib/EventConstants.js');
  var EventPropagators = $__require('npm:react@0.14.9/lib/EventPropagators.js');
  var ExecutionEnvironment = $__require('npm:fbjs@0.6.1/lib/ExecutionEnvironment.js');
  var ReactInputSelection = $__require('npm:react@0.14.9/lib/ReactInputSelection.js');
  var SyntheticEvent = $__require('npm:react@0.14.9/lib/SyntheticEvent.js');
  var getActiveElement = $__require('npm:fbjs@0.6.1/lib/getActiveElement.js');
  var isTextInputElement = $__require('npm:react@0.14.9/lib/isTextInputElement.js');
  var keyOf = $__require('npm:fbjs@0.6.1/lib/keyOf.js');
  var shallowEqual = $__require('npm:fbjs@0.6.1/lib/shallowEqual.js');
  var topLevelTypes = EventConstants.topLevelTypes;
  var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;
  var eventTypes = { select: {
      phasedRegistrationNames: {
        bubbled: keyOf({ onSelect: null }),
        captured: keyOf({ onSelectCapture: null })
      },
      dependencies: [topLevelTypes.topBlur, topLevelTypes.topContextMenu, topLevelTypes.topFocus, topLevelTypes.topKeyDown, topLevelTypes.topMouseDown, topLevelTypes.topMouseUp, topLevelTypes.topSelectionChange]
    } };
  var activeElement = null;
  var activeElementID = null;
  var lastSelection = null;
  var mouseDown = false;
  var hasListener = false;
  var ON_SELECT_KEY = keyOf({ onSelect: null });
  function getSelection(node) {
    if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
      return {
        start: node.selectionStart,
        end: node.selectionEnd
      };
    } else if (window.getSelection) {
      var selection = window.getSelection();
      return {
        anchorNode: selection.anchorNode,
        anchorOffset: selection.anchorOffset,
        focusNode: selection.focusNode,
        focusOffset: selection.focusOffset
      };
    } else if (document.selection) {
      var range = document.selection.createRange();
      return {
        parentElement: range.parentElement(),
        text: range.text,
        top: range.boundingTop,
        left: range.boundingLeft
      };
    }
  }
  function constructSelectEvent(nativeEvent, nativeEventTarget) {
    if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
      return null;
    }
    var currentSelection = getSelection(activeElement);
    if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
      lastSelection = currentSelection;
      var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementID, nativeEvent, nativeEventTarget);
      syntheticEvent.type = 'select';
      syntheticEvent.target = activeElement;
      EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);
      return syntheticEvent;
    }
    return null;
  }
  var SelectEventPlugin = {
    eventTypes: eventTypes,
    extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
      if (!hasListener) {
        return null;
      }
      switch (topLevelType) {
        case topLevelTypes.topFocus:
          if (isTextInputElement(topLevelTarget) || topLevelTarget.contentEditable === 'true') {
            activeElement = topLevelTarget;
            activeElementID = topLevelTargetID;
            lastSelection = null;
          }
          break;
        case topLevelTypes.topBlur:
          activeElement = null;
          activeElementID = null;
          lastSelection = null;
          break;
        case topLevelTypes.topMouseDown:
          mouseDown = true;
          break;
        case topLevelTypes.topContextMenu:
        case topLevelTypes.topMouseUp:
          mouseDown = false;
          return constructSelectEvent(nativeEvent, nativeEventTarget);
        case topLevelTypes.topSelectionChange:
          if (skipSelectionChangeEvent) {
            break;
          }
        case topLevelTypes.topKeyDown:
        case topLevelTypes.topKeyUp:
          return constructSelectEvent(nativeEvent, nativeEventTarget);
      }
      return null;
    },
    didPutListener: function (id, registrationName, listener) {
      if (registrationName === ON_SELECT_KEY) {
        hasListener = true;
      }
    }
  };
  module.exports = SelectEventPlugin;
});
System.registerDynamic('npm:react@0.14.9/lib/ServerReactRootIndex.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule ServerReactRootIndex
   * @typechecks
   */

  'use strict';

  /**
   * Size of the reactRoot ID space. We generate random numbers for React root
   * IDs and if there's a collision the events and DOM update system will
   * get confused. In the future we need a way to generate GUIDs but for
   * now this will work on a smaller scale.
   */

  var global = this || self,
      GLOBAL = global;
  var GLOBAL_MOUNT_POINT_MAX = Math.pow(2, 53);

  var ServerReactRootIndex = {
    createReactRootIndex: function () {
      return Math.ceil(Math.random() * GLOBAL_MOUNT_POINT_MAX);
    }
  };

  module.exports = ServerReactRootIndex;
});
System.registerDynamic('npm:fbjs@0.6.1/lib/EventListener.js', ['npm:fbjs@0.6.1/lib/emptyFunction.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var emptyFunction = $__require('npm:fbjs@0.6.1/lib/emptyFunction.js');
    var EventListener = {
      listen: function (target, eventType, callback) {
        if (target.addEventListener) {
          target.addEventListener(eventType, callback, false);
          return { remove: function () {
              target.removeEventListener(eventType, callback, false);
            } };
        } else if (target.attachEvent) {
          target.attachEvent('on' + eventType, callback);
          return { remove: function () {
              target.detachEvent('on' + eventType, callback);
            } };
        }
      },
      capture: function (target, eventType, callback) {
        if (target.addEventListener) {
          target.addEventListener(eventType, callback, true);
          return { remove: function () {
              target.removeEventListener(eventType, callback, true);
            } };
        } else {
          if ('production' !== 'production') {
            console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
          }
          return { remove: emptyFunction };
        }
      },
      registerDefault: function () {}
    };
    module.exports = EventListener;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/EventPropagators.js', ['npm:react@0.14.9/lib/EventConstants.js', 'npm:react@0.14.9/lib/EventPluginHub.js', 'npm:fbjs@0.6.1/lib/warning.js', 'npm:react@0.14.9/lib/accumulateInto.js', 'npm:react@0.14.9/lib/forEachAccumulated.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var EventConstants = $__require('npm:react@0.14.9/lib/EventConstants.js');
    var EventPluginHub = $__require('npm:react@0.14.9/lib/EventPluginHub.js');
    var warning = $__require('npm:fbjs@0.6.1/lib/warning.js');
    var accumulateInto = $__require('npm:react@0.14.9/lib/accumulateInto.js');
    var forEachAccumulated = $__require('npm:react@0.14.9/lib/forEachAccumulated.js');
    var PropagationPhases = EventConstants.PropagationPhases;
    var getListener = EventPluginHub.getListener;
    function listenerAtPhase(id, event, propagationPhase) {
      var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
      return getListener(id, registrationName);
    }
    function accumulateDirectionalDispatches(domID, upwards, event) {
      if ('production' !== 'production') {
        'production' !== 'production' ? warning(domID, 'Dispatching id must not be null') : undefined;
      }
      var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
      var listener = listenerAtPhase(domID, event, phase);
      if (listener) {
        event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
        event._dispatchIDs = accumulateInto(event._dispatchIDs, domID);
      }
    }
    function accumulateTwoPhaseDispatchesSingle(event) {
      if (event && event.dispatchConfig.phasedRegistrationNames) {
        EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(event.dispatchMarker, accumulateDirectionalDispatches, event);
      }
    }
    function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
      if (event && event.dispatchConfig.phasedRegistrationNames) {
        EventPluginHub.injection.getInstanceHandle().traverseTwoPhaseSkipTarget(event.dispatchMarker, accumulateDirectionalDispatches, event);
      }
    }
    function accumulateDispatches(id, ignoredDirection, event) {
      if (event && event.dispatchConfig.registrationName) {
        var registrationName = event.dispatchConfig.registrationName;
        var listener = getListener(id, registrationName);
        if (listener) {
          event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
          event._dispatchIDs = accumulateInto(event._dispatchIDs, id);
        }
      }
    }
    function accumulateDirectDispatchesSingle(event) {
      if (event && event.dispatchConfig.registrationName) {
        accumulateDispatches(event.dispatchMarker, null, event);
      }
    }
    function accumulateTwoPhaseDispatches(events) {
      forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
    }
    function accumulateTwoPhaseDispatchesSkipTarget(events) {
      forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
    }
    function accumulateEnterLeaveDispatches(leave, enter, fromID, toID) {
      EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(fromID, toID, accumulateDispatches, leave, enter);
    }
    function accumulateDirectDispatches(events) {
      forEachAccumulated(events, accumulateDirectDispatchesSingle);
    }
    var EventPropagators = {
      accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
      accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
      accumulateDirectDispatches: accumulateDirectDispatches,
      accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
    };
    module.exports = EventPropagators;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/SyntheticClipboardEvent.js', ['npm:react@0.14.9/lib/SyntheticEvent.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var SyntheticEvent = $__require('npm:react@0.14.9/lib/SyntheticEvent.js');
  var ClipboardEventInterface = { clipboardData: function (event) {
      return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
    } };
  function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);
  module.exports = SyntheticClipboardEvent;
});
System.registerDynamic('npm:react@0.14.9/lib/SyntheticFocusEvent.js', ['npm:react@0.14.9/lib/SyntheticUIEvent.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var SyntheticUIEvent = $__require('npm:react@0.14.9/lib/SyntheticUIEvent.js');
  var FocusEventInterface = { relatedTarget: null };
  function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);
  module.exports = SyntheticFocusEvent;
});
System.registerDynamic('npm:react@0.14.9/lib/getEventKey.js', ['npm:react@0.14.9/lib/getEventCharCode.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var getEventCharCode = $__require('npm:react@0.14.9/lib/getEventCharCode.js');
  var normalizeKey = {
    'Esc': 'Escape',
    'Spacebar': ' ',
    'Left': 'ArrowLeft',
    'Up': 'ArrowUp',
    'Right': 'ArrowRight',
    'Down': 'ArrowDown',
    'Del': 'Delete',
    'Win': 'OS',
    'Menu': 'ContextMenu',
    'Apps': 'ContextMenu',
    'Scroll': 'ScrollLock',
    'MozPrintableKey': 'Unidentified'
  };
  var translateToKey = {
    8: 'Backspace',
    9: 'Tab',
    12: 'Clear',
    13: 'Enter',
    16: 'Shift',
    17: 'Control',
    18: 'Alt',
    19: 'Pause',
    20: 'CapsLock',
    27: 'Escape',
    32: ' ',
    33: 'PageUp',
    34: 'PageDown',
    35: 'End',
    36: 'Home',
    37: 'ArrowLeft',
    38: 'ArrowUp',
    39: 'ArrowRight',
    40: 'ArrowDown',
    45: 'Insert',
    46: 'Delete',
    112: 'F1',
    113: 'F2',
    114: 'F3',
    115: 'F4',
    116: 'F5',
    117: 'F6',
    118: 'F7',
    119: 'F8',
    120: 'F9',
    121: 'F10',
    122: 'F11',
    123: 'F12',
    144: 'NumLock',
    145: 'ScrollLock',
    224: 'Meta'
  };
  function getEventKey(nativeEvent) {
    if (nativeEvent.key) {
      var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
      if (key !== 'Unidentified') {
        return key;
      }
    }
    if (nativeEvent.type === 'keypress') {
      var charCode = getEventCharCode(nativeEvent);
      return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
    }
    if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
      return translateToKey[nativeEvent.keyCode] || 'Unidentified';
    }
    return '';
  }
  module.exports = getEventKey;
});
System.registerDynamic('npm:react@0.14.9/lib/SyntheticKeyboardEvent.js', ['npm:react@0.14.9/lib/SyntheticUIEvent.js', 'npm:react@0.14.9/lib/getEventCharCode.js', 'npm:react@0.14.9/lib/getEventKey.js', 'npm:react@0.14.9/lib/getEventModifierState.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var SyntheticUIEvent = $__require('npm:react@0.14.9/lib/SyntheticUIEvent.js');
  var getEventCharCode = $__require('npm:react@0.14.9/lib/getEventCharCode.js');
  var getEventKey = $__require('npm:react@0.14.9/lib/getEventKey.js');
  var getEventModifierState = $__require('npm:react@0.14.9/lib/getEventModifierState.js');
  var KeyboardEventInterface = {
    key: getEventKey,
    location: null,
    ctrlKey: null,
    shiftKey: null,
    altKey: null,
    metaKey: null,
    repeat: null,
    locale: null,
    getModifierState: getEventModifierState,
    charCode: function (event) {
      if (event.type === 'keypress') {
        return getEventCharCode(event);
      }
      return 0;
    },
    keyCode: function (event) {
      if (event.type === 'keydown' || event.type === 'keyup') {
        return event.keyCode;
      }
      return 0;
    },
    which: function (event) {
      if (event.type === 'keypress') {
        return getEventCharCode(event);
      }
      if (event.type === 'keydown' || event.type === 'keyup') {
        return event.keyCode;
      }
      return 0;
    }
  };
  function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);
  module.exports = SyntheticKeyboardEvent;
});
System.registerDynamic('npm:react@0.14.9/lib/SyntheticDragEvent.js', ['npm:react@0.14.9/lib/SyntheticMouseEvent.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var SyntheticMouseEvent = $__require('npm:react@0.14.9/lib/SyntheticMouseEvent.js');
  var DragEventInterface = { dataTransfer: null };
  function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);
  module.exports = SyntheticDragEvent;
});
System.registerDynamic('npm:react@0.14.9/lib/SyntheticTouchEvent.js', ['npm:react@0.14.9/lib/SyntheticUIEvent.js', 'npm:react@0.14.9/lib/getEventModifierState.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var SyntheticUIEvent = $__require('npm:react@0.14.9/lib/SyntheticUIEvent.js');
  var getEventModifierState = $__require('npm:react@0.14.9/lib/getEventModifierState.js');
  var TouchEventInterface = {
    touches: null,
    targetTouches: null,
    changedTouches: null,
    altKey: null,
    metaKey: null,
    ctrlKey: null,
    shiftKey: null,
    getModifierState: getEventModifierState
  };
  function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);
  module.exports = SyntheticTouchEvent;
});
System.registerDynamic('npm:react@0.14.9/lib/SyntheticEvent.js', ['npm:react@0.14.9/lib/PooledClass.js', 'npm:react@0.14.9/lib/Object.assign.js', 'npm:fbjs@0.6.1/lib/emptyFunction.js', 'npm:fbjs@0.6.1/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var PooledClass = $__require('npm:react@0.14.9/lib/PooledClass.js');
    var assign = $__require('npm:react@0.14.9/lib/Object.assign.js');
    var emptyFunction = $__require('npm:fbjs@0.6.1/lib/emptyFunction.js');
    var warning = $__require('npm:fbjs@0.6.1/lib/warning.js');
    var EventInterface = {
      type: null,
      target: null,
      currentTarget: emptyFunction.thatReturnsNull,
      eventPhase: null,
      bubbles: null,
      cancelable: null,
      timeStamp: function (event) {
        return event.timeStamp || Date.now();
      },
      defaultPrevented: null,
      isTrusted: null
    };
    function SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
      this.dispatchConfig = dispatchConfig;
      this.dispatchMarker = dispatchMarker;
      this.nativeEvent = nativeEvent;
      var Interface = this.constructor.Interface;
      for (var propName in Interface) {
        if (!Interface.hasOwnProperty(propName)) {
          continue;
        }
        var normalize = Interface[propName];
        if (normalize) {
          this[propName] = normalize(nativeEvent);
        } else {
          if (propName === 'target') {
            this.target = nativeEventTarget;
          } else {
            this[propName] = nativeEvent[propName];
          }
        }
      }
      var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
      if (defaultPrevented) {
        this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
      } else {
        this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
      }
      this.isPropagationStopped = emptyFunction.thatReturnsFalse;
    }
    assign(SyntheticEvent.prototype, {
      preventDefault: function () {
        this.defaultPrevented = true;
        var event = this.nativeEvent;
        if ('production' !== 'production') {
          'production' !== 'production' ? warning(event, 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re calling `preventDefault` on a ' + 'released/nullified synthetic event. This is a no-op. See ' + 'https://fb.me/react-event-pooling for more information.') : undefined;
        }
        if (!event) {
          return;
        }
        if (event.preventDefault) {
          event.preventDefault();
        } else {
          event.returnValue = false;
        }
        this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
      },
      stopPropagation: function () {
        var event = this.nativeEvent;
        if ('production' !== 'production') {
          'production' !== 'production' ? warning(event, 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re calling `stopPropagation` on a ' + 'released/nullified synthetic event. This is a no-op. See ' + 'https://fb.me/react-event-pooling for more information.') : undefined;
        }
        if (!event) {
          return;
        }
        if (event.stopPropagation) {
          event.stopPropagation();
        } else {
          event.cancelBubble = true;
        }
        this.isPropagationStopped = emptyFunction.thatReturnsTrue;
      },
      persist: function () {
        this.isPersistent = emptyFunction.thatReturnsTrue;
      },
      isPersistent: emptyFunction.thatReturnsFalse,
      destructor: function () {
        var Interface = this.constructor.Interface;
        for (var propName in Interface) {
          this[propName] = null;
        }
        this.dispatchConfig = null;
        this.dispatchMarker = null;
        this.nativeEvent = null;
      }
    });
    SyntheticEvent.Interface = EventInterface;
    SyntheticEvent.augmentClass = function (Class, Interface) {
      var Super = this;
      var prototype = Object.create(Super.prototype);
      assign(prototype, Class.prototype);
      Class.prototype = prototype;
      Class.prototype.constructor = Class;
      Class.Interface = assign({}, Super.Interface, Interface);
      Class.augmentClass = Super.augmentClass;
      PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
    };
    PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);
    module.exports = SyntheticEvent;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/getEventTarget.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule getEventTarget
   * @typechecks static-only
   */

  'use strict';

  /**
   * Gets the target node from a native browser event by accounting for
   * inconsistencies in browser DOM APIs.
   *
   * @param {object} nativeEvent Native browser event.
   * @return {DOMEventTarget} Target node.
   */

  var global = this || self,
      GLOBAL = global;
  function getEventTarget(nativeEvent) {
    var target = nativeEvent.target || nativeEvent.srcElement || window;
    // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
    // @see http://www.quirksmode.org/js/events_properties.html
    return target.nodeType === 3 ? target.parentNode : target;
  }

  module.exports = getEventTarget;
});
System.registerDynamic('npm:react@0.14.9/lib/SyntheticUIEvent.js', ['npm:react@0.14.9/lib/SyntheticEvent.js', 'npm:react@0.14.9/lib/getEventTarget.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var SyntheticEvent = $__require('npm:react@0.14.9/lib/SyntheticEvent.js');
  var getEventTarget = $__require('npm:react@0.14.9/lib/getEventTarget.js');
  var UIEventInterface = {
    view: function (event) {
      if (event.view) {
        return event.view;
      }
      var target = getEventTarget(event);
      if (target != null && target.window === target) {
        return target;
      }
      var doc = target.ownerDocument;
      if (doc) {
        return doc.defaultView || doc.parentWindow;
      } else {
        return window;
      }
    },
    detail: function (event) {
      return event.detail || 0;
    }
  };
  function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);
  module.exports = SyntheticUIEvent;
});
System.registerDynamic('npm:react@0.14.9/lib/getEventModifierState.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule getEventModifierState
   * @typechecks static-only
   */

  'use strict';

  /**
   * Translation from modifier key to the associated property in the event.
   * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
   */

  var global = this || self,
      GLOBAL = global;
  var modifierKeyToProp = {
    'Alt': 'altKey',
    'Control': 'ctrlKey',
    'Meta': 'metaKey',
    'Shift': 'shiftKey'
  };

  // IE8 does not implement getModifierState so we simply map it to the only
  // modifier keys exposed by the event itself, does not support Lock-keys.
  // Currently, all major browsers except Chrome seems to support Lock-keys.
  function modifierStateGetter(keyArg) {
    var syntheticEvent = this;
    var nativeEvent = syntheticEvent.nativeEvent;
    if (nativeEvent.getModifierState) {
      return nativeEvent.getModifierState(keyArg);
    }
    var keyProp = modifierKeyToProp[keyArg];
    return keyProp ? !!nativeEvent[keyProp] : false;
  }

  function getEventModifierState(nativeEvent) {
    return modifierStateGetter;
  }

  module.exports = getEventModifierState;
});
System.registerDynamic('npm:react@0.14.9/lib/SyntheticMouseEvent.js', ['npm:react@0.14.9/lib/SyntheticUIEvent.js', 'npm:react@0.14.9/lib/ViewportMetrics.js', 'npm:react@0.14.9/lib/getEventModifierState.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var SyntheticUIEvent = $__require('npm:react@0.14.9/lib/SyntheticUIEvent.js');
  var ViewportMetrics = $__require('npm:react@0.14.9/lib/ViewportMetrics.js');
  var getEventModifierState = $__require('npm:react@0.14.9/lib/getEventModifierState.js');
  var MouseEventInterface = {
    screenX: null,
    screenY: null,
    clientX: null,
    clientY: null,
    ctrlKey: null,
    shiftKey: null,
    altKey: null,
    metaKey: null,
    getModifierState: getEventModifierState,
    button: function (event) {
      var button = event.button;
      if ('which' in event) {
        return button;
      }
      return button === 2 ? 2 : button === 4 ? 1 : 0;
    },
    buttons: null,
    relatedTarget: function (event) {
      return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
    },
    pageX: function (event) {
      return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
    },
    pageY: function (event) {
      return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
    }
  };
  function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);
  module.exports = SyntheticMouseEvent;
});
System.registerDynamic('npm:react@0.14.9/lib/SyntheticWheelEvent.js', ['npm:react@0.14.9/lib/SyntheticMouseEvent.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var SyntheticMouseEvent = $__require('npm:react@0.14.9/lib/SyntheticMouseEvent.js');
  var WheelEventInterface = {
    deltaX: function (event) {
      return 'deltaX' in event ? event.deltaX : 'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
    },
    deltaY: function (event) {
      return 'deltaY' in event ? event.deltaY : 'wheelDeltaY' in event ? -event.wheelDeltaY : 'wheelDelta' in event ? -event.wheelDelta : 0;
    },
    deltaZ: null,
    deltaMode: null
  };
  function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);
  module.exports = SyntheticWheelEvent;
});
System.registerDynamic('npm:react@0.14.9/lib/getEventCharCode.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule getEventCharCode
   * @typechecks static-only
   */

  'use strict';

  /**
   * `charCode` represents the actual "character code" and is safe to use with
   * `String.fromCharCode`. As such, only keys that correspond to printable
   * characters produce a valid `charCode`, the only exception to this is Enter.
   * The Tab-key is considered non-printable and does not have a `charCode`,
   * presumably because it does not produce a tab-character in browsers.
   *
   * @param {object} nativeEvent Native browser event.
   * @return {number} Normalized `charCode` property.
   */

  var global = this || self,
      GLOBAL = global;
  function getEventCharCode(nativeEvent) {
    var charCode;
    var keyCode = nativeEvent.keyCode;

    if ('charCode' in nativeEvent) {
      charCode = nativeEvent.charCode;

      // FF does not set `charCode` for the Enter-key, check against `keyCode`.
      if (charCode === 0 && keyCode === 13) {
        charCode = 13;
      }
    } else {
      // IE8 does not implement `charCode`, but `keyCode` has the correct value.
      charCode = keyCode;
    }

    // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
    // Must not discard the (non-)printable Enter-key.
    if (charCode >= 32 || charCode === 13) {
      return charCode;
    }

    return 0;
  }

  module.exports = getEventCharCode;
});
System.registerDynamic('npm:react@0.14.9/lib/SimpleEventPlugin.js', ['npm:react@0.14.9/lib/EventConstants.js', 'npm:fbjs@0.6.1/lib/EventListener.js', 'npm:react@0.14.9/lib/EventPropagators.js', 'npm:react@0.14.9/lib/ReactMount.js', 'npm:react@0.14.9/lib/SyntheticClipboardEvent.js', 'npm:react@0.14.9/lib/SyntheticEvent.js', 'npm:react@0.14.9/lib/SyntheticFocusEvent.js', 'npm:react@0.14.9/lib/SyntheticKeyboardEvent.js', 'npm:react@0.14.9/lib/SyntheticMouseEvent.js', 'npm:react@0.14.9/lib/SyntheticDragEvent.js', 'npm:react@0.14.9/lib/SyntheticTouchEvent.js', 'npm:react@0.14.9/lib/SyntheticUIEvent.js', 'npm:react@0.14.9/lib/SyntheticWheelEvent.js', 'npm:fbjs@0.6.1/lib/emptyFunction.js', 'npm:react@0.14.9/lib/getEventCharCode.js', 'npm:fbjs@0.6.1/lib/invariant.js', 'npm:fbjs@0.6.1/lib/keyOf.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var EventConstants = $__require('npm:react@0.14.9/lib/EventConstants.js');
    var EventListener = $__require('npm:fbjs@0.6.1/lib/EventListener.js');
    var EventPropagators = $__require('npm:react@0.14.9/lib/EventPropagators.js');
    var ReactMount = $__require('npm:react@0.14.9/lib/ReactMount.js');
    var SyntheticClipboardEvent = $__require('npm:react@0.14.9/lib/SyntheticClipboardEvent.js');
    var SyntheticEvent = $__require('npm:react@0.14.9/lib/SyntheticEvent.js');
    var SyntheticFocusEvent = $__require('npm:react@0.14.9/lib/SyntheticFocusEvent.js');
    var SyntheticKeyboardEvent = $__require('npm:react@0.14.9/lib/SyntheticKeyboardEvent.js');
    var SyntheticMouseEvent = $__require('npm:react@0.14.9/lib/SyntheticMouseEvent.js');
    var SyntheticDragEvent = $__require('npm:react@0.14.9/lib/SyntheticDragEvent.js');
    var SyntheticTouchEvent = $__require('npm:react@0.14.9/lib/SyntheticTouchEvent.js');
    var SyntheticUIEvent = $__require('npm:react@0.14.9/lib/SyntheticUIEvent.js');
    var SyntheticWheelEvent = $__require('npm:react@0.14.9/lib/SyntheticWheelEvent.js');
    var emptyFunction = $__require('npm:fbjs@0.6.1/lib/emptyFunction.js');
    var getEventCharCode = $__require('npm:react@0.14.9/lib/getEventCharCode.js');
    var invariant = $__require('npm:fbjs@0.6.1/lib/invariant.js');
    var keyOf = $__require('npm:fbjs@0.6.1/lib/keyOf.js');
    var topLevelTypes = EventConstants.topLevelTypes;
    var eventTypes = {
      abort: { phasedRegistrationNames: {
          bubbled: keyOf({ onAbort: true }),
          captured: keyOf({ onAbortCapture: true })
        } },
      blur: { phasedRegistrationNames: {
          bubbled: keyOf({ onBlur: true }),
          captured: keyOf({ onBlurCapture: true })
        } },
      canPlay: { phasedRegistrationNames: {
          bubbled: keyOf({ onCanPlay: true }),
          captured: keyOf({ onCanPlayCapture: true })
        } },
      canPlayThrough: { phasedRegistrationNames: {
          bubbled: keyOf({ onCanPlayThrough: true }),
          captured: keyOf({ onCanPlayThroughCapture: true })
        } },
      click: { phasedRegistrationNames: {
          bubbled: keyOf({ onClick: true }),
          captured: keyOf({ onClickCapture: true })
        } },
      contextMenu: { phasedRegistrationNames: {
          bubbled: keyOf({ onContextMenu: true }),
          captured: keyOf({ onContextMenuCapture: true })
        } },
      copy: { phasedRegistrationNames: {
          bubbled: keyOf({ onCopy: true }),
          captured: keyOf({ onCopyCapture: true })
        } },
      cut: { phasedRegistrationNames: {
          bubbled: keyOf({ onCut: true }),
          captured: keyOf({ onCutCapture: true })
        } },
      doubleClick: { phasedRegistrationNames: {
          bubbled: keyOf({ onDoubleClick: true }),
          captured: keyOf({ onDoubleClickCapture: true })
        } },
      drag: { phasedRegistrationNames: {
          bubbled: keyOf({ onDrag: true }),
          captured: keyOf({ onDragCapture: true })
        } },
      dragEnd: { phasedRegistrationNames: {
          bubbled: keyOf({ onDragEnd: true }),
          captured: keyOf({ onDragEndCapture: true })
        } },
      dragEnter: { phasedRegistrationNames: {
          bubbled: keyOf({ onDragEnter: true }),
          captured: keyOf({ onDragEnterCapture: true })
        } },
      dragExit: { phasedRegistrationNames: {
          bubbled: keyOf({ onDragExit: true }),
          captured: keyOf({ onDragExitCapture: true })
        } },
      dragLeave: { phasedRegistrationNames: {
          bubbled: keyOf({ onDragLeave: true }),
          captured: keyOf({ onDragLeaveCapture: true })
        } },
      dragOver: { phasedRegistrationNames: {
          bubbled: keyOf({ onDragOver: true }),
          captured: keyOf({ onDragOverCapture: true })
        } },
      dragStart: { phasedRegistrationNames: {
          bubbled: keyOf({ onDragStart: true }),
          captured: keyOf({ onDragStartCapture: true })
        } },
      drop: { phasedRegistrationNames: {
          bubbled: keyOf({ onDrop: true }),
          captured: keyOf({ onDropCapture: true })
        } },
      durationChange: { phasedRegistrationNames: {
          bubbled: keyOf({ onDurationChange: true }),
          captured: keyOf({ onDurationChangeCapture: true })
        } },
      emptied: { phasedRegistrationNames: {
          bubbled: keyOf({ onEmptied: true }),
          captured: keyOf({ onEmptiedCapture: true })
        } },
      encrypted: { phasedRegistrationNames: {
          bubbled: keyOf({ onEncrypted: true }),
          captured: keyOf({ onEncryptedCapture: true })
        } },
      ended: { phasedRegistrationNames: {
          bubbled: keyOf({ onEnded: true }),
          captured: keyOf({ onEndedCapture: true })
        } },
      error: { phasedRegistrationNames: {
          bubbled: keyOf({ onError: true }),
          captured: keyOf({ onErrorCapture: true })
        } },
      focus: { phasedRegistrationNames: {
          bubbled: keyOf({ onFocus: true }),
          captured: keyOf({ onFocusCapture: true })
        } },
      input: { phasedRegistrationNames: {
          bubbled: keyOf({ onInput: true }),
          captured: keyOf({ onInputCapture: true })
        } },
      keyDown: { phasedRegistrationNames: {
          bubbled: keyOf({ onKeyDown: true }),
          captured: keyOf({ onKeyDownCapture: true })
        } },
      keyPress: { phasedRegistrationNames: {
          bubbled: keyOf({ onKeyPress: true }),
          captured: keyOf({ onKeyPressCapture: true })
        } },
      keyUp: { phasedRegistrationNames: {
          bubbled: keyOf({ onKeyUp: true }),
          captured: keyOf({ onKeyUpCapture: true })
        } },
      load: { phasedRegistrationNames: {
          bubbled: keyOf({ onLoad: true }),
          captured: keyOf({ onLoadCapture: true })
        } },
      loadedData: { phasedRegistrationNames: {
          bubbled: keyOf({ onLoadedData: true }),
          captured: keyOf({ onLoadedDataCapture: true })
        } },
      loadedMetadata: { phasedRegistrationNames: {
          bubbled: keyOf({ onLoadedMetadata: true }),
          captured: keyOf({ onLoadedMetadataCapture: true })
        } },
      loadStart: { phasedRegistrationNames: {
          bubbled: keyOf({ onLoadStart: true }),
          captured: keyOf({ onLoadStartCapture: true })
        } },
      mouseDown: { phasedRegistrationNames: {
          bubbled: keyOf({ onMouseDown: true }),
          captured: keyOf({ onMouseDownCapture: true })
        } },
      mouseMove: { phasedRegistrationNames: {
          bubbled: keyOf({ onMouseMove: true }),
          captured: keyOf({ onMouseMoveCapture: true })
        } },
      mouseOut: { phasedRegistrationNames: {
          bubbled: keyOf({ onMouseOut: true }),
          captured: keyOf({ onMouseOutCapture: true })
        } },
      mouseOver: { phasedRegistrationNames: {
          bubbled: keyOf({ onMouseOver: true }),
          captured: keyOf({ onMouseOverCapture: true })
        } },
      mouseUp: { phasedRegistrationNames: {
          bubbled: keyOf({ onMouseUp: true }),
          captured: keyOf({ onMouseUpCapture: true })
        } },
      paste: { phasedRegistrationNames: {
          bubbled: keyOf({ onPaste: true }),
          captured: keyOf({ onPasteCapture: true })
        } },
      pause: { phasedRegistrationNames: {
          bubbled: keyOf({ onPause: true }),
          captured: keyOf({ onPauseCapture: true })
        } },
      play: { phasedRegistrationNames: {
          bubbled: keyOf({ onPlay: true }),
          captured: keyOf({ onPlayCapture: true })
        } },
      playing: { phasedRegistrationNames: {
          bubbled: keyOf({ onPlaying: true }),
          captured: keyOf({ onPlayingCapture: true })
        } },
      progress: { phasedRegistrationNames: {
          bubbled: keyOf({ onProgress: true }),
          captured: keyOf({ onProgressCapture: true })
        } },
      rateChange: { phasedRegistrationNames: {
          bubbled: keyOf({ onRateChange: true }),
          captured: keyOf({ onRateChangeCapture: true })
        } },
      reset: { phasedRegistrationNames: {
          bubbled: keyOf({ onReset: true }),
          captured: keyOf({ onResetCapture: true })
        } },
      scroll: { phasedRegistrationNames: {
          bubbled: keyOf({ onScroll: true }),
          captured: keyOf({ onScrollCapture: true })
        } },
      seeked: { phasedRegistrationNames: {
          bubbled: keyOf({ onSeeked: true }),
          captured: keyOf({ onSeekedCapture: true })
        } },
      seeking: { phasedRegistrationNames: {
          bubbled: keyOf({ onSeeking: true }),
          captured: keyOf({ onSeekingCapture: true })
        } },
      stalled: { phasedRegistrationNames: {
          bubbled: keyOf({ onStalled: true }),
          captured: keyOf({ onStalledCapture: true })
        } },
      submit: { phasedRegistrationNames: {
          bubbled: keyOf({ onSubmit: true }),
          captured: keyOf({ onSubmitCapture: true })
        } },
      suspend: { phasedRegistrationNames: {
          bubbled: keyOf({ onSuspend: true }),
          captured: keyOf({ onSuspendCapture: true })
        } },
      timeUpdate: { phasedRegistrationNames: {
          bubbled: keyOf({ onTimeUpdate: true }),
          captured: keyOf({ onTimeUpdateCapture: true })
        } },
      touchCancel: { phasedRegistrationNames: {
          bubbled: keyOf({ onTouchCancel: true }),
          captured: keyOf({ onTouchCancelCapture: true })
        } },
      touchEnd: { phasedRegistrationNames: {
          bubbled: keyOf({ onTouchEnd: true }),
          captured: keyOf({ onTouchEndCapture: true })
        } },
      touchMove: { phasedRegistrationNames: {
          bubbled: keyOf({ onTouchMove: true }),
          captured: keyOf({ onTouchMoveCapture: true })
        } },
      touchStart: { phasedRegistrationNames: {
          bubbled: keyOf({ onTouchStart: true }),
          captured: keyOf({ onTouchStartCapture: true })
        } },
      volumeChange: { phasedRegistrationNames: {
          bubbled: keyOf({ onVolumeChange: true }),
          captured: keyOf({ onVolumeChangeCapture: true })
        } },
      waiting: { phasedRegistrationNames: {
          bubbled: keyOf({ onWaiting: true }),
          captured: keyOf({ onWaitingCapture: true })
        } },
      wheel: { phasedRegistrationNames: {
          bubbled: keyOf({ onWheel: true }),
          captured: keyOf({ onWheelCapture: true })
        } }
    };
    var topLevelEventsToDispatchConfig = {
      topAbort: eventTypes.abort,
      topBlur: eventTypes.blur,
      topCanPlay: eventTypes.canPlay,
      topCanPlayThrough: eventTypes.canPlayThrough,
      topClick: eventTypes.click,
      topContextMenu: eventTypes.contextMenu,
      topCopy: eventTypes.copy,
      topCut: eventTypes.cut,
      topDoubleClick: eventTypes.doubleClick,
      topDrag: eventTypes.drag,
      topDragEnd: eventTypes.dragEnd,
      topDragEnter: eventTypes.dragEnter,
      topDragExit: eventTypes.dragExit,
      topDragLeave: eventTypes.dragLeave,
      topDragOver: eventTypes.dragOver,
      topDragStart: eventTypes.dragStart,
      topDrop: eventTypes.drop,
      topDurationChange: eventTypes.durationChange,
      topEmptied: eventTypes.emptied,
      topEncrypted: eventTypes.encrypted,
      topEnded: eventTypes.ended,
      topError: eventTypes.error,
      topFocus: eventTypes.focus,
      topInput: eventTypes.input,
      topKeyDown: eventTypes.keyDown,
      topKeyPress: eventTypes.keyPress,
      topKeyUp: eventTypes.keyUp,
      topLoad: eventTypes.load,
      topLoadedData: eventTypes.loadedData,
      topLoadedMetadata: eventTypes.loadedMetadata,
      topLoadStart: eventTypes.loadStart,
      topMouseDown: eventTypes.mouseDown,
      topMouseMove: eventTypes.mouseMove,
      topMouseOut: eventTypes.mouseOut,
      topMouseOver: eventTypes.mouseOver,
      topMouseUp: eventTypes.mouseUp,
      topPaste: eventTypes.paste,
      topPause: eventTypes.pause,
      topPlay: eventTypes.play,
      topPlaying: eventTypes.playing,
      topProgress: eventTypes.progress,
      topRateChange: eventTypes.rateChange,
      topReset: eventTypes.reset,
      topScroll: eventTypes.scroll,
      topSeeked: eventTypes.seeked,
      topSeeking: eventTypes.seeking,
      topStalled: eventTypes.stalled,
      topSubmit: eventTypes.submit,
      topSuspend: eventTypes.suspend,
      topTimeUpdate: eventTypes.timeUpdate,
      topTouchCancel: eventTypes.touchCancel,
      topTouchEnd: eventTypes.touchEnd,
      topTouchMove: eventTypes.touchMove,
      topTouchStart: eventTypes.touchStart,
      topVolumeChange: eventTypes.volumeChange,
      topWaiting: eventTypes.waiting,
      topWheel: eventTypes.wheel
    };
    for (var type in topLevelEventsToDispatchConfig) {
      topLevelEventsToDispatchConfig[type].dependencies = [type];
    }
    var ON_CLICK_KEY = keyOf({ onClick: null });
    var onClickListeners = {};
    var SimpleEventPlugin = {
      eventTypes: eventTypes,
      extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
        var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
        if (!dispatchConfig) {
          return null;
        }
        var EventConstructor;
        switch (topLevelType) {
          case topLevelTypes.topAbort:
          case topLevelTypes.topCanPlay:
          case topLevelTypes.topCanPlayThrough:
          case topLevelTypes.topDurationChange:
          case topLevelTypes.topEmptied:
          case topLevelTypes.topEncrypted:
          case topLevelTypes.topEnded:
          case topLevelTypes.topError:
          case topLevelTypes.topInput:
          case topLevelTypes.topLoad:
          case topLevelTypes.topLoadedData:
          case topLevelTypes.topLoadedMetadata:
          case topLevelTypes.topLoadStart:
          case topLevelTypes.topPause:
          case topLevelTypes.topPlay:
          case topLevelTypes.topPlaying:
          case topLevelTypes.topProgress:
          case topLevelTypes.topRateChange:
          case topLevelTypes.topReset:
          case topLevelTypes.topSeeked:
          case topLevelTypes.topSeeking:
          case topLevelTypes.topStalled:
          case topLevelTypes.topSubmit:
          case topLevelTypes.topSuspend:
          case topLevelTypes.topTimeUpdate:
          case topLevelTypes.topVolumeChange:
          case topLevelTypes.topWaiting:
            EventConstructor = SyntheticEvent;
            break;
          case topLevelTypes.topKeyPress:
            if (getEventCharCode(nativeEvent) === 0) {
              return null;
            }
          case topLevelTypes.topKeyDown:
          case topLevelTypes.topKeyUp:
            EventConstructor = SyntheticKeyboardEvent;
            break;
          case topLevelTypes.topBlur:
          case topLevelTypes.topFocus:
            EventConstructor = SyntheticFocusEvent;
            break;
          case topLevelTypes.topClick:
            if (nativeEvent.button === 2) {
              return null;
            }
          case topLevelTypes.topContextMenu:
          case topLevelTypes.topDoubleClick:
          case topLevelTypes.topMouseDown:
          case topLevelTypes.topMouseMove:
          case topLevelTypes.topMouseOut:
          case topLevelTypes.topMouseOver:
          case topLevelTypes.topMouseUp:
            EventConstructor = SyntheticMouseEvent;
            break;
          case topLevelTypes.topDrag:
          case topLevelTypes.topDragEnd:
          case topLevelTypes.topDragEnter:
          case topLevelTypes.topDragExit:
          case topLevelTypes.topDragLeave:
          case topLevelTypes.topDragOver:
          case topLevelTypes.topDragStart:
          case topLevelTypes.topDrop:
            EventConstructor = SyntheticDragEvent;
            break;
          case topLevelTypes.topTouchCancel:
          case topLevelTypes.topTouchEnd:
          case topLevelTypes.topTouchMove:
          case topLevelTypes.topTouchStart:
            EventConstructor = SyntheticTouchEvent;
            break;
          case topLevelTypes.topScroll:
            EventConstructor = SyntheticUIEvent;
            break;
          case topLevelTypes.topWheel:
            EventConstructor = SyntheticWheelEvent;
            break;
          case topLevelTypes.topCopy:
          case topLevelTypes.topCut:
          case topLevelTypes.topPaste:
            EventConstructor = SyntheticClipboardEvent;
            break;
        }
        !EventConstructor ? 'production' !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : invariant(false) : undefined;
        var event = EventConstructor.getPooled(dispatchConfig, topLevelTargetID, nativeEvent, nativeEventTarget);
        EventPropagators.accumulateTwoPhaseDispatches(event);
        return event;
      },
      didPutListener: function (id, registrationName, listener) {
        if (registrationName === ON_CLICK_KEY) {
          var node = ReactMount.getNode(id);
          if (!onClickListeners[id]) {
            onClickListeners[id] = EventListener.listen(node, 'click', emptyFunction);
          }
        }
      },
      willDeleteListener: function (id, registrationName) {
        if (registrationName === ON_CLICK_KEY) {
          onClickListeners[id].remove();
          delete onClickListeners[id];
        }
      }
    };
    module.exports = SimpleEventPlugin;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/SVGDOMPropertyConfig.js', ['npm:react@0.14.9/lib/DOMProperty.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var DOMProperty = $__require('npm:react@0.14.9/lib/DOMProperty.js');
  var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;
  var NS = {
    xlink: 'http://www.w3.org/1999/xlink',
    xml: 'http://www.w3.org/XML/1998/namespace'
  };
  var SVGDOMPropertyConfig = {
    Properties: {
      clipPath: MUST_USE_ATTRIBUTE,
      cx: MUST_USE_ATTRIBUTE,
      cy: MUST_USE_ATTRIBUTE,
      d: MUST_USE_ATTRIBUTE,
      dx: MUST_USE_ATTRIBUTE,
      dy: MUST_USE_ATTRIBUTE,
      fill: MUST_USE_ATTRIBUTE,
      fillOpacity: MUST_USE_ATTRIBUTE,
      fontFamily: MUST_USE_ATTRIBUTE,
      fontSize: MUST_USE_ATTRIBUTE,
      fx: MUST_USE_ATTRIBUTE,
      fy: MUST_USE_ATTRIBUTE,
      gradientTransform: MUST_USE_ATTRIBUTE,
      gradientUnits: MUST_USE_ATTRIBUTE,
      markerEnd: MUST_USE_ATTRIBUTE,
      markerMid: MUST_USE_ATTRIBUTE,
      markerStart: MUST_USE_ATTRIBUTE,
      offset: MUST_USE_ATTRIBUTE,
      opacity: MUST_USE_ATTRIBUTE,
      patternContentUnits: MUST_USE_ATTRIBUTE,
      patternUnits: MUST_USE_ATTRIBUTE,
      points: MUST_USE_ATTRIBUTE,
      preserveAspectRatio: MUST_USE_ATTRIBUTE,
      r: MUST_USE_ATTRIBUTE,
      rx: MUST_USE_ATTRIBUTE,
      ry: MUST_USE_ATTRIBUTE,
      spreadMethod: MUST_USE_ATTRIBUTE,
      stopColor: MUST_USE_ATTRIBUTE,
      stopOpacity: MUST_USE_ATTRIBUTE,
      stroke: MUST_USE_ATTRIBUTE,
      strokeDasharray: MUST_USE_ATTRIBUTE,
      strokeLinecap: MUST_USE_ATTRIBUTE,
      strokeOpacity: MUST_USE_ATTRIBUTE,
      strokeWidth: MUST_USE_ATTRIBUTE,
      textAnchor: MUST_USE_ATTRIBUTE,
      transform: MUST_USE_ATTRIBUTE,
      version: MUST_USE_ATTRIBUTE,
      viewBox: MUST_USE_ATTRIBUTE,
      x1: MUST_USE_ATTRIBUTE,
      x2: MUST_USE_ATTRIBUTE,
      x: MUST_USE_ATTRIBUTE,
      xlinkActuate: MUST_USE_ATTRIBUTE,
      xlinkArcrole: MUST_USE_ATTRIBUTE,
      xlinkHref: MUST_USE_ATTRIBUTE,
      xlinkRole: MUST_USE_ATTRIBUTE,
      xlinkShow: MUST_USE_ATTRIBUTE,
      xlinkTitle: MUST_USE_ATTRIBUTE,
      xlinkType: MUST_USE_ATTRIBUTE,
      xmlBase: MUST_USE_ATTRIBUTE,
      xmlLang: MUST_USE_ATTRIBUTE,
      xmlSpace: MUST_USE_ATTRIBUTE,
      y1: MUST_USE_ATTRIBUTE,
      y2: MUST_USE_ATTRIBUTE,
      y: MUST_USE_ATTRIBUTE
    },
    DOMAttributeNamespaces: {
      xlinkActuate: NS.xlink,
      xlinkArcrole: NS.xlink,
      xlinkHref: NS.xlink,
      xlinkRole: NS.xlink,
      xlinkShow: NS.xlink,
      xlinkTitle: NS.xlink,
      xlinkType: NS.xlink,
      xmlBase: NS.xml,
      xmlLang: NS.xml,
      xmlSpace: NS.xml
    },
    DOMAttributeNames: {
      clipPath: 'clip-path',
      fillOpacity: 'fill-opacity',
      fontFamily: 'font-family',
      fontSize: 'font-size',
      gradientTransform: 'gradientTransform',
      gradientUnits: 'gradientUnits',
      markerEnd: 'marker-end',
      markerMid: 'marker-mid',
      markerStart: 'marker-start',
      patternContentUnits: 'patternContentUnits',
      patternUnits: 'patternUnits',
      preserveAspectRatio: 'preserveAspectRatio',
      spreadMethod: 'spreadMethod',
      stopColor: 'stop-color',
      stopOpacity: 'stop-opacity',
      strokeDasharray: 'stroke-dasharray',
      strokeLinecap: 'stroke-linecap',
      strokeOpacity: 'stroke-opacity',
      strokeWidth: 'stroke-width',
      textAnchor: 'text-anchor',
      viewBox: 'viewBox',
      xlinkActuate: 'xlink:actuate',
      xlinkArcrole: 'xlink:arcrole',
      xlinkHref: 'xlink:href',
      xlinkRole: 'xlink:role',
      xlinkShow: 'xlink:show',
      xlinkTitle: 'xlink:title',
      xlinkType: 'xlink:type',
      xmlBase: 'xml:base',
      xmlLang: 'xml:lang',
      xmlSpace: 'xml:space'
    }
  };
  module.exports = SVGDOMPropertyConfig;
});
System.registerDynamic('npm:react@0.14.9/lib/ReactDefaultPerfAnalysis.js', ['npm:react@0.14.9/lib/Object.assign.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var assign = $__require('npm:react@0.14.9/lib/Object.assign.js');
  var DONT_CARE_THRESHOLD = 1.2;
  var DOM_OPERATION_TYPES = {
    '_mountImageIntoNode': 'set innerHTML',
    INSERT_MARKUP: 'set innerHTML',
    MOVE_EXISTING: 'move',
    REMOVE_NODE: 'remove',
    SET_MARKUP: 'set innerHTML',
    TEXT_CONTENT: 'set textContent',
    'setValueForProperty': 'update attribute',
    'setValueForAttribute': 'update attribute',
    'deleteValueForProperty': 'remove attribute',
    'setValueForStyles': 'update styles',
    'replaceNodeWithMarkup': 'replace',
    'updateTextContent': 'set textContent'
  };
  function getTotalTime(measurements) {
    var totalTime = 0;
    for (var i = 0; i < measurements.length; i++) {
      var measurement = measurements[i];
      totalTime += measurement.totalTime;
    }
    return totalTime;
  }
  function getDOMSummary(measurements) {
    var items = [];
    measurements.forEach(function (measurement) {
      Object.keys(measurement.writes).forEach(function (id) {
        measurement.writes[id].forEach(function (write) {
          items.push({
            id: id,
            type: DOM_OPERATION_TYPES[write.type] || write.type,
            args: write.args
          });
        });
      });
    });
    return items;
  }
  function getExclusiveSummary(measurements) {
    var candidates = {};
    var displayName;
    for (var i = 0; i < measurements.length; i++) {
      var measurement = measurements[i];
      var allIDs = assign({}, measurement.exclusive, measurement.inclusive);
      for (var id in allIDs) {
        displayName = measurement.displayNames[id].current;
        candidates[displayName] = candidates[displayName] || {
          componentName: displayName,
          inclusive: 0,
          exclusive: 0,
          render: 0,
          count: 0
        };
        if (measurement.render[id]) {
          candidates[displayName].render += measurement.render[id];
        }
        if (measurement.exclusive[id]) {
          candidates[displayName].exclusive += measurement.exclusive[id];
        }
        if (measurement.inclusive[id]) {
          candidates[displayName].inclusive += measurement.inclusive[id];
        }
        if (measurement.counts[id]) {
          candidates[displayName].count += measurement.counts[id];
        }
      }
    }
    var arr = [];
    for (displayName in candidates) {
      if (candidates[displayName].exclusive >= DONT_CARE_THRESHOLD) {
        arr.push(candidates[displayName]);
      }
    }
    arr.sort(function (a, b) {
      return b.exclusive - a.exclusive;
    });
    return arr;
  }
  function getInclusiveSummary(measurements, onlyClean) {
    var candidates = {};
    var inclusiveKey;
    for (var i = 0; i < measurements.length; i++) {
      var measurement = measurements[i];
      var allIDs = assign({}, measurement.exclusive, measurement.inclusive);
      var cleanComponents;
      if (onlyClean) {
        cleanComponents = getUnchangedComponents(measurement);
      }
      for (var id in allIDs) {
        if (onlyClean && !cleanComponents[id]) {
          continue;
        }
        var displayName = measurement.displayNames[id];
        inclusiveKey = displayName.owner + ' > ' + displayName.current;
        candidates[inclusiveKey] = candidates[inclusiveKey] || {
          componentName: inclusiveKey,
          time: 0,
          count: 0
        };
        if (measurement.inclusive[id]) {
          candidates[inclusiveKey].time += measurement.inclusive[id];
        }
        if (measurement.counts[id]) {
          candidates[inclusiveKey].count += measurement.counts[id];
        }
      }
    }
    var arr = [];
    for (inclusiveKey in candidates) {
      if (candidates[inclusiveKey].time >= DONT_CARE_THRESHOLD) {
        arr.push(candidates[inclusiveKey]);
      }
    }
    arr.sort(function (a, b) {
      return b.time - a.time;
    });
    return arr;
  }
  function getUnchangedComponents(measurement) {
    var cleanComponents = {};
    var dirtyLeafIDs = Object.keys(measurement.writes);
    var allIDs = assign({}, measurement.exclusive, measurement.inclusive);
    for (var id in allIDs) {
      var isDirty = false;
      for (var i = 0; i < dirtyLeafIDs.length; i++) {
        if (dirtyLeafIDs[i].indexOf(id) === 0) {
          isDirty = true;
          break;
        }
      }
      if (measurement.created[id]) {
        isDirty = true;
      }
      if (!isDirty && measurement.counts[id] > 0) {
        cleanComponents[id] = true;
      }
    }
    return cleanComponents;
  }
  var ReactDefaultPerfAnalysis = {
    getExclusiveSummary: getExclusiveSummary,
    getInclusiveSummary: getInclusiveSummary,
    getDOMSummary: getDOMSummary,
    getTotalTime: getTotalTime
  };
  module.exports = ReactDefaultPerfAnalysis;
});
System.registerDynamic('npm:react@0.14.9/lib/DOMProperty.js', ['npm:fbjs@0.6.1/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var invariant = $__require('npm:fbjs@0.6.1/lib/invariant.js');
    function checkMask(value, bitmask) {
      return (value & bitmask) === bitmask;
    }
    var DOMPropertyInjection = {
      MUST_USE_ATTRIBUTE: 0x1,
      MUST_USE_PROPERTY: 0x2,
      HAS_SIDE_EFFECTS: 0x4,
      HAS_BOOLEAN_VALUE: 0x8,
      HAS_NUMERIC_VALUE: 0x10,
      HAS_POSITIVE_NUMERIC_VALUE: 0x20 | 0x10,
      HAS_OVERLOADED_BOOLEAN_VALUE: 0x40,
      injectDOMPropertyConfig: function (domPropertyConfig) {
        var Injection = DOMPropertyInjection;
        var Properties = domPropertyConfig.Properties || {};
        var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
        var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
        var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
        var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};
        if (domPropertyConfig.isCustomAttribute) {
          DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
        }
        for (var propName in Properties) {
          !!DOMProperty.properties.hasOwnProperty(propName) ? 'production' !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property ' + '\'%s\' which has already been injected. You may be accidentally ' + 'injecting the same DOM property config twice, or you may be ' + 'injecting two configs that have conflicting property names.', propName) : invariant(false) : undefined;
          var lowerCased = propName.toLowerCase();
          var propConfig = Properties[propName];
          var propertyInfo = {
            attributeName: lowerCased,
            attributeNamespace: null,
            propertyName: propName,
            mutationMethod: null,
            mustUseAttribute: checkMask(propConfig, Injection.MUST_USE_ATTRIBUTE),
            mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
            hasSideEffects: checkMask(propConfig, Injection.HAS_SIDE_EFFECTS),
            hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
            hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
            hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
            hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
          };
          !(!propertyInfo.mustUseAttribute || !propertyInfo.mustUseProperty) ? 'production' !== 'production' ? invariant(false, 'DOMProperty: Cannot require using both attribute and property: %s', propName) : invariant(false) : undefined;
          !(propertyInfo.mustUseProperty || !propertyInfo.hasSideEffects) ? 'production' !== 'production' ? invariant(false, 'DOMProperty: Properties that have side effects must use property: %s', propName) : invariant(false) : undefined;
          !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? 'production' !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or ' + 'numeric value, but not a combination: %s', propName) : invariant(false) : undefined;
          if ('production' !== 'production') {
            DOMProperty.getPossibleStandardName[lowerCased] = propName;
          }
          if (DOMAttributeNames.hasOwnProperty(propName)) {
            var attributeName = DOMAttributeNames[propName];
            propertyInfo.attributeName = attributeName;
            if ('production' !== 'production') {
              DOMProperty.getPossibleStandardName[attributeName] = propName;
            }
          }
          if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
            propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
          }
          if (DOMPropertyNames.hasOwnProperty(propName)) {
            propertyInfo.propertyName = DOMPropertyNames[propName];
          }
          if (DOMMutationMethods.hasOwnProperty(propName)) {
            propertyInfo.mutationMethod = DOMMutationMethods[propName];
          }
          DOMProperty.properties[propName] = propertyInfo;
        }
      }
    };
    var defaultValueCache = {};
    var DOMProperty = {
      ID_ATTRIBUTE_NAME: 'data-reactid',
      properties: {},
      getPossibleStandardName: 'production' !== 'production' ? {} : null,
      _isCustomAttributeFunctions: [],
      isCustomAttribute: function (attributeName) {
        for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
          var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
          if (isCustomAttributeFn(attributeName)) {
            return true;
          }
        }
        return false;
      },
      getDefaultValueForProperty: function (nodeName, prop) {
        var nodeDefaults = defaultValueCache[nodeName];
        var testElement;
        if (!nodeDefaults) {
          defaultValueCache[nodeName] = nodeDefaults = {};
        }
        if (!(prop in nodeDefaults)) {
          testElement = document.createElement(nodeName);
          nodeDefaults[prop] = testElement[prop];
        }
        return nodeDefaults[prop];
      },
      injection: DOMPropertyInjection
    };
    module.exports = DOMProperty;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/EventPluginRegistry.js', ['npm:fbjs@0.6.1/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var invariant = $__require('npm:fbjs@0.6.1/lib/invariant.js');
    var EventPluginOrder = null;
    var namesToPlugins = {};
    function recomputePluginOrdering() {
      if (!EventPluginOrder) {
        return;
      }
      for (var pluginName in namesToPlugins) {
        var PluginModule = namesToPlugins[pluginName];
        var pluginIndex = EventPluginOrder.indexOf(pluginName);
        !(pluginIndex > -1) ? 'production' !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in ' + 'the plugin ordering, `%s`.', pluginName) : invariant(false) : undefined;
        if (EventPluginRegistry.plugins[pluginIndex]) {
          continue;
        }
        !PluginModule.extractEvents ? 'production' !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` ' + 'method, but `%s` does not.', pluginName) : invariant(false) : undefined;
        EventPluginRegistry.plugins[pluginIndex] = PluginModule;
        var publishedEvents = PluginModule.eventTypes;
        for (var eventName in publishedEvents) {
          !publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName) ? 'production' !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : invariant(false) : undefined;
        }
      }
    }
    function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
      !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? 'production' !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same ' + 'event name, `%s`.', eventName) : invariant(false) : undefined;
      EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;
      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
      if (phasedRegistrationNames) {
        for (var phaseName in phasedRegistrationNames) {
          if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
            var phasedRegistrationName = phasedRegistrationNames[phaseName];
            publishRegistrationName(phasedRegistrationName, PluginModule, eventName);
          }
        }
        return true;
      } else if (dispatchConfig.registrationName) {
        publishRegistrationName(dispatchConfig.registrationName, PluginModule, eventName);
        return true;
      }
      return false;
    }
    function publishRegistrationName(registrationName, PluginModule, eventName) {
      !!EventPluginRegistry.registrationNameModules[registrationName] ? 'production' !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same ' + 'registration name, `%s`.', registrationName) : invariant(false) : undefined;
      EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
      EventPluginRegistry.registrationNameDependencies[registrationName] = PluginModule.eventTypes[eventName].dependencies;
    }
    var EventPluginRegistry = {
      plugins: [],
      eventNameDispatchConfigs: {},
      registrationNameModules: {},
      registrationNameDependencies: {},
      injectEventPluginOrder: function (InjectedEventPluginOrder) {
        !!EventPluginOrder ? 'production' !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than ' + 'once. You are likely trying to load more than one copy of React.') : invariant(false) : undefined;
        EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
        recomputePluginOrdering();
      },
      injectEventPluginsByName: function (injectedNamesToPlugins) {
        var isOrderingDirty = false;
        for (var pluginName in injectedNamesToPlugins) {
          if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
            continue;
          }
          var PluginModule = injectedNamesToPlugins[pluginName];
          if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== PluginModule) {
            !!namesToPlugins[pluginName] ? 'production' !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins ' + 'using the same name, `%s`.', pluginName) : invariant(false) : undefined;
            namesToPlugins[pluginName] = PluginModule;
            isOrderingDirty = true;
          }
        }
        if (isOrderingDirty) {
          recomputePluginOrdering();
        }
      },
      getPluginModuleForEvent: function (event) {
        var dispatchConfig = event.dispatchConfig;
        if (dispatchConfig.registrationName) {
          return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
        }
        for (var phase in dispatchConfig.phasedRegistrationNames) {
          if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
            continue;
          }
          var PluginModule = EventPluginRegistry.registrationNameModules[dispatchConfig.phasedRegistrationNames[phase]];
          if (PluginModule) {
            return PluginModule;
          }
        }
        return null;
      },
      _resetEventPlugins: function () {
        EventPluginOrder = null;
        for (var pluginName in namesToPlugins) {
          if (namesToPlugins.hasOwnProperty(pluginName)) {
            delete namesToPlugins[pluginName];
          }
        }
        EventPluginRegistry.plugins.length = 0;
        var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
        for (var eventName in eventNameDispatchConfigs) {
          if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
            delete eventNameDispatchConfigs[eventName];
          }
        }
        var registrationNameModules = EventPluginRegistry.registrationNameModules;
        for (var registrationName in registrationNameModules) {
          if (registrationNameModules.hasOwnProperty(registrationName)) {
            delete registrationNameModules[registrationName];
          }
        }
      }
    };
    module.exports = EventPluginRegistry;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/EventConstants.js', ['npm:fbjs@0.6.1/lib/keyMirror.js'], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule EventConstants
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var keyMirror = $__require('npm:fbjs@0.6.1/lib/keyMirror.js');

  var PropagationPhases = keyMirror({ bubbled: null, captured: null });

  /**
   * Types of raw signals from the browser caught at the top level.
   */
  var topLevelTypes = keyMirror({
    topAbort: null,
    topBlur: null,
    topCanPlay: null,
    topCanPlayThrough: null,
    topChange: null,
    topClick: null,
    topCompositionEnd: null,
    topCompositionStart: null,
    topCompositionUpdate: null,
    topContextMenu: null,
    topCopy: null,
    topCut: null,
    topDoubleClick: null,
    topDrag: null,
    topDragEnd: null,
    topDragEnter: null,
    topDragExit: null,
    topDragLeave: null,
    topDragOver: null,
    topDragStart: null,
    topDrop: null,
    topDurationChange: null,
    topEmptied: null,
    topEncrypted: null,
    topEnded: null,
    topError: null,
    topFocus: null,
    topInput: null,
    topKeyDown: null,
    topKeyPress: null,
    topKeyUp: null,
    topLoad: null,
    topLoadedData: null,
    topLoadedMetadata: null,
    topLoadStart: null,
    topMouseDown: null,
    topMouseMove: null,
    topMouseOut: null,
    topMouseOver: null,
    topMouseUp: null,
    topPaste: null,
    topPause: null,
    topPlay: null,
    topPlaying: null,
    topProgress: null,
    topRateChange: null,
    topReset: null,
    topScroll: null,
    topSeeked: null,
    topSeeking: null,
    topSelectionChange: null,
    topStalled: null,
    topSubmit: null,
    topSuspend: null,
    topTextInput: null,
    topTimeUpdate: null,
    topTouchCancel: null,
    topTouchEnd: null,
    topTouchMove: null,
    topTouchStart: null,
    topVolumeChange: null,
    topWaiting: null,
    topWheel: null
  });

  var EventConstants = {
    topLevelTypes: topLevelTypes,
    PropagationPhases: PropagationPhases
  };

  module.exports = EventConstants;
});
System.registerDynamic('npm:react@0.14.9/lib/EventPluginUtils.js', ['npm:react@0.14.9/lib/EventConstants.js', 'npm:react@0.14.9/lib/ReactErrorUtils.js', 'npm:fbjs@0.6.1/lib/invariant.js', 'npm:fbjs@0.6.1/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var EventConstants = $__require('npm:react@0.14.9/lib/EventConstants.js');
    var ReactErrorUtils = $__require('npm:react@0.14.9/lib/ReactErrorUtils.js');
    var invariant = $__require('npm:fbjs@0.6.1/lib/invariant.js');
    var warning = $__require('npm:fbjs@0.6.1/lib/warning.js');
    var injection = {
      Mount: null,
      injectMount: function (InjectedMount) {
        injection.Mount = InjectedMount;
        if ('production' !== 'production') {
          'production' !== 'production' ? warning(InjectedMount && InjectedMount.getNode && InjectedMount.getID, 'EventPluginUtils.injection.injectMount(...): Injected Mount ' + 'module is missing getNode or getID.') : undefined;
        }
      }
    };
    var topLevelTypes = EventConstants.topLevelTypes;
    function isEndish(topLevelType) {
      return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;
    }
    function isMoveish(topLevelType) {
      return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;
    }
    function isStartish(topLevelType) {
      return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;
    }
    var validateEventDispatches;
    if ('production' !== 'production') {
      validateEventDispatches = function (event) {
        var dispatchListeners = event._dispatchListeners;
        var dispatchIDs = event._dispatchIDs;
        var listenersIsArr = Array.isArray(dispatchListeners);
        var idsIsArr = Array.isArray(dispatchIDs);
        var IDsLen = idsIsArr ? dispatchIDs.length : dispatchIDs ? 1 : 0;
        var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;
        'production' !== 'production' ? warning(idsIsArr === listenersIsArr && IDsLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : undefined;
      };
    }
    function executeDispatch(event, simulated, listener, domID) {
      var type = event.type || 'unknown-event';
      event.currentTarget = injection.Mount.getNode(domID);
      if (simulated) {
        ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event, domID);
      } else {
        ReactErrorUtils.invokeGuardedCallback(type, listener, event, domID);
      }
      event.currentTarget = null;
    }
    function executeDispatchesInOrder(event, simulated) {
      var dispatchListeners = event._dispatchListeners;
      var dispatchIDs = event._dispatchIDs;
      if ('production' !== 'production') {
        validateEventDispatches(event);
      }
      if (Array.isArray(dispatchListeners)) {
        for (var i = 0; i < dispatchListeners.length; i++) {
          if (event.isPropagationStopped()) {
            break;
          }
          executeDispatch(event, simulated, dispatchListeners[i], dispatchIDs[i]);
        }
      } else if (dispatchListeners) {
        executeDispatch(event, simulated, dispatchListeners, dispatchIDs);
      }
      event._dispatchListeners = null;
      event._dispatchIDs = null;
    }
    function executeDispatchesInOrderStopAtTrueImpl(event) {
      var dispatchListeners = event._dispatchListeners;
      var dispatchIDs = event._dispatchIDs;
      if ('production' !== 'production') {
        validateEventDispatches(event);
      }
      if (Array.isArray(dispatchListeners)) {
        for (var i = 0; i < dispatchListeners.length; i++) {
          if (event.isPropagationStopped()) {
            break;
          }
          if (dispatchListeners[i](event, dispatchIDs[i])) {
            return dispatchIDs[i];
          }
        }
      } else if (dispatchListeners) {
        if (dispatchListeners(event, dispatchIDs)) {
          return dispatchIDs;
        }
      }
      return null;
    }
    function executeDispatchesInOrderStopAtTrue(event) {
      var ret = executeDispatchesInOrderStopAtTrueImpl(event);
      event._dispatchIDs = null;
      event._dispatchListeners = null;
      return ret;
    }
    function executeDirectDispatch(event) {
      if ('production' !== 'production') {
        validateEventDispatches(event);
      }
      var dispatchListener = event._dispatchListeners;
      var dispatchID = event._dispatchIDs;
      !!Array.isArray(dispatchListener) ? 'production' !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : invariant(false) : undefined;
      var res = dispatchListener ? dispatchListener(event, dispatchID) : null;
      event._dispatchListeners = null;
      event._dispatchIDs = null;
      return res;
    }
    function hasDispatches(event) {
      return !!event._dispatchListeners;
    }
    var EventPluginUtils = {
      isEndish: isEndish,
      isMoveish: isMoveish,
      isStartish: isStartish,
      executeDirectDispatch: executeDirectDispatch,
      executeDispatchesInOrder: executeDispatchesInOrder,
      executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
      hasDispatches: hasDispatches,
      getNode: function (id) {
        return injection.Mount.getNode(id);
      },
      getID: function (node) {
        return injection.Mount.getID(node);
      },
      injection: injection
    };
    module.exports = EventPluginUtils;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/ReactErrorUtils.js', ['github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var caughtError = null;
    function invokeGuardedCallback(name, func, a, b) {
      try {
        return func(a, b);
      } catch (x) {
        if (caughtError === null) {
          caughtError = x;
        }
        return undefined;
      }
    }
    var ReactErrorUtils = {
      invokeGuardedCallback: invokeGuardedCallback,
      invokeGuardedCallbackWithCatch: invokeGuardedCallback,
      rethrowCaughtError: function () {
        if (caughtError) {
          var error = caughtError;
          caughtError = null;
          throw error;
        }
      }
    };
    if ('production' !== 'production') {
      if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
        var fakeNode = document.createElement('react');
        ReactErrorUtils.invokeGuardedCallback = function (name, func, a, b) {
          var boundFunc = func.bind(null, a, b);
          var evtType = 'react-' + name;
          fakeNode.addEventListener(evtType, boundFunc, false);
          var evt = document.createEvent('Event');
          evt.initEvent(evtType, false, false);
          fakeNode.dispatchEvent(evt);
          fakeNode.removeEventListener(evtType, boundFunc, false);
        };
      }
    }
    module.exports = ReactErrorUtils;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/accumulateInto.js', ['npm:fbjs@0.6.1/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var invariant = $__require('npm:fbjs@0.6.1/lib/invariant.js');
    function accumulateInto(current, next) {
      !(next != null) ? 'production' !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : invariant(false) : undefined;
      if (current == null) {
        return next;
      }
      var currentIsArray = Array.isArray(current);
      var nextIsArray = Array.isArray(next);
      if (currentIsArray && nextIsArray) {
        current.push.apply(current, next);
        return current;
      }
      if (currentIsArray) {
        current.push(next);
        return current;
      }
      if (nextIsArray) {
        return [current].concat(next);
      }
      return [current, next];
    }
    module.exports = accumulateInto;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/forEachAccumulated.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule forEachAccumulated
   */

  'use strict';

  /**
   * @param {array} arr an "accumulation" of items which is either an Array or
   * a single item. Useful when paired with the `accumulate` module. This is a
   * simple utility that allows us to reason about a collection of items, but
   * handling the case when there is exactly one item (and we do not need to
   * allocate an array).
   */

  var global = this || self,
      GLOBAL = global;
  var forEachAccumulated = function (arr, cb, scope) {
    if (Array.isArray(arr)) {
      arr.forEach(cb, scope);
    } else if (arr) {
      cb.call(scope, arr);
    }
  };

  module.exports = forEachAccumulated;
});
System.registerDynamic('npm:react@0.14.9/lib/EventPluginHub.js', ['npm:react@0.14.9/lib/EventPluginRegistry.js', 'npm:react@0.14.9/lib/EventPluginUtils.js', 'npm:react@0.14.9/lib/ReactErrorUtils.js', 'npm:react@0.14.9/lib/accumulateInto.js', 'npm:react@0.14.9/lib/forEachAccumulated.js', 'npm:fbjs@0.6.1/lib/invariant.js', 'npm:fbjs@0.6.1/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var EventPluginRegistry = $__require('npm:react@0.14.9/lib/EventPluginRegistry.js');
    var EventPluginUtils = $__require('npm:react@0.14.9/lib/EventPluginUtils.js');
    var ReactErrorUtils = $__require('npm:react@0.14.9/lib/ReactErrorUtils.js');
    var accumulateInto = $__require('npm:react@0.14.9/lib/accumulateInto.js');
    var forEachAccumulated = $__require('npm:react@0.14.9/lib/forEachAccumulated.js');
    var invariant = $__require('npm:fbjs@0.6.1/lib/invariant.js');
    var warning = $__require('npm:fbjs@0.6.1/lib/warning.js');
    var listenerBank = {};
    var eventQueue = null;
    var executeDispatchesAndRelease = function (event, simulated) {
      if (event) {
        EventPluginUtils.executeDispatchesInOrder(event, simulated);
        if (!event.isPersistent()) {
          event.constructor.release(event);
        }
      }
    };
    var executeDispatchesAndReleaseSimulated = function (e) {
      return executeDispatchesAndRelease(e, true);
    };
    var executeDispatchesAndReleaseTopLevel = function (e) {
      return executeDispatchesAndRelease(e, false);
    };
    var InstanceHandle = null;
    function validateInstanceHandle() {
      var valid = InstanceHandle && InstanceHandle.traverseTwoPhase && InstanceHandle.traverseEnterLeave;
      'production' !== 'production' ? warning(valid, 'InstanceHandle not injected before use!') : undefined;
    }
    var EventPluginHub = {
      injection: {
        injectMount: EventPluginUtils.injection.injectMount,
        injectInstanceHandle: function (InjectedInstanceHandle) {
          InstanceHandle = InjectedInstanceHandle;
          if ('production' !== 'production') {
            validateInstanceHandle();
          }
        },
        getInstanceHandle: function () {
          if ('production' !== 'production') {
            validateInstanceHandle();
          }
          return InstanceHandle;
        },
        injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,
        injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName
      },
      eventNameDispatchConfigs: EventPluginRegistry.eventNameDispatchConfigs,
      registrationNameModules: EventPluginRegistry.registrationNameModules,
      putListener: function (id, registrationName, listener) {
        !(typeof listener === 'function') ? 'production' !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : invariant(false) : undefined;
        var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
        bankForRegistrationName[id] = listener;
        var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
        if (PluginModule && PluginModule.didPutListener) {
          PluginModule.didPutListener(id, registrationName, listener);
        }
      },
      getListener: function (id, registrationName) {
        var bankForRegistrationName = listenerBank[registrationName];
        return bankForRegistrationName && bankForRegistrationName[id];
      },
      deleteListener: function (id, registrationName) {
        var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
        if (PluginModule && PluginModule.willDeleteListener) {
          PluginModule.willDeleteListener(id, registrationName);
        }
        var bankForRegistrationName = listenerBank[registrationName];
        if (bankForRegistrationName) {
          delete bankForRegistrationName[id];
        }
      },
      deleteAllListeners: function (id) {
        for (var registrationName in listenerBank) {
          if (!listenerBank[registrationName][id]) {
            continue;
          }
          var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
          if (PluginModule && PluginModule.willDeleteListener) {
            PluginModule.willDeleteListener(id, registrationName);
          }
          delete listenerBank[registrationName][id];
        }
      },
      extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
        var events;
        var plugins = EventPluginRegistry.plugins;
        for (var i = 0; i < plugins.length; i++) {
          var possiblePlugin = plugins[i];
          if (possiblePlugin) {
            var extractedEvents = possiblePlugin.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget);
            if (extractedEvents) {
              events = accumulateInto(events, extractedEvents);
            }
          }
        }
        return events;
      },
      enqueueEvents: function (events) {
        if (events) {
          eventQueue = accumulateInto(eventQueue, events);
        }
      },
      processEventQueue: function (simulated) {
        var processingEventQueue = eventQueue;
        eventQueue = null;
        if (simulated) {
          forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
        } else {
          forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
        }
        !!eventQueue ? 'production' !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing ' + 'an event queue. Support for this has not yet been implemented.') : invariant(false) : undefined;
        ReactErrorUtils.rethrowCaughtError();
      },
      __purge: function () {
        listenerBank = {};
      },
      __getListenerBank: function () {
        return listenerBank;
      }
    };
    module.exports = EventPluginHub;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/ReactEventEmitterMixin.js', ['npm:react@0.14.9/lib/EventPluginHub.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var EventPluginHub = $__require('npm:react@0.14.9/lib/EventPluginHub.js');
  function runEventQueueInBatch(events) {
    EventPluginHub.enqueueEvents(events);
    EventPluginHub.processEventQueue(false);
  }
  var ReactEventEmitterMixin = { handleTopLevel: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
      var events = EventPluginHub.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget);
      runEventQueueInBatch(events);
    } };
  module.exports = ReactEventEmitterMixin;
});
System.registerDynamic('npm:react@0.14.9/lib/ViewportMetrics.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule ViewportMetrics
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ViewportMetrics = {

    currentScrollLeft: 0,

    currentScrollTop: 0,

    refreshScrollValues: function (scrollPosition) {
      ViewportMetrics.currentScrollLeft = scrollPosition.x;
      ViewportMetrics.currentScrollTop = scrollPosition.y;
    }

  };

  module.exports = ViewportMetrics;
});
System.registerDynamic('npm:react@0.14.9/lib/isEventSupported.js', ['npm:fbjs@0.6.1/lib/ExecutionEnvironment.js'], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule isEventSupported
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ExecutionEnvironment = $__require('npm:fbjs@0.6.1/lib/ExecutionEnvironment.js');

  var useHasFeature;
  if (ExecutionEnvironment.canUseDOM) {
    useHasFeature = document.implementation && document.implementation.hasFeature &&
    // always returns true in newer browsers as per the standard.
    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
    document.implementation.hasFeature('', '') !== true;
  }

  /**
   * Checks if an event is supported in the current execution environment.
   *
   * NOTE: This will not work correctly for non-generic events such as `change`,
   * `reset`, `load`, `error`, and `select`.
   *
   * Borrows from Modernizr.
   *
   * @param {string} eventNameSuffix Event name, e.g. "click".
   * @param {?boolean} capture Check if the capture phase is supported.
   * @return {boolean} True if the event is supported.
   * @internal
   * @license Modernizr 3.0.0pre (Custom Build) | MIT
   */
  function isEventSupported(eventNameSuffix, capture) {
    if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
      return false;
    }

    var eventName = 'on' + eventNameSuffix;
    var isSupported = eventName in document;

    if (!isSupported) {
      var element = document.createElement('div');
      element.setAttribute(eventName, 'return;');
      isSupported = typeof element[eventName] === 'function';
    }

    if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
      // This is the only way to test support for the `wheel` event in IE9+.
      isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
    }

    return isSupported;
  }

  module.exports = isEventSupported;
});
System.registerDynamic('npm:react@0.14.9/lib/ReactBrowserEventEmitter.js', ['npm:react@0.14.9/lib/EventConstants.js', 'npm:react@0.14.9/lib/EventPluginHub.js', 'npm:react@0.14.9/lib/EventPluginRegistry.js', 'npm:react@0.14.9/lib/ReactEventEmitterMixin.js', 'npm:react@0.14.9/lib/ReactPerf.js', 'npm:react@0.14.9/lib/ViewportMetrics.js', 'npm:react@0.14.9/lib/Object.assign.js', 'npm:react@0.14.9/lib/isEventSupported.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var EventConstants = $__require('npm:react@0.14.9/lib/EventConstants.js');
    var EventPluginHub = $__require('npm:react@0.14.9/lib/EventPluginHub.js');
    var EventPluginRegistry = $__require('npm:react@0.14.9/lib/EventPluginRegistry.js');
    var ReactEventEmitterMixin = $__require('npm:react@0.14.9/lib/ReactEventEmitterMixin.js');
    var ReactPerf = $__require('npm:react@0.14.9/lib/ReactPerf.js');
    var ViewportMetrics = $__require('npm:react@0.14.9/lib/ViewportMetrics.js');
    var assign = $__require('npm:react@0.14.9/lib/Object.assign.js');
    var isEventSupported = $__require('npm:react@0.14.9/lib/isEventSupported.js');
    var alreadyListeningTo = {};
    var isMonitoringScrollValue = false;
    var reactTopListenersCounter = 0;
    var topEventMapping = {
      topAbort: 'abort',
      topBlur: 'blur',
      topCanPlay: 'canplay',
      topCanPlayThrough: 'canplaythrough',
      topChange: 'change',
      topClick: 'click',
      topCompositionEnd: 'compositionend',
      topCompositionStart: 'compositionstart',
      topCompositionUpdate: 'compositionupdate',
      topContextMenu: 'contextmenu',
      topCopy: 'copy',
      topCut: 'cut',
      topDoubleClick: 'dblclick',
      topDrag: 'drag',
      topDragEnd: 'dragend',
      topDragEnter: 'dragenter',
      topDragExit: 'dragexit',
      topDragLeave: 'dragleave',
      topDragOver: 'dragover',
      topDragStart: 'dragstart',
      topDrop: 'drop',
      topDurationChange: 'durationchange',
      topEmptied: 'emptied',
      topEncrypted: 'encrypted',
      topEnded: 'ended',
      topError: 'error',
      topFocus: 'focus',
      topInput: 'input',
      topKeyDown: 'keydown',
      topKeyPress: 'keypress',
      topKeyUp: 'keyup',
      topLoadedData: 'loadeddata',
      topLoadedMetadata: 'loadedmetadata',
      topLoadStart: 'loadstart',
      topMouseDown: 'mousedown',
      topMouseMove: 'mousemove',
      topMouseOut: 'mouseout',
      topMouseOver: 'mouseover',
      topMouseUp: 'mouseup',
      topPaste: 'paste',
      topPause: 'pause',
      topPlay: 'play',
      topPlaying: 'playing',
      topProgress: 'progress',
      topRateChange: 'ratechange',
      topScroll: 'scroll',
      topSeeked: 'seeked',
      topSeeking: 'seeking',
      topSelectionChange: 'selectionchange',
      topStalled: 'stalled',
      topSuspend: 'suspend',
      topTextInput: 'textInput',
      topTimeUpdate: 'timeupdate',
      topTouchCancel: 'touchcancel',
      topTouchEnd: 'touchend',
      topTouchMove: 'touchmove',
      topTouchStart: 'touchstart',
      topVolumeChange: 'volumechange',
      topWaiting: 'waiting',
      topWheel: 'wheel'
    };
    var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);
    function getListeningForDocument(mountAt) {
      if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
        mountAt[topListenersIDKey] = reactTopListenersCounter++;
        alreadyListeningTo[mountAt[topListenersIDKey]] = {};
      }
      return alreadyListeningTo[mountAt[topListenersIDKey]];
    }
    var ReactBrowserEventEmitter = assign({}, ReactEventEmitterMixin, {
      ReactEventListener: null,
      injection: { injectReactEventListener: function (ReactEventListener) {
          ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
          ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
        } },
      setEnabled: function (enabled) {
        if (ReactBrowserEventEmitter.ReactEventListener) {
          ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
        }
      },
      isEnabled: function () {
        return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
      },
      listenTo: function (registrationName, contentDocumentHandle) {
        var mountAt = contentDocumentHandle;
        var isListening = getListeningForDocument(mountAt);
        var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];
        var topLevelTypes = EventConstants.topLevelTypes;
        for (var i = 0; i < dependencies.length; i++) {
          var dependency = dependencies[i];
          if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
            if (dependency === topLevelTypes.topWheel) {
              if (isEventSupported('wheel')) {
                ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);
              } else if (isEventSupported('mousewheel')) {
                ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);
              } else {
                ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);
              }
            } else if (dependency === topLevelTypes.topScroll) {
              if (isEventSupported('scroll', true)) {
                ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);
              } else {
                ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
              }
            } else if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {
              if (isEventSupported('focus', true)) {
                ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);
                ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);
              } else if (isEventSupported('focusin')) {
                ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);
                ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);
              }
              isListening[topLevelTypes.topBlur] = true;
              isListening[topLevelTypes.topFocus] = true;
            } else if (topEventMapping.hasOwnProperty(dependency)) {
              ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
            }
            isListening[dependency] = true;
          }
        }
      },
      trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
        return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
      },
      trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
        return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
      },
      ensureScrollValueMonitoring: function () {
        if (!isMonitoringScrollValue) {
          var refresh = ViewportMetrics.refreshScrollValues;
          ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
          isMonitoringScrollValue = true;
        }
      },
      eventNameDispatchConfigs: EventPluginHub.eventNameDispatchConfigs,
      registrationNameModules: EventPluginHub.registrationNameModules,
      putListener: EventPluginHub.putListener,
      getListener: EventPluginHub.getListener,
      deleteListener: EventPluginHub.deleteListener,
      deleteAllListeners: EventPluginHub.deleteAllListeners
    });
    ReactPerf.measureMethods(ReactBrowserEventEmitter, 'ReactBrowserEventEmitter', {
      putListener: 'putListener',
      deleteListener: 'deleteListener'
    });
    module.exports = ReactBrowserEventEmitter;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/ReactDOMFeatureFlags.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule ReactDOMFeatureFlags
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ReactDOMFeatureFlags = {
    useCreateElement: false
  };

  module.exports = ReactDOMFeatureFlags;
});
System.registerDynamic('npm:fbjs@0.6.1/lib/isNode.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule isNode
   * @typechecks
   */

  /**
   * @param {*} object The object to check.
   * @return {boolean} Whether or not the object is a DOM node.
   */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  function isNode(object) {
    return !!(object && (typeof Node === 'function' ? object instanceof Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
  }

  module.exports = isNode;
});
System.registerDynamic('npm:fbjs@0.6.1/lib/isTextNode.js', ['npm:fbjs@0.6.1/lib/isNode.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var isNode = $__require('npm:fbjs@0.6.1/lib/isNode.js');
  function isTextNode(object) {
    return isNode(object) && object.nodeType == 3;
  }
  module.exports = isTextNode;
});
System.registerDynamic('npm:fbjs@0.6.1/lib/containsNode.js', ['npm:fbjs@0.6.1/lib/isTextNode.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var isTextNode = $__require('npm:fbjs@0.6.1/lib/isTextNode.js');
  function containsNode(_x, _x2) {
    var _again = true;
    _function: while (_again) {
      var outerNode = _x,
          innerNode = _x2;
      _again = false;
      if (!outerNode || !innerNode) {
        return false;
      } else if (outerNode === innerNode) {
        return true;
      } else if (isTextNode(outerNode)) {
        return false;
      } else if (isTextNode(innerNode)) {
        _x = outerNode;
        _x2 = innerNode.parentNode;
        _again = true;
        continue _function;
      } else if (outerNode.contains) {
        return outerNode.contains(innerNode);
      } else if (outerNode.compareDocumentPosition) {
        return !!(outerNode.compareDocumentPosition(innerNode) & 16);
      } else {
        return false;
      }
    }
  }
  module.exports = containsNode;
});
System.registerDynamic('npm:react@0.14.9/lib/setInnerHTML.js', ['npm:fbjs@0.6.1/lib/ExecutionEnvironment.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ExecutionEnvironment = $__require('npm:fbjs@0.6.1/lib/ExecutionEnvironment.js');
    var WHITESPACE_TEST = /^[ \r\n\t\f]/;
    var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;
    var setInnerHTML = function (node, html) {
      node.innerHTML = html;
    };
    if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
      setInnerHTML = function (node, html) {
        MSApp.execUnsafeLocalFunction(function () {
          node.innerHTML = html;
        });
      };
    }
    if (ExecutionEnvironment.canUseDOM) {
      var testElement = document.createElement('div');
      testElement.innerHTML = ' ';
      if (testElement.innerHTML === '') {
        setInnerHTML = function (node, html) {
          if (node.parentNode) {
            node.parentNode.replaceChild(node, node);
          }
          if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
            node.innerHTML = String.fromCharCode(0xFEFF) + html;
            var textNode = node.firstChild;
            if (textNode.data.length === 1) {
              node.removeChild(textNode);
            } else {
              textNode.deleteData(0, 1);
            }
          } else {
            node.innerHTML = html;
          }
        };
      }
    }
    module.exports = setInnerHTML;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/validateDOMNesting.js', ['npm:react@0.14.9/lib/Object.assign.js', 'npm:fbjs@0.6.1/lib/emptyFunction.js', 'npm:fbjs@0.6.1/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var assign = $__require('npm:react@0.14.9/lib/Object.assign.js');
    var emptyFunction = $__require('npm:fbjs@0.6.1/lib/emptyFunction.js');
    var warning = $__require('npm:fbjs@0.6.1/lib/warning.js');
    var validateDOMNesting = emptyFunction;
    if ('production' !== 'production') {
      var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];
      var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template', 'foreignObject', 'desc', 'title'];
      var buttonScopeTags = inScopeTags.concat(['button']);
      var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];
      var emptyAncestorInfo = {
        parentTag: null,
        formTag: null,
        aTagInScope: null,
        buttonTagInScope: null,
        nobrTagInScope: null,
        pTagInButtonScope: null,
        listItemTagAutoclosing: null,
        dlItemTagAutoclosing: null
      };
      var updatedAncestorInfo = function (oldInfo, tag, instance) {
        var ancestorInfo = assign({}, oldInfo || emptyAncestorInfo);
        var info = {
          tag: tag,
          instance: instance
        };
        if (inScopeTags.indexOf(tag) !== -1) {
          ancestorInfo.aTagInScope = null;
          ancestorInfo.buttonTagInScope = null;
          ancestorInfo.nobrTagInScope = null;
        }
        if (buttonScopeTags.indexOf(tag) !== -1) {
          ancestorInfo.pTagInButtonScope = null;
        }
        if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
          ancestorInfo.listItemTagAutoclosing = null;
          ancestorInfo.dlItemTagAutoclosing = null;
        }
        ancestorInfo.parentTag = info;
        if (tag === 'form') {
          ancestorInfo.formTag = info;
        }
        if (tag === 'a') {
          ancestorInfo.aTagInScope = info;
        }
        if (tag === 'button') {
          ancestorInfo.buttonTagInScope = info;
        }
        if (tag === 'nobr') {
          ancestorInfo.nobrTagInScope = info;
        }
        if (tag === 'p') {
          ancestorInfo.pTagInButtonScope = info;
        }
        if (tag === 'li') {
          ancestorInfo.listItemTagAutoclosing = info;
        }
        if (tag === 'dd' || tag === 'dt') {
          ancestorInfo.dlItemTagAutoclosing = info;
        }
        return ancestorInfo;
      };
      var isTagValidWithParent = function (tag, parentTag) {
        switch (parentTag) {
          case 'select':
            return tag === 'option' || tag === 'optgroup' || tag === '#text';
          case 'optgroup':
            return tag === 'option' || tag === '#text';
          case 'option':
            return tag === '#text';
          case 'tr':
            return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
          case 'tbody':
          case 'thead':
          case 'tfoot':
            return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
          case 'colgroup':
            return tag === 'col' || tag === 'template';
          case 'table':
            return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
          case 'head':
            return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
          case 'html':
            return tag === 'head' || tag === 'body';
        }
        switch (tag) {
          case 'h1':
          case 'h2':
          case 'h3':
          case 'h4':
          case 'h5':
          case 'h6':
            return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';
          case 'rp':
          case 'rt':
            return impliedEndTags.indexOf(parentTag) === -1;
          case 'caption':
          case 'col':
          case 'colgroup':
          case 'frame':
          case 'head':
          case 'tbody':
          case 'td':
          case 'tfoot':
          case 'th':
          case 'thead':
          case 'tr':
            return parentTag == null;
        }
        return true;
      };
      var findInvalidAncestorForTag = function (tag, ancestorInfo) {
        switch (tag) {
          case 'address':
          case 'article':
          case 'aside':
          case 'blockquote':
          case 'center':
          case 'details':
          case 'dialog':
          case 'dir':
          case 'div':
          case 'dl':
          case 'fieldset':
          case 'figcaption':
          case 'figure':
          case 'footer':
          case 'header':
          case 'hgroup':
          case 'main':
          case 'menu':
          case 'nav':
          case 'ol':
          case 'p':
          case 'section':
          case 'summary':
          case 'ul':
          case 'pre':
          case 'listing':
          case 'table':
          case 'hr':
          case 'xmp':
          case 'h1':
          case 'h2':
          case 'h3':
          case 'h4':
          case 'h5':
          case 'h6':
            return ancestorInfo.pTagInButtonScope;
          case 'form':
            return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
          case 'li':
            return ancestorInfo.listItemTagAutoclosing;
          case 'dd':
          case 'dt':
            return ancestorInfo.dlItemTagAutoclosing;
          case 'button':
            return ancestorInfo.buttonTagInScope;
          case 'a':
            return ancestorInfo.aTagInScope;
          case 'nobr':
            return ancestorInfo.nobrTagInScope;
        }
        return null;
      };
      var findOwnerStack = function (instance) {
        if (!instance) {
          return [];
        }
        var stack = [];
        do {
          stack.push(instance);
        } while (instance = instance._currentElement._owner);
        stack.reverse();
        return stack;
      };
      var didWarn = {};
      validateDOMNesting = function (childTag, childInstance, ancestorInfo) {
        ancestorInfo = ancestorInfo || emptyAncestorInfo;
        var parentInfo = ancestorInfo.parentTag;
        var parentTag = parentInfo && parentInfo.tag;
        var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
        var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
        var problematic = invalidParent || invalidAncestor;
        if (problematic) {
          var ancestorTag = problematic.tag;
          var ancestorInstance = problematic.instance;
          var childOwner = childInstance && childInstance._currentElement._owner;
          var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;
          var childOwners = findOwnerStack(childOwner);
          var ancestorOwners = findOwnerStack(ancestorOwner);
          var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
          var i;
          var deepestCommon = -1;
          for (i = 0; i < minStackLen; i++) {
            if (childOwners[i] === ancestorOwners[i]) {
              deepestCommon = i;
            } else {
              break;
            }
          }
          var UNKNOWN = '(unknown)';
          var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
            return inst.getName() || UNKNOWN;
          });
          var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
            return inst.getName() || UNKNOWN;
          });
          var ownerInfo = [].concat(deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag, invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');
          var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
          if (didWarn[warnKey]) {
            return;
          }
          didWarn[warnKey] = true;
          if (invalidParent) {
            var info = '';
            if (ancestorTag === 'table' && childTag === 'tr') {
              info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
            }
            'production' !== 'production' ? warning(false, 'validateDOMNesting(...): <%s> cannot appear as a child of <%s>. ' + 'See %s.%s', childTag, ancestorTag, ownerInfo, info) : undefined;
          } else {
            'production' !== 'production' ? warning(false, 'validateDOMNesting(...): <%s> cannot appear as a descendant of ' + '<%s>. See %s.', childTag, ancestorTag, ownerInfo) : undefined;
          }
        }
      };
      validateDOMNesting.ancestorInfoContextKey = '__validateDOMNesting_ancestorInfo$' + Math.random().toString(36).slice(2);
      validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;
      validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
        ancestorInfo = ancestorInfo || emptyAncestorInfo;
        var parentInfo = ancestorInfo.parentTag;
        var parentTag = parentInfo && parentInfo.tag;
        return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
      };
    }
    module.exports = validateDOMNesting;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/ReactMount.js', ['npm:react@0.14.9/lib/DOMProperty.js', 'npm:react@0.14.9/lib/ReactBrowserEventEmitter.js', 'npm:react@0.14.9/lib/ReactCurrentOwner.js', 'npm:react@0.14.9/lib/ReactDOMFeatureFlags.js', 'npm:react@0.14.9/lib/ReactElement.js', 'npm:react@0.14.9/lib/ReactEmptyComponentRegistry.js', 'npm:react@0.14.9/lib/ReactInstanceHandles.js', 'npm:react@0.14.9/lib/ReactInstanceMap.js', 'npm:react@0.14.9/lib/ReactMarkupChecksum.js', 'npm:react@0.14.9/lib/ReactPerf.js', 'npm:react@0.14.9/lib/ReactReconciler.js', 'npm:react@0.14.9/lib/ReactUpdateQueue.js', 'npm:react@0.14.9/lib/ReactUpdates.js', 'npm:react@0.14.9/lib/Object.assign.js', 'npm:fbjs@0.6.1/lib/emptyObject.js', 'npm:fbjs@0.6.1/lib/containsNode.js', 'npm:react@0.14.9/lib/instantiateReactComponent.js', 'npm:fbjs@0.6.1/lib/invariant.js', 'npm:react@0.14.9/lib/setInnerHTML.js', 'npm:react@0.14.9/lib/shouldUpdateReactComponent.js', 'npm:react@0.14.9/lib/validateDOMNesting.js', 'npm:fbjs@0.6.1/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var DOMProperty = $__require('npm:react@0.14.9/lib/DOMProperty.js');
    var ReactBrowserEventEmitter = $__require('npm:react@0.14.9/lib/ReactBrowserEventEmitter.js');
    var ReactCurrentOwner = $__require('npm:react@0.14.9/lib/ReactCurrentOwner.js');
    var ReactDOMFeatureFlags = $__require('npm:react@0.14.9/lib/ReactDOMFeatureFlags.js');
    var ReactElement = $__require('npm:react@0.14.9/lib/ReactElement.js');
    var ReactEmptyComponentRegistry = $__require('npm:react@0.14.9/lib/ReactEmptyComponentRegistry.js');
    var ReactInstanceHandles = $__require('npm:react@0.14.9/lib/ReactInstanceHandles.js');
    var ReactInstanceMap = $__require('npm:react@0.14.9/lib/ReactInstanceMap.js');
    var ReactMarkupChecksum = $__require('npm:react@0.14.9/lib/ReactMarkupChecksum.js');
    var ReactPerf = $__require('npm:react@0.14.9/lib/ReactPerf.js');
    var ReactReconciler = $__require('npm:react@0.14.9/lib/ReactReconciler.js');
    var ReactUpdateQueue = $__require('npm:react@0.14.9/lib/ReactUpdateQueue.js');
    var ReactUpdates = $__require('npm:react@0.14.9/lib/ReactUpdates.js');
    var assign = $__require('npm:react@0.14.9/lib/Object.assign.js');
    var emptyObject = $__require('npm:fbjs@0.6.1/lib/emptyObject.js');
    var containsNode = $__require('npm:fbjs@0.6.1/lib/containsNode.js');
    var instantiateReactComponent = $__require('npm:react@0.14.9/lib/instantiateReactComponent.js');
    var invariant = $__require('npm:fbjs@0.6.1/lib/invariant.js');
    var setInnerHTML = $__require('npm:react@0.14.9/lib/setInnerHTML.js');
    var shouldUpdateReactComponent = $__require('npm:react@0.14.9/lib/shouldUpdateReactComponent.js');
    var validateDOMNesting = $__require('npm:react@0.14.9/lib/validateDOMNesting.js');
    var warning = $__require('npm:fbjs@0.6.1/lib/warning.js');
    var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
    var nodeCache = {};
    var ELEMENT_NODE_TYPE = 1;
    var DOC_NODE_TYPE = 9;
    var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
    var ownerDocumentContextKey = '__ReactMount_ownerDocument$' + Math.random().toString(36).slice(2);
    var instancesByReactRootID = {};
    var containersByReactRootID = {};
    if ('production' !== 'production') {
      var rootElementsByReactRootID = {};
    }
    var findComponentRootReusableArray = [];
    function firstDifferenceIndex(string1, string2) {
      var minLen = Math.min(string1.length, string2.length);
      for (var i = 0; i < minLen; i++) {
        if (string1.charAt(i) !== string2.charAt(i)) {
          return i;
        }
      }
      return string1.length === string2.length ? -1 : minLen;
    }
    function getReactRootElementInContainer(container) {
      if (!container) {
        return null;
      }
      if (container.nodeType === DOC_NODE_TYPE) {
        return container.documentElement;
      } else {
        return container.firstChild;
      }
    }
    function getReactRootID(container) {
      var rootElement = getReactRootElementInContainer(container);
      return rootElement && ReactMount.getID(rootElement);
    }
    function getID(node) {
      var id = internalGetID(node);
      if (id) {
        if (nodeCache.hasOwnProperty(id)) {
          var cached = nodeCache[id];
          if (cached !== node) {
            !!isValid(cached, id) ? 'production' !== 'production' ? invariant(false, 'ReactMount: Two valid but unequal nodes with the same `%s`: %s', ATTR_NAME, id) : invariant(false) : undefined;
            nodeCache[id] = node;
          }
        } else {
          nodeCache[id] = node;
        }
      }
      return id;
    }
    function internalGetID(node) {
      return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';
    }
    function setID(node, id) {
      var oldID = internalGetID(node);
      if (oldID !== id) {
        delete nodeCache[oldID];
      }
      node.setAttribute(ATTR_NAME, id);
      nodeCache[id] = node;
    }
    function getNode(id) {
      if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
        nodeCache[id] = ReactMount.findReactNodeByID(id);
      }
      return nodeCache[id];
    }
    function getNodeFromInstance(instance) {
      var id = ReactInstanceMap.get(instance)._rootNodeID;
      if (ReactEmptyComponentRegistry.isNullComponentID(id)) {
        return null;
      }
      if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
        nodeCache[id] = ReactMount.findReactNodeByID(id);
      }
      return nodeCache[id];
    }
    function isValid(node, id) {
      if (node) {
        !(internalGetID(node) === id) ? 'production' !== 'production' ? invariant(false, 'ReactMount: Unexpected modification of `%s`', ATTR_NAME) : invariant(false) : undefined;
        var container = ReactMount.findReactContainerForID(id);
        if (container && containsNode(container, node)) {
          return true;
        }
      }
      return false;
    }
    function purgeID(id) {
      delete nodeCache[id];
    }
    var deepestNodeSoFar = null;
    function findDeepestCachedAncestorImpl(ancestorID) {
      var ancestor = nodeCache[ancestorID];
      if (ancestor && isValid(ancestor, ancestorID)) {
        deepestNodeSoFar = ancestor;
      } else {
        return false;
      }
    }
    function findDeepestCachedAncestor(targetID) {
      deepestNodeSoFar = null;
      ReactInstanceHandles.traverseAncestors(targetID, findDeepestCachedAncestorImpl);
      var foundNode = deepestNodeSoFar;
      deepestNodeSoFar = null;
      return foundNode;
    }
    function mountComponentIntoNode(componentInstance, rootID, container, transaction, shouldReuseMarkup, context) {
      if (ReactDOMFeatureFlags.useCreateElement) {
        context = assign({}, context);
        if (container.nodeType === DOC_NODE_TYPE) {
          context[ownerDocumentContextKey] = container;
        } else {
          context[ownerDocumentContextKey] = container.ownerDocument;
        }
      }
      if ('production' !== 'production') {
        if (context === emptyObject) {
          context = {};
        }
        var tag = container.nodeName.toLowerCase();
        context[validateDOMNesting.ancestorInfoContextKey] = validateDOMNesting.updatedAncestorInfo(null, tag, null);
      }
      var markup = ReactReconciler.mountComponent(componentInstance, rootID, transaction, context);
      componentInstance._renderedComponent._topLevelWrapper = componentInstance;
      ReactMount._mountImageIntoNode(markup, container, shouldReuseMarkup, transaction);
    }
    function batchedMountComponentIntoNode(componentInstance, rootID, container, shouldReuseMarkup, context) {
      var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(shouldReuseMarkup);
      transaction.perform(mountComponentIntoNode, null, componentInstance, rootID, container, transaction, shouldReuseMarkup, context);
      ReactUpdates.ReactReconcileTransaction.release(transaction);
    }
    function unmountComponentFromNode(instance, container) {
      ReactReconciler.unmountComponent(instance);
      if (container.nodeType === DOC_NODE_TYPE) {
        container = container.documentElement;
      }
      while (container.lastChild) {
        container.removeChild(container.lastChild);
      }
    }
    function hasNonRootReactChild(node) {
      var reactRootID = getReactRootID(node);
      return reactRootID ? reactRootID !== ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID) : false;
    }
    function findFirstReactDOMImpl(node) {
      for (; node && node.parentNode !== node; node = node.parentNode) {
        if (node.nodeType !== 1) {
          continue;
        }
        var nodeID = internalGetID(node);
        if (!nodeID) {
          continue;
        }
        var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);
        var current = node;
        var lastID;
        do {
          lastID = internalGetID(current);
          current = current.parentNode;
          if (current == null) {
            return null;
          }
        } while (lastID !== reactRootID);
        if (current === containersByReactRootID[reactRootID]) {
          return node;
        }
      }
      return null;
    }
    var TopLevelWrapper = function () {};
    TopLevelWrapper.prototype.isReactComponent = {};
    if ('production' !== 'production') {
      TopLevelWrapper.displayName = 'TopLevelWrapper';
    }
    TopLevelWrapper.prototype.render = function () {
      return this.props;
    };
    var ReactMount = {
      TopLevelWrapper: TopLevelWrapper,
      _instancesByReactRootID: instancesByReactRootID,
      scrollMonitor: function (container, renderCallback) {
        renderCallback();
      },
      _updateRootComponent: function (prevComponent, nextElement, container, callback) {
        ReactMount.scrollMonitor(container, function () {
          ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement);
          if (callback) {
            ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
          }
        });
        if ('production' !== 'production') {
          rootElementsByReactRootID[getReactRootID(container)] = getReactRootElementInContainer(container);
        }
        return prevComponent;
      },
      _registerComponent: function (nextComponent, container) {
        !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? 'production' !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : invariant(false) : undefined;
        ReactBrowserEventEmitter.ensureScrollValueMonitoring();
        var reactRootID = ReactMount.registerContainer(container);
        instancesByReactRootID[reactRootID] = nextComponent;
        return reactRootID;
      },
      _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
        'production' !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : undefined;
        var componentInstance = instantiateReactComponent(nextElement, null);
        var reactRootID = ReactMount._registerComponent(componentInstance, container);
        ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, reactRootID, container, shouldReuseMarkup, context);
        if ('production' !== 'production') {
          rootElementsByReactRootID[reactRootID] = getReactRootElementInContainer(container);
        }
        return componentInstance;
      },
      renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
        !(parentComponent != null && parentComponent._reactInternalInstance != null) ? 'production' !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : invariant(false) : undefined;
        return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
      },
      _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
        !ReactElement.isValidElement(nextElement) ? 'production' !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing an element string, make sure to instantiate ' + 'it by passing it to React.createElement.' : typeof nextElement === 'function' ? ' Instead of passing a component class, make sure to instantiate ' + 'it by passing it to React.createElement.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : invariant(false) : undefined;
        'production' !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : undefined;
        var nextWrappedElement = new ReactElement(TopLevelWrapper, null, null, null, null, null, nextElement);
        var prevComponent = instancesByReactRootID[getReactRootID(container)];
        if (prevComponent) {
          var prevWrappedElement = prevComponent._currentElement;
          var prevElement = prevWrappedElement.props;
          if (shouldUpdateReactComponent(prevElement, nextElement)) {
            var publicInst = prevComponent._renderedComponent.getPublicInstance();
            var updatedCallback = callback && function () {
              callback.call(publicInst);
            };
            ReactMount._updateRootComponent(prevComponent, nextWrappedElement, container, updatedCallback);
            return publicInst;
          } else {
            ReactMount.unmountComponentAtNode(container);
          }
        }
        var reactRootElement = getReactRootElementInContainer(container);
        var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
        var containerHasNonRootReactChild = hasNonRootReactChild(container);
        if ('production' !== 'production') {
          'production' !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : undefined;
          if (!containerHasReactMarkup || reactRootElement.nextSibling) {
            var rootElementSibling = reactRootElement;
            while (rootElementSibling) {
              if (internalGetID(rootElementSibling)) {
                'production' !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : undefined;
                break;
              }
              rootElementSibling = rootElementSibling.nextSibling;
            }
          }
        }
        var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
        var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, parentComponent != null ? parentComponent._reactInternalInstance._processChildContext(parentComponent._reactInternalInstance._context) : emptyObject)._renderedComponent.getPublicInstance();
        if (callback) {
          callback.call(component);
        }
        return component;
      },
      render: function (nextElement, container, callback) {
        return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
      },
      registerContainer: function (container) {
        var reactRootID = getReactRootID(container);
        if (reactRootID) {
          reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);
        }
        if (!reactRootID) {
          reactRootID = ReactInstanceHandles.createReactRootID();
        }
        containersByReactRootID[reactRootID] = container;
        return reactRootID;
      },
      unmountComponentAtNode: function (container) {
        'production' !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : undefined;
        !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? 'production' !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : invariant(false) : undefined;
        var reactRootID = getReactRootID(container);
        var component = instancesByReactRootID[reactRootID];
        if (!component) {
          var containerHasNonRootReactChild = hasNonRootReactChild(container);
          var containerID = internalGetID(container);
          var isContainerReactRoot = containerID && containerID === ReactInstanceHandles.getReactRootIDFromNodeID(containerID);
          if ('production' !== 'production') {
            'production' !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : undefined;
          }
          return false;
        }
        ReactUpdates.batchedUpdates(unmountComponentFromNode, component, container);
        delete instancesByReactRootID[reactRootID];
        delete containersByReactRootID[reactRootID];
        if ('production' !== 'production') {
          delete rootElementsByReactRootID[reactRootID];
        }
        return true;
      },
      findReactContainerForID: function (id) {
        var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(id);
        var container = containersByReactRootID[reactRootID];
        if ('production' !== 'production') {
          var rootElement = rootElementsByReactRootID[reactRootID];
          if (rootElement && rootElement.parentNode !== container) {
            'production' !== 'production' ? warning(internalGetID(rootElement) === reactRootID, 'ReactMount: Root element ID differed from reactRootID.') : undefined;
            var containerChild = container.firstChild;
            if (containerChild && reactRootID === internalGetID(containerChild)) {
              rootElementsByReactRootID[reactRootID] = containerChild;
            } else {
              'production' !== 'production' ? warning(false, 'ReactMount: Root element has been removed from its original ' + 'container. New container: %s', rootElement.parentNode) : undefined;
            }
          }
        }
        return container;
      },
      findReactNodeByID: function (id) {
        var reactRoot = ReactMount.findReactContainerForID(id);
        return ReactMount.findComponentRoot(reactRoot, id);
      },
      getFirstReactDOM: function (node) {
        return findFirstReactDOMImpl(node);
      },
      findComponentRoot: function (ancestorNode, targetID) {
        var firstChildren = findComponentRootReusableArray;
        var childIndex = 0;
        var deepestAncestor = findDeepestCachedAncestor(targetID) || ancestorNode;
        if ('production' !== 'production') {
          'production' !== 'production' ? warning(deepestAncestor != null, 'React can\'t find the root component node for data-reactid value ' + '`%s`. If you\'re seeing this message, it probably means that ' + 'you\'ve loaded two copies of React on the page. At this time, only ' + 'a single copy of React can be loaded at a time.', targetID) : undefined;
        }
        firstChildren[0] = deepestAncestor.firstChild;
        firstChildren.length = 1;
        while (childIndex < firstChildren.length) {
          var child = firstChildren[childIndex++];
          var targetChild;
          while (child) {
            var childID = ReactMount.getID(child);
            if (childID) {
              if (targetID === childID) {
                targetChild = child;
              } else if (ReactInstanceHandles.isAncestorIDOf(childID, targetID)) {
                firstChildren.length = childIndex = 0;
                firstChildren.push(child.firstChild);
              }
            } else {
              firstChildren.push(child.firstChild);
            }
            child = child.nextSibling;
          }
          if (targetChild) {
            firstChildren.length = 0;
            return targetChild;
          }
        }
        firstChildren.length = 0;
        !false ? 'production' !== 'production' ? invariant(false, 'findComponentRoot(..., %s): Unable to find element. This probably ' + 'means the DOM was unexpectedly mutated (e.g., by the browser), ' + 'usually due to forgetting a <tbody> when using tables, nesting tags ' + 'like <form>, <p>, or <a>, or using non-SVG elements in an <svg> ' + 'parent. ' + 'Try inspecting the child nodes of the element with React ID `%s`.', targetID, ReactMount.getID(ancestorNode)) : invariant(false) : undefined;
      },
      _mountImageIntoNode: function (markup, container, shouldReuseMarkup, transaction) {
        !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? 'production' !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : invariant(false) : undefined;
        if (shouldReuseMarkup) {
          var rootElement = getReactRootElementInContainer(container);
          if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
            return;
          } else {
            var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
            rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
            var rootMarkup = rootElement.outerHTML;
            rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);
            var normalizedMarkup = markup;
            if ('production' !== 'production') {
              var normalizer;
              if (container.nodeType === ELEMENT_NODE_TYPE) {
                normalizer = document.createElement('div');
                normalizer.innerHTML = markup;
                normalizedMarkup = normalizer.innerHTML;
              } else {
                normalizer = document.createElement('iframe');
                document.body.appendChild(normalizer);
                normalizer.contentDocument.write(markup);
                normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
                document.body.removeChild(normalizer);
              }
            }
            var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
            var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);
            !(container.nodeType !== DOC_NODE_TYPE) ? 'production' !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using ' + 'server rendering but the checksum was invalid. This usually ' + 'means you rendered a different component type or props on ' + 'the client from the one on the server, or your render() ' + 'methods are impure. React cannot handle this case due to ' + 'cross-browser quirks by rendering at the document root. You ' + 'should look for environment dependent code in your components ' + 'and ensure the props are the same client and server side:\n%s', difference) : invariant(false) : undefined;
            if ('production' !== 'production') {
              'production' !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : undefined;
            }
          }
        }
        !(container.nodeType !== DOC_NODE_TYPE) ? 'production' !== 'production' ? invariant(false, 'You\'re trying to render a component to the document but ' + 'you didn\'t use server rendering. We can\'t do this ' + 'without using server rendering due to cross-browser quirks. ' + 'See ReactDOMServer.renderToString() for server rendering.') : invariant(false) : undefined;
        if (transaction.useCreateElement) {
          while (container.lastChild) {
            container.removeChild(container.lastChild);
          }
          container.appendChild(markup);
        } else {
          setInnerHTML(container, markup);
        }
      },
      ownerDocumentContextKey: ownerDocumentContextKey,
      getReactRootID: getReactRootID,
      getID: getID,
      setID: setID,
      getNode: getNode,
      getNodeFromInstance: getNodeFromInstance,
      isValid: isValid,
      purgeID: purgeID
    };
    ReactPerf.measureMethods(ReactMount, 'ReactMount', {
      _renderNewRootComponent: '_renderNewRootComponent',
      _mountImageIntoNode: '_mountImageIntoNode'
    });
    module.exports = ReactMount;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:fbjs@0.6.1/lib/ExecutionEnvironment.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule ExecutionEnvironment
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

  /**
   * Simple, lightweight module assisting with the detection and context of
   * Worker. Helps avoid circular dependencies and allows code to reason about
   * whether or not they are in a Worker, even if they never include the main
   * `ReactWorker` dependency.
   */
  var ExecutionEnvironment = {

    canUseDOM: canUseDOM,

    canUseWorkers: typeof Worker !== 'undefined',

    canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

    canUseViewport: canUseDOM && !!window.screen,

    isInWorker: !canUseDOM // For now, this is true - might change in the future.

  };

  module.exports = ExecutionEnvironment;
});
System.registerDynamic('npm:fbjs@0.6.1/lib/performance.js', ['npm:fbjs@0.6.1/lib/ExecutionEnvironment.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ExecutionEnvironment = $__require('npm:fbjs@0.6.1/lib/ExecutionEnvironment.js');
  var performance;
  if (ExecutionEnvironment.canUseDOM) {
    performance = window.performance || window.msPerformance || window.webkitPerformance;
  }
  module.exports = performance || {};
});
System.registerDynamic('npm:fbjs@0.6.1/lib/performanceNow.js', ['npm:fbjs@0.6.1/lib/performance.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var performance = $__require('npm:fbjs@0.6.1/lib/performance.js');
  var performanceNow;
  if (performance.now) {
    performanceNow = function () {
      return performance.now();
    };
  } else {
    performanceNow = function () {
      return Date.now();
    };
  }
  module.exports = performanceNow;
});
System.registerDynamic('npm:react@0.14.9/lib/ReactDefaultPerf.js', ['npm:react@0.14.9/lib/DOMProperty.js', 'npm:react@0.14.9/lib/ReactDefaultPerfAnalysis.js', 'npm:react@0.14.9/lib/ReactMount.js', 'npm:react@0.14.9/lib/ReactPerf.js', 'npm:fbjs@0.6.1/lib/performanceNow.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var DOMProperty = $__require('npm:react@0.14.9/lib/DOMProperty.js');
  var ReactDefaultPerfAnalysis = $__require('npm:react@0.14.9/lib/ReactDefaultPerfAnalysis.js');
  var ReactMount = $__require('npm:react@0.14.9/lib/ReactMount.js');
  var ReactPerf = $__require('npm:react@0.14.9/lib/ReactPerf.js');
  var performanceNow = $__require('npm:fbjs@0.6.1/lib/performanceNow.js');
  function roundFloat(val) {
    return Math.floor(val * 100) / 100;
  }
  function addValue(obj, key, val) {
    obj[key] = (obj[key] || 0) + val;
  }
  var ReactDefaultPerf = {
    _allMeasurements: [],
    _mountStack: [0],
    _injected: false,
    start: function () {
      if (!ReactDefaultPerf._injected) {
        ReactPerf.injection.injectMeasure(ReactDefaultPerf.measure);
      }
      ReactDefaultPerf._allMeasurements.length = 0;
      ReactPerf.enableMeasure = true;
    },
    stop: function () {
      ReactPerf.enableMeasure = false;
    },
    getLastMeasurements: function () {
      return ReactDefaultPerf._allMeasurements;
    },
    printExclusive: function (measurements) {
      measurements = measurements || ReactDefaultPerf._allMeasurements;
      var summary = ReactDefaultPerfAnalysis.getExclusiveSummary(measurements);
      console.table(summary.map(function (item) {
        return {
          'Component class name': item.componentName,
          'Total inclusive time (ms)': roundFloat(item.inclusive),
          'Exclusive mount time (ms)': roundFloat(item.exclusive),
          'Exclusive render time (ms)': roundFloat(item.render),
          'Mount time per instance (ms)': roundFloat(item.exclusive / item.count),
          'Render time per instance (ms)': roundFloat(item.render / item.count),
          'Instances': item.count
        };
      }));
    },
    printInclusive: function (measurements) {
      measurements = measurements || ReactDefaultPerf._allMeasurements;
      var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements);
      console.table(summary.map(function (item) {
        return {
          'Owner > component': item.componentName,
          'Inclusive time (ms)': roundFloat(item.time),
          'Instances': item.count
        };
      }));
      console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');
    },
    getMeasurementsSummaryMap: function (measurements) {
      var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements, true);
      return summary.map(function (item) {
        return {
          'Owner > component': item.componentName,
          'Wasted time (ms)': item.time,
          'Instances': item.count
        };
      });
    },
    printWasted: function (measurements) {
      measurements = measurements || ReactDefaultPerf._allMeasurements;
      console.table(ReactDefaultPerf.getMeasurementsSummaryMap(measurements));
      console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');
    },
    printDOM: function (measurements) {
      measurements = measurements || ReactDefaultPerf._allMeasurements;
      var summary = ReactDefaultPerfAnalysis.getDOMSummary(measurements);
      console.table(summary.map(function (item) {
        var result = {};
        result[DOMProperty.ID_ATTRIBUTE_NAME] = item.id;
        result.type = item.type;
        result.args = JSON.stringify(item.args);
        return result;
      }));
      console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');
    },
    _recordWrite: function (id, fnName, totalTime, args) {
      var writes = ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1].writes;
      writes[id] = writes[id] || [];
      writes[id].push({
        type: fnName,
        time: totalTime,
        args: args
      });
    },
    measure: function (moduleName, fnName, func) {
      return function () {
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        var totalTime;
        var rv;
        var start;
        if (fnName === '_renderNewRootComponent' || fnName === 'flushBatchedUpdates') {
          ReactDefaultPerf._allMeasurements.push({
            exclusive: {},
            inclusive: {},
            render: {},
            counts: {},
            writes: {},
            displayNames: {},
            totalTime: 0,
            created: {}
          });
          start = performanceNow();
          rv = func.apply(this, args);
          ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1].totalTime = performanceNow() - start;
          return rv;
        } else if (fnName === '_mountImageIntoNode' || moduleName === 'ReactBrowserEventEmitter' || moduleName === 'ReactDOMIDOperations' || moduleName === 'CSSPropertyOperations' || moduleName === 'DOMChildrenOperations' || moduleName === 'DOMPropertyOperations') {
          start = performanceNow();
          rv = func.apply(this, args);
          totalTime = performanceNow() - start;
          if (fnName === '_mountImageIntoNode') {
            var mountID = ReactMount.getID(args[1]);
            ReactDefaultPerf._recordWrite(mountID, fnName, totalTime, args[0]);
          } else if (fnName === 'dangerouslyProcessChildrenUpdates') {
            args[0].forEach(function (update) {
              var writeArgs = {};
              if (update.fromIndex !== null) {
                writeArgs.fromIndex = update.fromIndex;
              }
              if (update.toIndex !== null) {
                writeArgs.toIndex = update.toIndex;
              }
              if (update.textContent !== null) {
                writeArgs.textContent = update.textContent;
              }
              if (update.markupIndex !== null) {
                writeArgs.markup = args[1][update.markupIndex];
              }
              ReactDefaultPerf._recordWrite(update.parentID, update.type, totalTime, writeArgs);
            });
          } else {
            var id = args[0];
            if (typeof id === 'object') {
              id = ReactMount.getID(args[0]);
            }
            ReactDefaultPerf._recordWrite(id, fnName, totalTime, Array.prototype.slice.call(args, 1));
          }
          return rv;
        } else if (moduleName === 'ReactCompositeComponent' && (fnName === 'mountComponent' || fnName === 'updateComponent' || fnName === '_renderValidatedComponent')) {
          if (this._currentElement.type === ReactMount.TopLevelWrapper) {
            return func.apply(this, args);
          }
          var rootNodeID = fnName === 'mountComponent' ? args[0] : this._rootNodeID;
          var isRender = fnName === '_renderValidatedComponent';
          var isMount = fnName === 'mountComponent';
          var mountStack = ReactDefaultPerf._mountStack;
          var entry = ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1];
          if (isRender) {
            addValue(entry.counts, rootNodeID, 1);
          } else if (isMount) {
            entry.created[rootNodeID] = true;
            mountStack.push(0);
          }
          start = performanceNow();
          rv = func.apply(this, args);
          totalTime = performanceNow() - start;
          if (isRender) {
            addValue(entry.render, rootNodeID, totalTime);
          } else if (isMount) {
            var subMountTime = mountStack.pop();
            mountStack[mountStack.length - 1] += totalTime;
            addValue(entry.exclusive, rootNodeID, totalTime - subMountTime);
            addValue(entry.inclusive, rootNodeID, totalTime);
          } else {
            addValue(entry.inclusive, rootNodeID, totalTime);
          }
          entry.displayNames[rootNodeID] = {
            current: this.getName(),
            owner: this._currentElement._owner ? this._currentElement._owner.getName() : '<root>'
          };
          return rv;
        } else {
          return func.apply(this, args);
        }
      };
    }
  };
  module.exports = ReactDefaultPerf;
});
System.registerDynamic('npm:react@0.14.9/lib/ReactDefaultInjection.js', ['npm:react@0.14.9/lib/BeforeInputEventPlugin.js', 'npm:react@0.14.9/lib/ChangeEventPlugin.js', 'npm:react@0.14.9/lib/ClientReactRootIndex.js', 'npm:react@0.14.9/lib/DefaultEventPluginOrder.js', 'npm:react@0.14.9/lib/EnterLeaveEventPlugin.js', 'npm:fbjs@0.6.1/lib/ExecutionEnvironment.js', 'npm:react@0.14.9/lib/HTMLDOMPropertyConfig.js', 'npm:react@0.14.9/lib/ReactBrowserComponentMixin.js', 'npm:react@0.14.9/lib/ReactComponentBrowserEnvironment.js', 'npm:react@0.14.9/lib/ReactDefaultBatchingStrategy.js', 'npm:react@0.14.9/lib/ReactDOMComponent.js', 'npm:react@0.14.9/lib/ReactDOMTextComponent.js', 'npm:react@0.14.9/lib/ReactEventListener.js', 'npm:react@0.14.9/lib/ReactInjection.js', 'npm:react@0.14.9/lib/ReactInstanceHandles.js', 'npm:react@0.14.9/lib/ReactMount.js', 'npm:react@0.14.9/lib/ReactReconcileTransaction.js', 'npm:react@0.14.9/lib/SelectEventPlugin.js', 'npm:react@0.14.9/lib/ServerReactRootIndex.js', 'npm:react@0.14.9/lib/SimpleEventPlugin.js', 'npm:react@0.14.9/lib/SVGDOMPropertyConfig.js', 'npm:react@0.14.9/lib/ReactDefaultPerf.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var BeforeInputEventPlugin = $__require('npm:react@0.14.9/lib/BeforeInputEventPlugin.js');
    var ChangeEventPlugin = $__require('npm:react@0.14.9/lib/ChangeEventPlugin.js');
    var ClientReactRootIndex = $__require('npm:react@0.14.9/lib/ClientReactRootIndex.js');
    var DefaultEventPluginOrder = $__require('npm:react@0.14.9/lib/DefaultEventPluginOrder.js');
    var EnterLeaveEventPlugin = $__require('npm:react@0.14.9/lib/EnterLeaveEventPlugin.js');
    var ExecutionEnvironment = $__require('npm:fbjs@0.6.1/lib/ExecutionEnvironment.js');
    var HTMLDOMPropertyConfig = $__require('npm:react@0.14.9/lib/HTMLDOMPropertyConfig.js');
    var ReactBrowserComponentMixin = $__require('npm:react@0.14.9/lib/ReactBrowserComponentMixin.js');
    var ReactComponentBrowserEnvironment = $__require('npm:react@0.14.9/lib/ReactComponentBrowserEnvironment.js');
    var ReactDefaultBatchingStrategy = $__require('npm:react@0.14.9/lib/ReactDefaultBatchingStrategy.js');
    var ReactDOMComponent = $__require('npm:react@0.14.9/lib/ReactDOMComponent.js');
    var ReactDOMTextComponent = $__require('npm:react@0.14.9/lib/ReactDOMTextComponent.js');
    var ReactEventListener = $__require('npm:react@0.14.9/lib/ReactEventListener.js');
    var ReactInjection = $__require('npm:react@0.14.9/lib/ReactInjection.js');
    var ReactInstanceHandles = $__require('npm:react@0.14.9/lib/ReactInstanceHandles.js');
    var ReactMount = $__require('npm:react@0.14.9/lib/ReactMount.js');
    var ReactReconcileTransaction = $__require('npm:react@0.14.9/lib/ReactReconcileTransaction.js');
    var SelectEventPlugin = $__require('npm:react@0.14.9/lib/SelectEventPlugin.js');
    var ServerReactRootIndex = $__require('npm:react@0.14.9/lib/ServerReactRootIndex.js');
    var SimpleEventPlugin = $__require('npm:react@0.14.9/lib/SimpleEventPlugin.js');
    var SVGDOMPropertyConfig = $__require('npm:react@0.14.9/lib/SVGDOMPropertyConfig.js');
    var alreadyInjected = false;
    function inject() {
      if (alreadyInjected) {
        return;
      }
      alreadyInjected = true;
      ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);
      ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
      ReactInjection.EventPluginHub.injectInstanceHandle(ReactInstanceHandles);
      ReactInjection.EventPluginHub.injectMount(ReactMount);
      ReactInjection.EventPluginHub.injectEventPluginsByName({
        SimpleEventPlugin: SimpleEventPlugin,
        EnterLeaveEventPlugin: EnterLeaveEventPlugin,
        ChangeEventPlugin: ChangeEventPlugin,
        SelectEventPlugin: SelectEventPlugin,
        BeforeInputEventPlugin: BeforeInputEventPlugin
      });
      ReactInjection.NativeComponent.injectGenericComponentClass(ReactDOMComponent);
      ReactInjection.NativeComponent.injectTextComponentClass(ReactDOMTextComponent);
      ReactInjection.Class.injectMixin(ReactBrowserComponentMixin);
      ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
      ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);
      ReactInjection.EmptyComponent.injectEmptyComponent('noscript');
      ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
      ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);
      ReactInjection.RootIndex.injectCreateReactRootIndex(ExecutionEnvironment.canUseDOM ? ClientReactRootIndex.createReactRootIndex : ServerReactRootIndex.createReactRootIndex);
      ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
      if ('production' !== 'production') {
        var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
        if (/[?&]react_perf\b/.test(url)) {
          var ReactDefaultPerf = $__require('npm:react@0.14.9/lib/ReactDefaultPerf.js');
          ReactDefaultPerf.start();
        }
      }
    }
    module.exports = { inject: inject };
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/ReactDefaultBatchingStrategy.js', ['npm:react@0.14.9/lib/ReactUpdates.js', 'npm:react@0.14.9/lib/Transaction.js', 'npm:react@0.14.9/lib/Object.assign.js', 'npm:fbjs@0.6.1/lib/emptyFunction.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ReactUpdates = $__require('npm:react@0.14.9/lib/ReactUpdates.js');
  var Transaction = $__require('npm:react@0.14.9/lib/Transaction.js');
  var assign = $__require('npm:react@0.14.9/lib/Object.assign.js');
  var emptyFunction = $__require('npm:fbjs@0.6.1/lib/emptyFunction.js');
  var RESET_BATCHED_UPDATES = {
    initialize: emptyFunction,
    close: function () {
      ReactDefaultBatchingStrategy.isBatchingUpdates = false;
    }
  };
  var FLUSH_BATCHED_UPDATES = {
    initialize: emptyFunction,
    close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
  };
  var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];
  function ReactDefaultBatchingStrategyTransaction() {
    this.reinitializeTransaction();
  }
  assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction.Mixin, { getTransactionWrappers: function () {
      return TRANSACTION_WRAPPERS;
    } });
  var transaction = new ReactDefaultBatchingStrategyTransaction();
  var ReactDefaultBatchingStrategy = {
    isBatchingUpdates: false,
    batchedUpdates: function (callback, a, b, c, d, e) {
      var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;
      ReactDefaultBatchingStrategy.isBatchingUpdates = true;
      if (alreadyBatchingUpdates) {
        callback(a, b, c, d, e);
      } else {
        transaction.perform(callback, null, a, b, c, d, e);
      }
    }
  };
  module.exports = ReactDefaultBatchingStrategy;
});
System.registerDynamic('npm:react@0.14.9/lib/adler32.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule adler32
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var MOD = 65521;

  // adler32 is not cryptographically strong, and is only used to sanity check that
  // markup generated on the server matches the markup generated on the client.
  // This implementation (a modified version of the SheetJS version) has been optimized
  // for our use case, at the expense of conforming to the adler32 specification
  // for non-ascii inputs.
  function adler32(data) {
    var a = 1;
    var b = 0;
    var i = 0;
    var l = data.length;
    var m = l & ~0x3;
    while (i < m) {
      for (; i < Math.min(i + 4096, m); i += 4) {
        b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
      }
      a %= MOD;
      b %= MOD;
    }
    for (; i < l; i++) {
      b += a += data.charCodeAt(i);
    }
    a %= MOD;
    b %= MOD;
    return a | b << 16;
  }

  module.exports = adler32;
});
System.registerDynamic('npm:react@0.14.9/lib/ReactMarkupChecksum.js', ['npm:react@0.14.9/lib/adler32.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var adler32 = $__require('npm:react@0.14.9/lib/adler32.js');
  var TAG_END = /\/?>/;
  var ReactMarkupChecksum = {
    CHECKSUM_ATTR_NAME: 'data-react-checksum',
    addChecksumToMarkup: function (markup) {
      var checksum = adler32(markup);
      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
    },
    canReuseMarkup: function (markup, element) {
      var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
      existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
      var markupChecksum = adler32(markup);
      return markupChecksum === existingChecksum;
    }
  };
  module.exports = ReactMarkupChecksum;
});
System.registerDynamic('npm:react@0.14.9/lib/ReactServerBatchingStrategy.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2014-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule ReactServerBatchingStrategy
   * @typechecks
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ReactServerBatchingStrategy = {
    isBatchingUpdates: false,
    batchedUpdates: function (callback) {
      // Don't do anything here. During the server rendering we don't want to
      // schedule any updates. We will simply ignore them.
    }
  };

  module.exports = ReactServerBatchingStrategy;
});
System.registerDynamic('npm:react@0.14.9/lib/ReactServerRenderingTransaction.js', ['npm:react@0.14.9/lib/PooledClass.js', 'npm:react@0.14.9/lib/CallbackQueue.js', 'npm:react@0.14.9/lib/Transaction.js', 'npm:react@0.14.9/lib/Object.assign.js', 'npm:fbjs@0.6.1/lib/emptyFunction.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var PooledClass = $__require('npm:react@0.14.9/lib/PooledClass.js');
  var CallbackQueue = $__require('npm:react@0.14.9/lib/CallbackQueue.js');
  var Transaction = $__require('npm:react@0.14.9/lib/Transaction.js');
  var assign = $__require('npm:react@0.14.9/lib/Object.assign.js');
  var emptyFunction = $__require('npm:fbjs@0.6.1/lib/emptyFunction.js');
  var ON_DOM_READY_QUEUEING = {
    initialize: function () {
      this.reactMountReady.reset();
    },
    close: emptyFunction
  };
  var TRANSACTION_WRAPPERS = [ON_DOM_READY_QUEUEING];
  function ReactServerRenderingTransaction(renderToStaticMarkup) {
    this.reinitializeTransaction();
    this.renderToStaticMarkup = renderToStaticMarkup;
    this.reactMountReady = CallbackQueue.getPooled(null);
    this.useCreateElement = false;
  }
  var Mixin = {
    getTransactionWrappers: function () {
      return TRANSACTION_WRAPPERS;
    },
    getReactMountReady: function () {
      return this.reactMountReady;
    },
    destructor: function () {
      CallbackQueue.release(this.reactMountReady);
      this.reactMountReady = null;
    }
  };
  assign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);
  PooledClass.addPoolingTo(ReactServerRenderingTransaction);
  module.exports = ReactServerRenderingTransaction;
});
System.registerDynamic('npm:react@0.14.9/lib/ReactComponentEnvironment.js', ['npm:fbjs@0.6.1/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var invariant = $__require('npm:fbjs@0.6.1/lib/invariant.js');
    var injected = false;
    var ReactComponentEnvironment = {
      unmountIDFromEnvironment: null,
      replaceNodeWithMarkupByID: null,
      processChildrenUpdates: null,
      injection: { injectEnvironment: function (environment) {
          !!injected ? 'production' !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : invariant(false) : undefined;
          ReactComponentEnvironment.unmountIDFromEnvironment = environment.unmountIDFromEnvironment;
          ReactComponentEnvironment.replaceNodeWithMarkupByID = environment.replaceNodeWithMarkupByID;
          ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
          injected = true;
        } }
    };
    module.exports = ReactComponentEnvironment;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/ReactInstanceMap.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule ReactInstanceMap
   */

  'use strict';

  /**
   * `ReactInstanceMap` maintains a mapping from a public facing stateful
   * instance (key) and the internal representation (value). This allows public
   * methods to accept the user facing instance as an argument and map them back
   * to internal methods.
   */

  // TODO: Replace this with ES6: var ReactInstanceMap = new Map();

  var global = this || self,
      GLOBAL = global;
  var ReactInstanceMap = {

    /**
     * This API should be called `delete` but we'd have to make sure to always
     * transform these to strings for IE support. When this transform is fully
     * supported we can rename it.
     */
    remove: function (key) {
      key._reactInternalInstance = undefined;
    },

    get: function (key) {
      return key._reactInternalInstance;
    },

    has: function (key) {
      return key._reactInternalInstance !== undefined;
    },

    set: function (key, value) {
      key._reactInternalInstance = value;
    }

  };

  module.exports = ReactInstanceMap;
});
System.registerDynamic('npm:react@0.14.9/lib/CallbackQueue.js', ['npm:react@0.14.9/lib/PooledClass.js', 'npm:react@0.14.9/lib/Object.assign.js', 'npm:fbjs@0.6.1/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var PooledClass = $__require('npm:react@0.14.9/lib/PooledClass.js');
    var assign = $__require('npm:react@0.14.9/lib/Object.assign.js');
    var invariant = $__require('npm:fbjs@0.6.1/lib/invariant.js');
    function CallbackQueue() {
      this._callbacks = null;
      this._contexts = null;
    }
    assign(CallbackQueue.prototype, {
      enqueue: function (callback, context) {
        this._callbacks = this._callbacks || [];
        this._contexts = this._contexts || [];
        this._callbacks.push(callback);
        this._contexts.push(context);
      },
      notifyAll: function () {
        var callbacks = this._callbacks;
        var contexts = this._contexts;
        if (callbacks) {
          !(callbacks.length === contexts.length) ? 'production' !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : invariant(false) : undefined;
          this._callbacks = null;
          this._contexts = null;
          for (var i = 0; i < callbacks.length; i++) {
            callbacks[i].call(contexts[i]);
          }
          callbacks.length = 0;
          contexts.length = 0;
        }
      },
      reset: function () {
        this._callbacks = null;
        this._contexts = null;
      },
      destructor: function () {
        this.reset();
      }
    });
    PooledClass.addPoolingTo(CallbackQueue);
    module.exports = CallbackQueue;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/ReactPerf.js', ['github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactPerf = {
      enableMeasure: false,
      storedMeasure: _noMeasure,
      measureMethods: function (object, objectName, methodNames) {
        if ('production' !== 'production') {
          for (var key in methodNames) {
            if (!methodNames.hasOwnProperty(key)) {
              continue;
            }
            object[key] = ReactPerf.measure(objectName, methodNames[key], object[key]);
          }
        }
      },
      measure: function (objName, fnName, func) {
        if ('production' !== 'production') {
          var measuredFunc = null;
          var wrapper = function () {
            if (ReactPerf.enableMeasure) {
              if (!measuredFunc) {
                measuredFunc = ReactPerf.storedMeasure(objName, fnName, func);
              }
              return measuredFunc.apply(this, arguments);
            }
            return func.apply(this, arguments);
          };
          wrapper.displayName = objName + '_' + fnName;
          return wrapper;
        }
        return func;
      },
      injection: { injectMeasure: function (measure) {
          ReactPerf.storedMeasure = measure;
        } }
    };
    function _noMeasure(objName, fnName, func) {
      return func;
    }
    module.exports = ReactPerf;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/Transaction.js', ['npm:fbjs@0.6.1/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var invariant = $__require('npm:fbjs@0.6.1/lib/invariant.js');
    var Mixin = {
      reinitializeTransaction: function () {
        this.transactionWrappers = this.getTransactionWrappers();
        if (this.wrapperInitData) {
          this.wrapperInitData.length = 0;
        } else {
          this.wrapperInitData = [];
        }
        this._isInTransaction = false;
      },
      _isInTransaction: false,
      getTransactionWrappers: null,
      isInTransaction: function () {
        return !!this._isInTransaction;
      },
      perform: function (method, scope, a, b, c, d, e, f) {
        !!this.isInTransaction() ? 'production' !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there ' + 'is already an outstanding transaction.') : invariant(false) : undefined;
        var errorThrown;
        var ret;
        try {
          this._isInTransaction = true;
          errorThrown = true;
          this.initializeAll(0);
          ret = method.call(scope, a, b, c, d, e, f);
          errorThrown = false;
        } finally {
          try {
            if (errorThrown) {
              try {
                this.closeAll(0);
              } catch (err) {}
            } else {
              this.closeAll(0);
            }
          } finally {
            this._isInTransaction = false;
          }
        }
        return ret;
      },
      initializeAll: function (startIndex) {
        var transactionWrappers = this.transactionWrappers;
        for (var i = startIndex; i < transactionWrappers.length; i++) {
          var wrapper = transactionWrappers[i];
          try {
            this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
            this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
          } finally {
            if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
              try {
                this.initializeAll(i + 1);
              } catch (err) {}
            }
          }
        }
      },
      closeAll: function (startIndex) {
        !this.isInTransaction() ? 'production' !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : invariant(false) : undefined;
        var transactionWrappers = this.transactionWrappers;
        for (var i = startIndex; i < transactionWrappers.length; i++) {
          var wrapper = transactionWrappers[i];
          var initData = this.wrapperInitData[i];
          var errorThrown;
          try {
            errorThrown = true;
            if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {
              wrapper.close.call(this, initData);
            }
            errorThrown = false;
          } finally {
            if (errorThrown) {
              try {
                this.closeAll(i + 1);
              } catch (e) {}
            }
          }
        }
        this.wrapperInitData.length = 0;
      }
    };
    var Transaction = {
      Mixin: Mixin,
      OBSERVED_ERROR: {}
    };
    module.exports = Transaction;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/ReactUpdates.js', ['npm:react@0.14.9/lib/CallbackQueue.js', 'npm:react@0.14.9/lib/PooledClass.js', 'npm:react@0.14.9/lib/ReactPerf.js', 'npm:react@0.14.9/lib/ReactReconciler.js', 'npm:react@0.14.9/lib/Transaction.js', 'npm:react@0.14.9/lib/Object.assign.js', 'npm:fbjs@0.6.1/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var CallbackQueue = $__require('npm:react@0.14.9/lib/CallbackQueue.js');
    var PooledClass = $__require('npm:react@0.14.9/lib/PooledClass.js');
    var ReactPerf = $__require('npm:react@0.14.9/lib/ReactPerf.js');
    var ReactReconciler = $__require('npm:react@0.14.9/lib/ReactReconciler.js');
    var Transaction = $__require('npm:react@0.14.9/lib/Transaction.js');
    var assign = $__require('npm:react@0.14.9/lib/Object.assign.js');
    var invariant = $__require('npm:fbjs@0.6.1/lib/invariant.js');
    var dirtyComponents = [];
    var asapCallbackQueue = CallbackQueue.getPooled();
    var asapEnqueued = false;
    var batchingStrategy = null;
    function ensureInjected() {
      !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? 'production' !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching ' + 'strategy') : invariant(false) : undefined;
    }
    var NESTED_UPDATES = {
      initialize: function () {
        this.dirtyComponentsLength = dirtyComponents.length;
      },
      close: function () {
        if (this.dirtyComponentsLength !== dirtyComponents.length) {
          dirtyComponents.splice(0, this.dirtyComponentsLength);
          flushBatchedUpdates();
        } else {
          dirtyComponents.length = 0;
        }
      }
    };
    var UPDATE_QUEUEING = {
      initialize: function () {
        this.callbackQueue.reset();
      },
      close: function () {
        this.callbackQueue.notifyAll();
      }
    };
    var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];
    function ReactUpdatesFlushTransaction() {
      this.reinitializeTransaction();
      this.dirtyComponentsLength = null;
      this.callbackQueue = CallbackQueue.getPooled();
      this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(false);
    }
    assign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {
      getTransactionWrappers: function () {
        return TRANSACTION_WRAPPERS;
      },
      destructor: function () {
        this.dirtyComponentsLength = null;
        CallbackQueue.release(this.callbackQueue);
        this.callbackQueue = null;
        ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
        this.reconcileTransaction = null;
      },
      perform: function (method, scope, a) {
        return Transaction.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
      }
    });
    PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);
    function batchedUpdates(callback, a, b, c, d, e) {
      ensureInjected();
      batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
    }
    function mountOrderComparator(c1, c2) {
      return c1._mountOrder - c2._mountOrder;
    }
    function runBatchedUpdates(transaction) {
      var len = transaction.dirtyComponentsLength;
      !(len === dirtyComponents.length) ? 'production' !== 'production' ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to ' + 'match dirty-components array length (%s).', len, dirtyComponents.length) : invariant(false) : undefined;
      dirtyComponents.sort(mountOrderComparator);
      for (var i = 0; i < len; i++) {
        var component = dirtyComponents[i];
        var callbacks = component._pendingCallbacks;
        component._pendingCallbacks = null;
        ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction);
        if (callbacks) {
          for (var j = 0; j < callbacks.length; j++) {
            transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
          }
        }
      }
    }
    var flushBatchedUpdates = function () {
      while (dirtyComponents.length || asapEnqueued) {
        if (dirtyComponents.length) {
          var transaction = ReactUpdatesFlushTransaction.getPooled();
          transaction.perform(runBatchedUpdates, null, transaction);
          ReactUpdatesFlushTransaction.release(transaction);
        }
        if (asapEnqueued) {
          asapEnqueued = false;
          var queue = asapCallbackQueue;
          asapCallbackQueue = CallbackQueue.getPooled();
          queue.notifyAll();
          CallbackQueue.release(queue);
        }
      }
    };
    flushBatchedUpdates = ReactPerf.measure('ReactUpdates', 'flushBatchedUpdates', flushBatchedUpdates);
    function enqueueUpdate(component) {
      ensureInjected();
      if (!batchingStrategy.isBatchingUpdates) {
        batchingStrategy.batchedUpdates(enqueueUpdate, component);
        return;
      }
      dirtyComponents.push(component);
    }
    function asap(callback, context) {
      !batchingStrategy.isBatchingUpdates ? 'production' !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context where' + 'updates are not being batched.') : invariant(false) : undefined;
      asapCallbackQueue.enqueue(callback, context);
      asapEnqueued = true;
    }
    var ReactUpdatesInjection = {
      injectReconcileTransaction: function (ReconcileTransaction) {
        !ReconcileTransaction ? 'production' !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : invariant(false) : undefined;
        ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
      },
      injectBatchingStrategy: function (_batchingStrategy) {
        !_batchingStrategy ? 'production' !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : invariant(false) : undefined;
        !(typeof _batchingStrategy.batchedUpdates === 'function') ? 'production' !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : invariant(false) : undefined;
        !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? 'production' !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : invariant(false) : undefined;
        batchingStrategy = _batchingStrategy;
      }
    };
    var ReactUpdates = {
      ReactReconcileTransaction: null,
      batchedUpdates: batchedUpdates,
      enqueueUpdate: enqueueUpdate,
      flushBatchedUpdates: flushBatchedUpdates,
      injection: ReactUpdatesInjection,
      asap: asap
    };
    module.exports = ReactUpdates;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/ReactUpdateQueue.js', ['npm:react@0.14.9/lib/ReactCurrentOwner.js', 'npm:react@0.14.9/lib/ReactElement.js', 'npm:react@0.14.9/lib/ReactInstanceMap.js', 'npm:react@0.14.9/lib/ReactUpdates.js', 'npm:react@0.14.9/lib/Object.assign.js', 'npm:fbjs@0.6.1/lib/invariant.js', 'npm:fbjs@0.6.1/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactCurrentOwner = $__require('npm:react@0.14.9/lib/ReactCurrentOwner.js');
    var ReactElement = $__require('npm:react@0.14.9/lib/ReactElement.js');
    var ReactInstanceMap = $__require('npm:react@0.14.9/lib/ReactInstanceMap.js');
    var ReactUpdates = $__require('npm:react@0.14.9/lib/ReactUpdates.js');
    var assign = $__require('npm:react@0.14.9/lib/Object.assign.js');
    var invariant = $__require('npm:fbjs@0.6.1/lib/invariant.js');
    var warning = $__require('npm:fbjs@0.6.1/lib/warning.js');
    function enqueueUpdate(internalInstance) {
      ReactUpdates.enqueueUpdate(internalInstance);
    }
    function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
      var internalInstance = ReactInstanceMap.get(publicInstance);
      if (!internalInstance) {
        if ('production' !== 'production') {
          'production' !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor.displayName) : undefined;
        }
        return null;
      }
      if ('production' !== 'production') {
        'production' !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition ' + '(such as within `render`). Render methods should be a pure function ' + 'of props and state.', callerName) : undefined;
      }
      return internalInstance;
    }
    var ReactUpdateQueue = {
      isMounted: function (publicInstance) {
        if ('production' !== 'production') {
          var owner = ReactCurrentOwner.current;
          if (owner !== null) {
            'production' !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : undefined;
            owner._warnedAboutRefsInRender = true;
          }
        }
        var internalInstance = ReactInstanceMap.get(publicInstance);
        if (internalInstance) {
          return !!internalInstance._renderedComponent;
        } else {
          return false;
        }
      },
      enqueueCallback: function (publicInstance, callback) {
        !(typeof callback === 'function') ? 'production' !== 'production' ? invariant(false, 'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + '`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 'isn\'t callable.') : invariant(false) : undefined;
        var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);
        if (!internalInstance) {
          return null;
        }
        if (internalInstance._pendingCallbacks) {
          internalInstance._pendingCallbacks.push(callback);
        } else {
          internalInstance._pendingCallbacks = [callback];
        }
        enqueueUpdate(internalInstance);
      },
      enqueueCallbackInternal: function (internalInstance, callback) {
        !(typeof callback === 'function') ? 'production' !== 'production' ? invariant(false, 'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + '`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 'isn\'t callable.') : invariant(false) : undefined;
        if (internalInstance._pendingCallbacks) {
          internalInstance._pendingCallbacks.push(callback);
        } else {
          internalInstance._pendingCallbacks = [callback];
        }
        enqueueUpdate(internalInstance);
      },
      enqueueForceUpdate: function (publicInstance) {
        var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');
        if (!internalInstance) {
          return;
        }
        internalInstance._pendingForceUpdate = true;
        enqueueUpdate(internalInstance);
      },
      enqueueReplaceState: function (publicInstance, completeState) {
        var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');
        if (!internalInstance) {
          return;
        }
        internalInstance._pendingStateQueue = [completeState];
        internalInstance._pendingReplaceState = true;
        enqueueUpdate(internalInstance);
      },
      enqueueSetState: function (publicInstance, partialState) {
        var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');
        if (!internalInstance) {
          return;
        }
        var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
        queue.push(partialState);
        enqueueUpdate(internalInstance);
      },
      enqueueSetProps: function (publicInstance, partialProps) {
        var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setProps');
        if (!internalInstance) {
          return;
        }
        ReactUpdateQueue.enqueueSetPropsInternal(internalInstance, partialProps);
      },
      enqueueSetPropsInternal: function (internalInstance, partialProps) {
        var topLevelWrapper = internalInstance._topLevelWrapper;
        !topLevelWrapper ? 'production' !== 'production' ? invariant(false, 'setProps(...): You called `setProps` on a ' + 'component with a parent. This is an anti-pattern since props will ' + 'get reactively updated when rendered. Instead, change the owner\'s ' + '`render` method to pass the correct value as props to the component ' + 'where it is created.') : invariant(false) : undefined;
        var wrapElement = topLevelWrapper._pendingElement || topLevelWrapper._currentElement;
        var element = wrapElement.props;
        var props = assign({}, element.props, partialProps);
        topLevelWrapper._pendingElement = ReactElement.cloneAndReplaceProps(wrapElement, ReactElement.cloneAndReplaceProps(element, props));
        enqueueUpdate(topLevelWrapper);
      },
      enqueueReplaceProps: function (publicInstance, props) {
        var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceProps');
        if (!internalInstance) {
          return;
        }
        ReactUpdateQueue.enqueueReplacePropsInternal(internalInstance, props);
      },
      enqueueReplacePropsInternal: function (internalInstance, props) {
        var topLevelWrapper = internalInstance._topLevelWrapper;
        !topLevelWrapper ? 'production' !== 'production' ? invariant(false, 'replaceProps(...): You called `replaceProps` on a ' + 'component with a parent. This is an anti-pattern since props will ' + 'get reactively updated when rendered. Instead, change the owner\'s ' + '`render` method to pass the correct value as props to the component ' + 'where it is created.') : invariant(false) : undefined;
        var wrapElement = topLevelWrapper._pendingElement || topLevelWrapper._currentElement;
        var element = wrapElement.props;
        topLevelWrapper._pendingElement = ReactElement.cloneAndReplaceProps(wrapElement, ReactElement.cloneAndReplaceProps(element, props));
        enqueueUpdate(topLevelWrapper);
      },
      enqueueElementInternal: function (internalInstance, newElement) {
        internalInstance._pendingElement = newElement;
        enqueueUpdate(internalInstance);
      }
    };
    module.exports = ReactUpdateQueue;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/shouldUpdateReactComponent.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule shouldUpdateReactComponent
   * @typechecks static-only
   */

  'use strict';

  /**
   * Given a `prevElement` and `nextElement`, determines if the existing
   * instance should be updated as opposed to being destroyed or replaced by a new
   * instance. Both arguments are elements. This ensures that this logic can
   * operate on stateless trees without any backing instance.
   *
   * @param {?object} prevElement
   * @param {?object} nextElement
   * @return {boolean} True if the existing instance should be updated.
   * @protected
   */

  var global = this || self,
      GLOBAL = global;
  function shouldUpdateReactComponent(prevElement, nextElement) {
    var prevEmpty = prevElement === null || prevElement === false;
    var nextEmpty = nextElement === null || nextElement === false;
    if (prevEmpty || nextEmpty) {
      return prevEmpty === nextEmpty;
    }

    var prevType = typeof prevElement;
    var nextType = typeof nextElement;
    if (prevType === 'string' || prevType === 'number') {
      return nextType === 'string' || nextType === 'number';
    } else {
      return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
    }
    return false;
  }

  module.exports = shouldUpdateReactComponent;
});
System.registerDynamic('npm:react@0.14.9/lib/ReactCompositeComponent.js', ['npm:react@0.14.9/lib/ReactComponentEnvironment.js', 'npm:react@0.14.9/lib/ReactCurrentOwner.js', 'npm:react@0.14.9/lib/ReactElement.js', 'npm:react@0.14.9/lib/ReactInstanceMap.js', 'npm:react@0.14.9/lib/ReactPerf.js', 'npm:react@0.14.9/lib/ReactPropTypeLocations.js', 'npm:react@0.14.9/lib/ReactPropTypeLocationNames.js', 'npm:react@0.14.9/lib/ReactReconciler.js', 'npm:react@0.14.9/lib/ReactUpdateQueue.js', 'npm:react@0.14.9/lib/Object.assign.js', 'npm:fbjs@0.6.1/lib/emptyObject.js', 'npm:fbjs@0.6.1/lib/invariant.js', 'npm:react@0.14.9/lib/shouldUpdateReactComponent.js', 'npm:fbjs@0.6.1/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactComponentEnvironment = $__require('npm:react@0.14.9/lib/ReactComponentEnvironment.js');
    var ReactCurrentOwner = $__require('npm:react@0.14.9/lib/ReactCurrentOwner.js');
    var ReactElement = $__require('npm:react@0.14.9/lib/ReactElement.js');
    var ReactInstanceMap = $__require('npm:react@0.14.9/lib/ReactInstanceMap.js');
    var ReactPerf = $__require('npm:react@0.14.9/lib/ReactPerf.js');
    var ReactPropTypeLocations = $__require('npm:react@0.14.9/lib/ReactPropTypeLocations.js');
    var ReactPropTypeLocationNames = $__require('npm:react@0.14.9/lib/ReactPropTypeLocationNames.js');
    var ReactReconciler = $__require('npm:react@0.14.9/lib/ReactReconciler.js');
    var ReactUpdateQueue = $__require('npm:react@0.14.9/lib/ReactUpdateQueue.js');
    var assign = $__require('npm:react@0.14.9/lib/Object.assign.js');
    var emptyObject = $__require('npm:fbjs@0.6.1/lib/emptyObject.js');
    var invariant = $__require('npm:fbjs@0.6.1/lib/invariant.js');
    var shouldUpdateReactComponent = $__require('npm:react@0.14.9/lib/shouldUpdateReactComponent.js');
    var warning = $__require('npm:fbjs@0.6.1/lib/warning.js');
    function getDeclarationErrorAddendum(component) {
      var owner = component._currentElement._owner || null;
      if (owner) {
        var name = owner.getName();
        if (name) {
          return ' Check the render method of `' + name + '`.';
        }
      }
      return '';
    }
    function StatelessComponent(Component) {}
    StatelessComponent.prototype.render = function () {
      var Component = ReactInstanceMap.get(this)._currentElement.type;
      return Component(this.props, this.context, this.updater);
    };
    var nextMountID = 1;
    var ReactCompositeComponentMixin = {
      construct: function (element) {
        this._currentElement = element;
        this._rootNodeID = null;
        this._instance = null;
        this._pendingElement = null;
        this._pendingStateQueue = null;
        this._pendingReplaceState = false;
        this._pendingForceUpdate = false;
        this._renderedComponent = null;
        this._context = null;
        this._mountOrder = 0;
        this._topLevelWrapper = null;
        this._pendingCallbacks = null;
      },
      mountComponent: function (rootID, transaction, context) {
        this._context = context;
        this._mountOrder = nextMountID++;
        this._rootNodeID = rootID;
        var publicProps = this._processProps(this._currentElement.props);
        var publicContext = this._processContext(context);
        var Component = this._currentElement.type;
        var inst;
        var renderedElement;
        var canInstantiate = 'prototype' in Component;
        if (canInstantiate) {
          if ('production' !== 'production') {
            ReactCurrentOwner.current = this;
            try {
              inst = new Component(publicProps, publicContext, ReactUpdateQueue);
            } finally {
              ReactCurrentOwner.current = null;
            }
          } else {
            inst = new Component(publicProps, publicContext, ReactUpdateQueue);
          }
        }
        if (!canInstantiate || inst === null || inst === false || ReactElement.isValidElement(inst)) {
          renderedElement = inst;
          inst = new StatelessComponent(Component);
        }
        if ('production' !== 'production') {
          if (inst.render == null) {
            'production' !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`, returned ' + 'null/false from a stateless component, or tried to render an ' + 'element whose type is a function that isn\'t a React component.', Component.displayName || Component.name || 'Component') : undefined;
          } else {
            'production' !== 'production' ? warning(Component.prototype && Component.prototype.isReactComponent || !canInstantiate || !(inst instanceof Component), '%s(...): React component classes must extend React.Component.', Component.displayName || Component.name || 'Component') : undefined;
          }
        }
        inst.props = publicProps;
        inst.context = publicContext;
        inst.refs = emptyObject;
        inst.updater = ReactUpdateQueue;
        this._instance = inst;
        ReactInstanceMap.set(inst, this);
        if ('production' !== 'production') {
          'production' !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : undefined;
          'production' !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : undefined;
          'production' !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : undefined;
          'production' !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : undefined;
          'production' !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : undefined;
          'production' !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : undefined;
          'production' !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : undefined;
        }
        var initialState = inst.state;
        if (initialState === undefined) {
          inst.state = initialState = null;
        }
        !(typeof initialState === 'object' && !Array.isArray(initialState)) ? 'production' !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;
        this._pendingStateQueue = null;
        this._pendingReplaceState = false;
        this._pendingForceUpdate = false;
        if (inst.componentWillMount) {
          inst.componentWillMount();
          if (this._pendingStateQueue) {
            inst.state = this._processPendingState(inst.props, inst.context);
          }
        }
        if (renderedElement === undefined) {
          renderedElement = this._renderValidatedComponent();
        }
        this._renderedComponent = this._instantiateReactComponent(renderedElement);
        var markup = ReactReconciler.mountComponent(this._renderedComponent, rootID, transaction, this._processChildContext(context));
        if (inst.componentDidMount) {
          transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
        }
        return markup;
      },
      unmountComponent: function () {
        var inst = this._instance;
        if (inst.componentWillUnmount) {
          inst.componentWillUnmount();
        }
        ReactReconciler.unmountComponent(this._renderedComponent);
        this._renderedComponent = null;
        this._instance = null;
        this._pendingStateQueue = null;
        this._pendingReplaceState = false;
        this._pendingForceUpdate = false;
        this._pendingCallbacks = null;
        this._pendingElement = null;
        this._context = null;
        this._rootNodeID = null;
        this._topLevelWrapper = null;
        ReactInstanceMap.remove(inst);
      },
      _maskContext: function (context) {
        var maskedContext = null;
        var Component = this._currentElement.type;
        var contextTypes = Component.contextTypes;
        if (!contextTypes) {
          return emptyObject;
        }
        maskedContext = {};
        for (var contextName in contextTypes) {
          maskedContext[contextName] = context[contextName];
        }
        return maskedContext;
      },
      _processContext: function (context) {
        var maskedContext = this._maskContext(context);
        if ('production' !== 'production') {
          var Component = this._currentElement.type;
          if (Component.contextTypes) {
            this._checkPropTypes(Component.contextTypes, maskedContext, ReactPropTypeLocations.context);
          }
        }
        return maskedContext;
      },
      _processChildContext: function (currentContext) {
        var Component = this._currentElement.type;
        var inst = this._instance;
        var childContext = inst.getChildContext && inst.getChildContext();
        if (childContext) {
          !(typeof Component.childContextTypes === 'object') ? 'production' !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;
          if ('production' !== 'production') {
            this._checkPropTypes(Component.childContextTypes, childContext, ReactPropTypeLocations.childContext);
          }
          for (var name in childContext) {
            !(name in Component.childContextTypes) ? 'production' !== 'production' ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : invariant(false) : undefined;
          }
          return assign({}, currentContext, childContext);
        }
        return currentContext;
      },
      _processProps: function (newProps) {
        if ('production' !== 'production') {
          var Component = this._currentElement.type;
          if (Component.propTypes) {
            this._checkPropTypes(Component.propTypes, newProps, ReactPropTypeLocations.prop);
          }
        }
        return newProps;
      },
      _checkPropTypes: function (propTypes, props, location) {
        var componentName = this.getName();
        for (var propName in propTypes) {
          if (propTypes.hasOwnProperty(propName)) {
            var error;
            try {
              !(typeof propTypes[propName] === 'function') ? 'production' !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually ' + 'from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : undefined;
              error = propTypes[propName](props, propName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
            } catch (ex) {
              error = ex;
            }
            if (error instanceof Error) {
              var addendum = getDeclarationErrorAddendum(this);
              if (location === ReactPropTypeLocations.prop) {
                'production' !== 'production' ? warning(false, 'Failed Composite propType: %s%s', error.message, addendum) : undefined;
              } else {
                'production' !== 'production' ? warning(false, 'Failed Context Types: %s%s', error.message, addendum) : undefined;
              }
            }
          }
        }
      },
      receiveComponent: function (nextElement, transaction, nextContext) {
        var prevElement = this._currentElement;
        var prevContext = this._context;
        this._pendingElement = null;
        this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
      },
      performUpdateIfNecessary: function (transaction) {
        if (this._pendingElement != null) {
          ReactReconciler.receiveComponent(this, this._pendingElement || this._currentElement, transaction, this._context);
        }
        if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
          this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
        }
      },
      updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
        var inst = this._instance;
        var nextContext = this._context === nextUnmaskedContext ? inst.context : this._processContext(nextUnmaskedContext);
        var nextProps;
        if (prevParentElement === nextParentElement) {
          nextProps = nextParentElement.props;
        } else {
          nextProps = this._processProps(nextParentElement.props);
          if (inst.componentWillReceiveProps) {
            inst.componentWillReceiveProps(nextProps, nextContext);
          }
        }
        var nextState = this._processPendingState(nextProps, nextContext);
        var shouldUpdate = this._pendingForceUpdate || !inst.shouldComponentUpdate || inst.shouldComponentUpdate(nextProps, nextState, nextContext);
        if ('production' !== 'production') {
          'production' !== 'production' ? warning(typeof shouldUpdate !== 'undefined', '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : undefined;
        }
        if (shouldUpdate) {
          this._pendingForceUpdate = false;
          this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
        } else {
          this._currentElement = nextParentElement;
          this._context = nextUnmaskedContext;
          inst.props = nextProps;
          inst.state = nextState;
          inst.context = nextContext;
        }
      },
      _processPendingState: function (props, context) {
        var inst = this._instance;
        var queue = this._pendingStateQueue;
        var replace = this._pendingReplaceState;
        this._pendingReplaceState = false;
        this._pendingStateQueue = null;
        if (!queue) {
          return inst.state;
        }
        if (replace && queue.length === 1) {
          return queue[0];
        }
        var nextState = assign({}, replace ? queue[0] : inst.state);
        for (var i = replace ? 1 : 0; i < queue.length; i++) {
          var partial = queue[i];
          assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
        }
        return nextState;
      },
      _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
        var inst = this._instance;
        var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
        var prevProps;
        var prevState;
        var prevContext;
        if (hasComponentDidUpdate) {
          prevProps = inst.props;
          prevState = inst.state;
          prevContext = inst.context;
        }
        if (inst.componentWillUpdate) {
          inst.componentWillUpdate(nextProps, nextState, nextContext);
        }
        this._currentElement = nextElement;
        this._context = unmaskedContext;
        inst.props = nextProps;
        inst.state = nextState;
        inst.context = nextContext;
        this._updateRenderedComponent(transaction, unmaskedContext);
        if (hasComponentDidUpdate) {
          transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
        }
      },
      _updateRenderedComponent: function (transaction, context) {
        var prevComponentInstance = this._renderedComponent;
        var prevRenderedElement = prevComponentInstance._currentElement;
        var nextRenderedElement = this._renderValidatedComponent();
        if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
          ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
        } else {
          var thisID = this._rootNodeID;
          var prevComponentID = prevComponentInstance._rootNodeID;
          ReactReconciler.unmountComponent(prevComponentInstance);
          this._renderedComponent = this._instantiateReactComponent(nextRenderedElement);
          var nextMarkup = ReactReconciler.mountComponent(this._renderedComponent, thisID, transaction, this._processChildContext(context));
          this._replaceNodeWithMarkupByID(prevComponentID, nextMarkup);
        }
      },
      _replaceNodeWithMarkupByID: function (prevComponentID, nextMarkup) {
        ReactComponentEnvironment.replaceNodeWithMarkupByID(prevComponentID, nextMarkup);
      },
      _renderValidatedComponentWithoutOwnerOrContext: function () {
        var inst = this._instance;
        var renderedComponent = inst.render();
        if ('production' !== 'production') {
          if (typeof renderedComponent === 'undefined' && inst.render._isMockFunction) {
            renderedComponent = null;
          }
        }
        return renderedComponent;
      },
      _renderValidatedComponent: function () {
        var renderedComponent;
        ReactCurrentOwner.current = this;
        try {
          renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
        } finally {
          ReactCurrentOwner.current = null;
        }
        !(renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ? 'production' !== 'production' ? invariant(false, '%s.render(): A valid ReactComponent must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;
        return renderedComponent;
      },
      attachRef: function (ref, component) {
        var inst = this.getPublicInstance();
        !(inst != null) ? 'production' !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : invariant(false) : undefined;
        var publicComponentInstance = component.getPublicInstance();
        if ('production' !== 'production') {
          var componentName = component && component.getName ? component.getName() : 'a component';
          'production' !== 'production' ? warning(publicComponentInstance != null, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : undefined;
        }
        var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
        refs[ref] = publicComponentInstance;
      },
      detachRef: function (ref) {
        var refs = this.getPublicInstance().refs;
        delete refs[ref];
      },
      getName: function () {
        var type = this._currentElement.type;
        var constructor = this._instance && this._instance.constructor;
        return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
      },
      getPublicInstance: function () {
        var inst = this._instance;
        if (inst instanceof StatelessComponent) {
          return null;
        }
        return inst;
      },
      _instantiateReactComponent: null
    };
    ReactPerf.measureMethods(ReactCompositeComponentMixin, 'ReactCompositeComponent', {
      mountComponent: 'mountComponent',
      updateComponent: 'updateComponent',
      _renderValidatedComponent: '_renderValidatedComponent'
    });
    var ReactCompositeComponent = { Mixin: ReactCompositeComponentMixin };
    module.exports = ReactCompositeComponent;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/ReactEmptyComponentRegistry.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2014-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule ReactEmptyComponentRegistry
   */

  'use strict';

  // This registry keeps track of the React IDs of the components that rendered to
  // `null` (in reality a placeholder such as `noscript`)

  var global = this || self,
      GLOBAL = global;
  var nullComponentIDsRegistry = {};

  /**
   * @param {string} id Component's `_rootNodeID`.
   * @return {boolean} True if the component is rendered to null.
   */
  function isNullComponentID(id) {
    return !!nullComponentIDsRegistry[id];
  }

  /**
   * Mark the component as having rendered to null.
   * @param {string} id Component's `_rootNodeID`.
   */
  function registerNullComponentID(id) {
    nullComponentIDsRegistry[id] = true;
  }

  /**
   * Unmark the component as having rendered to null: it renders to something now.
   * @param {string} id Component's `_rootNodeID`.
   */
  function deregisterNullComponentID(id) {
    delete nullComponentIDsRegistry[id];
  }

  var ReactEmptyComponentRegistry = {
    isNullComponentID: isNullComponentID,
    registerNullComponentID: registerNullComponentID,
    deregisterNullComponentID: deregisterNullComponentID
  };

  module.exports = ReactEmptyComponentRegistry;
});
System.registerDynamic('npm:react@0.14.9/lib/ReactOwner.js', ['npm:fbjs@0.6.1/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var invariant = $__require('npm:fbjs@0.6.1/lib/invariant.js');
    var ReactOwner = {
      isValidOwner: function (object) {
        return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
      },
      addComponentAsRefTo: function (component, ref, owner) {
        !ReactOwner.isValidOwner(owner) ? 'production' !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might ' + 'be adding a ref to a component that was not created inside a component\'s ' + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).') : invariant(false) : undefined;
        owner.attachRef(ref, component);
      },
      removeComponentAsRefFrom: function (component, ref, owner) {
        !ReactOwner.isValidOwner(owner) ? 'production' !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might ' + 'be removing a ref to a component that was not created inside a component\'s ' + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).') : invariant(false) : undefined;
        if (owner.getPublicInstance().refs[ref] === component.getPublicInstance()) {
          owner.detachRef(ref);
        }
      }
    };
    module.exports = ReactOwner;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/ReactRef.js', ['npm:react@0.14.9/lib/ReactOwner.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactOwner = $__require('npm:react@0.14.9/lib/ReactOwner.js');
    var ReactRef = {};
    function attachRef(ref, component, owner) {
      if (typeof ref === 'function') {
        ref(component.getPublicInstance());
      } else {
        ReactOwner.addComponentAsRefTo(component, ref, owner);
      }
    }
    function detachRef(ref, component, owner) {
      if (typeof ref === 'function') {
        ref(null);
      } else {
        ReactOwner.removeComponentAsRefFrom(component, ref, owner);
      }
    }
    ReactRef.attachRefs = function (instance, element) {
      if (element === null || element === false) {
        return;
      }
      var ref = element.ref;
      if (ref != null) {
        attachRef(ref, instance, element._owner);
      }
    };
    ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
      var prevEmpty = prevElement === null || prevElement === false;
      var nextEmpty = nextElement === null || nextElement === false;
      return prevEmpty || nextEmpty || nextElement._owner !== prevElement._owner || nextElement.ref !== prevElement.ref;
    };
    ReactRef.detachRefs = function (instance, element) {
      if (element === null || element === false) {
        return;
      }
      var ref = element.ref;
      if (ref != null) {
        detachRef(ref, instance, element._owner);
      }
    };
    module.exports = ReactRef;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/ReactReconciler.js', ['npm:react@0.14.9/lib/ReactRef.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ReactRef = $__require('npm:react@0.14.9/lib/ReactRef.js');
  function attachRefs() {
    ReactRef.attachRefs(this, this._currentElement);
  }
  var ReactReconciler = {
    mountComponent: function (internalInstance, rootID, transaction, context) {
      var markup = internalInstance.mountComponent(rootID, transaction, context);
      if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
        transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
      }
      return markup;
    },
    unmountComponent: function (internalInstance) {
      ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
      internalInstance.unmountComponent();
    },
    receiveComponent: function (internalInstance, nextElement, transaction, context) {
      var prevElement = internalInstance._currentElement;
      if (nextElement === prevElement && context === internalInstance._context) {
        return;
      }
      var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);
      if (refsChanged) {
        ReactRef.detachRefs(internalInstance, prevElement);
      }
      internalInstance.receiveComponent(nextElement, transaction, context);
      if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
        transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
      }
    },
    performUpdateIfNecessary: function (internalInstance, transaction) {
      internalInstance.performUpdateIfNecessary(transaction);
    }
  };
  module.exports = ReactReconciler;
});
System.registerDynamic('npm:react@0.14.9/lib/ReactEmptyComponent.js', ['npm:react@0.14.9/lib/ReactElement.js', 'npm:react@0.14.9/lib/ReactEmptyComponentRegistry.js', 'npm:react@0.14.9/lib/ReactReconciler.js', 'npm:react@0.14.9/lib/Object.assign.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ReactElement = $__require('npm:react@0.14.9/lib/ReactElement.js');
  var ReactEmptyComponentRegistry = $__require('npm:react@0.14.9/lib/ReactEmptyComponentRegistry.js');
  var ReactReconciler = $__require('npm:react@0.14.9/lib/ReactReconciler.js');
  var assign = $__require('npm:react@0.14.9/lib/Object.assign.js');
  var placeholderElement;
  var ReactEmptyComponentInjection = { injectEmptyComponent: function (component) {
      placeholderElement = ReactElement.createElement(component);
    } };
  function registerNullComponentID() {
    ReactEmptyComponentRegistry.registerNullComponentID(this._rootNodeID);
  }
  var ReactEmptyComponent = function (instantiate) {
    this._currentElement = null;
    this._rootNodeID = null;
    this._renderedComponent = instantiate(placeholderElement);
  };
  assign(ReactEmptyComponent.prototype, {
    construct: function (element) {},
    mountComponent: function (rootID, transaction, context) {
      transaction.getReactMountReady().enqueue(registerNullComponentID, this);
      this._rootNodeID = rootID;
      return ReactReconciler.mountComponent(this._renderedComponent, rootID, transaction, context);
    },
    receiveComponent: function () {},
    unmountComponent: function (rootID, transaction, context) {
      ReactReconciler.unmountComponent(this._renderedComponent);
      ReactEmptyComponentRegistry.deregisterNullComponentID(this._rootNodeID);
      this._rootNodeID = null;
      this._renderedComponent = null;
    }
  });
  ReactEmptyComponent.injection = ReactEmptyComponentInjection;
  module.exports = ReactEmptyComponent;
});
System.registerDynamic('npm:react@0.14.9/lib/ReactNativeComponent.js', ['npm:react@0.14.9/lib/Object.assign.js', 'npm:fbjs@0.6.1/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var assign = $__require('npm:react@0.14.9/lib/Object.assign.js');
    var invariant = $__require('npm:fbjs@0.6.1/lib/invariant.js');
    var autoGenerateWrapperClass = null;
    var genericComponentClass = null;
    var tagToComponentClass = {};
    var textComponentClass = null;
    var ReactNativeComponentInjection = {
      injectGenericComponentClass: function (componentClass) {
        genericComponentClass = componentClass;
      },
      injectTextComponentClass: function (componentClass) {
        textComponentClass = componentClass;
      },
      injectComponentClasses: function (componentClasses) {
        assign(tagToComponentClass, componentClasses);
      }
    };
    function getComponentClassForElement(element) {
      if (typeof element.type === 'function') {
        return element.type;
      }
      var tag = element.type;
      var componentClass = tagToComponentClass[tag];
      if (componentClass == null) {
        tagToComponentClass[tag] = componentClass = autoGenerateWrapperClass(tag);
      }
      return componentClass;
    }
    function createInternalComponent(element) {
      !genericComponentClass ? 'production' !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : invariant(false) : undefined;
      return new genericComponentClass(element.type, element.props);
    }
    function createInstanceForText(text) {
      return new textComponentClass(text);
    }
    function isTextComponent(component) {
      return component instanceof textComponentClass;
    }
    var ReactNativeComponent = {
      getComponentClassForElement: getComponentClassForElement,
      createInternalComponent: createInternalComponent,
      createInstanceForText: createInstanceForText,
      isTextComponent: isTextComponent,
      injection: ReactNativeComponentInjection
    };
    module.exports = ReactNativeComponent;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/instantiateReactComponent.js', ['npm:react@0.14.9/lib/ReactCompositeComponent.js', 'npm:react@0.14.9/lib/ReactEmptyComponent.js', 'npm:react@0.14.9/lib/ReactNativeComponent.js', 'npm:react@0.14.9/lib/Object.assign.js', 'npm:fbjs@0.6.1/lib/invariant.js', 'npm:fbjs@0.6.1/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactCompositeComponent = $__require('npm:react@0.14.9/lib/ReactCompositeComponent.js');
    var ReactEmptyComponent = $__require('npm:react@0.14.9/lib/ReactEmptyComponent.js');
    var ReactNativeComponent = $__require('npm:react@0.14.9/lib/ReactNativeComponent.js');
    var assign = $__require('npm:react@0.14.9/lib/Object.assign.js');
    var invariant = $__require('npm:fbjs@0.6.1/lib/invariant.js');
    var warning = $__require('npm:fbjs@0.6.1/lib/warning.js');
    var ReactCompositeComponentWrapper = function () {};
    assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent.Mixin, { _instantiateReactComponent: instantiateReactComponent });
    function getDeclarationErrorAddendum(owner) {
      if (owner) {
        var name = owner.getName();
        if (name) {
          return ' Check the render method of `' + name + '`.';
        }
      }
      return '';
    }
    function isInternalComponentType(type) {
      return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
    }
    function instantiateReactComponent(node) {
      var instance;
      if (node === null || node === false) {
        instance = new ReactEmptyComponent(instantiateReactComponent);
      } else if (typeof node === 'object') {
        var element = node;
        !(element && (typeof element.type === 'function' || typeof element.type === 'string')) ? 'production' !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) ' + 'or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : invariant(false) : undefined;
        if (typeof element.type === 'string') {
          instance = ReactNativeComponent.createInternalComponent(element);
        } else if (isInternalComponentType(element.type)) {
          instance = new element.type(element);
        } else {
          instance = new ReactCompositeComponentWrapper();
        }
      } else if (typeof node === 'string' || typeof node === 'number') {
        instance = ReactNativeComponent.createInstanceForText(node);
      } else {
        !false ? 'production' !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : invariant(false) : undefined;
      }
      if ('production' !== 'production') {
        'production' !== 'production' ? warning(typeof instance.construct === 'function' && typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : undefined;
      }
      instance.construct(node);
      instance._mountIndex = 0;
      instance._mountImage = null;
      if ('production' !== 'production') {
        instance._isOwnerNecessary = false;
        instance._warnedAboutRefsInRender = false;
      }
      if ('production' !== 'production') {
        if (Object.preventExtensions) {
          Object.preventExtensions(instance);
        }
      }
      return instance;
    }
    module.exports = instantiateReactComponent;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/ReactServerRendering.js', ['npm:react@0.14.9/lib/ReactDefaultBatchingStrategy.js', 'npm:react@0.14.9/lib/ReactElement.js', 'npm:react@0.14.9/lib/ReactInstanceHandles.js', 'npm:react@0.14.9/lib/ReactMarkupChecksum.js', 'npm:react@0.14.9/lib/ReactServerBatchingStrategy.js', 'npm:react@0.14.9/lib/ReactServerRenderingTransaction.js', 'npm:react@0.14.9/lib/ReactUpdates.js', 'npm:fbjs@0.6.1/lib/emptyObject.js', 'npm:react@0.14.9/lib/instantiateReactComponent.js', 'npm:fbjs@0.6.1/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactDefaultBatchingStrategy = $__require('npm:react@0.14.9/lib/ReactDefaultBatchingStrategy.js');
    var ReactElement = $__require('npm:react@0.14.9/lib/ReactElement.js');
    var ReactInstanceHandles = $__require('npm:react@0.14.9/lib/ReactInstanceHandles.js');
    var ReactMarkupChecksum = $__require('npm:react@0.14.9/lib/ReactMarkupChecksum.js');
    var ReactServerBatchingStrategy = $__require('npm:react@0.14.9/lib/ReactServerBatchingStrategy.js');
    var ReactServerRenderingTransaction = $__require('npm:react@0.14.9/lib/ReactServerRenderingTransaction.js');
    var ReactUpdates = $__require('npm:react@0.14.9/lib/ReactUpdates.js');
    var emptyObject = $__require('npm:fbjs@0.6.1/lib/emptyObject.js');
    var instantiateReactComponent = $__require('npm:react@0.14.9/lib/instantiateReactComponent.js');
    var invariant = $__require('npm:fbjs@0.6.1/lib/invariant.js');
    function renderToString(element) {
      !ReactElement.isValidElement(element) ? 'production' !== 'production' ? invariant(false, 'renderToString(): You must pass a valid ReactElement.') : invariant(false) : undefined;
      var transaction;
      try {
        ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);
        var id = ReactInstanceHandles.createReactRootID();
        transaction = ReactServerRenderingTransaction.getPooled(false);
        return transaction.perform(function () {
          var componentInstance = instantiateReactComponent(element, null);
          var markup = componentInstance.mountComponent(id, transaction, emptyObject);
          return ReactMarkupChecksum.addChecksumToMarkup(markup);
        }, null);
      } finally {
        ReactServerRenderingTransaction.release(transaction);
        ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);
      }
    }
    function renderToStaticMarkup(element) {
      !ReactElement.isValidElement(element) ? 'production' !== 'production' ? invariant(false, 'renderToStaticMarkup(): You must pass a valid ReactElement.') : invariant(false) : undefined;
      var transaction;
      try {
        ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);
        var id = ReactInstanceHandles.createReactRootID();
        transaction = ReactServerRenderingTransaction.getPooled(true);
        return transaction.perform(function () {
          var componentInstance = instantiateReactComponent(element, null);
          return componentInstance.mountComponent(id, transaction, emptyObject);
        }, null);
      } finally {
        ReactServerRenderingTransaction.release(transaction);
        ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);
      }
    }
    module.exports = {
      renderToString: renderToString,
      renderToStaticMarkup: renderToStaticMarkup
    };
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/ReactDOMServer.js', ['npm:react@0.14.9/lib/ReactDefaultInjection.js', 'npm:react@0.14.9/lib/ReactServerRendering.js', 'npm:react@0.14.9/lib/ReactVersion.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ReactDefaultInjection = $__require('npm:react@0.14.9/lib/ReactDefaultInjection.js');
  var ReactServerRendering = $__require('npm:react@0.14.9/lib/ReactServerRendering.js');
  var ReactVersion = $__require('npm:react@0.14.9/lib/ReactVersion.js');
  ReactDefaultInjection.inject();
  var ReactDOMServer = {
    renderToString: ReactServerRendering.renderToString,
    renderToStaticMarkup: ReactServerRendering.renderToStaticMarkup,
    version: ReactVersion
  };
  module.exports = ReactDOMServer;
});
System.registerDynamic('npm:react@0.14.9/lib/PooledClass.js', ['npm:fbjs@0.6.1/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var invariant = $__require('npm:fbjs@0.6.1/lib/invariant.js');
    var oneArgumentPooler = function (copyFieldsFrom) {
      var Klass = this;
      if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        Klass.call(instance, copyFieldsFrom);
        return instance;
      } else {
        return new Klass(copyFieldsFrom);
      }
    };
    var twoArgumentPooler = function (a1, a2) {
      var Klass = this;
      if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        Klass.call(instance, a1, a2);
        return instance;
      } else {
        return new Klass(a1, a2);
      }
    };
    var threeArgumentPooler = function (a1, a2, a3) {
      var Klass = this;
      if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        Klass.call(instance, a1, a2, a3);
        return instance;
      } else {
        return new Klass(a1, a2, a3);
      }
    };
    var fourArgumentPooler = function (a1, a2, a3, a4) {
      var Klass = this;
      if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        Klass.call(instance, a1, a2, a3, a4);
        return instance;
      } else {
        return new Klass(a1, a2, a3, a4);
      }
    };
    var fiveArgumentPooler = function (a1, a2, a3, a4, a5) {
      var Klass = this;
      if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        Klass.call(instance, a1, a2, a3, a4, a5);
        return instance;
      } else {
        return new Klass(a1, a2, a3, a4, a5);
      }
    };
    var standardReleaser = function (instance) {
      var Klass = this;
      !(instance instanceof Klass) ? 'production' !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : invariant(false) : undefined;
      instance.destructor();
      if (Klass.instancePool.length < Klass.poolSize) {
        Klass.instancePool.push(instance);
      }
    };
    var DEFAULT_POOL_SIZE = 10;
    var DEFAULT_POOLER = oneArgumentPooler;
    var addPoolingTo = function (CopyConstructor, pooler) {
      var NewKlass = CopyConstructor;
      NewKlass.instancePool = [];
      NewKlass.getPooled = pooler || DEFAULT_POOLER;
      if (!NewKlass.poolSize) {
        NewKlass.poolSize = DEFAULT_POOL_SIZE;
      }
      NewKlass.release = standardReleaser;
      return NewKlass;
    };
    var PooledClass = {
      addPoolingTo: addPoolingTo,
      oneArgumentPooler: oneArgumentPooler,
      twoArgumentPooler: twoArgumentPooler,
      threeArgumentPooler: threeArgumentPooler,
      fourArgumentPooler: fourArgumentPooler,
      fiveArgumentPooler: fiveArgumentPooler
    };
    module.exports = PooledClass;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/ReactRootIndex.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule ReactRootIndex
   * @typechecks
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ReactRootIndexInjection = {
    /**
     * @param {function} _createReactRootIndex
     */
    injectCreateReactRootIndex: function (_createReactRootIndex) {
      ReactRootIndex.createReactRootIndex = _createReactRootIndex;
    }
  };

  var ReactRootIndex = {
    createReactRootIndex: null,
    injection: ReactRootIndexInjection
  };

  module.exports = ReactRootIndex;
});
System.registerDynamic('npm:react@0.14.9/lib/ReactInstanceHandles.js', ['npm:react@0.14.9/lib/ReactRootIndex.js', 'npm:fbjs@0.6.1/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactRootIndex = $__require('npm:react@0.14.9/lib/ReactRootIndex.js');
    var invariant = $__require('npm:fbjs@0.6.1/lib/invariant.js');
    var SEPARATOR = '.';
    var SEPARATOR_LENGTH = SEPARATOR.length;
    var MAX_TREE_DEPTH = 10000;
    function getReactRootIDString(index) {
      return SEPARATOR + index.toString(36);
    }
    function isBoundary(id, index) {
      return id.charAt(index) === SEPARATOR || index === id.length;
    }
    function isValidID(id) {
      return id === '' || id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR;
    }
    function isAncestorIDOf(ancestorID, descendantID) {
      return descendantID.indexOf(ancestorID) === 0 && isBoundary(descendantID, ancestorID.length);
    }
    function getParentID(id) {
      return id ? id.substr(0, id.lastIndexOf(SEPARATOR)) : '';
    }
    function getNextDescendantID(ancestorID, destinationID) {
      !(isValidID(ancestorID) && isValidID(destinationID)) ? 'production' !== 'production' ? invariant(false, 'getNextDescendantID(%s, %s): Received an invalid React DOM ID.', ancestorID, destinationID) : invariant(false) : undefined;
      !isAncestorIDOf(ancestorID, destinationID) ? 'production' !== 'production' ? invariant(false, 'getNextDescendantID(...): React has made an invalid assumption about ' + 'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.', ancestorID, destinationID) : invariant(false) : undefined;
      if (ancestorID === destinationID) {
        return ancestorID;
      }
      var start = ancestorID.length + SEPARATOR_LENGTH;
      var i;
      for (i = start; i < destinationID.length; i++) {
        if (isBoundary(destinationID, i)) {
          break;
        }
      }
      return destinationID.substr(0, i);
    }
    function getFirstCommonAncestorID(oneID, twoID) {
      var minLength = Math.min(oneID.length, twoID.length);
      if (minLength === 0) {
        return '';
      }
      var lastCommonMarkerIndex = 0;
      for (var i = 0; i <= minLength; i++) {
        if (isBoundary(oneID, i) && isBoundary(twoID, i)) {
          lastCommonMarkerIndex = i;
        } else if (oneID.charAt(i) !== twoID.charAt(i)) {
          break;
        }
      }
      var longestCommonID = oneID.substr(0, lastCommonMarkerIndex);
      !isValidID(longestCommonID) ? 'production' !== 'production' ? invariant(false, 'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s', oneID, twoID, longestCommonID) : invariant(false) : undefined;
      return longestCommonID;
    }
    function traverseParentPath(start, stop, cb, arg, skipFirst, skipLast) {
      start = start || '';
      stop = stop || '';
      !(start !== stop) ? 'production' !== 'production' ? invariant(false, 'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.', start) : invariant(false) : undefined;
      var traverseUp = isAncestorIDOf(stop, start);
      !(traverseUp || isAncestorIDOf(start, stop)) ? 'production' !== 'production' ? invariant(false, 'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do ' + 'not have a parent path.', start, stop) : invariant(false) : undefined;
      var depth = 0;
      var traverse = traverseUp ? getParentID : getNextDescendantID;
      for (var id = start;; id = traverse(id, stop)) {
        var ret;
        if ((!skipFirst || id !== start) && (!skipLast || id !== stop)) {
          ret = cb(id, traverseUp, arg);
        }
        if (ret === false || id === stop) {
          break;
        }
        !(depth++ < MAX_TREE_DEPTH) ? 'production' !== 'production' ? invariant(false, 'traverseParentPath(%s, %s, ...): Detected an infinite loop while ' + 'traversing the React DOM ID tree. This may be due to malformed IDs: %s', start, stop, id) : invariant(false) : undefined;
      }
    }
    var ReactInstanceHandles = {
      createReactRootID: function () {
        return getReactRootIDString(ReactRootIndex.createReactRootIndex());
      },
      createReactID: function (rootID, name) {
        return rootID + name;
      },
      getReactRootIDFromNodeID: function (id) {
        if (id && id.charAt(0) === SEPARATOR && id.length > 1) {
          var index = id.indexOf(SEPARATOR, 1);
          return index > -1 ? id.substr(0, index) : id;
        }
        return null;
      },
      traverseEnterLeave: function (leaveID, enterID, cb, upArg, downArg) {
        var ancestorID = getFirstCommonAncestorID(leaveID, enterID);
        if (ancestorID !== leaveID) {
          traverseParentPath(leaveID, ancestorID, cb, upArg, false, true);
        }
        if (ancestorID !== enterID) {
          traverseParentPath(ancestorID, enterID, cb, downArg, true, false);
        }
      },
      traverseTwoPhase: function (targetID, cb, arg) {
        if (targetID) {
          traverseParentPath('', targetID, cb, arg, true, false);
          traverseParentPath(targetID, '', cb, arg, false, true);
        }
      },
      traverseTwoPhaseSkipTarget: function (targetID, cb, arg) {
        if (targetID) {
          traverseParentPath('', targetID, cb, arg, true, true);
          traverseParentPath(targetID, '', cb, arg, true, true);
        }
      },
      traverseAncestors: function (targetID, cb, arg) {
        traverseParentPath('', targetID, cb, arg, true, false);
      },
      getFirstCommonAncestorID: getFirstCommonAncestorID,
      _getNextDescendantID: getNextDescendantID,
      isAncestorIDOf: isAncestorIDOf,
      SEPARATOR: SEPARATOR
    };
    module.exports = ReactInstanceHandles;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/traverseAllChildren.js', ['npm:react@0.14.9/lib/ReactCurrentOwner.js', 'npm:react@0.14.9/lib/ReactElement.js', 'npm:react@0.14.9/lib/ReactInstanceHandles.js', 'npm:react@0.14.9/lib/getIteratorFn.js', 'npm:fbjs@0.6.1/lib/invariant.js', 'npm:fbjs@0.6.1/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactCurrentOwner = $__require('npm:react@0.14.9/lib/ReactCurrentOwner.js');
    var ReactElement = $__require('npm:react@0.14.9/lib/ReactElement.js');
    var ReactInstanceHandles = $__require('npm:react@0.14.9/lib/ReactInstanceHandles.js');
    var getIteratorFn = $__require('npm:react@0.14.9/lib/getIteratorFn.js');
    var invariant = $__require('npm:fbjs@0.6.1/lib/invariant.js');
    var warning = $__require('npm:fbjs@0.6.1/lib/warning.js');
    var SEPARATOR = ReactInstanceHandles.SEPARATOR;
    var SUBSEPARATOR = ':';
    var userProvidedKeyEscaperLookup = {
      '=': '=0',
      '.': '=1',
      ':': '=2'
    };
    var userProvidedKeyEscapeRegex = /[=.:]/g;
    var didWarnAboutMaps = false;
    function userProvidedKeyEscaper(match) {
      return userProvidedKeyEscaperLookup[match];
    }
    function getComponentKey(component, index) {
      if (component && component.key != null) {
        return wrapUserProvidedKey(component.key);
      }
      return index.toString(36);
    }
    function escapeUserProvidedKey(text) {
      return ('' + text).replace(userProvidedKeyEscapeRegex, userProvidedKeyEscaper);
    }
    function wrapUserProvidedKey(key) {
      return '$' + escapeUserProvidedKey(key);
    }
    function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
      var type = typeof children;
      if (type === 'undefined' || type === 'boolean') {
        children = null;
      }
      if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {
        callback(traverseContext, children, nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
        return 1;
      }
      var child;
      var nextName;
      var subtreeCount = 0;
      var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
      if (Array.isArray(children)) {
        for (var i = 0; i < children.length; i++) {
          child = children[i];
          nextName = nextNamePrefix + getComponentKey(child, i);
          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
        }
      } else {
        var iteratorFn = getIteratorFn(children);
        if (iteratorFn) {
          var iterator = iteratorFn.call(children);
          var step;
          if (iteratorFn !== children.entries) {
            var ii = 0;
            while (!(step = iterator.next()).done) {
              child = step.value;
              nextName = nextNamePrefix + getComponentKey(child, ii++);
              subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
            }
          } else {
            if ('production' !== 'production') {
              'production' !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.') : undefined;
              didWarnAboutMaps = true;
            }
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                child = entry[1];
                nextName = nextNamePrefix + wrapUserProvidedKey(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
                subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
              }
            }
          }
        } else if (type === 'object') {
          var addendum = '';
          if ('production' !== 'production') {
            addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
            if (children._isReactElement) {
              addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
            }
            if (ReactCurrentOwner.current) {
              var name = ReactCurrentOwner.current.getName();
              if (name) {
                addendum += ' Check the render method of `' + name + '`.';
              }
            }
          }
          var childrenString = String(children);
          !false ? 'production' !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : invariant(false) : undefined;
        }
      }
      return subtreeCount;
    }
    function traverseAllChildren(children, callback, traverseContext) {
      if (children == null) {
        return 0;
      }
      return traverseAllChildrenImpl(children, '', callback, traverseContext);
    }
    module.exports = traverseAllChildren;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/ReactChildren.js', ['npm:react@0.14.9/lib/PooledClass.js', 'npm:react@0.14.9/lib/ReactElement.js', 'npm:fbjs@0.6.1/lib/emptyFunction.js', 'npm:react@0.14.9/lib/traverseAllChildren.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var PooledClass = $__require('npm:react@0.14.9/lib/PooledClass.js');
  var ReactElement = $__require('npm:react@0.14.9/lib/ReactElement.js');
  var emptyFunction = $__require('npm:fbjs@0.6.1/lib/emptyFunction.js');
  var traverseAllChildren = $__require('npm:react@0.14.9/lib/traverseAllChildren.js');
  var twoArgumentPooler = PooledClass.twoArgumentPooler;
  var fourArgumentPooler = PooledClass.fourArgumentPooler;
  var userProvidedKeyEscapeRegex = /\/(?!\/)/g;
  function escapeUserProvidedKey(text) {
    return ('' + text).replace(userProvidedKeyEscapeRegex, '//');
  }
  function ForEachBookKeeping(forEachFunction, forEachContext) {
    this.func = forEachFunction;
    this.context = forEachContext;
    this.count = 0;
  }
  ForEachBookKeeping.prototype.destructor = function () {
    this.func = null;
    this.context = null;
    this.count = 0;
  };
  PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);
  function forEachSingleChild(bookKeeping, child, name) {
    var func = bookKeeping.func;
    var context = bookKeeping.context;
    func.call(context, child, bookKeeping.count++);
  }
  function forEachChildren(children, forEachFunc, forEachContext) {
    if (children == null) {
      return children;
    }
    var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
    traverseAllChildren(children, forEachSingleChild, traverseContext);
    ForEachBookKeeping.release(traverseContext);
  }
  function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
    this.result = mapResult;
    this.keyPrefix = keyPrefix;
    this.func = mapFunction;
    this.context = mapContext;
    this.count = 0;
  }
  MapBookKeeping.prototype.destructor = function () {
    this.result = null;
    this.keyPrefix = null;
    this.func = null;
    this.context = null;
    this.count = 0;
  };
  PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);
  function mapSingleChildIntoContext(bookKeeping, child, childKey) {
    var result = bookKeeping.result;
    var keyPrefix = bookKeeping.keyPrefix;
    var func = bookKeeping.func;
    var context = bookKeeping.context;
    var mappedChild = func.call(context, child, bookKeeping.count++);
    if (Array.isArray(mappedChild)) {
      mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
    } else if (mappedChild != null) {
      if (ReactElement.isValidElement(mappedChild)) {
        mappedChild = ReactElement.cloneAndReplaceKey(mappedChild, keyPrefix + (mappedChild !== child ? escapeUserProvidedKey(mappedChild.key || '') + '/' : '') + childKey);
      }
      result.push(mappedChild);
    }
  }
  function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
    var escapedPrefix = '';
    if (prefix != null) {
      escapedPrefix = escapeUserProvidedKey(prefix) + '/';
    }
    var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
    traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
    MapBookKeeping.release(traverseContext);
  }
  function mapChildren(children, func, context) {
    if (children == null) {
      return children;
    }
    var result = [];
    mapIntoWithKeyPrefixInternal(children, result, null, func, context);
    return result;
  }
  function forEachSingleChildDummy(traverseContext, child, name) {
    return null;
  }
  function countChildren(children, context) {
    return traverseAllChildren(children, forEachSingleChildDummy, null);
  }
  function toArray(children) {
    var result = [];
    mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
    return result;
  }
  var ReactChildren = {
    forEach: forEachChildren,
    map: mapChildren,
    mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
    count: countChildren,
    toArray: toArray
  };
  module.exports = ReactChildren;
});
System.registerDynamic('npm:react@0.14.9/lib/ReactComponent.js', ['npm:react@0.14.9/lib/ReactNoopUpdateQueue.js', 'npm:react@0.14.9/lib/canDefineProperty.js', 'npm:fbjs@0.6.1/lib/emptyObject.js', 'npm:fbjs@0.6.1/lib/invariant.js', 'npm:fbjs@0.6.1/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactNoopUpdateQueue = $__require('npm:react@0.14.9/lib/ReactNoopUpdateQueue.js');
    var canDefineProperty = $__require('npm:react@0.14.9/lib/canDefineProperty.js');
    var emptyObject = $__require('npm:fbjs@0.6.1/lib/emptyObject.js');
    var invariant = $__require('npm:fbjs@0.6.1/lib/invariant.js');
    var warning = $__require('npm:fbjs@0.6.1/lib/warning.js');
    function ReactComponent(props, context, updater) {
      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;
    }
    ReactComponent.prototype.isReactComponent = {};
    ReactComponent.prototype.setState = function (partialState, callback) {
      !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? 'production' !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.') : invariant(false) : undefined;
      if ('production' !== 'production') {
        'production' !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : undefined;
      }
      this.updater.enqueueSetState(this, partialState);
      if (callback) {
        this.updater.enqueueCallback(this, callback);
      }
    };
    ReactComponent.prototype.forceUpdate = function (callback) {
      this.updater.enqueueForceUpdate(this);
      if (callback) {
        this.updater.enqueueCallback(this, callback);
      }
    };
    if ('production' !== 'production') {
      var deprecatedAPIs = {
        getDOMNode: ['getDOMNode', 'Use ReactDOM.findDOMNode(component) instead.'],
        isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
        replaceProps: ['replaceProps', 'Instead, call render again at the top level.'],
        replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).'],
        setProps: ['setProps', 'Instead, call render again at the top level.']
      };
      var defineDeprecationWarning = function (methodName, info) {
        if (canDefineProperty) {
          Object.defineProperty(ReactComponent.prototype, methodName, { get: function () {
              'production' !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : undefined;
              return undefined;
            } });
        }
      };
      for (var fnName in deprecatedAPIs) {
        if (deprecatedAPIs.hasOwnProperty(fnName)) {
          defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
        }
      }
    }
    module.exports = ReactComponent;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/ReactNoopUpdateQueue.js', ['npm:fbjs@0.6.1/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var warning = $__require('npm:fbjs@0.6.1/lib/warning.js');
    function warnTDZ(publicInstance, callerName) {
      if ('production' !== 'production') {
        'production' !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor && publicInstance.constructor.displayName || '') : undefined;
      }
    }
    var ReactNoopUpdateQueue = {
      isMounted: function (publicInstance) {
        return false;
      },
      enqueueCallback: function (publicInstance, callback) {},
      enqueueForceUpdate: function (publicInstance) {
        warnTDZ(publicInstance, 'forceUpdate');
      },
      enqueueReplaceState: function (publicInstance, completeState) {
        warnTDZ(publicInstance, 'replaceState');
      },
      enqueueSetState: function (publicInstance, partialState) {
        warnTDZ(publicInstance, 'setState');
      },
      enqueueSetProps: function (publicInstance, partialProps) {
        warnTDZ(publicInstance, 'setProps');
      },
      enqueueReplaceProps: function (publicInstance, props) {
        warnTDZ(publicInstance, 'replaceProps');
      }
    };
    module.exports = ReactNoopUpdateQueue;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:fbjs@0.6.1/lib/emptyObject.js', ['github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var emptyObject = {};
    if ('production' !== 'production') {
      Object.freeze(emptyObject);
    }
    module.exports = emptyObject;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic("npm:fbjs@0.6.1/lib/keyOf.js", [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule keyOf
   */

  /**
   * Allows extraction of a minified key. Let's the build system minify keys
   * without losing the ability to dynamically use key strings as values
   * themselves. Pass in an object with a single key/val pair and it will return
   * you the string key of that single record. Suppose you want to grab the
   * value for a key 'className' inside of an object. Key/val minification may
   * have aliased that key to be 'xa12'. keyOf({className: null}) will return
   * 'xa12' in that case. Resolve keys you want to use once at startup time, then
   * reuse those resolutions.
   */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  var keyOf = function (oneKeyObj) {
    var key;
    for (key in oneKeyObj) {
      if (!oneKeyObj.hasOwnProperty(key)) {
        continue;
      }
      return key;
    }
    return null;
  };

  module.exports = keyOf;
});
System.registerDynamic('npm:react@0.14.9/lib/ReactClass.js', ['npm:react@0.14.9/lib/ReactComponent.js', 'npm:react@0.14.9/lib/ReactElement.js', 'npm:react@0.14.9/lib/ReactPropTypeLocations.js', 'npm:react@0.14.9/lib/ReactPropTypeLocationNames.js', 'npm:react@0.14.9/lib/ReactNoopUpdateQueue.js', 'npm:react@0.14.9/lib/Object.assign.js', 'npm:fbjs@0.6.1/lib/emptyObject.js', 'npm:fbjs@0.6.1/lib/invariant.js', 'npm:fbjs@0.6.1/lib/keyMirror.js', 'npm:fbjs@0.6.1/lib/keyOf.js', 'npm:fbjs@0.6.1/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactComponent = $__require('npm:react@0.14.9/lib/ReactComponent.js');
    var ReactElement = $__require('npm:react@0.14.9/lib/ReactElement.js');
    var ReactPropTypeLocations = $__require('npm:react@0.14.9/lib/ReactPropTypeLocations.js');
    var ReactPropTypeLocationNames = $__require('npm:react@0.14.9/lib/ReactPropTypeLocationNames.js');
    var ReactNoopUpdateQueue = $__require('npm:react@0.14.9/lib/ReactNoopUpdateQueue.js');
    var assign = $__require('npm:react@0.14.9/lib/Object.assign.js');
    var emptyObject = $__require('npm:fbjs@0.6.1/lib/emptyObject.js');
    var invariant = $__require('npm:fbjs@0.6.1/lib/invariant.js');
    var keyMirror = $__require('npm:fbjs@0.6.1/lib/keyMirror.js');
    var keyOf = $__require('npm:fbjs@0.6.1/lib/keyOf.js');
    var warning = $__require('npm:fbjs@0.6.1/lib/warning.js');
    var MIXINS_KEY = keyOf({ mixins: null });
    var SpecPolicy = keyMirror({
      DEFINE_ONCE: null,
      DEFINE_MANY: null,
      OVERRIDE_BASE: null,
      DEFINE_MANY_MERGED: null
    });
    var injectedMixins = [];
    var warnedSetProps = false;
    function warnSetProps() {
      if (!warnedSetProps) {
        warnedSetProps = true;
        'production' !== 'production' ? warning(false, 'setProps(...) and replaceProps(...) are deprecated. ' + 'Instead, call render again at the top level.') : undefined;
      }
    }
    var ReactClassInterface = {
      mixins: SpecPolicy.DEFINE_MANY,
      statics: SpecPolicy.DEFINE_MANY,
      propTypes: SpecPolicy.DEFINE_MANY,
      contextTypes: SpecPolicy.DEFINE_MANY,
      childContextTypes: SpecPolicy.DEFINE_MANY,
      getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,
      getInitialState: SpecPolicy.DEFINE_MANY_MERGED,
      getChildContext: SpecPolicy.DEFINE_MANY_MERGED,
      render: SpecPolicy.DEFINE_ONCE,
      componentWillMount: SpecPolicy.DEFINE_MANY,
      componentDidMount: SpecPolicy.DEFINE_MANY,
      componentWillReceiveProps: SpecPolicy.DEFINE_MANY,
      shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,
      componentWillUpdate: SpecPolicy.DEFINE_MANY,
      componentDidUpdate: SpecPolicy.DEFINE_MANY,
      componentWillUnmount: SpecPolicy.DEFINE_MANY,
      updateComponent: SpecPolicy.OVERRIDE_BASE
    };
    var RESERVED_SPEC_KEYS = {
      displayName: function (Constructor, displayName) {
        Constructor.displayName = displayName;
      },
      mixins: function (Constructor, mixins) {
        if (mixins) {
          for (var i = 0; i < mixins.length; i++) {
            mixSpecIntoComponent(Constructor, mixins[i]);
          }
        }
      },
      childContextTypes: function (Constructor, childContextTypes) {
        if ('production' !== 'production') {
          validateTypeDef(Constructor, childContextTypes, ReactPropTypeLocations.childContext);
        }
        Constructor.childContextTypes = assign({}, Constructor.childContextTypes, childContextTypes);
      },
      contextTypes: function (Constructor, contextTypes) {
        if ('production' !== 'production') {
          validateTypeDef(Constructor, contextTypes, ReactPropTypeLocations.context);
        }
        Constructor.contextTypes = assign({}, Constructor.contextTypes, contextTypes);
      },
      getDefaultProps: function (Constructor, getDefaultProps) {
        if (Constructor.getDefaultProps) {
          Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
        } else {
          Constructor.getDefaultProps = getDefaultProps;
        }
      },
      propTypes: function (Constructor, propTypes) {
        if ('production' !== 'production') {
          validateTypeDef(Constructor, propTypes, ReactPropTypeLocations.prop);
        }
        Constructor.propTypes = assign({}, Constructor.propTypes, propTypes);
      },
      statics: function (Constructor, statics) {
        mixStaticSpecIntoComponent(Constructor, statics);
      },
      autobind: function () {}
    };
    function validateTypeDef(Constructor, typeDef, location) {
      for (var propName in typeDef) {
        if (typeDef.hasOwnProperty(propName)) {
          'production' !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : undefined;
        }
      }
    }
    function validateMethodOverride(proto, name) {
      var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;
      if (ReactClassMixin.hasOwnProperty(name)) {
        !(specPolicy === SpecPolicy.OVERRIDE_BASE) ? 'production' !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override ' + '`%s` from your class specification. Ensure that your method names ' + 'do not overlap with React methods.', name) : invariant(false) : undefined;
      }
      if (proto.hasOwnProperty(name)) {
        !(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED) ? 'production' !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define ' + '`%s` on your component more than once. This conflict may be due ' + 'to a mixin.', name) : invariant(false) : undefined;
      }
    }
    function mixSpecIntoComponent(Constructor, spec) {
      if (!spec) {
        return;
      }
      !(typeof spec !== 'function') ? 'production' !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to ' + 'use a component class as a mixin. Instead, just use a regular object.') : invariant(false) : undefined;
      !!ReactElement.isValidElement(spec) ? 'production' !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to ' + 'use a component as a mixin. Instead, just use a regular object.') : invariant(false) : undefined;
      var proto = Constructor.prototype;
      if (spec.hasOwnProperty(MIXINS_KEY)) {
        RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
      }
      for (var name in spec) {
        if (!spec.hasOwnProperty(name)) {
          continue;
        }
        if (name === MIXINS_KEY) {
          continue;
        }
        var property = spec[name];
        validateMethodOverride(proto, name);
        if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
          RESERVED_SPEC_KEYS[name](Constructor, property);
        } else {
          var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
          var isAlreadyDefined = proto.hasOwnProperty(name);
          var isFunction = typeof property === 'function';
          var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;
          if (shouldAutoBind) {
            if (!proto.__reactAutoBindMap) {
              proto.__reactAutoBindMap = {};
            }
            proto.__reactAutoBindMap[name] = property;
            proto[name] = property;
          } else {
            if (isAlreadyDefined) {
              var specPolicy = ReactClassInterface[name];
              !(isReactClassMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)) ? 'production' !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s ' + 'when mixing in component specs.', specPolicy, name) : invariant(false) : undefined;
              if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
                proto[name] = createMergedResultFunction(proto[name], property);
              } else if (specPolicy === SpecPolicy.DEFINE_MANY) {
                proto[name] = createChainedFunction(proto[name], property);
              }
            } else {
              proto[name] = property;
              if ('production' !== 'production') {
                if (typeof property === 'function' && spec.displayName) {
                  proto[name].displayName = spec.displayName + '_' + name;
                }
              }
            }
          }
        }
      }
    }
    function mixStaticSpecIntoComponent(Constructor, statics) {
      if (!statics) {
        return;
      }
      for (var name in statics) {
        var property = statics[name];
        if (!statics.hasOwnProperty(name)) {
          continue;
        }
        var isReserved = name in RESERVED_SPEC_KEYS;
        !!isReserved ? 'production' !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved ' + 'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' + 'as an instance property instead; it will still be accessible on the ' + 'constructor.', name) : invariant(false) : undefined;
        var isInherited = name in Constructor;
        !!isInherited ? 'production' !== 'production' ? invariant(false, 'ReactClass: You are attempting to define ' + '`%s` on your component more than once. This conflict may be ' + 'due to a mixin.', name) : invariant(false) : undefined;
        Constructor[name] = property;
      }
    }
    function mergeIntoWithNoDuplicateKeys(one, two) {
      !(one && two && typeof one === 'object' && typeof two === 'object') ? 'production' !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : invariant(false) : undefined;
      for (var key in two) {
        if (two.hasOwnProperty(key)) {
          !(one[key] === undefined) ? 'production' !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): ' + 'Tried to merge two objects with the same key: `%s`. This conflict ' + 'may be due to a mixin; in particular, this may be caused by two ' + 'getInitialState() or getDefaultProps() methods returning objects ' + 'with clashing keys.', key) : invariant(false) : undefined;
          one[key] = two[key];
        }
      }
      return one;
    }
    function createMergedResultFunction(one, two) {
      return function mergedResult() {
        var a = one.apply(this, arguments);
        var b = two.apply(this, arguments);
        if (a == null) {
          return b;
        } else if (b == null) {
          return a;
        }
        var c = {};
        mergeIntoWithNoDuplicateKeys(c, a);
        mergeIntoWithNoDuplicateKeys(c, b);
        return c;
      };
    }
    function createChainedFunction(one, two) {
      return function chainedFunction() {
        one.apply(this, arguments);
        two.apply(this, arguments);
      };
    }
    function bindAutoBindMethod(component, method) {
      var boundMethod = method.bind(component);
      if ('production' !== 'production') {
        boundMethod.__reactBoundContext = component;
        boundMethod.__reactBoundMethod = method;
        boundMethod.__reactBoundArguments = null;
        var componentName = component.constructor.displayName;
        var _bind = boundMethod.bind;
        boundMethod.bind = function (newThis) {
          for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
            args[_key - 1] = arguments[_key];
          }
          if (newThis !== component && newThis !== null) {
            'production' !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : undefined;
          } else if (!args.length) {
            'production' !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : undefined;
            return boundMethod;
          }
          var reboundMethod = _bind.apply(boundMethod, arguments);
          reboundMethod.__reactBoundContext = component;
          reboundMethod.__reactBoundMethod = method;
          reboundMethod.__reactBoundArguments = args;
          return reboundMethod;
        };
      }
      return boundMethod;
    }
    function bindAutoBindMethods(component) {
      for (var autoBindKey in component.__reactAutoBindMap) {
        if (component.__reactAutoBindMap.hasOwnProperty(autoBindKey)) {
          var method = component.__reactAutoBindMap[autoBindKey];
          component[autoBindKey] = bindAutoBindMethod(component, method);
        }
      }
    }
    var ReactClassMixin = {
      replaceState: function (newState, callback) {
        this.updater.enqueueReplaceState(this, newState);
        if (callback) {
          this.updater.enqueueCallback(this, callback);
        }
      },
      isMounted: function () {
        return this.updater.isMounted(this);
      },
      setProps: function (partialProps, callback) {
        if ('production' !== 'production') {
          warnSetProps();
        }
        this.updater.enqueueSetProps(this, partialProps);
        if (callback) {
          this.updater.enqueueCallback(this, callback);
        }
      },
      replaceProps: function (newProps, callback) {
        if ('production' !== 'production') {
          warnSetProps();
        }
        this.updater.enqueueReplaceProps(this, newProps);
        if (callback) {
          this.updater.enqueueCallback(this, callback);
        }
      }
    };
    var ReactClassComponent = function () {};
    assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);
    var ReactClass = {
      createClass: function (spec) {
        var Constructor = function (props, context, updater) {
          if ('production' !== 'production') {
            'production' !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : undefined;
          }
          if (this.__reactAutoBindMap) {
            bindAutoBindMethods(this);
          }
          this.props = props;
          this.context = context;
          this.refs = emptyObject;
          this.updater = updater || ReactNoopUpdateQueue;
          this.state = null;
          var initialState = this.getInitialState ? this.getInitialState() : null;
          if ('production' !== 'production') {
            if (typeof initialState === 'undefined' && this.getInitialState._isMockFunction) {
              initialState = null;
            }
          }
          !(typeof initialState === 'object' && !Array.isArray(initialState)) ? 'production' !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : invariant(false) : undefined;
          this.state = initialState;
        };
        Constructor.prototype = new ReactClassComponent();
        Constructor.prototype.constructor = Constructor;
        injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));
        mixSpecIntoComponent(Constructor, spec);
        if (Constructor.getDefaultProps) {
          Constructor.defaultProps = Constructor.getDefaultProps();
        }
        if ('production' !== 'production') {
          if (Constructor.getDefaultProps) {
            Constructor.getDefaultProps.isReactClassApproved = {};
          }
          if (Constructor.prototype.getInitialState) {
            Constructor.prototype.getInitialState.isReactClassApproved = {};
          }
        }
        !Constructor.prototype.render ? 'production' !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : invariant(false) : undefined;
        if ('production' !== 'production') {
          'production' !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : undefined;
          'production' !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : undefined;
        }
        for (var methodName in ReactClassInterface) {
          if (!Constructor.prototype[methodName]) {
            Constructor.prototype[methodName] = null;
          }
        }
        return Constructor;
      },
      injection: { injectMixin: function (mixin) {
          injectedMixins.push(mixin);
        } }
    };
    module.exports = ReactClass;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:fbjs@0.6.1/lib/mapObject.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule mapObject
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var hasOwnProperty = Object.prototype.hasOwnProperty;

  /**
   * Executes the provided `callback` once for each enumerable own property in the
   * object and constructs a new object from the results. The `callback` is
   * invoked with three arguments:
   *
   *  - the property value
   *  - the property name
   *  - the object being traversed
   *
   * Properties that are added after the call to `mapObject` will not be visited
   * by `callback`. If the values of existing properties are changed, the value
   * passed to `callback` will be the value at the time `mapObject` visits them.
   * Properties that are deleted before being visited are not visited.
   *
   * @grep function objectMap()
   * @grep function objMap()
   *
   * @param {?object} object
   * @param {function} callback
   * @param {*} context
   * @return {?object}
   */
  function mapObject(object, callback, context) {
    if (!object) {
      return null;
    }
    var result = {};
    for (var name in object) {
      if (hasOwnProperty.call(object, name)) {
        result[name] = callback.call(context, object[name], name, object);
      }
    }
    return result;
  }

  module.exports = mapObject;
});
System.registerDynamic('npm:react@0.14.9/lib/ReactDOMFactories.js', ['npm:react@0.14.9/lib/ReactElement.js', 'npm:react@0.14.9/lib/ReactElementValidator.js', 'npm:fbjs@0.6.1/lib/mapObject.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactElement = $__require('npm:react@0.14.9/lib/ReactElement.js');
    var ReactElementValidator = $__require('npm:react@0.14.9/lib/ReactElementValidator.js');
    var mapObject = $__require('npm:fbjs@0.6.1/lib/mapObject.js');
    function createDOMFactory(tag) {
      if ('production' !== 'production') {
        return ReactElementValidator.createFactory(tag);
      }
      return ReactElement.createFactory(tag);
    }
    var ReactDOMFactories = mapObject({
      a: 'a',
      abbr: 'abbr',
      address: 'address',
      area: 'area',
      article: 'article',
      aside: 'aside',
      audio: 'audio',
      b: 'b',
      base: 'base',
      bdi: 'bdi',
      bdo: 'bdo',
      big: 'big',
      blockquote: 'blockquote',
      body: 'body',
      br: 'br',
      button: 'button',
      canvas: 'canvas',
      caption: 'caption',
      cite: 'cite',
      code: 'code',
      col: 'col',
      colgroup: 'colgroup',
      data: 'data',
      datalist: 'datalist',
      dd: 'dd',
      del: 'del',
      details: 'details',
      dfn: 'dfn',
      dialog: 'dialog',
      div: 'div',
      dl: 'dl',
      dt: 'dt',
      em: 'em',
      embed: 'embed',
      fieldset: 'fieldset',
      figcaption: 'figcaption',
      figure: 'figure',
      footer: 'footer',
      form: 'form',
      h1: 'h1',
      h2: 'h2',
      h3: 'h3',
      h4: 'h4',
      h5: 'h5',
      h6: 'h6',
      head: 'head',
      header: 'header',
      hgroup: 'hgroup',
      hr: 'hr',
      html: 'html',
      i: 'i',
      iframe: 'iframe',
      img: 'img',
      input: 'input',
      ins: 'ins',
      kbd: 'kbd',
      keygen: 'keygen',
      label: 'label',
      legend: 'legend',
      li: 'li',
      link: 'link',
      main: 'main',
      map: 'map',
      mark: 'mark',
      menu: 'menu',
      menuitem: 'menuitem',
      meta: 'meta',
      meter: 'meter',
      nav: 'nav',
      noscript: 'noscript',
      object: 'object',
      ol: 'ol',
      optgroup: 'optgroup',
      option: 'option',
      output: 'output',
      p: 'p',
      param: 'param',
      picture: 'picture',
      pre: 'pre',
      progress: 'progress',
      q: 'q',
      rp: 'rp',
      rt: 'rt',
      ruby: 'ruby',
      s: 's',
      samp: 'samp',
      script: 'script',
      section: 'section',
      select: 'select',
      small: 'small',
      source: 'source',
      span: 'span',
      strong: 'strong',
      style: 'style',
      sub: 'sub',
      summary: 'summary',
      sup: 'sup',
      table: 'table',
      tbody: 'tbody',
      td: 'td',
      textarea: 'textarea',
      tfoot: 'tfoot',
      th: 'th',
      thead: 'thead',
      time: 'time',
      title: 'title',
      tr: 'tr',
      track: 'track',
      u: 'u',
      ul: 'ul',
      'var': 'var',
      video: 'video',
      wbr: 'wbr',
      circle: 'circle',
      clipPath: 'clipPath',
      defs: 'defs',
      ellipse: 'ellipse',
      g: 'g',
      image: 'image',
      line: 'line',
      linearGradient: 'linearGradient',
      mask: 'mask',
      path: 'path',
      pattern: 'pattern',
      polygon: 'polygon',
      polyline: 'polyline',
      radialGradient: 'radialGradient',
      rect: 'rect',
      stop: 'stop',
      svg: 'svg',
      text: 'text',
      tspan: 'tspan'
    }, createDOMFactory);
    module.exports = ReactDOMFactories;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:fbjs@0.6.1/lib/keyMirror.js', ['npm:fbjs@0.6.1/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var invariant = $__require('npm:fbjs@0.6.1/lib/invariant.js');
    var keyMirror = function (obj) {
      var ret = {};
      var key;
      !(obj instanceof Object && !Array.isArray(obj)) ? 'production' !== 'production' ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : undefined;
      for (key in obj) {
        if (!obj.hasOwnProperty(key)) {
          continue;
        }
        ret[key] = key;
      }
      return ret;
    };
    module.exports = keyMirror;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/ReactPropTypeLocations.js', ['npm:fbjs@0.6.1/lib/keyMirror.js'], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule ReactPropTypeLocations
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var keyMirror = $__require('npm:fbjs@0.6.1/lib/keyMirror.js');

  var ReactPropTypeLocations = keyMirror({
    prop: null,
    context: null,
    childContext: null
  });

  module.exports = ReactPropTypeLocations;
});
System.registerDynamic('npm:react@0.14.9/lib/ReactElementValidator.js', ['npm:react@0.14.9/lib/ReactElement.js', 'npm:react@0.14.9/lib/ReactPropTypeLocations.js', 'npm:react@0.14.9/lib/ReactPropTypeLocationNames.js', 'npm:react@0.14.9/lib/ReactCurrentOwner.js', 'npm:react@0.14.9/lib/canDefineProperty.js', 'npm:react@0.14.9/lib/getIteratorFn.js', 'npm:fbjs@0.6.1/lib/invariant.js', 'npm:fbjs@0.6.1/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactElement = $__require('npm:react@0.14.9/lib/ReactElement.js');
    var ReactPropTypeLocations = $__require('npm:react@0.14.9/lib/ReactPropTypeLocations.js');
    var ReactPropTypeLocationNames = $__require('npm:react@0.14.9/lib/ReactPropTypeLocationNames.js');
    var ReactCurrentOwner = $__require('npm:react@0.14.9/lib/ReactCurrentOwner.js');
    var canDefineProperty = $__require('npm:react@0.14.9/lib/canDefineProperty.js');
    var getIteratorFn = $__require('npm:react@0.14.9/lib/getIteratorFn.js');
    var invariant = $__require('npm:fbjs@0.6.1/lib/invariant.js');
    var warning = $__require('npm:fbjs@0.6.1/lib/warning.js');
    function getDeclarationErrorAddendum() {
      if (ReactCurrentOwner.current) {
        var name = ReactCurrentOwner.current.getName();
        if (name) {
          return ' Check the render method of `' + name + '`.';
        }
      }
      return '';
    }
    var ownerHasKeyUseWarning = {};
    var loggedTypeFailures = {};
    function validateExplicitKey(element, parentType) {
      if (!element._store || element._store.validated || element.key != null) {
        return;
      }
      element._store.validated = true;
      var addenda = getAddendaForKeyUse('uniqueKey', element, parentType);
      if (addenda === null) {
        return;
      }
      'production' !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s%s', addenda.parentOrOwner || '', addenda.childOwner || '', addenda.url || '') : undefined;
    }
    function getAddendaForKeyUse(messageType, element, parentType) {
      var addendum = getDeclarationErrorAddendum();
      if (!addendum) {
        var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
        if (parentName) {
          addendum = ' Check the top-level render call using <' + parentName + '>.';
        }
      }
      var memoizer = ownerHasKeyUseWarning[messageType] || (ownerHasKeyUseWarning[messageType] = {});
      if (memoizer[addendum]) {
        return null;
      }
      memoizer[addendum] = true;
      var addenda = {
        parentOrOwner: addendum,
        url: ' See https://fb.me/react-warning-keys for more information.',
        childOwner: null
      };
      if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
        addenda.childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
      }
      return addenda;
    }
    function validateChildKeys(node, parentType) {
      if (typeof node !== 'object') {
        return;
      }
      if (Array.isArray(node)) {
        for (var i = 0; i < node.length; i++) {
          var child = node[i];
          if (ReactElement.isValidElement(child)) {
            validateExplicitKey(child, parentType);
          }
        }
      } else if (ReactElement.isValidElement(node)) {
        if (node._store) {
          node._store.validated = true;
        }
      } else if (node) {
        var iteratorFn = getIteratorFn(node);
        if (iteratorFn) {
          if (iteratorFn !== node.entries) {
            var iterator = iteratorFn.call(node);
            var step;
            while (!(step = iterator.next()).done) {
              if (ReactElement.isValidElement(step.value)) {
                validateExplicitKey(step.value, parentType);
              }
            }
          }
        }
      }
    }
    function checkPropTypes(componentName, propTypes, props, location) {
      for (var propName in propTypes) {
        if (propTypes.hasOwnProperty(propName)) {
          var error;
          try {
            !(typeof propTypes[propName] === 'function') ? 'production' !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : undefined;
            error = propTypes[propName](props, propName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
          } catch (ex) {
            error = ex;
          }
          'production' !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], propName, typeof error) : undefined;
          if (error instanceof Error && !(error.message in loggedTypeFailures)) {
            loggedTypeFailures[error.message] = true;
            var addendum = getDeclarationErrorAddendum();
            'production' !== 'production' ? warning(false, 'Failed propType: %s%s', error.message, addendum) : undefined;
          }
        }
      }
    }
    function validatePropTypes(element) {
      var componentClass = element.type;
      if (typeof componentClass !== 'function') {
        return;
      }
      var name = componentClass.displayName || componentClass.name;
      if (componentClass.propTypes) {
        checkPropTypes(name, componentClass.propTypes, element.props, ReactPropTypeLocations.prop);
      }
      if (typeof componentClass.getDefaultProps === 'function') {
        'production' !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : undefined;
      }
    }
    var ReactElementValidator = {
      createElement: function (type, props, children) {
        var validType = typeof type === 'string' || typeof type === 'function';
        'production' !== 'production' ? warning(validType, 'React.createElement: type should not be null, undefined, boolean, or ' + 'number. It should be a string (for DOM elements) or a ReactClass ' + '(for composite components).%s', getDeclarationErrorAddendum()) : undefined;
        var element = ReactElement.createElement.apply(this, arguments);
        if (element == null) {
          return element;
        }
        if (validType) {
          for (var i = 2; i < arguments.length; i++) {
            validateChildKeys(arguments[i], type);
          }
        }
        validatePropTypes(element);
        return element;
      },
      createFactory: function (type) {
        var validatedFactory = ReactElementValidator.createElement.bind(null, type);
        validatedFactory.type = type;
        if ('production' !== 'production') {
          if (canDefineProperty) {
            Object.defineProperty(validatedFactory, 'type', {
              enumerable: false,
              get: function () {
                'production' !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : undefined;
                Object.defineProperty(this, 'type', { value: type });
                return type;
              }
            });
          }
        }
        return validatedFactory;
      },
      cloneElement: function (element, props, children) {
        var newElement = ReactElement.cloneElement.apply(this, arguments);
        for (var i = 2; i < arguments.length; i++) {
          validateChildKeys(arguments[i], newElement.type);
        }
        validatePropTypes(newElement);
        return newElement;
      }
    };
    module.exports = ReactElementValidator;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/ReactPropTypeLocationNames.js', ['github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactPropTypeLocationNames = {};
    if ('production' !== 'production') {
      ReactPropTypeLocationNames = {
        prop: 'prop',
        context: 'context',
        childContext: 'child context'
      };
    }
    module.exports = ReactPropTypeLocationNames;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/getIteratorFn.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule getIteratorFn
   * @typechecks static-only
   */

  'use strict';

  /* global Symbol */

  var global = this || self,
      GLOBAL = global;
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  module.exports = getIteratorFn;
});
System.registerDynamic('npm:react@0.14.9/lib/ReactPropTypes.js', ['npm:react@0.14.9/lib/ReactElement.js', 'npm:react@0.14.9/lib/ReactPropTypeLocationNames.js', 'npm:fbjs@0.6.1/lib/emptyFunction.js', 'npm:react@0.14.9/lib/getIteratorFn.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ReactElement = $__require('npm:react@0.14.9/lib/ReactElement.js');
  var ReactPropTypeLocationNames = $__require('npm:react@0.14.9/lib/ReactPropTypeLocationNames.js');
  var emptyFunction = $__require('npm:fbjs@0.6.1/lib/emptyFunction.js');
  var getIteratorFn = $__require('npm:react@0.14.9/lib/getIteratorFn.js');
  var ANONYMOUS = '<<anonymous>>';
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker
  };
  function createChainableTypeChecker(validate) {
    function checkType(isRequired, props, propName, componentName, location, propFullName) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;
      if (props[propName] == null) {
        var locationName = ReactPropTypeLocationNames[location];
        if (isRequired) {
          return new Error('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }
    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);
    return chainedCheckType;
  }
  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        var locationName = ReactPropTypeLocationNames[location];
        var preciseType = getPreciseType(propValue);
        return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }
  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunction.thatReturns(null));
  }
  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var locationName = ReactPropTypeLocationNames[location];
        var propType = getPropType(propValue);
        return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }
  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!ReactElement.isValidElement(props[propName])) {
        var locationName = ReactPropTypeLocationNames[location];
        return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }
  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var locationName = ReactPropTypeLocationNames[location];
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }
  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      return createChainableTypeChecker(function () {
        return new Error('Invalid argument supplied to oneOf, expected an instance of array.');
      });
    }
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (propValue === expectedValues[i]) {
          return null;
        }
      }
      var locationName = ReactPropTypeLocationNames[location];
      var valuesString = JSON.stringify(expectedValues);
      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }
  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        var locationName = ReactPropTypeLocationNames[location];
        return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (propValue.hasOwnProperty(key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }
  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      return createChainableTypeChecker(function () {
        return new Error('Invalid argument supplied to oneOfType, expected an instance of array.');
      });
    }
    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED') == null) {
          return null;
        }
      }
      var locationName = ReactPropTypeLocationNames[location];
      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }
  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        var locationName = ReactPropTypeLocationNames[location];
        return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }
  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        var locationName = ReactPropTypeLocationNames[location];
        return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }
  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || ReactElement.isValidElement(propValue)) {
          return true;
        }
        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }
        return true;
      default:
        return false;
    }
  }
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      return 'object';
    }
    return propType;
  }
  function getPreciseType(propValue) {
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return '<<anonymous>>';
    }
    return propValue.constructor.name;
  }
  module.exports = ReactPropTypes;
});
System.registerDynamic('npm:react@0.14.9/lib/ReactVersion.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule ReactVersion
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  module.exports = '0.14.9';
});
System.registerDynamic('npm:react@0.14.9/lib/ReactCurrentOwner.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule ReactCurrentOwner
   */

  'use strict';

  /**
   * Keeps track of the current owner.
   *
   * The current owner is the component who should own any components that are
   * currently being constructed.
   */

  var global = this || self,
      GLOBAL = global;
  var ReactCurrentOwner = {

    /**
     * @internal
     * @type {ReactComponent}
     */
    current: null

  };

  module.exports = ReactCurrentOwner;
});
System.registerDynamic('npm:react@0.14.9/lib/canDefineProperty.js', ['github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var canDefineProperty = false;
    if ('production' !== 'production') {
      try {
        Object.defineProperty({}, 'x', { get: function () {} });
        canDefineProperty = true;
      } catch (x) {}
    }
    module.exports = canDefineProperty;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/ReactElement.js', ['npm:react@0.14.9/lib/ReactCurrentOwner.js', 'npm:react@0.14.9/lib/Object.assign.js', 'npm:react@0.14.9/lib/canDefineProperty.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactCurrentOwner = $__require('npm:react@0.14.9/lib/ReactCurrentOwner.js');
    var assign = $__require('npm:react@0.14.9/lib/Object.assign.js');
    var canDefineProperty = $__require('npm:react@0.14.9/lib/canDefineProperty.js');
    var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;
    var RESERVED_PROPS = {
      key: true,
      ref: true,
      __self: true,
      __source: true
    };
    var ReactElement = function (type, key, ref, self, source, owner, props) {
      var element = {
        $$typeof: REACT_ELEMENT_TYPE,
        type: type,
        key: key,
        ref: ref,
        props: props,
        _owner: owner
      };
      if ('production' !== 'production') {
        element._store = {};
        if (canDefineProperty) {
          Object.defineProperty(element._store, 'validated', {
            configurable: false,
            enumerable: false,
            writable: true,
            value: false
          });
          Object.defineProperty(element, '_self', {
            configurable: false,
            enumerable: false,
            writable: false,
            value: self
          });
          Object.defineProperty(element, '_source', {
            configurable: false,
            enumerable: false,
            writable: false,
            value: source
          });
        } else {
          element._store.validated = false;
          element._self = self;
          element._source = source;
        }
        Object.freeze(element.props);
        Object.freeze(element);
      }
      return element;
    };
    ReactElement.createElement = function (type, config, children) {
      var propName;
      var props = {};
      var key = null;
      var ref = null;
      var self = null;
      var source = null;
      if (config != null) {
        ref = config.ref === undefined ? null : config.ref;
        key = config.key === undefined ? null : '' + config.key;
        self = config.__self === undefined ? null : config.__self;
        source = config.__source === undefined ? null : config.__source;
        for (propName in config) {
          if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
            props[propName] = config[propName];
          }
        }
      }
      var childrenLength = arguments.length - 2;
      if (childrenLength === 1) {
        props.children = children;
      } else if (childrenLength > 1) {
        var childArray = Array(childrenLength);
        for (var i = 0; i < childrenLength; i++) {
          childArray[i] = arguments[i + 2];
        }
        props.children = childArray;
      }
      if (type && type.defaultProps) {
        var defaultProps = type.defaultProps;
        for (propName in defaultProps) {
          if (typeof props[propName] === 'undefined') {
            props[propName] = defaultProps[propName];
          }
        }
      }
      return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
    };
    ReactElement.createFactory = function (type) {
      var factory = ReactElement.createElement.bind(null, type);
      factory.type = type;
      return factory;
    };
    ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
      var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
      return newElement;
    };
    ReactElement.cloneAndReplaceProps = function (oldElement, newProps) {
      var newElement = ReactElement(oldElement.type, oldElement.key, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, newProps);
      if ('production' !== 'production') {
        newElement._store.validated = oldElement._store.validated;
      }
      return newElement;
    };
    ReactElement.cloneElement = function (element, config, children) {
      var propName;
      var props = assign({}, element.props);
      var key = element.key;
      var ref = element.ref;
      var self = element._self;
      var source = element._source;
      var owner = element._owner;
      if (config != null) {
        if (config.ref !== undefined) {
          ref = config.ref;
          owner = ReactCurrentOwner.current;
        }
        if (config.key !== undefined) {
          key = '' + config.key;
        }
        for (propName in config) {
          if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
            props[propName] = config[propName];
          }
        }
      }
      var childrenLength = arguments.length - 2;
      if (childrenLength === 1) {
        props.children = children;
      } else if (childrenLength > 1) {
        var childArray = Array(childrenLength);
        for (var i = 0; i < childrenLength; i++) {
          childArray[i] = arguments[i + 2];
        }
        props.children = childArray;
      }
      return ReactElement(element.type, key, ref, self, source, owner, props);
    };
    ReactElement.isValidElement = function (object) {
      return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
    };
    module.exports = ReactElement;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:fbjs@0.6.1/lib/invariant.js', ['github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    function invariant(condition, format, a, b, c, d, e, f) {
      if ('production' !== 'production') {
        if (format === undefined) {
          throw new Error('invariant requires an error message argument');
        }
      }
      if (!condition) {
        var error;
        if (format === undefined) {
          error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
        } else {
          var args = [a, b, c, d, e, f];
          var argIndex = 0;
          error = new Error(format.replace(/%s/g, function () {
            return args[argIndex++];
          }));
          error.name = 'Invariant Violation';
        }
        error.framesToPop = 1;
        throw error;
      }
    }
    module.exports = invariant;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/onlyChild.js', ['npm:react@0.14.9/lib/ReactElement.js', 'npm:fbjs@0.6.1/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactElement = $__require('npm:react@0.14.9/lib/ReactElement.js');
    var invariant = $__require('npm:fbjs@0.6.1/lib/invariant.js');
    function onlyChild(children) {
      !ReactElement.isValidElement(children) ? 'production' !== 'production' ? invariant(false, 'onlyChild must be passed a children with exactly one child.') : invariant(false) : undefined;
      return children;
    }
    module.exports = onlyChild;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/ReactIsomorphic.js', ['npm:react@0.14.9/lib/ReactChildren.js', 'npm:react@0.14.9/lib/ReactComponent.js', 'npm:react@0.14.9/lib/ReactClass.js', 'npm:react@0.14.9/lib/ReactDOMFactories.js', 'npm:react@0.14.9/lib/ReactElement.js', 'npm:react@0.14.9/lib/ReactElementValidator.js', 'npm:react@0.14.9/lib/ReactPropTypes.js', 'npm:react@0.14.9/lib/ReactVersion.js', 'npm:react@0.14.9/lib/Object.assign.js', 'npm:react@0.14.9/lib/onlyChild.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactChildren = $__require('npm:react@0.14.9/lib/ReactChildren.js');
    var ReactComponent = $__require('npm:react@0.14.9/lib/ReactComponent.js');
    var ReactClass = $__require('npm:react@0.14.9/lib/ReactClass.js');
    var ReactDOMFactories = $__require('npm:react@0.14.9/lib/ReactDOMFactories.js');
    var ReactElement = $__require('npm:react@0.14.9/lib/ReactElement.js');
    var ReactElementValidator = $__require('npm:react@0.14.9/lib/ReactElementValidator.js');
    var ReactPropTypes = $__require('npm:react@0.14.9/lib/ReactPropTypes.js');
    var ReactVersion = $__require('npm:react@0.14.9/lib/ReactVersion.js');
    var assign = $__require('npm:react@0.14.9/lib/Object.assign.js');
    var onlyChild = $__require('npm:react@0.14.9/lib/onlyChild.js');
    var createElement = ReactElement.createElement;
    var createFactory = ReactElement.createFactory;
    var cloneElement = ReactElement.cloneElement;
    if ('production' !== 'production') {
      createElement = ReactElementValidator.createElement;
      createFactory = ReactElementValidator.createFactory;
      cloneElement = ReactElementValidator.cloneElement;
    }
    var React = {
      Children: {
        map: ReactChildren.map,
        forEach: ReactChildren.forEach,
        count: ReactChildren.count,
        toArray: ReactChildren.toArray,
        only: onlyChild
      },
      Component: ReactComponent,
      createElement: createElement,
      cloneElement: cloneElement,
      isValidElement: ReactElement.isValidElement,
      PropTypes: ReactPropTypes,
      createClass: ReactClass.createClass,
      createFactory: createFactory,
      createMixin: function (mixin) {
        return mixin;
      },
      DOM: ReactDOMFactories,
      version: ReactVersion,
      __spread: assign
    };
    module.exports = React;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/Object.assign.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2014-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule Object.assign
   */

  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign

  'use strict';

  var global = this || self,
      GLOBAL = global;
  function assign(target, sources) {
    if (target == null) {
      throw new TypeError('Object.assign target cannot be null or undefined');
    }

    var to = Object(target);
    var hasOwnProperty = Object.prototype.hasOwnProperty;

    for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {
      var nextSource = arguments[nextIndex];
      if (nextSource == null) {
        continue;
      }

      var from = Object(nextSource);

      // We don't currently support accessors nor proxies. Therefore this
      // copy cannot throw. If we ever supported this then we must handle
      // exceptions and side-effects. We don't support symbols so they won't
      // be transferred.

      for (var key in from) {
        if (hasOwnProperty.call(from, key)) {
          to[key] = from[key];
        }
      }
    }

    return to;
  }

  module.exports = assign;
});
System.registerDynamic("npm:fbjs@0.6.1/lib/emptyFunction.js", [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @providesModule emptyFunction
   */

  "use strict";

  var global = this || self,
      GLOBAL = global;
  function makeEmptyFunction(arg) {
    return function () {
      return arg;
    };
  }

  /**
   * This function accepts and discards inputs; it has no side effects. This is
   * primarily useful idiomatically for overridable function endpoints which
   * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
   */
  function emptyFunction() {}

  emptyFunction.thatReturns = makeEmptyFunction;
  emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
  emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
  emptyFunction.thatReturnsNull = makeEmptyFunction(null);
  emptyFunction.thatReturnsThis = function () {
    return this;
  };
  emptyFunction.thatReturnsArgument = function (arg) {
    return arg;
  };

  module.exports = emptyFunction;
});
System.registerDynamic('npm:fbjs@0.6.1/lib/warning.js', ['npm:fbjs@0.6.1/lib/emptyFunction.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var emptyFunction = $__require('npm:fbjs@0.6.1/lib/emptyFunction.js');
    var warning = emptyFunction;
    if ('production' !== 'production') {
      warning = function (condition, format) {
        for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
          args[_key - 2] = arguments[_key];
        }
        if (format === undefined) {
          throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
        }
        if (format.indexOf('Failed Composite propType: ') === 0) {
          return;
        }
        if (!condition) {
          var argIndex = 0;
          var message = 'Warning: ' + format.replace(/%s/g, function () {
            return args[argIndex++];
          });
          if (typeof console !== 'undefined') {
            console.error(message);
          }
          try {
            throw new Error(message);
          } catch (x) {}
        }
      };
    }
    module.exports = warning;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/deprecated.js', ['npm:react@0.14.9/lib/Object.assign.js', 'npm:fbjs@0.6.1/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var assign = $__require('npm:react@0.14.9/lib/Object.assign.js');
    var warning = $__require('npm:fbjs@0.6.1/lib/warning.js');
    function deprecated(fnName, newModule, newPackage, ctx, fn) {
      var warned = false;
      if ('production' !== 'production') {
        var newFn = function () {
          'production' !== 'production' ? warning(warned, 'React.%s is deprecated. Please use %s.%s from require' + '(\'%s\') ' + 'instead.', fnName, newModule, fnName, newPackage) : undefined;
          warned = true;
          return fn.apply(ctx, arguments);
        };
        return assign(newFn, fn);
      }
      return fn;
    }
    module.exports = deprecated;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@0.14.9/lib/React.js', ['npm:react@0.14.9/lib/ReactDOM.js', 'npm:react@0.14.9/lib/ReactDOMServer.js', 'npm:react@0.14.9/lib/ReactIsomorphic.js', 'npm:react@0.14.9/lib/Object.assign.js', 'npm:react@0.14.9/lib/deprecated.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ReactDOM = $__require('npm:react@0.14.9/lib/ReactDOM.js');
  var ReactDOMServer = $__require('npm:react@0.14.9/lib/ReactDOMServer.js');
  var ReactIsomorphic = $__require('npm:react@0.14.9/lib/ReactIsomorphic.js');
  var assign = $__require('npm:react@0.14.9/lib/Object.assign.js');
  var deprecated = $__require('npm:react@0.14.9/lib/deprecated.js');
  var React = {};
  assign(React, ReactIsomorphic);
  assign(React, {
    findDOMNode: deprecated('findDOMNode', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.findDOMNode),
    render: deprecated('render', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.render),
    unmountComponentAtNode: deprecated('unmountComponentAtNode', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.unmountComponentAtNode),
    renderToString: deprecated('renderToString', 'ReactDOMServer', 'react-dom/server', ReactDOMServer, ReactDOMServer.renderToString),
    renderToStaticMarkup: deprecated('renderToStaticMarkup', 'ReactDOMServer', 'react-dom/server', ReactDOMServer, ReactDOMServer.renderToStaticMarkup)
  });
  React.__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactDOM;
  React.__SECRET_DOM_SERVER_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactDOMServer;
  module.exports = React;
});
System.registerDynamic('npm:react@0.14.9/react.js', ['npm:react@0.14.9/lib/React.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:react@0.14.9/lib/React.js');
});
System.registerDynamic("npm:react@0.14.9.js", ["npm:react@0.14.9/react.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:react@0.14.9/react.js");
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/common/abstractComponent.js", ["npm:tslib@1.8.0.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/utils.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var React = $__require("npm:react@0.14.9.js");
  var utils_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/utils.js");
  var AbstractComponent = function (_super) {
    tslib_1.__extends(AbstractComponent, _super);
    function AbstractComponent(props, context) {
      var _this = _super.call(this, props, context) || this;
      _this.timeoutIds = [];
      _this.clearTimeouts = function () {
        if (_this.timeoutIds.length > 0) {
          for (var _i = 0, _a = _this.timeoutIds; _i < _a.length; _i++) {
            var timeoutId = _a[_i];
            clearTimeout(timeoutId);
          }
          _this.timeoutIds = [];
        }
      };
      if (!utils_1.isNodeEnv("production")) {
        _this.validateProps(_this.props);
      }
      return _this;
    }
    AbstractComponent.prototype.componentWillReceiveProps = function (nextProps) {
      if (!utils_1.isNodeEnv("production")) {
        this.validateProps(nextProps);
      }
    };
    AbstractComponent.prototype.componentWillUnmount = function () {
      this.clearTimeouts();
    };
    AbstractComponent.prototype.setTimeout = function (callback, timeout) {
      var handle = setTimeout(callback, timeout);
      this.timeoutIds.push(handle);
      return function () {
        return clearTimeout(handle);
      };
    };
    AbstractComponent.prototype.validateProps = function (_) {};
    return AbstractComponent;
  }(React.Component);
  exports.AbstractComponent = AbstractComponent;
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/common/colors.js", [], true, function ($__require, exports, module) {
    /*
     * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
     *
     * Licensed under the terms of the LICENSE file distributed with this project.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Colors = {
        BLACK: "#10161A",
        BLUE1: "#0E5A8A",
        BLUE2: "#106BA3",
        BLUE3: "#137CBD",
        BLUE4: "#2B95D6",
        BLUE5: "#48AFF0",
        COBALT1: "#1F4B99",
        COBALT2: "#2458B3",
        COBALT3: "#2965CC",
        COBALT4: "#4580E6",
        COBALT5: "#669EFF",
        DARK_GRAY1: "#182026",
        DARK_GRAY2: "#202B33",
        DARK_GRAY3: "#293742",
        DARK_GRAY4: "#30404D",
        DARK_GRAY5: "#394B59",
        FOREST1: "#1D7324",
        FOREST2: "#238C2C",
        FOREST3: "#29A634",
        FOREST4: "#43BF4D",
        FOREST5: "#62D96B",
        GOLD1: "#A67908",
        GOLD2: "#BF8C0A",
        GOLD3: "#D99E0B",
        GOLD4: "#F2B824",
        GOLD5: "#FFC940",
        GRAY1: "#5C7080",
        GRAY2: "#738694",
        GRAY3: "#8A9BA8",
        GRAY4: "#A7B6C2",
        GRAY5: "#BFCCD6",
        GREEN1: "#0A6640",
        GREEN2: "#0D8050",
        GREEN3: "#0F9960",
        GREEN4: "#15B371",
        GREEN5: "#3DCC91",
        INDIGO1: "#5642A6",
        INDIGO2: "#634DBF",
        INDIGO3: "#7157D9",
        INDIGO4: "#9179F2",
        INDIGO5: "#AD99FF",
        LIGHT_GRAY1: "#CED9E0",
        LIGHT_GRAY2: "#D8E1E8",
        LIGHT_GRAY3: "#E1E8ED",
        LIGHT_GRAY4: "#EBF1F5",
        LIGHT_GRAY5: "#F5F8FA",
        LIME1: "#728C23",
        LIME2: "#87A629",
        LIME3: "#9BBF30",
        LIME4: "#B6D94C",
        LIME5: "#D1F26D",
        ORANGE1: "#A66321",
        ORANGE2: "#BF7326",
        ORANGE3: "#D9822B",
        ORANGE4: "#F29D49",
        ORANGE5: "#FFB366",
        RED1: "#A82A2A",
        RED2: "#C23030",
        RED3: "#DB3737",
        RED4: "#F55656",
        RED5: "#FF7373",
        ROSE1: "#A82255",
        ROSE2: "#C22762",
        ROSE3: "#DB2C6F",
        ROSE4: "#F5498B",
        ROSE5: "#FF66A1",
        SEPIA1: "#63411E",
        SEPIA2: "#7D5125",
        SEPIA3: "#96622D",
        SEPIA4: "#B07B46",
        SEPIA5: "#C99765",
        TURQUOISE1: "#008075",
        TURQUOISE2: "#00998C",
        TURQUOISE3: "#00B3A4",
        TURQUOISE4: "#14CCBD",
        TURQUOISE5: "#2EE6D6",
        VERMILION1: "#9E2B0E",
        VERMILION2: "#B83211",
        VERMILION3: "#D13913",
        VERMILION4: "#EB532D",
        VERMILION5: "#FF6E4A",
        VIOLET1: "#5C255C",
        VIOLET2: "#752F75",
        VIOLET3: "#8F398F",
        VIOLET4: "#A854A8",
        VIOLET5: "#C274C2",
        WHITE: "#FFFFFF"
    };

    
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/common/props.js", ["npm:tslib@1.8.0.js"], true, function ($__require, exports, module) {
    /*
     * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
     *
     * Licensed under the terms of the LICENSE file distributed with this project.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = $__require("npm:tslib@1.8.0.js");
    /** A collection of curated prop keys used across our Components which are not valid HTMLElement props. */
    var INVALID_PROPS = ["active", "containerRef", "elementRef", "iconName", "inputRef", "intent", "inline", "loading", "leftIconName", "onChildrenMount", "onRemove", "popoverProps", "rightElement", "rightIconName", "text"];
    /**
     * Typically applied to HTMLElements to filter out blacklisted props. When applied to a Component,
     * can filter props from being passed down to the children. Can also filter by a combined list of
     * supplied prop keys and the blacklist (only appropriate for HTMLElements).
     * @param props The original props object to filter down.
     * @param {string[]} invalidProps If supplied, overwrites the default blacklist.
     * @param {boolean} shouldMerge If true, will merge supplied invalidProps and blacklist together.
     */
    function removeNonHTMLProps(props, invalidProps, shouldMerge) {
        if (invalidProps === void 0) {
            invalidProps = INVALID_PROPS;
        }
        if (shouldMerge === void 0) {
            shouldMerge = false;
        }
        if (shouldMerge) {
            invalidProps = invalidProps.concat(INVALID_PROPS);
        }
        return invalidProps.reduce(function (prev, curr) {
            if (prev.hasOwnProperty(curr)) {
                delete prev[curr];
            }
            return prev;
        }, tslib_1.__assign({}, props));
    }
    exports.removeNonHTMLProps = removeNonHTMLProps;

    
});
System.registerDynamic("npm:tslib@1.8.0/tslib.js", [], true, function ($__require, exports, module) {
    /* */
    "format cjs";
    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0
    
    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.
    
    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global global, define, System, Reflect, Promise */

    var global = this || self,
        GLOBAL = global;
    var __extends;
    var __assign;
    var __rest;
    var __decorate;
    var __param;
    var __metadata;
    var __awaiter;
    var __generator;
    var __exportStar;
    var __values;
    var __read;
    var __spread;
    var __await;
    var __asyncGenerator;
    var __asyncDelegator;
    var __asyncValues;
    var __makeTemplateObject;
    (function (factory) {
        var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
        if (typeof undefined === "function" && define.amd) {
            define("tslib", ["exports"], function (exports) {
                factory(createExporter(root, createExporter(exports)));
            });
        } else if (typeof module === "object" && typeof module.exports === "object") {
            factory(createExporter(root, createExporter(module.exports)));
        } else {
            factory(createExporter(root));
        }
        function createExporter(exports, previous) {
            if (typeof Object.create === "function") {
                Object.defineProperty(exports, "__esModule", { value: true });
            } else {
                exports.__esModule = true;
            }
            return function (id, v) {
                return exports[id] = previous ? previous(id, v) : v;
            };
        }
    })(function (exporter) {
        var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {
            d.__proto__ = b;
        } || function (d, b) {
            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        };

        __extends = function (d, b) {
            extendStatics(d, b);
            function __() {
                this.constructor = d;
            }
            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
        };

        __assign = Object.assign || function (t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };

        __rest = function (s, e) {
            var t = {};
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
            if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];
            return t;
        };

        __decorate = function (decorators, target, key, desc) {
            var c = arguments.length,
                r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
                d;
            if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
        };

        __param = function (paramIndex, decorator) {
            return function (target, key) {
                decorator(target, key, paramIndex);
            };
        };

        __metadata = function (metadataKey, metadataValue) {
            if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
        };

        __awaiter = function (thisArg, _arguments, P, generator) {
            return new (P || (P = Promise))(function (resolve, reject) {
                function fulfilled(value) {
                    try {
                        step(generator.next(value));
                    } catch (e) {
                        reject(e);
                    }
                }
                function rejected(value) {
                    try {
                        step(generator["throw"](value));
                    } catch (e) {
                        reject(e);
                    }
                }
                function step(result) {
                    result.done ? resolve(result.value) : new P(function (resolve) {
                        resolve(result.value);
                    }).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
            });
        };

        __generator = function (thisArg, body) {
            var _ = { label: 0, sent: function () {
                    if (t[0] & 1) throw t[1];return t[1];
                }, trys: [], ops: [] },
                f,
                y,
                t,
                g;
            return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
                return this;
            }), g;
            function verb(n) {
                return function (v) {
                    return step([n, v]);
                };
            }
            function step(op) {
                if (f) throw new TypeError("Generator is already executing.");
                while (_) try {
                    if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
                    if (y = 0, t) op = [0, t.value];
                    switch (op[0]) {
                        case 0:case 1:
                            t = op;break;
                        case 4:
                            _.label++;return { value: op[1], done: false };
                        case 5:
                            _.label++;y = op[1];op = [0];continue;
                        case 7:
                            op = _.ops.pop();_.trys.pop();continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;continue;
                            }
                            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                                _.label = op[1];break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];t = op;break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];_.ops.push(op);break;
                            }
                            if (t[2]) _.ops.pop();
                            _.trys.pop();continue;
                    }
                    op = body.call(thisArg, _);
                } catch (e) {
                    op = [6, e];y = 0;
                } finally {
                    f = t = 0;
                }
                if (op[0] & 5) throw op[1];return { value: op[0] ? op[1] : void 0, done: true };
            }
        };

        __exportStar = function (m, exports) {
            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
        };

        __values = function (o) {
            var m = typeof Symbol === "function" && o[Symbol.iterator],
                i = 0;
            if (m) return m.call(o);
            return {
                next: function () {
                    if (o && i >= o.length) o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        };

        __read = function (o, n) {
            var m = typeof Symbol === "function" && o[Symbol.iterator];
            if (!m) return o;
            var i = m.call(o),
                r,
                ar = [],
                e;
            try {
                while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
            } catch (error) {
                e = { error: error };
            } finally {
                try {
                    if (r && !r.done && (m = i["return"])) m.call(i);
                } finally {
                    if (e) throw e.error;
                }
            }
            return ar;
        };

        __spread = function () {
            for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
            return ar;
        };

        __await = function (v) {
            return this instanceof __await ? (this.v = v, this) : new __await(v);
        };

        __asyncGenerator = function (thisArg, _arguments, generator) {
            if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
            var g = generator.apply(thisArg, _arguments || []),
                i,
                q = [];
            return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
                return this;
            }, i;
            function verb(n) {
                if (g[n]) i[n] = function (v) {
                    return new Promise(function (a, b) {
                        q.push([n, v, a, b]) > 1 || resume(n, v);
                    });
                };
            }
            function resume(n, v) {
                try {
                    step(g[n](v));
                } catch (e) {
                    settle(q[0][3], e);
                }
            }
            function step(r) {
                r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
            }
            function fulfill(value) {
                resume("next", value);
            }
            function reject(value) {
                resume("throw", value);
            }
            function settle(f, v) {
                if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
            }
        };

        __asyncDelegator = function (o) {
            var i, p;
            return i = {}, verb("next"), verb("throw", function (e) {
                throw e;
            }), verb("return"), i[Symbol.iterator] = function () {
                return this;
            }, i;
            function verb(n, f) {
                if (o[n]) i[n] = function (v) {
                    return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v;
                };
            }
        };

        __asyncValues = function (o) {
            if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
            var m = o[Symbol.asyncIterator];
            return m ? m.call(o) : typeof __values === "function" ? __values(o) : o[Symbol.iterator]();
        };

        __makeTemplateObject = function (cooked, raw) {
            if (Object.defineProperty) {
                Object.defineProperty(cooked, "raw", { value: raw });
            } else {
                cooked.raw = raw;
            }
            return cooked;
        };

        exporter("__extends", __extends);
        exporter("__assign", __assign);
        exporter("__rest", __rest);
        exporter("__decorate", __decorate);
        exporter("__param", __param);
        exporter("__metadata", __metadata);
        exporter("__awaiter", __awaiter);
        exporter("__generator", __generator);
        exporter("__exportStar", __exportStar);
        exporter("__values", __values);
        exporter("__read", __read);
        exporter("__spread", __spread);
        exporter("__await", __await);
        exporter("__asyncGenerator", __asyncGenerator);
        exporter("__asyncDelegator", __asyncDelegator);
        exporter("__asyncValues", __asyncValues);
        exporter("__makeTemplateObject", __makeTemplateObject);
    });
});
System.registerDynamic("npm:tslib@1.8.0.js", ["npm:tslib@1.8.0/tslib.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:tslib@1.8.0/tslib.js");
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/common/position.js", [], true, function ($__require, exports, module) {
    /*
     * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
     *
     * Licensed under the terms of the LICENSE file distributed with this project.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    var Position;
    (function (Position) {
        Position[Position["TOP_LEFT"] = 0] = "TOP_LEFT";
        Position[Position["TOP"] = 1] = "TOP";
        Position[Position["TOP_RIGHT"] = 2] = "TOP_RIGHT";
        Position[Position["RIGHT_TOP"] = 3] = "RIGHT_TOP";
        Position[Position["RIGHT"] = 4] = "RIGHT";
        Position[Position["RIGHT_BOTTOM"] = 5] = "RIGHT_BOTTOM";
        Position[Position["BOTTOM_RIGHT"] = 6] = "BOTTOM_RIGHT";
        Position[Position["BOTTOM"] = 7] = "BOTTOM";
        Position[Position["BOTTOM_LEFT"] = 8] = "BOTTOM_LEFT";
        Position[Position["LEFT_BOTTOM"] = 9] = "LEFT_BOTTOM";
        Position[Position["LEFT"] = 10] = "LEFT";
        Position[Position["LEFT_TOP"] = 11] = "LEFT_TOP";
    })(Position = exports.Position || (exports.Position = {}));
    function isPositionHorizontal(position) {
        /* istanbul ignore next */
        return position === Position.TOP || position === Position.TOP_LEFT || position === Position.TOP_RIGHT || position === Position.BOTTOM || position === Position.BOTTOM_LEFT || position === Position.BOTTOM_RIGHT;
    }
    exports.isPositionHorizontal = isPositionHorizontal;
    function isPositionVertical(position) {
        /* istanbul ignore next */
        return position === Position.LEFT || position === Position.LEFT_TOP || position === Position.LEFT_BOTTOM || position === Position.RIGHT || position === Position.RIGHT_TOP || position === Position.RIGHT_BOTTOM;
    }
    exports.isPositionVertical = isPositionVertical;

    
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/common/tetherUtils.js", ["npm:tslib@1.8.0.js", "npm:@blueprintjs/core@1.33.0/dist/common/position.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var position_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/position.js");
  var fakeHtmlElement = { appendChild: function () {} };
  function createTetherOptions(element, target, position, tetherOptions) {
    if (tetherOptions === void 0) {
      tetherOptions = {};
    }
    return tslib_1.__assign({}, tetherOptions, {
      attachment: getPopoverAttachment(position),
      bodyElement: fakeHtmlElement,
      classPrefix: "pt-tether",
      element: element,
      target: target,
      targetAttachment: getTargetAttachment(position)
    });
  }
  exports.createTetherOptions = createTetherOptions;
  function getTargetAttachment(position) {
    var attachments = (_a = {}, _a[position_1.Position.TOP_LEFT] = "top left", _a[position_1.Position.TOP] = "top center", _a[position_1.Position.TOP_RIGHT] = "top right", _a[position_1.Position.RIGHT_TOP] = "top right", _a[position_1.Position.RIGHT] = "middle right", _a[position_1.Position.RIGHT_BOTTOM] = "bottom right", _a[position_1.Position.BOTTOM_RIGHT] = "bottom right", _a[position_1.Position.BOTTOM] = "bottom center", _a[position_1.Position.BOTTOM_LEFT] = "bottom left", _a[position_1.Position.LEFT_BOTTOM] = "bottom left", _a[position_1.Position.LEFT] = "middle left", _a[position_1.Position.LEFT_TOP] = "top left", _a);
    return attachments[position];
    var _a;
  }
  exports.getTargetAttachment = getTargetAttachment;
  function getPopoverAttachment(position) {
    var attachments = (_a = {}, _a[position_1.Position.TOP_LEFT] = "bottom left", _a[position_1.Position.TOP] = "bottom center", _a[position_1.Position.TOP_RIGHT] = "bottom right", _a[position_1.Position.RIGHT_TOP] = "top left", _a[position_1.Position.RIGHT] = "middle left", _a[position_1.Position.RIGHT_BOTTOM] = "bottom left", _a[position_1.Position.BOTTOM_RIGHT] = "top right", _a[position_1.Position.BOTTOM] = "top center", _a[position_1.Position.BOTTOM_LEFT] = "top left", _a[position_1.Position.LEFT_BOTTOM] = "bottom right", _a[position_1.Position.LEFT] = "middle right", _a[position_1.Position.LEFT_TOP] = "top right", _a);
    return attachments[position];
    var _a;
  }
  exports.getPopoverAttachment = getPopoverAttachment;
  function getAttachmentClasses(position) {
    return expandAttachmentClasses(getPopoverAttachment(position), "pt-tether-element-attached").concat(expandAttachmentClasses(getTargetAttachment(position), "pt-tether-target-attached"));
  }
  exports.getAttachmentClasses = getAttachmentClasses;
  function expandAttachmentClasses(attachments, prefix) {
    var _a = attachments.split(" "),
        verticalAlign = _a[0],
        horizontalAlign = _a[1];
    return [prefix + "-" + verticalAlign, prefix + "-" + horizontalAlign];
  }
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/common/intent.js", [], true, function ($__require, exports, module) {
  /*
   * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
   *
   * Licensed under the terms of the LICENSE file distributed with this project.
   */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  /**
   * The four basic intents.
   */
  var Intent;
  (function (Intent) {
    Intent[Intent["NONE"] = -1] = "NONE";
    Intent[Intent["PRIMARY"] = 0] = "PRIMARY";
    Intent[Intent["SUCCESS"] = 1] = "SUCCESS";
    Intent[Intent["WARNING"] = 2] = "WARNING";
    Intent[Intent["DANGER"] = 3] = "DANGER";
  })(Intent = exports.Intent || (exports.Intent = {}));

  
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/common/classes.js", ["npm:@blueprintjs/core@1.33.0/dist/common/intent.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var intent_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/intent.js");
  exports.DARK = "pt-dark";
  exports.ACTIVE = "pt-active";
  exports.MINIMAL = "pt-minimal";
  exports.DISABLED = "pt-disabled";
  exports.SMALL = "pt-small";
  exports.LARGE = "pt-large";
  exports.LOADING = "pt-loading";
  exports.INTERACTIVE = "pt-interactive";
  exports.ALIGN_LEFT = "pt-align-left";
  exports.ALIGN_RIGHT = "pt-align-right";
  exports.INLINE = "pt-inline";
  exports.FILL = "pt-fill";
  exports.FIXED = "pt-fixed";
  exports.FIXED_TOP = "pt-fixed-top";
  exports.VERTICAL = "pt-vertical";
  exports.ROUND = "pt-round";
  exports.TEXT_MUTED = "pt-text-muted";
  exports.TEXT_OVERFLOW_ELLIPSIS = "pt-text-overflow-ellipsis";
  exports.UI_TEXT_LARGE = "pt-ui-text-large";
  exports.ALERT = "pt-alert";
  exports.ALERT_BODY = "pt-alert-body";
  exports.ALERT_CONTENTS = "pt-alert-contents";
  exports.ALERT_FOOTER = "pt-alert-footer";
  exports.BREADCRUMB = "pt-breadcrumb";
  exports.BREADCRUMB_CURRENT = "pt-breadcrumb-current";
  exports.BREADCRUMBS = "pt-breadcrumbs";
  exports.BREADCRUMBS_COLLAPSED = "pt-breadcrumbs-collapsed";
  exports.BUTTON = "pt-button";
  exports.BUTTON_GROUP = "pt-button-group";
  exports.CALLOUT = "pt-callout";
  exports.CARD = "pt-card";
  exports.COLLAPSE = "pt-collapse";
  exports.COLLAPSIBLE_LIST = "pt-collapse-list";
  exports.CONTEXT_MENU = "pt-context-menu";
  exports.CONTEXT_MENU_POPOVER_TARGET = "pt-context-menu-popover-target";
  exports.CONTROL = "pt-control";
  exports.CONTROL_GROUP = "pt-control-group";
  exports.CONTROL_INDICATOR = "pt-control-indicator";
  exports.DIALOG = "pt-dialog";
  exports.DIALOG_CONTAINER = "pt-dialog-container";
  exports.DIALOG_BODY = "pt-dialog-body";
  exports.DIALOG_CLOSE_BUTTON = "pt-dialog-close-button";
  exports.DIALOG_FOOTER = "pt-dialog-footer";
  exports.DIALOG_FOOTER_ACTIONS = "pt-dialog-footer-actions";
  exports.DIALOG_HEADER = "pt-dialog-header";
  exports.EDITABLE_TEXT = "pt-editable-text";
  exports.ELEVATION_0 = "pt-elevation-0";
  exports.ELEVATION_1 = "pt-elevation-1";
  exports.ELEVATION_2 = "pt-elevation-2";
  exports.ELEVATION_3 = "pt-elevation-3";
  exports.ELEVATION_4 = "pt-elevation-4";
  exports.INPUT = "pt-input";
  exports.INPUT_GROUP = "pt-input-group";
  exports.CHECKBOX = "pt-checkbox";
  exports.RADIO = "pt-radio";
  exports.SWITCH = "pt-switch";
  exports.FILE_UPLOAD = "pt-file-upload";
  exports.FILE_UPLOAD_INPUT = "pt-file-upload-input";
  exports.INTENT_PRIMARY = "pt-intent-primary";
  exports.INTENT_SUCCESS = "pt-intent-success";
  exports.INTENT_WARNING = "pt-intent-warning";
  exports.INTENT_DANGER = "pt-intent-danger";
  exports.LABEL = "pt-label";
  exports.FORM_GROUP = "pt-form-group";
  exports.FORM_CONTENT = "pt-form-content";
  exports.FORM_HELPER_TEXT = "pt-form-helper-text";
  exports.MENU = "pt-menu";
  exports.MENU_ITEM = "pt-menu-item";
  exports.MENU_ITEM_LABEL = "pt-menu-item-label";
  exports.MENU_SUBMENU = "pt-submenu";
  exports.MENU_DIVIDER = "pt-menu-divider";
  exports.MENU_HEADER = "pt-menu-header";
  exports.NAVBAR = "pt-navbar";
  exports.NAVBAR_GROUP = "pt-navbar-group";
  exports.NAVBAR_HEADING = "pt-navbar-heading";
  exports.NAVBAR_DIVIDER = "pt-navbar-divider";
  exports.NON_IDEAL_STATE = "pt-non-ideal-state";
  exports.NON_IDEAL_STATE_ACTION = "pt-non-ideal-state-action";
  exports.NON_IDEAL_STATE_DESCRIPTION = "pt-non-ideal-state-description";
  exports.NON_IDEAL_STATE_ICON = "pt-non-ideal-state-icon";
  exports.NON_IDEAL_STATE_TITLE = "pt-non-ideal-state-title";
  exports.NON_IDEAL_STATE_VISUAL = "pt-non-ideal-state-visual";
  exports.NUMERIC_INPUT = "pt-numeric-input";
  exports.OVERLAY = "pt-overlay";
  exports.OVERLAY_BACKDROP = "pt-overlay-backdrop";
  exports.OVERLAY_CONTENT = "pt-overlay-content";
  exports.OVERLAY_INLINE = "pt-overlay-inline";
  exports.OVERLAY_OPEN = "pt-overlay-open";
  exports.OVERLAY_SCROLL_CONTAINER = "pt-overlay-scroll-container";
  exports.POPOVER = "pt-popover";
  exports.POPOVER_ARROW = "pt-popover-arrow";
  exports.POPOVER_BACKDROP = "pt-popover-backdrop";
  exports.POPOVER_CONTENT = "pt-popover-content";
  exports.POPOVER_DISMISS = "pt-popover-dismiss";
  exports.POPOVER_DISMISS_OVERRIDE = "pt-popover-dismiss-override";
  exports.POPOVER_OPEN = "pt-popover-open";
  exports.POPOVER_TARGET = "pt-popover-target";
  exports.TRANSITION_CONTAINER = "pt-transition-container";
  exports.PROGRESS_BAR = "pt-progress-bar";
  exports.PROGRESS_METER = "pt-progress-meter";
  exports.PROGRESS_NO_STRIPES = "pt-no-stripes";
  exports.PROGRESS_NO_ANIMATION = "pt-no-animation";
  exports.PORTAL = "pt-portal";
  exports.SELECT = "pt-select";
  exports.SKELETON = "pt-skeleton";
  exports.SLIDER = "pt-slider";
  exports.SLIDER_HANDLE = exports.SLIDER + "-handle";
  exports.SLIDER_LABEL = exports.SLIDER + "-label";
  exports.RANGE_SLIDER = "pt-range-slider";
  exports.SPINNER = "pt-spinner";
  exports.SVG_SPINNER = "pt-svg-spinner";
  exports.TAB = "pt-tab";
  exports.TAB_LIST = "pt-tab-list";
  exports.TAB_PANEL = "pt-tab-panel";
  exports.TABS = "pt-tabs";
  exports.TABLE = "pt-table";
  exports.TABLE_CONDENSED = "pt-condensed";
  exports.TABLE_STRIPED = "pt-striped";
  exports.TABLE_BORDERED = "pt-bordered";
  exports.TAG = "pt-tag";
  exports.TAG_REMOVABLE = "pt-tag-removable";
  exports.TAG_REMOVE = "pt-tag-remove";
  exports.TOAST = "pt-toast";
  exports.TOAST_CONTAINER = "pt-toast-container";
  exports.TOAST_MESSAGE = "pt-toast-message";
  exports.TOOLTIP = "pt-tooltip";
  exports.TREE = "pt-tree";
  exports.TREE_NODE = "pt-tree-node";
  exports.TREE_NODE_CARET = "pt-tree-node-caret";
  exports.TREE_NODE_CARET_CLOSED = "pt-tree-node-caret-closed";
  exports.TREE_NODE_CARET_NONE = "pt-tree-node-caret-none";
  exports.TREE_NODE_CARET_OPEN = "pt-tree-node-caret-open";
  exports.TREE_NODE_CONTENT = "pt-tree-node-content";
  exports.TREE_NODE_EXPANDED = "pt-tree-node-expanded";
  exports.TREE_NODE_ICON = "pt-tree-node-icon";
  exports.TREE_NODE_LABEL = "pt-tree-node-label";
  exports.TREE_NODE_LIST = "pt-tree-node-list";
  exports.TREE_NODE_SECONDARY_LABEL = "pt-tree-node-secondary-label";
  exports.TREE_NODE_SELECTED = "pt-tree-node-selected";
  exports.TREE_ROOT = "pt-tree-root";
  exports.ICON = "pt-icon";
  exports.ICON_STANDARD = "pt-icon-standard";
  exports.ICON_LARGE = "pt-icon-large";
  function iconClass(iconName) {
    if (iconName == null) {
      return undefined;
    }
    return iconName.indexOf("pt-icon-") === 0 ? iconName : "pt-icon-" + iconName;
  }
  exports.iconClass = iconClass;
  function intentClass(intent) {
    if (intent === void 0) {
      intent = intent_1.Intent.NONE;
    }
    if (intent === intent_1.Intent.NONE || intent_1.Intent[intent] == null) {
      return undefined;
    }
    return "pt-intent-" + intent_1.Intent[intent].toLowerCase();
  }
  exports.intentClass = intentClass;
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/common/keys.js", [], true, function ($__require, exports, module) {
  /*
   * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
   *
   * Licensed under the terms of the LICENSE file distributed with this project.
   */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.BACKSPACE = 8;
  exports.TAB = 9;
  exports.ENTER = 13;
  exports.SHIFT = 16;
  exports.ESCAPE = 27;
  exports.SPACE = 32;
  exports.ARROW_LEFT = 37;
  exports.ARROW_UP = 38;
  exports.ARROW_RIGHT = 39;
  exports.ARROW_DOWN = 40;
  exports.DELETE = 46;

  
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/common/errors.js", [], true, function ($__require, exports, module) {
    /*
     * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
     *
     * Licensed under the terms of the LICENSE file distributed with this project.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    var ns = "[Blueprint]";
    var deprec = ns + " DEPRECATION:";
    exports.CLAMP_MIN_MAX = ns + " clamp: max cannot be less than min";
    exports.ALERT_WARN_CANCEL_PROPS = ns + " <Alert> cancelButtonText and onCancel should be set together.";
    exports.COLLAPSIBLE_LIST_INVALID_CHILD = ns + " <CollapsibleList> children must be <MenuItem>s";
    exports.CONTEXTMENU_WARN_DECORATOR_NO_METHOD = ns + " @ContextMenuTarget-decorated class should implement renderContextMenu.";
    exports.HOTKEYS_HOTKEY_CHILDREN = ns + " <Hotkeys> only accepts <Hotkey> children.";
    exports.MENU_WARN_CHILDREN_SUBMENU_MUTEX = ns + " <MenuItem> children and submenu props are mutually exclusive, with children taking priority.";
    exports.NUMERIC_INPUT_MIN_MAX = ns + " <NumericInput> requires min to be strictly less than max if both are defined.";
    exports.NUMERIC_INPUT_MINOR_STEP_SIZE_BOUND = ns + " <NumericInput> requires minorStepSize to be strictly less than stepSize.";
    exports.NUMERIC_INPUT_MAJOR_STEP_SIZE_BOUND = ns + " <NumericInput> requires majorStepSize to be strictly greater than stepSize.";
    exports.NUMERIC_INPUT_MINOR_STEP_SIZE_NON_POSITIVE = ns + " <NumericInput> requires minorStepSize to be strictly greater than zero.";
    exports.NUMERIC_INPUT_MAJOR_STEP_SIZE_NON_POSITIVE = ns + " <NumericInput> requires majorStepSize to be strictly greater than zero.";
    exports.NUMERIC_INPUT_STEP_SIZE_NON_POSITIVE = ns + " <NumericInput> requires stepSize to be strictly greater than zero.";
    exports.NUMERIC_INPUT_STEP_SIZE_NULL = ns + " <NumericInput> requires stepSize to be defined.";
    exports.POPOVER_REQUIRES_TARGET = ns + " <Popover> requires target prop or at least one child element.";
    exports.POPOVER_MODAL_INTERACTION = ns + " <Popover isModal={true}> requires interactionKind={PopoverInteractionKind.CLICK}.";
    exports.POPOVER_WARN_TOO_MANY_CHILDREN = ns + " <Popover> supports one or two children; additional children are ignored." + " First child is the target, second child is the content. You may instead supply these two as props.";
    exports.POPOVER_WARN_DOUBLE_CONTENT = ns + " <Popover> with two children ignores content prop; use either prop or children.";
    exports.POPOVER_WARN_DOUBLE_TARGET = ns + " <Popover> with children ignores target prop; use either prop or children.";
    exports.POPOVER_WARN_EMPTY_CONTENT = ns + " Disabling <Popover> with empty/whitespace content...";
    exports.POPOVER_WARN_MODAL_INLINE = ns + " <Popover inline={true}> ignores isModal";
    exports.POPOVER_WARN_DEPRECATED_CONSTRAINTS = deprec + " <Popover> constraints and useSmartPositioning are deprecated. Use tetherOptions directly.";
    exports.POPOVER_WARN_INLINE_NO_TETHER = ns + " <Popover inline={true}> ignores tetherOptions, constraints, and useSmartPositioning.";
    exports.POPOVER_WARN_UNCONTROLLED_ONINTERACTION = ns + " <Popover> onInteraction is ignored when uncontrolled.";
    exports.PORTAL_CONTEXT_CLASS_NAME_STRING = ns + " <Portal> context blueprintPortalClassName must be string";
    exports.RADIOGROUP_WARN_CHILDREN_OPTIONS_MUTEX = ns + " <RadioGroup> children and options prop are mutually exclusive, with options taking priority.";
    exports.SLIDER_ZERO_STEP = ns + " <Slider> stepSize must be greater than zero.";
    exports.SLIDER_ZERO_LABEL_STEP = ns + " <Slider> labelStepSize must be greater than zero.";
    exports.RANGESLIDER_NULL_VALUE = ns + " <RangeSlider> value prop must be an array of two non-null numbers.";
    exports.TABS_FIRST_CHILD = ns + " First child of <Tabs> component must be a <TabList>";
    exports.TABS_MISMATCH = ns + " Number of <Tab> components must equal number of <TabPanel> components";
    exports.TABS_WARN_DEPRECATED = deprec + " <Tabs> is deprecated since v1.11.0; consider upgrading to <Tabs2>." + " https://blueprintjs.com/#components.tabs.js";
    exports.TOASTER_WARN_INLINE = ns + " Toaster.create() ignores inline prop as it always creates a new element.";
    exports.TOASTER_WARN_LEFT_RIGHT = ns + " Toaster does not support LEFT or RIGHT positions.";
    exports.DIALOG_WARN_NO_HEADER_ICON = ns + " <Dialog> iconName is ignored if title is omitted.";
    exports.DIALOG_WARN_NO_HEADER_CLOSE_BUTTON = ns + " <Dialog> isCloseButtonShown prop is ignored if title is omitted.";

    
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/common/utils/compareUtils.js", [], true, function ($__require, exports, module) {
    /*
     * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
     *
     * Licensed under the terms of the LICENSE file distributed with this project.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    /**
     * Returns true if the arrays are equal. Elements will be shallowly compared by
     * default, or they will be compared using the custom `compare` function if one
     * is provided.
     */
    function arraysEqual(arrA, arrB, compare) {
        if (compare === void 0) {
            compare = function (a, b) {
                return a === b;
            };
        }
        // treat `null` and `undefined` as the same
        if (arrA == null && arrB == null) {
            return true;
        } else if (arrA == null || arrB == null || arrA.length !== arrB.length) {
            return false;
        } else {
            return arrA.every(function (a, i) {
                return compare(a, arrB[i]);
            });
        }
    }
    exports.arraysEqual = arraysEqual;
    /**
     * Shallow comparison between objects. If `keys` is provided, just that subset
     * of keys will be compared; otherwise, all keys will be compared.
     */
    function shallowCompareKeys(objA, objB, keys) {
        // treat `null` and `undefined` as the same
        if (objA == null && objB == null) {
            return true;
        } else if (objA == null || objB == null) {
            return false;
        } else if (Array.isArray(objA) || Array.isArray(objB)) {
            return false;
        } else if (keys != null) {
            return _shallowCompareKeys(objA, objB, keys);
        } else {
            // shallowly compare all keys from both objects
            var keysA = Object.keys(objA);
            var keysB = Object.keys(objB);
            return _shallowCompareKeys(objA, objB, { include: keysA }) && _shallowCompareKeys(objA, objB, { include: keysB });
        }
    }
    exports.shallowCompareKeys = shallowCompareKeys;
    /**
     * Deep comparison between objects. If `keys` is provided, just that subset of
     * keys will be compared; otherwise, all keys will be compared.
     */
    function deepCompareKeys(objA, objB, keys) {
        if (objA === objB) {
            return true;
        } else if (objA == null && objB == null) {
            // treat `null` and `undefined` as the same
            return true;
        } else if (objA == null || objB == null) {
            return false;
        } else if (Array.isArray(objA) || Array.isArray(objB)) {
            return arraysEqual(objA, objB, deepCompareKeys);
        } else if (_isSimplePrimitiveType(objA) || _isSimplePrimitiveType(objB)) {
            return objA === objB;
        } else if (keys != null) {
            return _deepCompareKeys(objA, objB, keys);
        } else if (objA.constructor !== objB.constructor) {
            return false;
        } else {
            var keysA = Object.keys(objA);
            var keysB = Object.keys(objB);
            if (keysA == null || keysB == null) {
                return false;
            }
            if (keysA.length === 0 && keysB.length === 0) {
                return true;
            }
            return arraysEqual(keysA, keysB) && _deepCompareKeys(objA, objB, keysA);
        }
    }
    exports.deepCompareKeys = deepCompareKeys;
    /**
     * Returns a descriptive object for each key whose values are shallowly unequal
     * between two provided objects. Useful for debugging shouldComponentUpdate.
     */
    function getShallowUnequalKeyValues(objA, objB, keys) {
        // default param values let null values pass through, so we have to take
        // this more thorough approach
        var definedObjA = objA == null ? {} : objA;
        var definedObjB = objB == null ? {} : objB;
        var filteredKeys = _filterKeys(definedObjA, definedObjB, keys == null ? { exclude: [] } : keys);
        return _getUnequalKeyValues(definedObjA, definedObjB, filteredKeys, function (a, b, key) {
            return shallowCompareKeys(a, b, { include: [key] });
        });
    }
    exports.getShallowUnequalKeyValues = getShallowUnequalKeyValues;
    /**
     * Returns a descriptive object for each key whose values are deeply unequal
     * between two provided objects. Useful for debugging shouldComponentUpdate.
     */
    function getDeepUnequalKeyValues(objA, objB, keys) {
        if (objA === void 0) {
            objA = {};
        }
        if (objB === void 0) {
            objB = {};
        }
        var filteredKeys = keys == null ? _unionKeys(objA, objB) : keys;
        return _getUnequalKeyValues(objA, objB, filteredKeys, function (a, b, key) {
            return deepCompareKeys(a, b, [key]);
        });
    }
    exports.getDeepUnequalKeyValues = getDeepUnequalKeyValues;
    // Private helpers
    // ===============
    /**
     * Partial shallow comparison between objects using the given list of keys.
     */
    function _shallowCompareKeys(objA, objB, keys) {
        return _filterKeys(objA, objB, keys).every(function (key) {
            return objA.hasOwnProperty(key) === objB.hasOwnProperty(key) && objA[key] === objB[key];
        });
    }
    /**
     * Partial deep comparison between objects using the given list of keys.
     */
    function _deepCompareKeys(objA, objB, keys) {
        return keys.every(function (key) {
            return objA.hasOwnProperty(key) === objB.hasOwnProperty(key) && deepCompareKeys(objA[key], objB[key]);
        });
    }
    function _isSimplePrimitiveType(value) {
        return typeof value === "number" || typeof value === "string" || typeof value === "boolean";
    }
    function _filterKeys(objA, objB, keys) {
        if (_isWhitelist(keys)) {
            return keys.include;
        } else {
            var keysA = Object.keys(objA);
            var keysB = Object.keys(objB);
            // merge keys from both objects into a big set for quick access
            var keySet_1 = _arrayToObject(keysA.concat(keysB));
            // delete blacklisted keys from the key set
            keys.exclude.forEach(function (key) {
                return delete keySet_1[key];
            });
            // return the remaining keys as an array
            return Object.keys(keySet_1);
        }
    }
    function _isWhitelist(keys) {
        return keys != null && keys.include != null;
    }
    function _arrayToObject(arr) {
        return arr.reduce(function (obj, element) {
            obj[element] = true;
            return obj;
        }, {});
    }
    function _getUnequalKeyValues(objA, objB, keys, compareFn) {
        var unequalKeys = keys.filter(function (key) {
            return !compareFn(objA, objB, key);
        });
        var unequalKeyValues = unequalKeys.map(function (key) {
            return {
                key: key,
                valueA: objA[key],
                valueB: objB[key]
            };
        });
        return unequalKeyValues;
    }
    function _unionKeys(objA, objB) {
        var keysA = Object.keys(objA);
        var keysB = Object.keys(objB);
        var concatKeys = keysA.concat(keysB);
        var keySet = _arrayToObject(concatKeys);
        return Object.keys(keySet);
    }

    
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/common/utils.js", ["npm:@blueprintjs/core@1.33.0/dist/common/errors.js", "npm:@blueprintjs/core@1.33.0/dist/common/utils/compareUtils.js", "github:jspm/nodelibs-process@0.1.2.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    "use strict";

    function __export(m) {
      for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }
    Object.defineProperty(exports, "__esModule", { value: true });
    var errors_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/errors.js");
    __export($__require("npm:@blueprintjs/core@1.33.0/dist/common/utils/compareUtils.js"));
    function isNodeEnv(env) {
      return typeof process !== "undefined" && process.env && "production" === env;
    }
    exports.isNodeEnv = isNodeEnv;
    function isFunction(value) {
      return typeof value === "function";
    }
    exports.isFunction = isFunction;
    function safeInvoke(func) {
      var args = [];
      for (var _i = 1; _i < arguments.length; _i++) {
        args[_i - 1] = arguments[_i];
      }
      if (isFunction(func)) {
        return func.apply(void 0, args);
      }
    }
    exports.safeInvoke = safeInvoke;
    function safeInvokeOrValue(funcOrValue) {
      var args = [];
      for (var _i = 1; _i < arguments.length; _i++) {
        args[_i - 1] = arguments[_i];
      }
      return isFunction(funcOrValue) ? funcOrValue.apply(void 0, args) : funcOrValue;
    }
    exports.safeInvokeOrValue = safeInvokeOrValue;
    function elementIsOrContains(element, testElement) {
      return element === testElement || element.contains(testElement);
    }
    exports.elementIsOrContains = elementIsOrContains;
    function arrayLengthCompare(a, b) {
      if (a === void 0) {
        a = [];
      }
      if (b === void 0) {
        b = [];
      }
      return a.length - b.length;
    }
    exports.arrayLengthCompare = arrayLengthCompare;
    function approxEqual(a, b, tolerance) {
      if (tolerance === void 0) {
        tolerance = 0.00001;
      }
      return Math.abs(a - b) <= tolerance;
    }
    exports.approxEqual = approxEqual;
    function clamp(val, min, max) {
      if (val == null) {
        return val;
      }
      if (max < min) {
        throw new Error(errors_1.CLAMP_MIN_MAX);
      }
      return Math.min(Math.max(val, min), max);
    }
    exports.clamp = clamp;
    function countDecimalPlaces(num) {
      if (typeof num !== "number" || Math.floor(num) === num) {
        return 0;
      }
      return num.toString().split(".")[1].length;
    }
    exports.countDecimalPlaces = countDecimalPlaces;
    function throttleEvent(target, eventName, newEventName) {
      var throttledFunc = _throttleHelper(undefined, undefined, function (event) {
        target.dispatchEvent(new CustomEvent(newEventName, event));
      });
      target.addEventListener(eventName, throttledFunc);
      return throttledFunc;
    }
    exports.throttleEvent = throttleEvent;
    function throttleReactEventCallback(callback, options) {
      if (options === void 0) {
        options = {};
      }
      var throttledFunc = _throttleHelper(function (event2) {
        if (options.preventDefault) {
          event2.preventDefault();
        }
      }, function (event2) {
        event2.persist();
      }, function (event2) {
        var otherArgs2 = [];
        for (var _i = 1; _i < arguments.length; _i++) {
          otherArgs2[_i - 1] = arguments[_i];
        }
        callback.apply(void 0, [event2].concat(otherArgs2));
      });
      return throttledFunc;
    }
    exports.throttleReactEventCallback = throttleReactEventCallback;
    function _throttleHelper(onBeforeIsRunningCheck, onAfterIsRunningCheck, onAnimationFrameRequested) {
      var isRunning = false;
      var func = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
          args[_i] = arguments[_i];
        }
        if (isFunction(onBeforeIsRunningCheck)) {
          onBeforeIsRunningCheck.apply(void 0, args);
        }
        if (isRunning) {
          return;
        }
        isRunning = true;
        if (isFunction(onAfterIsRunningCheck)) {
          onAfterIsRunningCheck.apply(void 0, args);
        }
        requestAnimationFrame(function () {
          if (isFunction(onAnimationFrameRequested)) {
            onAnimationFrameRequested.apply(void 0, args);
          }
          isRunning = false;
        });
      };
      return func;
    }
  })($__require("github:jspm/nodelibs-process@0.1.2.js"));
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/generated/iconClasses.js", [], true, function ($__require, exports, module) {
    /*
     * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    // tslint:disable:object-literal-sort-keys
    exports.IconClasses = {
        BLANK: "pt-icon-blank",
        STYLE: "pt-icon-style",
        ALIGN_LEFT: "pt-icon-align-left",
        ALIGN_CENTER: "pt-icon-align-center",
        ALIGN_RIGHT: "pt-icon-align-right",
        ALIGN_JUSTIFY: "pt-icon-align-justify",
        BOLD: "pt-icon-bold",
        ITALIC: "pt-icon-italic",
        UNDERLINE: "pt-icon-underline",
        SEARCH_AROUND: "pt-icon-search-around",
        GRAPH_REMOVE: "pt-icon-graph-remove",
        GROUP_OBJECTS: "pt-icon-group-objects",
        MERGE_LINKS: "pt-icon-merge-links",
        LAYOUT: "pt-icon-layout",
        LAYOUT_AUTO: "pt-icon-layout-auto",
        LAYOUT_CIRCLE: "pt-icon-layout-circle",
        LAYOUT_HIERARCHY: "pt-icon-layout-hierarchy",
        LAYOUT_GRID: "pt-icon-layout-grid",
        LAYOUT_GROUP_BY: "pt-icon-layout-group-by",
        LAYOUT_SKEW_GRID: "pt-icon-layout-skew-grid",
        GEOSEARCH: "pt-icon-geosearch",
        HEATMAP: "pt-icon-heatmap",
        DRIVE_TIME: "pt-icon-drive-time",
        SELECT: "pt-icon-select",
        PREDICTIVE_ANALYSIS: "pt-icon-predictive-analysis",
        LAYERS: "pt-icon-layers",
        LOCATE: "pt-icon-locate",
        BOOKMARK: "pt-icon-bookmark",
        CITATION: "pt-icon-citation",
        TAG: "pt-icon-tag",
        CLIPBOARD: "pt-icon-clipboard",
        SELECTION: "pt-icon-selection",
        TIMELINE_EVENTS: "pt-icon-timeline-events",
        TIMELINE_LINE_CHART: "pt-icon-timeline-line-chart",
        TIMELINE_BAR_CHART: "pt-icon-timeline-bar-chart",
        APPLICATIONS: "pt-icon-applications",
        PROJECTS: "pt-icon-projects",
        CHANGES: "pt-icon-changes",
        NOTIFICATIONS: "pt-icon-notifications",
        LOCK: "pt-icon-lock",
        UNLOCK: "pt-icon-unlock",
        USER: "pt-icon-user",
        SEARCH_TEMPLATE: "pt-icon-search-template",
        INBOX: "pt-icon-inbox",
        MORE: "pt-icon-more",
        HELP: "pt-icon-help",
        CALENDAR: "pt-icon-calendar",
        MEDIA: "pt-icon-media",
        LINK: "pt-icon-link",
        SHARE: "pt-icon-share",
        DOWNLOAD: "pt-icon-download",
        DOCUMENT: "pt-icon-document",
        PROPERTIES: "pt-icon-properties",
        IMPORT: "pt-icon-import",
        EXPORT: "pt-icon-export",
        MINIMIZE: "pt-icon-minimize",
        MAXIMIZE: "pt-icon-maximize",
        TICK: "pt-icon-tick",
        CROSS: "pt-icon-cross",
        PLUS: "pt-icon-plus",
        MINUS: "pt-icon-minus",
        ARROW_LEFT: "pt-icon-arrow-left",
        ARROW_RIGHT: "pt-icon-arrow-right",
        EXCHANGE: "pt-icon-exchange",
        COMPARISON: "pt-icon-comparison",
        LIST: "pt-icon-list",
        FILTER: "pt-icon-filter",
        CONFIRM: "pt-icon-confirm",
        FORK: "pt-icon-fork",
        TRASH: "pt-icon-trash",
        PERSON: "pt-icon-person",
        PEOPLE: "pt-icon-people",
        ADD: "pt-icon-add",
        REMOVE: "pt-icon-remove",
        GEOLOCATION: "pt-icon-geolocation",
        ZOOM_IN: "pt-icon-zoom-in",
        ZOOM_OUT: "pt-icon-zoom-out",
        REFRESH: "pt-icon-refresh",
        DELETE: "pt-icon-delete",
        COG: "pt-icon-cog",
        FLAG: "pt-icon-flag",
        PIN: "pt-icon-pin",
        WARNING_SIGN: "pt-icon-warning-sign",
        ERROR: "pt-icon-error",
        INFO_SIGN: "pt-icon-info-sign",
        CREDIT_CARD: "pt-icon-credit-card",
        EDIT: "pt-icon-edit",
        HISTORY: "pt-icon-history",
        SEARCH: "pt-icon-search",
        LOG_OUT: "pt-icon-log-out",
        STAR: "pt-icon-star",
        STAR_EMPTY: "pt-icon-star-empty",
        SORT_ALPHABETICAL: "pt-icon-sort-alphabetical",
        SORT_NUMERICAL: "pt-icon-sort-numerical",
        SORT: "pt-icon-sort",
        FOLDER_OPEN: "pt-icon-folder-open",
        FOLDER_CLOSE: "pt-icon-folder-close",
        FOLDER_SHARED: "pt-icon-folder-shared",
        CARET_UP: "pt-icon-caret-up",
        CARET_RIGHT: "pt-icon-caret-right",
        CARET_DOWN: "pt-icon-caret-down",
        CARET_LEFT: "pt-icon-caret-left",
        MENU_OPEN: "pt-icon-menu-open",
        MENU_CLOSED: "pt-icon-menu-closed",
        FEED: "pt-icon-feed",
        TWO_COLUMNS: "pt-icon-two-columns",
        ONE_COLUMN: "pt-icon-one-column",
        DOT: "pt-icon-dot",
        PROPERTY: "pt-icon-property",
        TIME: "pt-icon-time",
        DISABLE: "pt-icon-disable",
        UNPIN: "pt-icon-unpin",
        FLOWS: "pt-icon-flows",
        NEW_TEXT_BOX: "pt-icon-new-text-box",
        NEW_LINK: "pt-icon-new-link",
        NEW_OBJECT: "pt-icon-new-object",
        PATH_SEARCH: "pt-icon-path-search",
        AUTOMATIC_UPDATES: "pt-icon-automatic-updates",
        PAGE_LAYOUT: "pt-icon-page-layout",
        CODE: "pt-icon-code",
        MAP: "pt-icon-map",
        SEARCH_TEXT: "pt-icon-search-text",
        ENVELOPE: "pt-icon-envelope",
        PAPERCLIP: "pt-icon-paperclip",
        LABEL: "pt-icon-label",
        GLOBE: "pt-icon-globe",
        HOME: "pt-icon-home",
        TH: "pt-icon-th",
        TH_LIST: "pt-icon-th-list",
        TH_DERIVED: "pt-icon-th-derived",
        CIRCLE: "pt-icon-circle",
        DRAW: "pt-icon-draw",
        INSERT: "pt-icon-insert",
        HELPER_MANAGEMENT: "pt-icon-helper-management",
        SEND_TO: "pt-icon-send-to",
        EYE_OPEN: "pt-icon-eye-open",
        FOLDER_SHARED_OPEN: "pt-icon-folder-shared-open",
        SOCIAL_MEDIA: "pt-icon-social-media",
        ARROW_UP: "pt-icon-arrow-up",
        ARROW_DOWN: "pt-icon-arrow-down",
        ARROWS_HORIZONTAL: "pt-icon-arrows-horizontal",
        ARROWS_VERTICAL: "pt-icon-arrows-vertical",
        RESOLVE: "pt-icon-resolve",
        GRAPH: "pt-icon-graph",
        BRIEFCASE: "pt-icon-briefcase",
        DOLLAR: "pt-icon-dollar",
        NINJA: "pt-icon-ninja",
        DELTA: "pt-icon-delta",
        BARCODE: "pt-icon-barcode",
        TORCH: "pt-icon-torch",
        WIDGET: "pt-icon-widget",
        UNRESOLVE: "pt-icon-unresolve",
        OFFLINE: "pt-icon-offline",
        ZOOM_TO_FIT: "pt-icon-zoom-to-fit",
        ADD_TO_ARTIFACT: "pt-icon-add-to-artifact",
        MAP_MARKER: "pt-icon-map-marker",
        CHART: "pt-icon-chart",
        CONTROL: "pt-icon-control",
        MULTI_SELECT: "pt-icon-multi-select",
        DIRECTION_LEFT: "pt-icon-direction-left",
        DIRECTION_RIGHT: "pt-icon-direction-right",
        DATABASE: "pt-icon-database",
        PIE_CHART: "pt-icon-pie-chart",
        FULL_CIRCLE: "pt-icon-full-circle",
        SQUARE: "pt-icon-square",
        PRINT: "pt-icon-print",
        PRESENTATION: "pt-icon-presentation",
        UNGROUP_OBJECTS: "pt-icon-ungroup-objects",
        CHAT: "pt-icon-chat",
        COMMENT: "pt-icon-comment",
        CIRCLE_ARROW_RIGHT: "pt-icon-circle-arrow-right",
        CIRCLE_ARROW_LEFT: "pt-icon-circle-arrow-left",
        CIRCLE_ARROW_UP: "pt-icon-circle-arrow-up",
        CIRCLE_ARROW_DOWN: "pt-icon-circle-arrow-down",
        UPLOAD: "pt-icon-upload",
        ASTERISK: "pt-icon-asterisk",
        CLOUD: "pt-icon-cloud",
        CLOUD_DOWNLOAD: "pt-icon-cloud-download",
        CLOUD_UPLOAD: "pt-icon-cloud-upload",
        REPEAT: "pt-icon-repeat",
        MOVE: "pt-icon-move",
        CHEVRON_LEFT: "pt-icon-chevron-left",
        CHEVRON_RIGHT: "pt-icon-chevron-right",
        CHEVRON_UP: "pt-icon-chevron-up",
        CHEVRON_DOWN: "pt-icon-chevron-down",
        RANDOM: "pt-icon-random",
        FULLSCREEN: "pt-icon-fullscreen",
        LOG_IN: "pt-icon-log-in",
        HEART: "pt-icon-heart",
        OFFICE: "pt-icon-office",
        DUPLICATE: "pt-icon-duplicate",
        BAN_CIRCLE: "pt-icon-ban-circle",
        CAMERA: "pt-icon-camera",
        MOBILE_VIDEO: "pt-icon-mobile-video",
        VIDEO: "pt-icon-video",
        FILM: "pt-icon-film",
        SETTINGS: "pt-icon-settings",
        VOLUME_OFF: "pt-icon-volume-off",
        VOLUME_DOWN: "pt-icon-volume-down",
        VOLUME_UP: "pt-icon-volume-up",
        MUSIC: "pt-icon-music",
        STEP_BACKWARD: "pt-icon-step-backward",
        FAST_BACKWARD: "pt-icon-fast-backward",
        PAUSE: "pt-icon-pause",
        STOP: "pt-icon-stop",
        PLAY: "pt-icon-play",
        FAST_FORWARD: "pt-icon-fast-forward",
        STEP_FORWARD: "pt-icon-step-forward",
        EJECT: "pt-icon-eject",
        RECORD: "pt-icon-record",
        DESKTOP: "pt-icon-desktop",
        PHONE: "pt-icon-phone",
        LIGHTBULB: "pt-icon-lightbulb",
        GLASS: "pt-icon-glass",
        TINT: "pt-icon-tint",
        FLASH: "pt-icon-flash",
        FONT: "pt-icon-font",
        HEADER: "pt-icon-header",
        SAVED: "pt-icon-saved",
        FLOPPY_DISK: "pt-icon-floppy-disk",
        BOOK: "pt-icon-book",
        HAND_RIGHT: "pt-icon-hand-right",
        HAND_UP: "pt-icon-hand-up",
        HAND_DOWN: "pt-icon-hand-down",
        HAND_LEFT: "pt-icon-hand-left",
        THUMBS_UP: "pt-icon-thumbs-up",
        THUMBS_DOWN: "pt-icon-thumbs-down",
        BOX: "pt-icon-box",
        COMPRESSED: "pt-icon-compressed",
        SHOPPING_CART: "pt-icon-shopping-cart",
        SHOP: "pt-icon-shop",
        LAYOUT_LINEAR: "pt-icon-layout-linear",
        UNDO: "pt-icon-undo",
        REDO: "pt-icon-redo",
        CODE_BLOCK: "pt-icon-code-block",
        DOUBLE_CARET_VERTICAL: "pt-icon-double-caret-vertical",
        DOUBLE_CARET_HORIZONTAL: "pt-icon-double-caret-horizontal",
        SORT_ALPHABETICAL_DESC: "pt-icon-sort-alphabetical-desc",
        SORT_NUMERICAL_DESC: "pt-icon-sort-numerical-desc",
        TAKE_ACTION: "pt-icon-take-action",
        CONTRAST: "pt-icon-contrast",
        EYE_OFF: "pt-icon-eye-off",
        TIMELINE_AREA_CHART: "pt-icon-timeline-area-chart",
        DOUGHNUT_CHART: "pt-icon-doughnut-chart",
        LAYER: "pt-icon-layer",
        GRID: "pt-icon-grid",
        POLYGON_FILTER: "pt-icon-polygon-filter",
        ADD_TO_FOLDER: "pt-icon-add-to-folder",
        LAYOUT_BALLOON: "pt-icon-layout-balloon",
        LAYOUT_SORTED_CLUSTERS: "pt-icon-layout-sorted-clusters",
        SORT_ASC: "pt-icon-sort-asc",
        SORT_DESC: "pt-icon-sort-desc",
        SMALL_CROSS: "pt-icon-small-cross",
        SMALL_TICK: "pt-icon-small-tick",
        POWER: "pt-icon-power",
        COLUMN_LAYOUT: "pt-icon-column-layout",
        ARROW_TOP_LEFT: "pt-icon-arrow-top-left",
        ARROW_TOP_RIGHT: "pt-icon-arrow-top-right",
        ARROW_BOTTOM_RIGHT: "pt-icon-arrow-bottom-right",
        ARROW_BOTTOM_LEFT: "pt-icon-arrow-bottom-left",
        MUGSHOT: "pt-icon-mugshot",
        HEADSET: "pt-icon-headset",
        TEXT_HIGHLIGHT: "pt-icon-text-highlight",
        HAND: "pt-icon-hand",
        CHEVRON_BACKWARD: "pt-icon-chevron-backward",
        CHEVRON_FORWARD: "pt-icon-chevron-forward",
        ROTATE_DOCUMENT: "pt-icon-rotate-document",
        ROTATE_PAGE: "pt-icon-rotate-page",
        BADGE: "pt-icon-badge",
        GRID_VIEW: "pt-icon-grid-view",
        FUNCTION: "pt-icon-function",
        WATERFALL_CHART: "pt-icon-waterfall-chart",
        STACKED_CHART: "pt-icon-stacked-chart",
        PULSE: "pt-icon-pulse",
        NEW_PERSON: "pt-icon-new-person",
        EXCLUDE_ROW: "pt-icon-exclude-row",
        PIVOT_TABLE: "pt-icon-pivot-table",
        SEGMENTED_CONTROL: "pt-icon-segmented-control",
        HIGHLIGHT: "pt-icon-highlight",
        FILTER_LIST: "pt-icon-filter-list",
        CUT: "pt-icon-cut",
        ANNOTATION: "pt-icon-annotation",
        PIVOT: "pt-icon-pivot",
        RING: "pt-icon-ring",
        HEAT_GRID: "pt-icon-heat-grid",
        GANTT_CHART: "pt-icon-gantt-chart",
        VARIABLE: "pt-icon-variable",
        MANUAL: "pt-icon-manual",
        ADD_ROW_TOP: "pt-icon-add-row-top",
        ADD_ROW_BOTTOM: "pt-icon-add-row-bottom",
        ADD_COLUMN_LEFT: "pt-icon-add-column-left",
        ADD_COLUMN_RIGHT: "pt-icon-add-column-right",
        REMOVE_ROW_TOP: "pt-icon-remove-row-top",
        REMOVE_ROW_BOTTOM: "pt-icon-remove-row-bottom",
        REMOVE_COLUMN_LEFT: "pt-icon-remove-column-left",
        REMOVE_COLUMN_RIGHT: "pt-icon-remove-column-right",
        DOUBLE_CHEVRON_LEFT: "pt-icon-double-chevron-left",
        DOUBLE_CHEVRON_RIGHT: "pt-icon-double-chevron-right",
        DOUBLE_CHEVRON_UP: "pt-icon-double-chevron-up",
        DOUBLE_CHEVRON_DOWN: "pt-icon-double-chevron-down",
        KEY_CONTROL: "pt-icon-key-control",
        KEY_COMMAND: "pt-icon-key-command",
        KEY_SHIFT: "pt-icon-key-shift",
        KEY_BACKSPACE: "pt-icon-key-backspace",
        KEY_DELETE: "pt-icon-key-delete",
        KEY_ESCAPE: "pt-icon-key-escape",
        KEY_ENTER: "pt-icon-key-enter",
        CALCULATOR: "pt-icon-calculator",
        HORIZONTAL_BAR_CHART: "pt-icon-horizontal-bar-chart",
        SMALL_PLUS: "pt-icon-small-plus",
        SMALL_MINUS: "pt-icon-small-minus",
        STEP_CHART: "pt-icon-step-chart",
        EURO: "pt-icon-euro",
        DRAG_HANDLE_VERTICAL: "pt-icon-drag-handle-vertical",
        DRAG_HANDLE_HORIZONTAL: "pt-icon-drag-handle-horizontal",
        MOBILE_PHONE: "pt-icon-mobile-phone",
        SIM_CARD: "pt-icon-sim-card",
        TRENDING_UP: "pt-icon-trending-up",
        TRENDING_DOWN: "pt-icon-trending-down",
        CURVED_RANGE_CHART: "pt-icon-curved-range-chart",
        VERTICAL_BAR_CHART_DESC: "pt-icon-vertical-bar-chart-desc",
        HORIZONTAL_BAR_CHART_DESC: "pt-icon-horizontal-bar-chart-desc",
        DOCUMENT_OPEN: "pt-icon-document-open",
        DOCUMENT_SHARE: "pt-icon-document-share",
        HORIZONTAL_DISTRIBUTION: "pt-icon-horizontal-distribution",
        VERTICAL_DISTRIBUTION: "pt-icon-vertical-distribution",
        ALIGNMENT_LEFT: "pt-icon-alignment-left",
        ALIGNMENT_VERTICAL_CENTER: "pt-icon-alignment-vertical-center",
        ALIGNMENT_RIGHT: "pt-icon-alignment-right",
        ALIGNMENT_TOP: "pt-icon-alignment-top",
        ALIGNMENT_HORIZONTAL_CENTER: "pt-icon-alignment-horizontal-center",
        ALIGNMENT_BOTTOM: "pt-icon-alignment-bottom",
        GIT_PULL: "pt-icon-git-pull",
        GIT_MERGE: "pt-icon-git-merge",
        GIT_BRANCH: "pt-icon-git-branch",
        GIT_COMMIT: "pt-icon-git-commit",
        GIT_PUSH: "pt-icon-git-push",
        BUILD: "pt-icon-build",
        SYMBOL_CIRCLE: "pt-icon-symbol-circle",
        SYMBOL_SQUARE: "pt-icon-symbol-square",
        SYMBOL_DIAMOND: "pt-icon-symbol-diamond",
        SYMBOL_CROSS: "pt-icon-symbol-cross",
        SYMBOL_TRIANGLE_UP: "pt-icon-symbol-triangle-up",
        SYMBOL_TRIANGLE_DOWN: "pt-icon-symbol-triangle-down",
        WRENCH: "pt-icon-wrench",
        APPLICATION: "pt-icon-application",
        SEND_TO_GRAPH: "pt-icon-send-to-graph",
        SEND_TO_MAP: "pt-icon-send-to-map",
        JOIN_TABLE: "pt-icon-join-table",
        DERIVE_COLUMN: "pt-icon-derive-column",
        IMAGE_ROTATE_LEFT: "pt-icon-image-rotate-left",
        IMAGE_ROTATE_RIGHT: "pt-icon-image-rotate-right",
        KNOWN_VEHICLE: "pt-icon-known-vehicle",
        UNKNOWN_VEHICLE: "pt-icon-unknown-vehicle",
        SCATTER_PLOT: "pt-icon-scatter-plot",
        OIL_FIELD: "pt-icon-oil-field",
        RIG: "pt-icon-rig",
        MAP_CREATE: "pt-icon-map-create",
        KEY_OPTION: "pt-icon-key-option",
        LIST_DETAIL_VIEW: "pt-icon-list-detail-view",
        SWAP_VERTICAL: "pt-icon-swap-vertical",
        SWAP_HORIZONTAL: "pt-icon-swap-horizontal",
        NUMBERED_LIST: "pt-icon-numbered-list",
        NEW_GRID_ITEM: "pt-icon-new-grid-item",
        GIT_REPO: "pt-icon-git-repo",
        GIT_NEW_BRANCH: "pt-icon-git-new-branch",
        MANUALLY_ENTERED_DATA: "pt-icon-manually-entered-data",
        AIRPLANE: "pt-icon-airplane",
        MERGE_COLUMNS: "pt-icon-merge-columns",
        SPLIT_COLUMNS: "pt-icon-split-columns",
        DASHBOARD: "pt-icon-dashboard",
        PUBLISH_FUNCTION: "pt-icon-publish-function",
        PATH: "pt-icon-path",
        MOON: "pt-icon-moon",
        REMOVE_COLUMN: "pt-icon-remove-column",
        NUMERICAL: "pt-icon-numerical",
        KEY_TAB: "pt-icon-key-tab",
        REGRESSION_CHART: "pt-icon-regression-chart",
        TRANSLATE: "pt-icon-translate",
        EYE_ON: "pt-icon-eye-on",
        VERTICAL_BAR_CHART_ASC: "pt-icon-vertical-bar-chart-asc",
        HORIZONTAL_BAR_CHART_ASC: "pt-icon-horizontal-bar-chart-asc",
        GROUPED_BAR_CHART: "pt-icon-grouped-bar-chart",
        FULL_STACKED_CHART: "pt-icon-full-stacked-chart",
        ENDORSED: "pt-icon-endorsed",
        FOLLOWER: "pt-icon-follower",
        FOLLOWING: "pt-icon-following",
        MENU: "pt-icon-menu",
        COLLAPSE_ALL: "pt-icon-collapse-all",
        EXPAND_ALL: "pt-icon-expand-all",
        INTERSECTION: "pt-icon-intersection",
        BLOCKED_PERSON: "pt-icon-blocked-person",
        SLASH: "pt-icon-slash",
        PERCENTAGE: "pt-icon-percentage",
        SATELLITE: "pt-icon-satellite",
        PARAGRAPH: "pt-icon-paragraph",
        BANK_ACCOUNT: "pt-icon-bank-account",
        CELL_TOWER: "pt-icon-cell-tower",
        ID_NUMBER: "pt-icon-id-number",
        IP_ADDRESS: "pt-icon-ip-address",
        ERASER: "pt-icon-eraser",
        ISSUE: "pt-icon-issue",
        ISSUE_NEW: "pt-icon-issue-new",
        ISSUE_CLOSED: "pt-icon-issue-closed",
        PANEL_STATS: "pt-icon-panel-stats",
        PANEL_TABLE: "pt-icon-panel-table",
        TICK_CIRCLE: "pt-icon-tick-circle",
        PRESCRIPTION: "pt-icon-prescription",
        NEW_PRESCRIPTION: "pt-icon-new-prescription",
        FILTER_KEEP: "pt-icon-filter-keep",
        FILTER_REMOVE: "pt-icon-filter-remove",
        KEY: "pt-icon-key",
        FEED_SUBSCRIBED: "pt-icon-feed-subscribed",
        WIDGET_BUTTON: "pt-icon-widget-button",
        WIDGET_HEADER: "pt-icon-widget-header",
        WIDGET_FOOTER: "pt-icon-widget-footer",
        HEADER_ONE: "pt-icon-header-one",
        HEADER_TWO: "pt-icon-header-two",
        FORM: "pt-icon-form",
        SERIES_ADD: "pt-icon-series-add",
        SERIES_SEARCH: "pt-icon-series-search",
        SERIES_FILTERED: "pt-icon-series-filtered",
        SERIES_DERIVED: "pt-icon-series-derived",
        SERIES_CONFIGURATION: "pt-icon-series-configuration",
        CONSOLE: "pt-icon-console",
        COMPASS: "pt-icon-compass",
        WALK: "pt-icon-walk",
        TAXI: "pt-icon-taxi",
        TRAIN: "pt-icon-train"
    };

    
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/generated/iconStrings.js", [], true, function ($__require, exports, module) {
    /*
     * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    // tslint:disable:object-literal-sort-keys
    exports.IconContents = {
        BLANK: "\ue900",
        STYLE: "\ue601",
        ALIGN_LEFT: "\ue602",
        ALIGN_CENTER: "\ue603",
        ALIGN_RIGHT: "\ue604",
        ALIGN_JUSTIFY: "\ue605",
        BOLD: "\ue606",
        ITALIC: "\ue607",
        UNDERLINE: "\u2381",
        SEARCH_AROUND: "\ue608",
        GRAPH_REMOVE: "\ue609",
        GROUP_OBJECTS: "\ue60a",
        MERGE_LINKS: "\ue60b",
        LAYOUT: "\ue60c",
        LAYOUT_AUTO: "\ue60d",
        LAYOUT_CIRCLE: "\ue60e",
        LAYOUT_HIERARCHY: "\ue60f",
        LAYOUT_GRID: "\ue610",
        LAYOUT_GROUP_BY: "\ue611",
        LAYOUT_SKEW_GRID: "\ue612",
        GEOSEARCH: "\ue613",
        HEATMAP: "\ue614",
        DRIVE_TIME: "\ue615",
        SELECT: "\ue616",
        PREDICTIVE_ANALYSIS: "\ue617",
        LAYERS: "\ue618",
        LOCATE: "\ue619",
        BOOKMARK: "\ue61a",
        CITATION: "\ue61b",
        TAG: "\ue61c",
        CLIPBOARD: "\ue61d",
        SELECTION: "\u29bf",
        TIMELINE_EVENTS: "\ue61e",
        TIMELINE_LINE_CHART: "\ue61f",
        TIMELINE_BAR_CHART: "\ue620",
        APPLICATIONS: "\ue621",
        PROJECTS: "\ue622",
        CHANGES: "\ue623",
        NOTIFICATIONS: "\ue624",
        LOCK: "\ue625",
        UNLOCK: "\ue626",
        USER: "\ue627",
        SEARCH_TEMPLATE: "\ue628",
        INBOX: "\ue629",
        MORE: "\ue62a",
        HELP: "\u003F",
        CALENDAR: "\ue62b",
        MEDIA: "\ue62c",
        LINK: "\ue62d",
        SHARE: "\ue62e",
        DOWNLOAD: "\ue62f",
        DOCUMENT: "\ue630",
        PROPERTIES: "\ue631",
        IMPORT: "\ue632",
        EXPORT: "\ue633",
        MINIMIZE: "\ue634",
        MAXIMIZE: "\ue635",
        TICK: "\u2713",
        CROSS: "\u2717",
        PLUS: "\u002b",
        MINUS: "\u2212",
        ARROW_LEFT: "\u2190",
        ARROW_RIGHT: "\u2192",
        EXCHANGE: "\ue636",
        COMPARISON: "\ue637",
        LIST: "\u2630",
        FILTER: "\ue638",
        CONFIRM: "\ue639",
        FORK: "\ue63a",
        TRASH: "\ue63b",
        PERSON: "\ue63c",
        PEOPLE: "\ue63d",
        ADD: "\ue63e",
        REMOVE: "\ue63f",
        GEOLOCATION: "\ue640",
        ZOOM_IN: "\ue641",
        ZOOM_OUT: "\ue642",
        REFRESH: "\ue643",
        DELETE: "\ue644",
        COG: "\ue645",
        FLAG: "\u2691",
        PIN: "\ue646",
        WARNING_SIGN: "\ue647",
        ERROR: "\ue648",
        INFO_SIGN: "\u2139",
        CREDIT_CARD: "\ue649",
        EDIT: "\u270E",
        HISTORY: "\ue64a",
        SEARCH: "\ue64b",
        LOG_OUT: "\ue64c",
        STAR: "\u2605",
        STAR_EMPTY: "\u2606",
        SORT_ALPHABETICAL: "\ue64d",
        SORT_NUMERICAL: "\ue64e",
        SORT: "\ue64f",
        FOLDER_OPEN: "\ue651",
        FOLDER_CLOSE: "\ue652",
        FOLDER_SHARED: "\ue653",
        CARET_UP: "\u2303",
        CARET_RIGHT: "\u232A",
        CARET_DOWN: "\u2304",
        CARET_LEFT: "\u2329",
        MENU_OPEN: "\ue654",
        MENU_CLOSED: "\ue655",
        FEED: "\ue656",
        TWO_COLUMNS: "\ue657",
        ONE_COLUMN: "\ue658",
        DOT: "\u2022",
        PROPERTY: "\ue65a",
        TIME: "\u23F2",
        DISABLE: "\ue600",
        UNPIN: "\ue650",
        FLOWS: "\ue659",
        NEW_TEXT_BOX: "\ue65b",
        NEW_LINK: "\ue65c",
        NEW_OBJECT: "\ue65d",
        PATH_SEARCH: "\ue65e",
        AUTOMATIC_UPDATES: "\ue65f",
        PAGE_LAYOUT: "\ue660",
        CODE: "\ue661",
        MAP: "\ue662",
        SEARCH_TEXT: "\ue663",
        ENVELOPE: "\u2709",
        PAPERCLIP: "\ue664",
        LABEL: "\ue665",
        GLOBE: "\ue666",
        HOME: "\u2302",
        TH: "\ue667",
        TH_LIST: "\ue668",
        TH_DERIVED: "\ue669",
        CIRCLE: "\ue66a",
        DRAW: "\ue66b",
        INSERT: "\ue66c",
        HELPER_MANAGEMENT: "\ue66d",
        SEND_TO: "\ue66e",
        EYE_OPEN: "\ue66f",
        FOLDER_SHARED_OPEN: "\ue670",
        SOCIAL_MEDIA: "\ue671",
        ARROW_UP: "\u2191 ",
        ARROW_DOWN: "\u2193 ",
        ARROWS_HORIZONTAL: "\u2194 ",
        ARROWS_VERTICAL: "\u2195 ",
        RESOLVE: "\ue672",
        GRAPH: "\ue673",
        BRIEFCASE: "\ue674",
        DOLLAR: "\u0024",
        NINJA: "\ue675",
        DELTA: "\u0394",
        BARCODE: "\ue676",
        TORCH: "\ue677",
        WIDGET: "\ue678",
        UNRESOLVE: "\ue679",
        OFFLINE: "\ue67a",
        ZOOM_TO_FIT: "\ue67b",
        ADD_TO_ARTIFACT: "\ue67c",
        MAP_MARKER: "\ue67d",
        CHART: "\ue67e",
        CONTROL: "\ue67f",
        MULTI_SELECT: "\ue680",
        DIRECTION_LEFT: "\ue681",
        DIRECTION_RIGHT: "\ue682",
        DATABASE: "\ue683",
        PIE_CHART: "\ue684",
        FULL_CIRCLE: "\ue685",
        SQUARE: "\ue686",
        PRINT: "\u2399",
        PRESENTATION: "\ue687",
        UNGROUP_OBJECTS: "\ue688",
        CHAT: "\ue689",
        COMMENT: "\ue68a",
        CIRCLE_ARROW_RIGHT: "\ue68b",
        CIRCLE_ARROW_LEFT: "\ue68c",
        CIRCLE_ARROW_UP: "\ue68d",
        CIRCLE_ARROW_DOWN: "\ue68e",
        UPLOAD: "\ue68f",
        ASTERISK: "\u002a",
        CLOUD: "\u2601",
        CLOUD_DOWNLOAD: "\ue690",
        CLOUD_UPLOAD: "\ue691",
        REPEAT: "\ue692",
        MOVE: "\ue693",
        CHEVRON_LEFT: "\ue694",
        CHEVRON_RIGHT: "\ue695",
        CHEVRON_UP: "\ue696",
        CHEVRON_DOWN: "\ue697",
        RANDOM: "\ue698",
        FULLSCREEN: "\ue699",
        LOG_IN: "\ue69a",
        HEART: "\u2665",
        OFFICE: "\ue69b",
        DUPLICATE: "\ue69c",
        BAN_CIRCLE: "\ue69d",
        CAMERA: "\ue69e",
        MOBILE_VIDEO: "\ue69f",
        VIDEO: "\ue6a0",
        FILM: "\ue6a1",
        SETTINGS: "\ue6a2",
        VOLUME_OFF: "\ue6a3",
        VOLUME_DOWN: "\ue6a4",
        VOLUME_UP: "\ue6a5",
        MUSIC: "\ue6a6",
        STEP_BACKWARD: "\ue6a7",
        FAST_BACKWARD: "\ue6a8",
        PAUSE: "\ue6a9",
        STOP: "\ue6aa",
        PLAY: "\ue6ab",
        FAST_FORWARD: "\ue6ac",
        STEP_FORWARD: "\ue6ad",
        EJECT: "\u23cf",
        RECORD: "\ue6ae",
        DESKTOP: "\ue6af",
        PHONE: "\u260e",
        LIGHTBULB: "\ue6b0",
        GLASS: "\ue6b1",
        TINT: "\ue6b2",
        FLASH: "\ue6b3",
        FONT: "\ue6b4",
        HEADER: "\ue6b5",
        SAVED: "\ue6b6",
        FLOPPY_DISK: "\ue6b7",
        BOOK: "\ue6b8",
        HAND_RIGHT: "\ue6b9",
        HAND_UP: "\ue6ba",
        HAND_DOWN: "\ue6bb",
        HAND_LEFT: "\ue6bc",
        THUMBS_UP: "\ue6bd",
        THUMBS_DOWN: "\ue6be",
        BOX: "\ue6bf",
        COMPRESSED: "\ue6c0",
        SHOPPING_CART: "\ue6c1",
        SHOP: "\ue6c2",
        LAYOUT_LINEAR: "\ue6c3",
        UNDO: "\u238c",
        REDO: "\ue6c4",
        CODE_BLOCK: "\ue6c5",
        DOUBLE_CARET_VERTICAL: "\ue6c6",
        DOUBLE_CARET_HORIZONTAL: "\ue6c7",
        SORT_ALPHABETICAL_DESC: "\ue6c8",
        SORT_NUMERICAL_DESC: "\ue6c9",
        TAKE_ACTION: "\ue6ca",
        CONTRAST: "\ue6cb",
        EYE_OFF: "\ue6cc",
        TIMELINE_AREA_CHART: "\ue6cd",
        DOUGHNUT_CHART: "\ue6ce",
        LAYER: "\ue6cf",
        GRID: "\ue6d0",
        POLYGON_FILTER: "\ue6d1",
        ADD_TO_FOLDER: "\ue6d2",
        LAYOUT_BALLOON: "\ue6d3",
        LAYOUT_SORTED_CLUSTERS: "\ue6d4",
        SORT_ASC: "\ue6d5",
        SORT_DESC: "\ue6d6",
        SMALL_CROSS: "\ue6d7",
        SMALL_TICK: "\ue6d8",
        POWER: "\ue6d9",
        COLUMN_LAYOUT: "\ue6da",
        ARROW_TOP_LEFT: "\u2196",
        ARROW_TOP_RIGHT: "\u2197",
        ARROW_BOTTOM_RIGHT: "\u2198",
        ARROW_BOTTOM_LEFT: "\u2199",
        MUGSHOT: "\ue6db",
        HEADSET: "\ue6dc",
        TEXT_HIGHLIGHT: "\ue6dd",
        HAND: "\ue6de",
        CHEVRON_BACKWARD: "\ue6df",
        CHEVRON_FORWARD: "\ue6e0",
        ROTATE_DOCUMENT: "\ue6e1",
        ROTATE_PAGE: "\ue6e2",
        BADGE: "\ue6e3",
        GRID_VIEW: "\ue6e4",
        FUNCTION: "\ue6e5",
        WATERFALL_CHART: "\ue6e6",
        STACKED_CHART: "\ue6e7",
        PULSE: "\ue6e8",
        NEW_PERSON: "\ue6e9",
        EXCLUDE_ROW: "\ue6ea",
        PIVOT_TABLE: "\ue6eb",
        SEGMENTED_CONTROL: "\ue6ec",
        HIGHLIGHT: "\ue6ed",
        FILTER_LIST: "\ue6ee",
        CUT: "\ue6ef",
        ANNOTATION: "\ue6f0",
        PIVOT: "\ue6f1",
        RING: "\ue6f2",
        HEAT_GRID: "\ue6f3",
        GANTT_CHART: "\ue6f4",
        VARIABLE: "\ue6f5",
        MANUAL: "\ue6f6",
        ADD_ROW_TOP: "\ue6f7",
        ADD_ROW_BOTTOM: "\ue6f8",
        ADD_COLUMN_LEFT: "\ue6f9",
        ADD_COLUMN_RIGHT: "\ue6fa",
        REMOVE_ROW_TOP: "\ue6fb",
        REMOVE_ROW_BOTTOM: "\ue6fc",
        REMOVE_COLUMN_LEFT: "\ue6fd",
        REMOVE_COLUMN_RIGHT: "\ue6fe",
        DOUBLE_CHEVRON_LEFT: "\ue6ff",
        DOUBLE_CHEVRON_RIGHT: "\ue701",
        DOUBLE_CHEVRON_UP: "\ue702",
        DOUBLE_CHEVRON_DOWN: "\ue703",
        KEY_CONTROL: "\ue704",
        KEY_COMMAND: "\ue705",
        KEY_SHIFT: "\ue706",
        KEY_BACKSPACE: "\ue707",
        KEY_DELETE: "\ue708",
        KEY_ESCAPE: "\ue709",
        KEY_ENTER: "\ue70a",
        CALCULATOR: "\ue70b",
        HORIZONTAL_BAR_CHART: "\ue70c",
        SMALL_PLUS: "\ue70d",
        SMALL_MINUS: "\ue70e",
        STEP_CHART: "\ue70f",
        EURO: "\u20ac",
        DRAG_HANDLE_VERTICAL: "\ue715",
        DRAG_HANDLE_HORIZONTAL: "\ue716",
        MOBILE_PHONE: "\ue717",
        SIM_CARD: "\ue718",
        TRENDING_UP: "\ue719",
        TRENDING_DOWN: "\ue71a",
        CURVED_RANGE_CHART: "\ue71b",
        VERTICAL_BAR_CHART_DESC: "\ue71c",
        HORIZONTAL_BAR_CHART_DESC: "\ue71d",
        DOCUMENT_OPEN: "\ue71e",
        DOCUMENT_SHARE: "\ue71f",
        HORIZONTAL_DISTRIBUTION: "\ue720",
        VERTICAL_DISTRIBUTION: "\ue721",
        ALIGNMENT_LEFT: "\ue722",
        ALIGNMENT_VERTICAL_CENTER: "\ue723",
        ALIGNMENT_RIGHT: "\ue724",
        ALIGNMENT_TOP: "\ue725",
        ALIGNMENT_HORIZONTAL_CENTER: "\ue726",
        ALIGNMENT_BOTTOM: "\ue727",
        GIT_PULL: "\ue728",
        GIT_MERGE: "\ue729",
        GIT_BRANCH: "\ue72a",
        GIT_COMMIT: "\ue72b",
        GIT_PUSH: "\ue72c",
        BUILD: "\ue72d",
        SYMBOL_CIRCLE: "\ue72e",
        SYMBOL_SQUARE: "\ue72f",
        SYMBOL_DIAMOND: "\ue730",
        SYMBOL_CROSS: "\ue731",
        SYMBOL_TRIANGLE_UP: "\ue732",
        SYMBOL_TRIANGLE_DOWN: "\ue733",
        WRENCH: "\ue734",
        APPLICATION: "\ue735",
        SEND_TO_GRAPH: "\ue736",
        SEND_TO_MAP: "\ue737",
        JOIN_TABLE: "\ue738",
        DERIVE_COLUMN: "\ue739",
        IMAGE_ROTATE_LEFT: "\ue73a",
        IMAGE_ROTATE_RIGHT: "\ue73b",
        KNOWN_VEHICLE: "\ue73c",
        UNKNOWN_VEHICLE: "\ue73d",
        SCATTER_PLOT: "\ue73e",
        OIL_FIELD: "\ue73f",
        RIG: "\ue740",
        MAP_CREATE: "\ue741",
        KEY_OPTION: "\ue742",
        LIST_DETAIL_VIEW: "\ue743",
        SWAP_VERTICAL: "\ue744",
        SWAP_HORIZONTAL: "\ue745",
        NUMBERED_LIST: "\ue746",
        NEW_GRID_ITEM: "\ue747",
        GIT_REPO: "\ue748",
        GIT_NEW_BRANCH: "\ue749",
        MANUALLY_ENTERED_DATA: "\ue74a",
        AIRPLANE: "\ue74b",
        MERGE_COLUMNS: "\ue74f",
        SPLIT_COLUMNS: "\ue750",
        DASHBOARD: "\ue751",
        PUBLISH_FUNCTION: "\ue752",
        PATH: "\ue753",
        MOON: "\ue754",
        REMOVE_COLUMN: "\ue755",
        NUMERICAL: "\ue756",
        KEY_TAB: "\ue757",
        REGRESSION_CHART: "\ue758",
        TRANSLATE: "\ue759",
        EYE_ON: "\ue75a",
        VERTICAL_BAR_CHART_ASC: "\ue75b",
        HORIZONTAL_BAR_CHART_ASC: "\ue75c",
        GROUPED_BAR_CHART: "\ue75d",
        FULL_STACKED_CHART: "\ue75e",
        ENDORSED: "\ue75f",
        FOLLOWER: "\ue760",
        FOLLOWING: "\ue761",
        MENU: "\ue762",
        COLLAPSE_ALL: "\ue763",
        EXPAND_ALL: "\ue764",
        INTERSECTION: "\ue765",
        BLOCKED_PERSON: "\ue768",
        SLASH: "\ue769",
        PERCENTAGE: "\ue76a",
        SATELLITE: "\ue76b",
        PARAGRAPH: "\ue76c",
        BANK_ACCOUNT: "\ue76f",
        CELL_TOWER: "\ue770",
        ID_NUMBER: "\ue771",
        IP_ADDRESS: "\ue772",
        ERASER: "\ue773",
        ISSUE: "\ue774",
        ISSUE_NEW: "\ue775",
        ISSUE_CLOSED: "\ue776",
        PANEL_STATS: "\ue777",
        PANEL_TABLE: "\ue778",
        TICK_CIRCLE: "\ue779",
        PRESCRIPTION: "\ue78a",
        NEW_PRESCRIPTION: "\ue78b",
        FILTER_KEEP: "\ue78c",
        FILTER_REMOVE: "\ue78d",
        KEY: "\ue78e",
        FEED_SUBSCRIBED: "\ue78f",
        WIDGET_BUTTON: "\ue790",
        WIDGET_HEADER: "\ue791",
        WIDGET_FOOTER: "\ue792",
        HEADER_ONE: "\ue793",
        HEADER_TWO: "\ue794",
        FORM: "\ue795",
        SERIES_ADD: "\ue796",
        SERIES_SEARCH: "\ue797",
        SERIES_FILTERED: "\ue798",
        SERIES_DERIVED: "\ue799",
        SERIES_CONFIGURATION: "\ue79a",
        CONSOLE: "\ue79b",
        COMPASS: "\ue79c",
        WALK: "\ue79d",
        TAXI: "\ue79e",
        TRAIN: "\ue79f"
    };

    
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/common/index.js", ["npm:@blueprintjs/core@1.33.0/dist/common/abstractComponent.js", "npm:@blueprintjs/core@1.33.0/dist/common/colors.js", "npm:@blueprintjs/core@1.33.0/dist/common/intent.js", "npm:@blueprintjs/core@1.33.0/dist/common/position.js", "npm:@blueprintjs/core@1.33.0/dist/common/props.js", "npm:@blueprintjs/core@1.33.0/dist/common/tetherUtils.js", "npm:@blueprintjs/core@1.33.0/dist/common/classes.js", "npm:@blueprintjs/core@1.33.0/dist/common/keys.js", "npm:@blueprintjs/core@1.33.0/dist/common/utils.js", "npm:@blueprintjs/core@1.33.0/dist/generated/iconClasses.js", "npm:@blueprintjs/core@1.33.0/dist/generated/iconStrings.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
  }
  Object.defineProperty(exports, "__esModule", { value: true });
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/common/abstractComponent.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/common/colors.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/common/intent.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/common/position.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/common/props.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/common/tetherUtils.js"));
  var classes = $__require("npm:@blueprintjs/core@1.33.0/dist/common/classes.js");
  var keys = $__require("npm:@blueprintjs/core@1.33.0/dist/common/keys.js");
  var utils = $__require("npm:@blueprintjs/core@1.33.0/dist/common/utils.js");
  exports.Classes = classes;
  exports.Keys = keys;
  exports.Utils = utils;
  var iconClasses_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/generated/iconClasses.js");
  exports.IconClasses = iconClasses_1.IconClasses;
  var iconStrings_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/generated/iconStrings.js");
  exports.IconContents = iconStrings_1.IconContents;
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/icon/icon.js", ["npm:tslib@1.8.0.js", "npm:classnames@2.2.5.js", "npm:pure-render-decorator@1.2.1.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/index.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var classNames = $__require("npm:classnames@2.2.5.js");
  var PureRender = $__require("npm:pure-render-decorator@1.2.1.js");
  var React = $__require("npm:react@0.14.9.js");
  var common_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/index.js");
  var Icon = Icon_1 = function (_super) {
    tslib_1.__extends(Icon, _super);
    function Icon() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Icon.prototype.render = function () {
      if (this.props.iconName == null) {
        return null;
      }
      var _a = this.props,
          className = _a.className,
          iconName = _a.iconName,
          intent = _a.intent,
          _b = _a.iconSize,
          iconSize = _b === void 0 ? Icon_1.SIZE_STANDARD : _b,
          restProps = tslib_1.__rest(_a, ["className", "iconName", "intent", "iconSize"]);
      var classes = classNames(getSizeClass(iconSize), common_1.Classes.iconClass(iconName), common_1.Classes.intentClass(intent), className);
      return React.createElement("span", tslib_1.__assign({ className: classes }, restProps));
    };
    return Icon;
  }(React.Component);
  Icon.displayName = "Blueprint.Icon";
  Icon.SIZE_STANDARD = 16;
  Icon.SIZE_LARGE = 20;
  Icon.SIZE_INHERIT = "inherit";
  Icon = Icon_1 = tslib_1.__decorate([PureRender], Icon);
  exports.Icon = Icon;
  function getSizeClass(size) {
    switch (size) {
      case Icon.SIZE_STANDARD:
        return common_1.Classes.ICON_STANDARD;
      case Icon.SIZE_LARGE:
        return common_1.Classes.ICON_LARGE;
      default:
        return common_1.Classes.ICON;
    }
  }
  var Icon_1;
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/tree/treeNode.js", ["npm:tslib@1.8.0.js", "npm:classnames@2.2.5.js", "npm:react@0.14.9.js", "npm:@blueprintjs/core@1.33.0/dist/common/classes.js", "npm:@blueprintjs/core@1.33.0/dist/common/utils.js", "npm:@blueprintjs/core@1.33.0/dist/components/collapse/collapse.js", "npm:@blueprintjs/core@1.33.0/dist/components/icon/icon.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var tslib_1 = $__require("npm:tslib@1.8.0.js");
  var classNames = $__require("npm:classnames@2.2.5.js");
  var React = $__require("npm:react@0.14.9.js");
  var Classes = $__require("npm:@blueprintjs/core@1.33.0/dist/common/classes.js");
  var utils_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/common/utils.js");
  var collapse_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/collapse/collapse.js");
  var icon_1 = $__require("npm:@blueprintjs/core@1.33.0/dist/components/icon/icon.js");
  var TreeNode = function (_super) {
    tslib_1.__extends(TreeNode, _super);
    function TreeNode() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.handleCaretClick = function (e) {
        e.stopPropagation();
        var _a = _this.props,
            isExpanded = _a.isExpanded,
            onCollapse = _a.onCollapse,
            onExpand = _a.onExpand;
        utils_1.safeInvoke(isExpanded ? onCollapse : onExpand, _this, e);
      };
      _this.handleClick = function (e) {
        utils_1.safeInvoke(_this.props.onClick, _this, e);
      };
      _this.handleContentRef = function (element) {
        utils_1.safeInvoke(_this.props.contentRef, _this, element);
      };
      _this.handleContextMenu = function (e) {
        utils_1.safeInvoke(_this.props.onContextMenu, _this, e);
      };
      _this.handleDoubleClick = function (e) {
        utils_1.safeInvoke(_this.props.onDoubleClick, _this, e);
      };
      return _this;
    }
    TreeNode.prototype.render = function () {
      var _a = this.props,
          children = _a.children,
          className = _a.className,
          hasCaret = _a.hasCaret,
          iconName = _a.iconName,
          isExpanded = _a.isExpanded,
          isSelected = _a.isSelected,
          label = _a.label;
      var showCaret = hasCaret == null ? React.Children.count(children) > 0 : hasCaret;
      var caretClass = showCaret ? Classes.TREE_NODE_CARET : Classes.TREE_NODE_CARET_NONE;
      var caretStateClass = isExpanded ? Classes.TREE_NODE_CARET_OPEN : Classes.TREE_NODE_CARET_CLOSED;
      var caretClasses = classNames(caretClass, Classes.ICON_STANDARD, (_b = {}, _b[caretStateClass] = showCaret, _b));
      var classes = classNames(Classes.TREE_NODE, (_c = {}, _c[Classes.TREE_NODE_SELECTED] = isSelected, _c[Classes.TREE_NODE_EXPANDED] = isExpanded, _c), className);
      var contentClasses = classNames(Classes.TREE_NODE_CONTENT, "pt-tree-node-content-" + this.props.depth);
      return React.createElement("li", { className: classes }, React.createElement("div", {
        className: contentClasses,
        onClick: this.handleClick,
        onContextMenu: this.handleContextMenu,
        onDoubleClick: this.handleDoubleClick,
        ref: this.handleContentRef
      }, React.createElement("span", {
        className: caretClasses,
        onClick: showCaret ? this.handleCaretClick : null
      }), React.createElement(icon_1.Icon, {
        className: Classes.TREE_NODE_ICON,
        iconName: iconName
      }), React.createElement("span", { className: Classes.TREE_NODE_LABEL }, label), this.maybeRenderSecondaryLabel()), React.createElement(collapse_1.Collapse, { isOpen: isExpanded }, children));
      var _b, _c;
    };
    TreeNode.prototype.maybeRenderSecondaryLabel = function () {
      if (this.props.secondaryLabel != null) {
        return React.createElement("span", { className: Classes.TREE_NODE_SECONDARY_LABEL }, this.props.secondaryLabel);
      } else {
        return undefined;
      }
    };
    return TreeNode;
  }(React.Component);
  exports.TreeNode = TreeNode;
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/components/index.js", ["npm:dom4@1.8.5.js", "npm:@blueprintjs/core@1.33.0/dist/components/context-menu/contextMenu.js", "npm:@blueprintjs/core@1.33.0/dist/components/alert/alert.js", "npm:@blueprintjs/core@1.33.0/dist/components/breadcrumbs/breadcrumb.js", "npm:@blueprintjs/core@1.33.0/dist/components/button/buttons.js", "npm:@blueprintjs/core@1.33.0/dist/components/callout/callout.js", "npm:@blueprintjs/core@1.33.0/dist/components/card/card.js", "npm:@blueprintjs/core@1.33.0/dist/components/collapse/collapse.js", "npm:@blueprintjs/core@1.33.0/dist/components/collapsible-list/collapsibleList.js", "npm:@blueprintjs/core@1.33.0/dist/components/context-menu/contextMenuTarget.js", "npm:@blueprintjs/core@1.33.0/dist/components/dialog/dialog.js", "npm:@blueprintjs/core@1.33.0/dist/components/editable-text/editableText.js", "npm:@blueprintjs/core@1.33.0/dist/components/forms/controls.js", "npm:@blueprintjs/core@1.33.0/dist/components/forms/formGroup.js", "npm:@blueprintjs/core@1.33.0/dist/components/forms/inputGroup.js", "npm:@blueprintjs/core@1.33.0/dist/components/forms/numericInput.js", "npm:@blueprintjs/core@1.33.0/dist/components/forms/radioGroup.js", "npm:@blueprintjs/core@1.33.0/dist/components/hotkeys/hotkeys.js", "npm:@blueprintjs/core@1.33.0/dist/components/icon/icon.js", "npm:@blueprintjs/core@1.33.0/dist/components/menu/menu.js", "npm:@blueprintjs/core@1.33.0/dist/components/menu/menuDivider.js", "npm:@blueprintjs/core@1.33.0/dist/components/menu/menuItem.js", "npm:@blueprintjs/core@1.33.0/dist/components/non-ideal-state/nonIdealState.js", "npm:@blueprintjs/core@1.33.0/dist/components/overlay/overlay.js", "npm:@blueprintjs/core@1.33.0/dist/components/text/text.js", "npm:@blueprintjs/core@1.33.0/dist/components/popover/popover.js", "npm:@blueprintjs/core@1.33.0/dist/components/popover/svgPopover.js", "npm:@blueprintjs/core@1.33.0/dist/components/portal/portal.js", "npm:@blueprintjs/core@1.33.0/dist/components/progress/progressBar.js", "npm:@blueprintjs/core@1.33.0/dist/components/tooltip/svgTooltip.js", "npm:@blueprintjs/core@1.33.0/dist/components/slider/rangeSlider.js", "npm:@blueprintjs/core@1.33.0/dist/components/slider/slider.js", "npm:@blueprintjs/core@1.33.0/dist/components/spinner/spinner.js", "npm:@blueprintjs/core@1.33.0/dist/components/spinner/svgSpinner.js", "npm:@blueprintjs/core@1.33.0/dist/components/tabs/tab.js", "npm:@blueprintjs/core@1.33.0/dist/components/tabs/tabs.js", "npm:@blueprintjs/core@1.33.0/dist/components/tabs/tabList.js", "npm:@blueprintjs/core@1.33.0/dist/components/tabs/tabPanel.js", "npm:@blueprintjs/core@1.33.0/dist/components/tabs2/tab2.js", "npm:@blueprintjs/core@1.33.0/dist/components/tabs2/tabs2.js", "npm:@blueprintjs/core@1.33.0/dist/components/tag/tag.js", "npm:@blueprintjs/core@1.33.0/dist/components/toast/toast.js", "npm:@blueprintjs/core@1.33.0/dist/components/toast/toaster.js", "npm:@blueprintjs/core@1.33.0/dist/components/tooltip/tooltip.js", "npm:@blueprintjs/core@1.33.0/dist/components/tree/tree.js", "npm:@blueprintjs/core@1.33.0/dist/components/tree/treeNode.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
  }
  Object.defineProperty(exports, "__esModule", { value: true });
  if (typeof window !== "undefined" && typeof document !== "undefined") {
    $__require("npm:dom4@1.8.5.js");
  }
  var contextMenu = $__require("npm:@blueprintjs/core@1.33.0/dist/components/context-menu/contextMenu.js");
  exports.ContextMenu = contextMenu;
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/alert/alert.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/breadcrumbs/breadcrumb.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/button/buttons.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/callout/callout.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/card/card.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/collapse/collapse.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/collapsible-list/collapsibleList.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/context-menu/contextMenuTarget.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/dialog/dialog.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/editable-text/editableText.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/forms/controls.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/forms/formGroup.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/forms/inputGroup.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/forms/numericInput.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/forms/radioGroup.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/hotkeys/hotkeys.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/icon/icon.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/menu/menu.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/menu/menuDivider.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/menu/menuItem.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/non-ideal-state/nonIdealState.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/overlay/overlay.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/text/text.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/popover/popover.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/popover/svgPopover.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/portal/portal.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/progress/progressBar.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/tooltip/svgTooltip.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/slider/rangeSlider.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/slider/slider.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/spinner/spinner.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/spinner/svgSpinner.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/tabs/tab.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/tabs/tabs.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/tabs/tabList.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/tabs/tabPanel.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/tabs2/tab2.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/tabs2/tabs2.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/tag/tag.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/toast/toast.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/toast/toaster.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/tooltip/tooltip.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/tree/tree.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/tree/treeNode.js"));
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0/dist/index.js", ["npm:@blueprintjs/core@1.33.0/dist/accessibility/index.js", "npm:@blueprintjs/core@1.33.0/dist/common/index.js", "npm:@blueprintjs/core@1.33.0/dist/components/index.js"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
  }
  Object.defineProperty(exports, "__esModule", { value: true });
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/accessibility/index.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/common/index.js"));
  __export($__require("npm:@blueprintjs/core@1.33.0/dist/components/index.js"));
});
System.registerDynamic("npm:@blueprintjs/core@1.33.0.js", ["npm:@blueprintjs/core@1.33.0/dist/index.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:@blueprintjs/core@1.33.0/dist/index.js");
});
System.registerDynamic("uapp/Alert.js", ["npm:@blueprintjs/core@1.33.0.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const Blueprint = $__require("npm:@blueprintjs/core@1.33.0.js");
    let toaster = Blueprint.Toaster.create({
        position: Blueprint.Position.BOTTOM
    });
    function success(message, timeout) {
        if (timeout === undefined) {
            timeout = 5000;
        }
        toaster.show({
            intent: Blueprint.Intent.SUCCESS,
            message: message,
            timeout: timeout
        });
    }
    exports.success = success;
    function info(message, timeout) {
        if (timeout === undefined) {
            timeout = 5000;
        }
        toaster.show({
            intent: Blueprint.Intent.PRIMARY,
            message: message,
            timeout: timeout
        });
    }
    exports.info = info;
    function warning(message, timeout) {
        if (timeout === undefined) {
            timeout = 5000;
        }
        toaster.show({
            intent: Blueprint.Intent.WARNING,
            message: message,
            timeout: timeout
        });
    }
    exports.warning = warning;
    function error(message, timeout) {
        if (timeout === undefined) {
            timeout = 5000;
        }
        toaster.show({
            intent: Blueprint.Intent.DANGER,
            message: message,
            timeout: timeout
        });
    }
    exports.error = error;
    function errorRes(res, message, timeout) {
        if (timeout === undefined) {
            timeout = 5000;
        }
        try {
            message = res.body.error_msg || message;
        } catch (err) {}
        toaster.show({
            intent: Blueprint.Intent.DANGER,
            message: message,
            timeout: timeout
        });
    }
    exports.errorRes = errorRes;
    
});
System.registerDynamic('npm:react@15.6.1/lib/PooledClass.js', ['npm:react@15.6.1/lib/reactProdInvariant.js', 'npm:fbjs@0.8.16/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('npm:react@15.6.1/lib/reactProdInvariant.js');
    var invariant = $__require('npm:fbjs@0.8.16/lib/invariant.js');
    var oneArgumentPooler = function (copyFieldsFrom) {
      var Klass = this;
      if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        Klass.call(instance, copyFieldsFrom);
        return instance;
      } else {
        return new Klass(copyFieldsFrom);
      }
    };
    var twoArgumentPooler = function (a1, a2) {
      var Klass = this;
      if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        Klass.call(instance, a1, a2);
        return instance;
      } else {
        return new Klass(a1, a2);
      }
    };
    var threeArgumentPooler = function (a1, a2, a3) {
      var Klass = this;
      if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        Klass.call(instance, a1, a2, a3);
        return instance;
      } else {
        return new Klass(a1, a2, a3);
      }
    };
    var fourArgumentPooler = function (a1, a2, a3, a4) {
      var Klass = this;
      if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        Klass.call(instance, a1, a2, a3, a4);
        return instance;
      } else {
        return new Klass(a1, a2, a3, a4);
      }
    };
    var standardReleaser = function (instance) {
      var Klass = this;
      !(instance instanceof Klass) ? 'production' !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
      instance.destructor();
      if (Klass.instancePool.length < Klass.poolSize) {
        Klass.instancePool.push(instance);
      }
    };
    var DEFAULT_POOL_SIZE = 10;
    var DEFAULT_POOLER = oneArgumentPooler;
    var addPoolingTo = function (CopyConstructor, pooler) {
      var NewKlass = CopyConstructor;
      NewKlass.instancePool = [];
      NewKlass.getPooled = pooler || DEFAULT_POOLER;
      if (!NewKlass.poolSize) {
        NewKlass.poolSize = DEFAULT_POOL_SIZE;
      }
      NewKlass.release = standardReleaser;
      return NewKlass;
    };
    var PooledClass = {
      addPoolingTo: addPoolingTo,
      oneArgumentPooler: oneArgumentPooler,
      twoArgumentPooler: twoArgumentPooler,
      threeArgumentPooler: threeArgumentPooler,
      fourArgumentPooler: fourArgumentPooler
    };
    module.exports = PooledClass;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@15.6.1/lib/KeyEscapeUtils.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  /**
   * Escape and wrap key so it is safe to use as a reactid
   *
   * @param {string} key to be escaped.
   * @return {string} the escaped key.
   */

  var global = this || self,
      GLOBAL = global;
  function escape(key) {
    var escapeRegex = /[=:]/g;
    var escaperLookup = {
      '=': '=0',
      ':': '=2'
    };
    var escapedString = ('' + key).replace(escapeRegex, function (match) {
      return escaperLookup[match];
    });

    return '$' + escapedString;
  }

  /**
   * Unescape and unwrap key for human-readable display
   *
   * @param {string} key to unescape.
   * @return {string} the unescaped key.
   */
  function unescape(key) {
    var unescapeRegex = /(=0|=2)/g;
    var unescaperLookup = {
      '=0': '=',
      '=2': ':'
    };
    var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

    return ('' + keySubstring).replace(unescapeRegex, function (match) {
      return unescaperLookup[match];
    });
  }

  var KeyEscapeUtils = {
    escape: escape,
    unescape: unescape
  };

  module.exports = KeyEscapeUtils;
});
System.registerDynamic('npm:react@15.6.1/lib/traverseAllChildren.js', ['npm:react@15.6.1/lib/reactProdInvariant.js', 'npm:react@15.6.1/lib/ReactCurrentOwner.js', 'npm:react@15.6.1/lib/ReactElementSymbol.js', 'npm:react@15.6.1/lib/getIteratorFn.js', 'npm:fbjs@0.8.16/lib/invariant.js', 'npm:react@15.6.1/lib/KeyEscapeUtils.js', 'npm:fbjs@0.8.16/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('npm:react@15.6.1/lib/reactProdInvariant.js');
    var ReactCurrentOwner = $__require('npm:react@15.6.1/lib/ReactCurrentOwner.js');
    var REACT_ELEMENT_TYPE = $__require('npm:react@15.6.1/lib/ReactElementSymbol.js');
    var getIteratorFn = $__require('npm:react@15.6.1/lib/getIteratorFn.js');
    var invariant = $__require('npm:fbjs@0.8.16/lib/invariant.js');
    var KeyEscapeUtils = $__require('npm:react@15.6.1/lib/KeyEscapeUtils.js');
    var warning = $__require('npm:fbjs@0.8.16/lib/warning.js');
    var SEPARATOR = '.';
    var SUBSEPARATOR = ':';
    var didWarnAboutMaps = false;
    function getComponentKey(component, index) {
      if (component && typeof component === 'object' && component.key != null) {
        return KeyEscapeUtils.escape(component.key);
      }
      return index.toString(36);
    }
    function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
      var type = typeof children;
      if (type === 'undefined' || type === 'boolean') {
        children = null;
      }
      if (children === null || type === 'string' || type === 'number' || type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
        callback(traverseContext, children, nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
        return 1;
      }
      var child;
      var nextName;
      var subtreeCount = 0;
      var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
      if (Array.isArray(children)) {
        for (var i = 0; i < children.length; i++) {
          child = children[i];
          nextName = nextNamePrefix + getComponentKey(child, i);
          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
        }
      } else {
        var iteratorFn = getIteratorFn(children);
        if (iteratorFn) {
          var iterator = iteratorFn.call(children);
          var step;
          if (iteratorFn !== children.entries) {
            var ii = 0;
            while (!(step = iterator.next()).done) {
              child = step.value;
              nextName = nextNamePrefix + getComponentKey(child, ii++);
              subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
            }
          } else {
            if ('production' !== 'production') {
              var mapsAsChildrenAddendum = '';
              if (ReactCurrentOwner.current) {
                var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
                if (mapsAsChildrenOwnerName) {
                  mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
                }
              }
              'production' !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
              didWarnAboutMaps = true;
            }
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                child = entry[1];
                nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
                subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
              }
            }
          }
        } else if (type === 'object') {
          var addendum = '';
          if ('production' !== 'production') {
            addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
            if (children._isReactElement) {
              addendum = " It looks like you're using an element created by a different " + 'version of React. Make sure to use only one copy of React.';
            }
            if (ReactCurrentOwner.current) {
              var name = ReactCurrentOwner.current.getName();
              if (name) {
                addendum += ' Check the render method of `' + name + '`.';
              }
            }
          }
          var childrenString = String(children);
          !false ? 'production' !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
        }
      }
      return subtreeCount;
    }
    function traverseAllChildren(children, callback, traverseContext) {
      if (children == null) {
        return 0;
      }
      return traverseAllChildrenImpl(children, '', callback, traverseContext);
    }
    module.exports = traverseAllChildren;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@15.6.1/lib/ReactChildren.js', ['npm:react@15.6.1/lib/PooledClass.js', 'npm:react@15.6.1/lib/ReactElement.js', 'npm:fbjs@0.8.16/lib/emptyFunction.js', 'npm:react@15.6.1/lib/traverseAllChildren.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var PooledClass = $__require('npm:react@15.6.1/lib/PooledClass.js');
  var ReactElement = $__require('npm:react@15.6.1/lib/ReactElement.js');
  var emptyFunction = $__require('npm:fbjs@0.8.16/lib/emptyFunction.js');
  var traverseAllChildren = $__require('npm:react@15.6.1/lib/traverseAllChildren.js');
  var twoArgumentPooler = PooledClass.twoArgumentPooler;
  var fourArgumentPooler = PooledClass.fourArgumentPooler;
  var userProvidedKeyEscapeRegex = /\/+/g;
  function escapeUserProvidedKey(text) {
    return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
  }
  function ForEachBookKeeping(forEachFunction, forEachContext) {
    this.func = forEachFunction;
    this.context = forEachContext;
    this.count = 0;
  }
  ForEachBookKeeping.prototype.destructor = function () {
    this.func = null;
    this.context = null;
    this.count = 0;
  };
  PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);
  function forEachSingleChild(bookKeeping, child, name) {
    var func = bookKeeping.func,
        context = bookKeeping.context;
    func.call(context, child, bookKeeping.count++);
  }
  function forEachChildren(children, forEachFunc, forEachContext) {
    if (children == null) {
      return children;
    }
    var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
    traverseAllChildren(children, forEachSingleChild, traverseContext);
    ForEachBookKeeping.release(traverseContext);
  }
  function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
    this.result = mapResult;
    this.keyPrefix = keyPrefix;
    this.func = mapFunction;
    this.context = mapContext;
    this.count = 0;
  }
  MapBookKeeping.prototype.destructor = function () {
    this.result = null;
    this.keyPrefix = null;
    this.func = null;
    this.context = null;
    this.count = 0;
  };
  PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);
  function mapSingleChildIntoContext(bookKeeping, child, childKey) {
    var result = bookKeeping.result,
        keyPrefix = bookKeeping.keyPrefix,
        func = bookKeeping.func,
        context = bookKeeping.context;
    var mappedChild = func.call(context, child, bookKeeping.count++);
    if (Array.isArray(mappedChild)) {
      mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
    } else if (mappedChild != null) {
      if (ReactElement.isValidElement(mappedChild)) {
        mappedChild = ReactElement.cloneAndReplaceKey(mappedChild, keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
      }
      result.push(mappedChild);
    }
  }
  function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
    var escapedPrefix = '';
    if (prefix != null) {
      escapedPrefix = escapeUserProvidedKey(prefix) + '/';
    }
    var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
    traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
    MapBookKeeping.release(traverseContext);
  }
  function mapChildren(children, func, context) {
    if (children == null) {
      return children;
    }
    var result = [];
    mapIntoWithKeyPrefixInternal(children, result, null, func, context);
    return result;
  }
  function forEachSingleChildDummy(traverseContext, child, name) {
    return null;
  }
  function countChildren(children, context) {
    return traverseAllChildren(children, forEachSingleChildDummy, null);
  }
  function toArray(children) {
    var result = [];
    mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
    return result;
  }
  var ReactChildren = {
    forEach: forEachChildren,
    map: mapChildren,
    mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
    count: countChildren,
    toArray: toArray
  };
  module.exports = ReactChildren;
});
System.registerDynamic('npm:react@15.6.1/lib/ReactDOMFactories.js', ['npm:react@15.6.1/lib/ReactElement.js', 'npm:react@15.6.1/lib/ReactElementValidator.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactElement = $__require('npm:react@15.6.1/lib/ReactElement.js');
    var createDOMFactory = ReactElement.createFactory;
    if ('production' !== 'production') {
      var ReactElementValidator = $__require('npm:react@15.6.1/lib/ReactElementValidator.js');
      createDOMFactory = ReactElementValidator.createFactory;
    }
    var ReactDOMFactories = {
      a: createDOMFactory('a'),
      abbr: createDOMFactory('abbr'),
      address: createDOMFactory('address'),
      area: createDOMFactory('area'),
      article: createDOMFactory('article'),
      aside: createDOMFactory('aside'),
      audio: createDOMFactory('audio'),
      b: createDOMFactory('b'),
      base: createDOMFactory('base'),
      bdi: createDOMFactory('bdi'),
      bdo: createDOMFactory('bdo'),
      big: createDOMFactory('big'),
      blockquote: createDOMFactory('blockquote'),
      body: createDOMFactory('body'),
      br: createDOMFactory('br'),
      button: createDOMFactory('button'),
      canvas: createDOMFactory('canvas'),
      caption: createDOMFactory('caption'),
      cite: createDOMFactory('cite'),
      code: createDOMFactory('code'),
      col: createDOMFactory('col'),
      colgroup: createDOMFactory('colgroup'),
      data: createDOMFactory('data'),
      datalist: createDOMFactory('datalist'),
      dd: createDOMFactory('dd'),
      del: createDOMFactory('del'),
      details: createDOMFactory('details'),
      dfn: createDOMFactory('dfn'),
      dialog: createDOMFactory('dialog'),
      div: createDOMFactory('div'),
      dl: createDOMFactory('dl'),
      dt: createDOMFactory('dt'),
      em: createDOMFactory('em'),
      embed: createDOMFactory('embed'),
      fieldset: createDOMFactory('fieldset'),
      figcaption: createDOMFactory('figcaption'),
      figure: createDOMFactory('figure'),
      footer: createDOMFactory('footer'),
      form: createDOMFactory('form'),
      h1: createDOMFactory('h1'),
      h2: createDOMFactory('h2'),
      h3: createDOMFactory('h3'),
      h4: createDOMFactory('h4'),
      h5: createDOMFactory('h5'),
      h6: createDOMFactory('h6'),
      head: createDOMFactory('head'),
      header: createDOMFactory('header'),
      hgroup: createDOMFactory('hgroup'),
      hr: createDOMFactory('hr'),
      html: createDOMFactory('html'),
      i: createDOMFactory('i'),
      iframe: createDOMFactory('iframe'),
      img: createDOMFactory('img'),
      input: createDOMFactory('input'),
      ins: createDOMFactory('ins'),
      kbd: createDOMFactory('kbd'),
      keygen: createDOMFactory('keygen'),
      label: createDOMFactory('label'),
      legend: createDOMFactory('legend'),
      li: createDOMFactory('li'),
      link: createDOMFactory('link'),
      main: createDOMFactory('main'),
      map: createDOMFactory('map'),
      mark: createDOMFactory('mark'),
      menu: createDOMFactory('menu'),
      menuitem: createDOMFactory('menuitem'),
      meta: createDOMFactory('meta'),
      meter: createDOMFactory('meter'),
      nav: createDOMFactory('nav'),
      noscript: createDOMFactory('noscript'),
      object: createDOMFactory('object'),
      ol: createDOMFactory('ol'),
      optgroup: createDOMFactory('optgroup'),
      option: createDOMFactory('option'),
      output: createDOMFactory('output'),
      p: createDOMFactory('p'),
      param: createDOMFactory('param'),
      picture: createDOMFactory('picture'),
      pre: createDOMFactory('pre'),
      progress: createDOMFactory('progress'),
      q: createDOMFactory('q'),
      rp: createDOMFactory('rp'),
      rt: createDOMFactory('rt'),
      ruby: createDOMFactory('ruby'),
      s: createDOMFactory('s'),
      samp: createDOMFactory('samp'),
      script: createDOMFactory('script'),
      section: createDOMFactory('section'),
      select: createDOMFactory('select'),
      small: createDOMFactory('small'),
      source: createDOMFactory('source'),
      span: createDOMFactory('span'),
      strong: createDOMFactory('strong'),
      style: createDOMFactory('style'),
      sub: createDOMFactory('sub'),
      summary: createDOMFactory('summary'),
      sup: createDOMFactory('sup'),
      table: createDOMFactory('table'),
      tbody: createDOMFactory('tbody'),
      td: createDOMFactory('td'),
      textarea: createDOMFactory('textarea'),
      tfoot: createDOMFactory('tfoot'),
      th: createDOMFactory('th'),
      thead: createDOMFactory('thead'),
      time: createDOMFactory('time'),
      title: createDOMFactory('title'),
      tr: createDOMFactory('tr'),
      track: createDOMFactory('track'),
      u: createDOMFactory('u'),
      ul: createDOMFactory('ul'),
      'var': createDOMFactory('var'),
      video: createDOMFactory('video'),
      wbr: createDOMFactory('wbr'),
      circle: createDOMFactory('circle'),
      clipPath: createDOMFactory('clipPath'),
      defs: createDOMFactory('defs'),
      ellipse: createDOMFactory('ellipse'),
      g: createDOMFactory('g'),
      image: createDOMFactory('image'),
      line: createDOMFactory('line'),
      linearGradient: createDOMFactory('linearGradient'),
      mask: createDOMFactory('mask'),
      path: createDOMFactory('path'),
      pattern: createDOMFactory('pattern'),
      polygon: createDOMFactory('polygon'),
      polyline: createDOMFactory('polyline'),
      radialGradient: createDOMFactory('radialGradient'),
      rect: createDOMFactory('rect'),
      stop: createDOMFactory('stop'),
      svg: createDOMFactory('svg'),
      text: createDOMFactory('text'),
      tspan: createDOMFactory('tspan')
    };
    module.exports = ReactDOMFactories;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:prop-types@15.6.0/lib/ReactPropTypesSecret.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

  module.exports = ReactPropTypesSecret;
});
System.registerDynamic('npm:prop-types@15.6.0/checkPropTypes.js', ['npm:fbjs@0.8.16/lib/invariant.js', 'npm:fbjs@0.8.16/lib/warning.js', 'npm:prop-types@15.6.0/lib/ReactPropTypesSecret.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    if ('production' !== 'production') {
      var invariant = $__require('npm:fbjs@0.8.16/lib/invariant.js');
      var warning = $__require('npm:fbjs@0.8.16/lib/warning.js');
      var ReactPropTypesSecret = $__require('npm:prop-types@15.6.0/lib/ReactPropTypesSecret.js');
      var loggedTypeFailures = {};
    }
    function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
      if ('production' !== 'production') {
        for (var typeSpecName in typeSpecs) {
          if (typeSpecs.hasOwnProperty(typeSpecName)) {
            var error;
            try {
              invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, typeof typeSpecs[typeSpecName]);
              error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
            } catch (ex) {
              error = ex;
            }
            warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);
            if (error instanceof Error && !(error.message in loggedTypeFailures)) {
              loggedTypeFailures[error.message] = true;
              var stack = getStack ? getStack() : '';
              warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');
            }
          }
        }
      }
    }
    module.exports = checkPropTypes;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:prop-types@15.6.0/factoryWithTypeCheckers.js', ['npm:fbjs@0.8.16/lib/emptyFunction.js', 'npm:fbjs@0.8.16/lib/invariant.js', 'npm:fbjs@0.8.16/lib/warning.js', 'npm:object-assign@4.1.1.js', 'npm:prop-types@15.6.0/lib/ReactPropTypesSecret.js', 'npm:prop-types@15.6.0/checkPropTypes.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var emptyFunction = $__require('npm:fbjs@0.8.16/lib/emptyFunction.js');
    var invariant = $__require('npm:fbjs@0.8.16/lib/invariant.js');
    var warning = $__require('npm:fbjs@0.8.16/lib/warning.js');
    var assign = $__require('npm:object-assign@4.1.1.js');
    var ReactPropTypesSecret = $__require('npm:prop-types@15.6.0/lib/ReactPropTypesSecret.js');
    var checkPropTypes = $__require('npm:prop-types@15.6.0/checkPropTypes.js');
    module.exports = function (isValidElement, throwOnDirectAccess) {
      var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
      var FAUX_ITERATOR_SYMBOL = '@@iterator';
      function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === 'function') {
          return iteratorFn;
        }
      }
      var ANONYMOUS = '<<anonymous>>';
      var ReactPropTypes = {
        array: createPrimitiveTypeChecker('array'),
        bool: createPrimitiveTypeChecker('boolean'),
        func: createPrimitiveTypeChecker('function'),
        number: createPrimitiveTypeChecker('number'),
        object: createPrimitiveTypeChecker('object'),
        string: createPrimitiveTypeChecker('string'),
        symbol: createPrimitiveTypeChecker('symbol'),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
      };
      function is(x, y) {
        if (x === y) {
          return x !== 0 || 1 / x === 1 / y;
        } else {
          return x !== x && y !== y;
        }
      }
      function PropTypeError(message) {
        this.message = message;
        this.stack = '';
      }
      PropTypeError.prototype = Error.prototype;
      function createChainableTypeChecker(validate) {
        if ('production' !== 'production') {
          var manualPropTypeCallCache = {};
          var manualPropTypeWarningCount = 0;
        }
        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
          componentName = componentName || ANONYMOUS;
          propFullName = propFullName || propName;
          if (secret !== ReactPropTypesSecret) {
            if (throwOnDirectAccess) {
              invariant(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
            } else if ('production' !== 'production' && typeof console !== 'undefined') {
              var cacheKey = componentName + ':' + propName;
              if (!manualPropTypeCallCache[cacheKey] && manualPropTypeWarningCount < 3) {
                warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.', propFullName, componentName);
                manualPropTypeCallCache[cacheKey] = true;
                manualPropTypeWarningCount++;
              }
            }
          }
          if (props[propName] == null) {
            if (isRequired) {
              if (props[propName] === null) {
                return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
              }
              return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
            }
            return null;
          } else {
            return validate(props, propName, componentName, location, propFullName);
          }
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
      }
      function createPrimitiveTypeChecker(expectedType) {
        function validate(props, propName, componentName, location, propFullName, secret) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== expectedType) {
            var preciseType = getPreciseType(propValue);
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunction.thatReturnsNull);
      }
      function createArrayOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== 'function') {
            return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
          }
          var propValue = props[propName];
          if (!Array.isArray(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
          }
          for (var i = 0; i < propValue.length; i++) {
            var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
            if (error instanceof Error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!isValidElement(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createInstanceTypeChecker(expectedClass) {
        function validate(props, propName, componentName, location, propFullName) {
          if (!(props[propName] instanceof expectedClass)) {
            var expectedClassName = expectedClass.name || ANONYMOUS;
            var actualClassName = getClassName(props[propName]);
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
          'production' !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
          return emptyFunction.thatReturnsNull;
        }
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          for (var i = 0; i < expectedValues.length; i++) {
            if (is(propValue, expectedValues[i])) {
              return null;
            }
          }
          var valuesString = JSON.stringify(expectedValues);
          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
        }
        return createChainableTypeChecker(validate);
      }
      function createObjectOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== 'function') {
            return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
          }
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== 'object') {
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
          }
          for (var key in propValue) {
            if (propValue.hasOwnProperty(key)) {
              var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
              if (error instanceof Error) {
                return error;
              }
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
          'production' !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
          return emptyFunction.thatReturnsNull;
        }
        for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
          var checker = arrayOfTypeCheckers[i];
          if (typeof checker !== 'function') {
            warning(false, 'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received %s at index %s.', getPostfixForTypeWarning(checker), i);
            return emptyFunction.thatReturnsNull;
          }
        }
        function validate(props, propName, componentName, location, propFullName) {
          for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
            var checker = arrayOfTypeCheckers[i];
            if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
              return null;
            }
          }
          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
        }
        return createChainableTypeChecker(validate);
      }
      function createNodeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          if (!isNode(props[propName])) {
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== 'object') {
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
          }
          for (var key in shapeTypes) {
            var checker = shapeTypes[key];
            if (!checker) {
              continue;
            }
            var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createStrictShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== 'object') {
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
          }
          var allKeys = assign({}, props[propName], shapeTypes);
          for (var key in allKeys) {
            var checker = shapeTypes[key];
            if (!checker) {
              return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
            }
            var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function isNode(propValue) {
        switch (typeof propValue) {
          case 'number':
          case 'string':
          case 'undefined':
            return true;
          case 'boolean':
            return !propValue;
          case 'object':
            if (Array.isArray(propValue)) {
              return propValue.every(isNode);
            }
            if (propValue === null || isValidElement(propValue)) {
              return true;
            }
            var iteratorFn = getIteratorFn(propValue);
            if (iteratorFn) {
              var iterator = iteratorFn.call(propValue);
              var step;
              if (iteratorFn !== propValue.entries) {
                while (!(step = iterator.next()).done) {
                  if (!isNode(step.value)) {
                    return false;
                  }
                }
              } else {
                while (!(step = iterator.next()).done) {
                  var entry = step.value;
                  if (entry) {
                    if (!isNode(entry[1])) {
                      return false;
                    }
                  }
                }
              }
            } else {
              return false;
            }
            return true;
          default:
            return false;
        }
      }
      function isSymbol(propType, propValue) {
        if (propType === 'symbol') {
          return true;
        }
        if (propValue['@@toStringTag'] === 'Symbol') {
          return true;
        }
        if (typeof Symbol === 'function' && propValue instanceof Symbol) {
          return true;
        }
        return false;
      }
      function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) {
          return 'array';
        }
        if (propValue instanceof RegExp) {
          return 'object';
        }
        if (isSymbol(propType, propValue)) {
          return 'symbol';
        }
        return propType;
      }
      function getPreciseType(propValue) {
        if (typeof propValue === 'undefined' || propValue === null) {
          return '' + propValue;
        }
        var propType = getPropType(propValue);
        if (propType === 'object') {
          if (propValue instanceof Date) {
            return 'date';
          } else if (propValue instanceof RegExp) {
            return 'regexp';
          }
        }
        return propType;
      }
      function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch (type) {
          case 'array':
          case 'object':
            return 'an ' + type;
          case 'boolean':
          case 'date':
          case 'regexp':
            return 'a ' + type;
          default:
            return type;
        }
      }
      function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) {
          return ANONYMOUS;
        }
        return propValue.constructor.name;
      }
      ReactPropTypes.checkPropTypes = checkPropTypes;
      ReactPropTypes.PropTypes = ReactPropTypes;
      return ReactPropTypes;
    };
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:prop-types@15.6.0/factory.js', ['npm:prop-types@15.6.0/factoryWithTypeCheckers.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var factory = $__require('npm:prop-types@15.6.0/factoryWithTypeCheckers.js');
  module.exports = function (isValidElement) {
    var throwOnDirectAccess = false;
    return factory(isValidElement, throwOnDirectAccess);
  };
});
System.registerDynamic('npm:react@15.6.1/lib/ReactPropTypes.js', ['npm:react@15.6.1/lib/ReactElement.js', 'npm:prop-types@15.6.0/factory.js'], true, function ($__require, exports, module) {
    /* */
    'use strict';

    var global = this || self,
        GLOBAL = global;
    var _require = $__require('npm:react@15.6.1/lib/ReactElement.js'),
        isValidElement = _require.isValidElement;
    var factory = $__require('npm:prop-types@15.6.0/factory.js');
    module.exports = factory(isValidElement);
});
System.registerDynamic('npm:react@15.6.1/lib/ReactVersion.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  module.exports = '15.6.1';
});
System.registerDynamic('npm:react@15.6.1/lib/ReactBaseClasses.js', ['npm:react@15.6.1/lib/reactProdInvariant.js', 'npm:object-assign@4.1.1.js', 'npm:react@15.6.1/lib/ReactNoopUpdateQueue.js', 'npm:react@15.6.1/lib/canDefineProperty.js', 'npm:fbjs@0.8.16/lib/emptyObject.js', 'npm:fbjs@0.8.16/lib/invariant.js', 'npm:react@15.6.1/lib/lowPriorityWarning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('npm:react@15.6.1/lib/reactProdInvariant.js'),
        _assign = $__require('npm:object-assign@4.1.1.js');
    var ReactNoopUpdateQueue = $__require('npm:react@15.6.1/lib/ReactNoopUpdateQueue.js');
    var canDefineProperty = $__require('npm:react@15.6.1/lib/canDefineProperty.js');
    var emptyObject = $__require('npm:fbjs@0.8.16/lib/emptyObject.js');
    var invariant = $__require('npm:fbjs@0.8.16/lib/invariant.js');
    var lowPriorityWarning = $__require('npm:react@15.6.1/lib/lowPriorityWarning.js');
    function ReactComponent(props, context, updater) {
      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;
    }
    ReactComponent.prototype.isReactComponent = {};
    ReactComponent.prototype.setState = function (partialState, callback) {
      !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? 'production' !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
      this.updater.enqueueSetState(this, partialState);
      if (callback) {
        this.updater.enqueueCallback(this, callback, 'setState');
      }
    };
    ReactComponent.prototype.forceUpdate = function (callback) {
      this.updater.enqueueForceUpdate(this);
      if (callback) {
        this.updater.enqueueCallback(this, callback, 'forceUpdate');
      }
    };
    if ('production' !== 'production') {
      var deprecatedAPIs = {
        isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
        replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
      };
      var defineDeprecationWarning = function (methodName, info) {
        if (canDefineProperty) {
          Object.defineProperty(ReactComponent.prototype, methodName, { get: function () {
              lowPriorityWarning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
              return undefined;
            } });
        }
      };
      for (var fnName in deprecatedAPIs) {
        if (deprecatedAPIs.hasOwnProperty(fnName)) {
          defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
        }
      }
    }
    function ReactPureComponent(props, context, updater) {
      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;
    }
    function ComponentDummy() {}
    ComponentDummy.prototype = ReactComponent.prototype;
    ReactPureComponent.prototype = new ComponentDummy();
    ReactPureComponent.prototype.constructor = ReactPureComponent;
    _assign(ReactPureComponent.prototype, ReactComponent.prototype);
    ReactPureComponent.prototype.isPureReactComponent = true;
    module.exports = {
      Component: ReactComponent,
      PureComponent: ReactPureComponent
    };
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@15.6.1/lib/ReactNoopUpdateQueue.js', ['npm:fbjs@0.8.16/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var warning = $__require('npm:fbjs@0.8.16/lib/warning.js');
    function warnNoop(publicInstance, callerName) {
      if ('production' !== 'production') {
        var constructor = publicInstance.constructor;
        'production' !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
      }
    }
    var ReactNoopUpdateQueue = {
      isMounted: function (publicInstance) {
        return false;
      },
      enqueueCallback: function (publicInstance, callback) {},
      enqueueForceUpdate: function (publicInstance) {
        warnNoop(publicInstance, 'forceUpdate');
      },
      enqueueReplaceState: function (publicInstance, completeState) {
        warnNoop(publicInstance, 'replaceState');
      },
      enqueueSetState: function (publicInstance, partialState) {
        warnNoop(publicInstance, 'setState');
      }
    };
    module.exports = ReactNoopUpdateQueue;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:fbjs@0.8.16/lib/emptyObject.js', ['github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var emptyObject = {};
    if ('production' !== 'production') {
      Object.freeze(emptyObject);
    }
    module.exports = emptyObject;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:create-react-class@15.6.2/factory.js', ['npm:object-assign@4.1.1.js', 'npm:fbjs@0.8.16/lib/emptyObject.js', 'npm:fbjs@0.8.16/lib/invariant.js', 'npm:fbjs@0.8.16/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _assign = $__require('npm:object-assign@4.1.1.js');
    var emptyObject = $__require('npm:fbjs@0.8.16/lib/emptyObject.js');
    var _invariant = $__require('npm:fbjs@0.8.16/lib/invariant.js');
    if ('production' !== 'production') {
      var warning = $__require('npm:fbjs@0.8.16/lib/warning.js');
    }
    var MIXINS_KEY = 'mixins';
    function identity(fn) {
      return fn;
    }
    var ReactPropTypeLocationNames;
    if ('production' !== 'production') {
      ReactPropTypeLocationNames = {
        prop: 'prop',
        context: 'context',
        childContext: 'child context'
      };
    } else {
      ReactPropTypeLocationNames = {};
    }
    function factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {
      var injectedMixins = [];
      var ReactClassInterface = {
        mixins: 'DEFINE_MANY',
        statics: 'DEFINE_MANY',
        propTypes: 'DEFINE_MANY',
        contextTypes: 'DEFINE_MANY',
        childContextTypes: 'DEFINE_MANY',
        getDefaultProps: 'DEFINE_MANY_MERGED',
        getInitialState: 'DEFINE_MANY_MERGED',
        getChildContext: 'DEFINE_MANY_MERGED',
        render: 'DEFINE_ONCE',
        componentWillMount: 'DEFINE_MANY',
        componentDidMount: 'DEFINE_MANY',
        componentWillReceiveProps: 'DEFINE_MANY',
        shouldComponentUpdate: 'DEFINE_ONCE',
        componentWillUpdate: 'DEFINE_MANY',
        componentDidUpdate: 'DEFINE_MANY',
        componentWillUnmount: 'DEFINE_MANY',
        updateComponent: 'OVERRIDE_BASE'
      };
      var RESERVED_SPEC_KEYS = {
        displayName: function (Constructor, displayName) {
          Constructor.displayName = displayName;
        },
        mixins: function (Constructor, mixins) {
          if (mixins) {
            for (var i = 0; i < mixins.length; i++) {
              mixSpecIntoComponent(Constructor, mixins[i]);
            }
          }
        },
        childContextTypes: function (Constructor, childContextTypes) {
          if ('production' !== 'production') {
            validateTypeDef(Constructor, childContextTypes, 'childContext');
          }
          Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);
        },
        contextTypes: function (Constructor, contextTypes) {
          if ('production' !== 'production') {
            validateTypeDef(Constructor, contextTypes, 'context');
          }
          Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);
        },
        getDefaultProps: function (Constructor, getDefaultProps) {
          if (Constructor.getDefaultProps) {
            Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
          } else {
            Constructor.getDefaultProps = getDefaultProps;
          }
        },
        propTypes: function (Constructor, propTypes) {
          if ('production' !== 'production') {
            validateTypeDef(Constructor, propTypes, 'prop');
          }
          Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
        },
        statics: function (Constructor, statics) {
          mixStaticSpecIntoComponent(Constructor, statics);
        },
        autobind: function () {}
      };
      function validateTypeDef(Constructor, typeDef, location) {
        for (var propName in typeDef) {
          if (typeDef.hasOwnProperty(propName)) {
            if ('production' !== 'production') {
              warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName);
            }
          }
        }
      }
      function validateMethodOverride(isAlreadyDefined, name) {
        var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;
        if (ReactClassMixin.hasOwnProperty(name)) {
          _invariant(specPolicy === 'OVERRIDE_BASE', 'ReactClassInterface: You are attempting to override ' + '`%s` from your class specification. Ensure that your method names ' + 'do not overlap with React methods.', name);
        }
        if (isAlreadyDefined) {
          _invariant(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED', 'ReactClassInterface: You are attempting to define ' + '`%s` on your component more than once. This conflict may be due ' + 'to a mixin.', name);
        }
      }
      function mixSpecIntoComponent(Constructor, spec) {
        if (!spec) {
          if ('production' !== 'production') {
            var typeofSpec = typeof spec;
            var isMixinValid = typeofSpec === 'object' && spec !== null;
            if ('production' !== 'production') {
              warning(isMixinValid, "%s: You're attempting to include a mixin that is either null " + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec);
            }
          }
          return;
        }
        _invariant(typeof spec !== 'function', "ReactClass: You're attempting to " + 'use a component class or function as a mixin. Instead, just use a ' + 'regular object.');
        _invariant(!isValidElement(spec), "ReactClass: You're attempting to " + 'use a component as a mixin. Instead, just use a regular object.');
        var proto = Constructor.prototype;
        var autoBindPairs = proto.__reactAutoBindPairs;
        if (spec.hasOwnProperty(MIXINS_KEY)) {
          RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
        }
        for (var name in spec) {
          if (!spec.hasOwnProperty(name)) {
            continue;
          }
          if (name === MIXINS_KEY) {
            continue;
          }
          var property = spec[name];
          var isAlreadyDefined = proto.hasOwnProperty(name);
          validateMethodOverride(isAlreadyDefined, name);
          if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
            RESERVED_SPEC_KEYS[name](Constructor, property);
          } else {
            var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
            var isFunction = typeof property === 'function';
            var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;
            if (shouldAutoBind) {
              autoBindPairs.push(name, property);
              proto[name] = property;
            } else {
              if (isAlreadyDefined) {
                var specPolicy = ReactClassInterface[name];
                _invariant(isReactClassMethod && (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY'), 'ReactClass: Unexpected spec policy %s for key %s ' + 'when mixing in component specs.', specPolicy, name);
                if (specPolicy === 'DEFINE_MANY_MERGED') {
                  proto[name] = createMergedResultFunction(proto[name], property);
                } else if (specPolicy === 'DEFINE_MANY') {
                  proto[name] = createChainedFunction(proto[name], property);
                }
              } else {
                proto[name] = property;
                if ('production' !== 'production') {
                  if (typeof property === 'function' && spec.displayName) {
                    proto[name].displayName = spec.displayName + '_' + name;
                  }
                }
              }
            }
          }
        }
      }
      function mixStaticSpecIntoComponent(Constructor, statics) {
        if (!statics) {
          return;
        }
        for (var name in statics) {
          var property = statics[name];
          if (!statics.hasOwnProperty(name)) {
            continue;
          }
          var isReserved = name in RESERVED_SPEC_KEYS;
          _invariant(!isReserved, 'ReactClass: You are attempting to define a reserved ' + 'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' + 'as an instance property instead; it will still be accessible on the ' + 'constructor.', name);
          var isInherited = name in Constructor;
          _invariant(!isInherited, 'ReactClass: You are attempting to define ' + '`%s` on your component more than once. This conflict may be ' + 'due to a mixin.', name);
          Constructor[name] = property;
        }
      }
      function mergeIntoWithNoDuplicateKeys(one, two) {
        _invariant(one && two && typeof one === 'object' && typeof two === 'object', 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.');
        for (var key in two) {
          if (two.hasOwnProperty(key)) {
            _invariant(one[key] === undefined, 'mergeIntoWithNoDuplicateKeys(): ' + 'Tried to merge two objects with the same key: `%s`. This conflict ' + 'may be due to a mixin; in particular, this may be caused by two ' + 'getInitialState() or getDefaultProps() methods returning objects ' + 'with clashing keys.', key);
            one[key] = two[key];
          }
        }
        return one;
      }
      function createMergedResultFunction(one, two) {
        return function mergedResult() {
          var a = one.apply(this, arguments);
          var b = two.apply(this, arguments);
          if (a == null) {
            return b;
          } else if (b == null) {
            return a;
          }
          var c = {};
          mergeIntoWithNoDuplicateKeys(c, a);
          mergeIntoWithNoDuplicateKeys(c, b);
          return c;
        };
      }
      function createChainedFunction(one, two) {
        return function chainedFunction() {
          one.apply(this, arguments);
          two.apply(this, arguments);
        };
      }
      function bindAutoBindMethod(component, method) {
        var boundMethod = method.bind(component);
        if ('production' !== 'production') {
          boundMethod.__reactBoundContext = component;
          boundMethod.__reactBoundMethod = method;
          boundMethod.__reactBoundArguments = null;
          var componentName = component.constructor.displayName;
          var _bind = boundMethod.bind;
          boundMethod.bind = function (newThis) {
            for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
              args[_key - 1] = arguments[_key];
            }
            if (newThis !== component && newThis !== null) {
              if ('production' !== 'production') {
                warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName);
              }
            } else if (!args.length) {
              if ('production' !== 'production') {
                warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName);
              }
              return boundMethod;
            }
            var reboundMethod = _bind.apply(boundMethod, arguments);
            reboundMethod.__reactBoundContext = component;
            reboundMethod.__reactBoundMethod = method;
            reboundMethod.__reactBoundArguments = args;
            return reboundMethod;
          };
        }
        return boundMethod;
      }
      function bindAutoBindMethods(component) {
        var pairs = component.__reactAutoBindPairs;
        for (var i = 0; i < pairs.length; i += 2) {
          var autoBindKey = pairs[i];
          var method = pairs[i + 1];
          component[autoBindKey] = bindAutoBindMethod(component, method);
        }
      }
      var IsMountedPreMixin = { componentDidMount: function () {
          this.__isMounted = true;
        } };
      var IsMountedPostMixin = { componentWillUnmount: function () {
          this.__isMounted = false;
        } };
      var ReactClassMixin = {
        replaceState: function (newState, callback) {
          this.updater.enqueueReplaceState(this, newState, callback);
        },
        isMounted: function () {
          if ('production' !== 'production') {
            warning(this.__didWarnIsMounted, '%s: isMounted is deprecated. Instead, make sure to clean up ' + 'subscriptions and pending requests in componentWillUnmount to ' + 'prevent memory leaks.', this.constructor && this.constructor.displayName || this.name || 'Component');
            this.__didWarnIsMounted = true;
          }
          return !!this.__isMounted;
        }
      };
      var ReactClassComponent = function () {};
      _assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);
      function createClass(spec) {
        var Constructor = identity(function (props, context, updater) {
          if ('production' !== 'production') {
            warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory');
          }
          if (this.__reactAutoBindPairs.length) {
            bindAutoBindMethods(this);
          }
          this.props = props;
          this.context = context;
          this.refs = emptyObject;
          this.updater = updater || ReactNoopUpdateQueue;
          this.state = null;
          var initialState = this.getInitialState ? this.getInitialState() : null;
          if ('production' !== 'production') {
            if (initialState === undefined && this.getInitialState._isMockFunction) {
              initialState = null;
            }
          }
          _invariant(typeof initialState === 'object' && !Array.isArray(initialState), '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent');
          this.state = initialState;
        });
        Constructor.prototype = new ReactClassComponent();
        Constructor.prototype.constructor = Constructor;
        Constructor.prototype.__reactAutoBindPairs = [];
        injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));
        mixSpecIntoComponent(Constructor, IsMountedPreMixin);
        mixSpecIntoComponent(Constructor, spec);
        mixSpecIntoComponent(Constructor, IsMountedPostMixin);
        if (Constructor.getDefaultProps) {
          Constructor.defaultProps = Constructor.getDefaultProps();
        }
        if ('production' !== 'production') {
          if (Constructor.getDefaultProps) {
            Constructor.getDefaultProps.isReactClassApproved = {};
          }
          if (Constructor.prototype.getInitialState) {
            Constructor.prototype.getInitialState.isReactClassApproved = {};
          }
        }
        _invariant(Constructor.prototype.render, 'createClass(...): Class specification must implement a `render` method.');
        if ('production' !== 'production') {
          warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component');
          warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component');
        }
        for (var methodName in ReactClassInterface) {
          if (!Constructor.prototype[methodName]) {
            Constructor.prototype[methodName] = null;
          }
        }
        return Constructor;
      }
      return createClass;
    }
    module.exports = factory;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@15.6.1/lib/createClass.js', ['npm:react@15.6.1/lib/ReactBaseClasses.js', 'npm:react@15.6.1/lib/ReactElement.js', 'npm:react@15.6.1/lib/ReactNoopUpdateQueue.js', 'npm:create-react-class@15.6.2/factory.js'], true, function ($__require, exports, module) {
    /* */
    'use strict';

    var global = this || self,
        GLOBAL = global;
    var _require = $__require('npm:react@15.6.1/lib/ReactBaseClasses.js'),
        Component = _require.Component;
    var _require2 = $__require('npm:react@15.6.1/lib/ReactElement.js'),
        isValidElement = _require2.isValidElement;
    var ReactNoopUpdateQueue = $__require('npm:react@15.6.1/lib/ReactNoopUpdateQueue.js');
    var factory = $__require('npm:create-react-class@15.6.2/factory.js');
    module.exports = factory(Component, isValidElement, ReactNoopUpdateQueue);
});
System.registerDynamic('npm:react@15.6.1/lib/onlyChild.js', ['npm:react@15.6.1/lib/reactProdInvariant.js', 'npm:react@15.6.1/lib/ReactElement.js', 'npm:fbjs@0.8.16/lib/invariant.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('npm:react@15.6.1/lib/reactProdInvariant.js');
    var ReactElement = $__require('npm:react@15.6.1/lib/ReactElement.js');
    var invariant = $__require('npm:fbjs@0.8.16/lib/invariant.js');
    function onlyChild(children) {
      !ReactElement.isValidElement(children) ? 'production' !== 'production' ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;
      return children;
    }
    module.exports = onlyChild;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:object-assign@4.1.1/index.js', [], true, function ($__require, exports, module) {
	/*
 object-assign
 (c) Sindre Sorhus
 @license MIT
 */

	'use strict';
	/* eslint-disable no-unused-vars */

	var global = this || self,
	    GLOBAL = global;
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;

	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}

		return Object(val);
	}

	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}

			// Detect buggy property enumeration order in older V8 versions.

			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc'); // eslint-disable-line no-new-wrappers
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
				return false;
			}

			return true;
		} catch (err) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}

	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;

		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);

			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}

			if (getOwnPropertySymbols) {
				symbols = getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}

		return to;
	};
});
System.registerDynamic("npm:object-assign@4.1.1.js", ["npm:object-assign@4.1.1/index.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:object-assign@4.1.1/index.js");
});
System.registerDynamic('npm:react@15.6.1/lib/ReactElementSymbol.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2014-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  // The Symbol used to tag the ReactElement type. If there is no native Symbol
  // nor polyfill, then a plain number is used for performance.

  var global = this || self,
      GLOBAL = global;
  var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

  module.exports = REACT_ELEMENT_TYPE;
});
System.registerDynamic('npm:react@15.6.1/lib/ReactElement.js', ['npm:object-assign@4.1.1.js', 'npm:react@15.6.1/lib/ReactCurrentOwner.js', 'npm:fbjs@0.8.16/lib/warning.js', 'npm:react@15.6.1/lib/canDefineProperty.js', 'npm:react@15.6.1/lib/ReactElementSymbol.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _assign = $__require('npm:object-assign@4.1.1.js');
    var ReactCurrentOwner = $__require('npm:react@15.6.1/lib/ReactCurrentOwner.js');
    var warning = $__require('npm:fbjs@0.8.16/lib/warning.js');
    var canDefineProperty = $__require('npm:react@15.6.1/lib/canDefineProperty.js');
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var REACT_ELEMENT_TYPE = $__require('npm:react@15.6.1/lib/ReactElementSymbol.js');
    var RESERVED_PROPS = {
      key: true,
      ref: true,
      __self: true,
      __source: true
    };
    var specialPropKeyWarningShown, specialPropRefWarningShown;
    function hasValidRef(config) {
      if ('production' !== 'production') {
        if (hasOwnProperty.call(config, 'ref')) {
          var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
          if (getter && getter.isReactWarning) {
            return false;
          }
        }
      }
      return config.ref !== undefined;
    }
    function hasValidKey(config) {
      if ('production' !== 'production') {
        if (hasOwnProperty.call(config, 'key')) {
          var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
          if (getter && getter.isReactWarning) {
            return false;
          }
        }
      }
      return config.key !== undefined;
    }
    function defineKeyPropWarningGetter(props, displayName) {
      var warnAboutAccessingKey = function () {
        if (!specialPropKeyWarningShown) {
          specialPropKeyWarningShown = true;
          'production' !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
        }
      };
      warnAboutAccessingKey.isReactWarning = true;
      Object.defineProperty(props, 'key', {
        get: warnAboutAccessingKey,
        configurable: true
      });
    }
    function defineRefPropWarningGetter(props, displayName) {
      var warnAboutAccessingRef = function () {
        if (!specialPropRefWarningShown) {
          specialPropRefWarningShown = true;
          'production' !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
        }
      };
      warnAboutAccessingRef.isReactWarning = true;
      Object.defineProperty(props, 'ref', {
        get: warnAboutAccessingRef,
        configurable: true
      });
    }
    var ReactElement = function (type, key, ref, self, source, owner, props) {
      var element = {
        $$typeof: REACT_ELEMENT_TYPE,
        type: type,
        key: key,
        ref: ref,
        props: props,
        _owner: owner
      };
      if ('production' !== 'production') {
        element._store = {};
        if (canDefineProperty) {
          Object.defineProperty(element._store, 'validated', {
            configurable: false,
            enumerable: false,
            writable: true,
            value: false
          });
          Object.defineProperty(element, '_self', {
            configurable: false,
            enumerable: false,
            writable: false,
            value: self
          });
          Object.defineProperty(element, '_source', {
            configurable: false,
            enumerable: false,
            writable: false,
            value: source
          });
        } else {
          element._store.validated = false;
          element._self = self;
          element._source = source;
        }
        if (Object.freeze) {
          Object.freeze(element.props);
          Object.freeze(element);
        }
      }
      return element;
    };
    ReactElement.createElement = function (type, config, children) {
      var propName;
      var props = {};
      var key = null;
      var ref = null;
      var self = null;
      var source = null;
      if (config != null) {
        if (hasValidRef(config)) {
          ref = config.ref;
        }
        if (hasValidKey(config)) {
          key = '' + config.key;
        }
        self = config.__self === undefined ? null : config.__self;
        source = config.__source === undefined ? null : config.__source;
        for (propName in config) {
          if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
            props[propName] = config[propName];
          }
        }
      }
      var childrenLength = arguments.length - 2;
      if (childrenLength === 1) {
        props.children = children;
      } else if (childrenLength > 1) {
        var childArray = Array(childrenLength);
        for (var i = 0; i < childrenLength; i++) {
          childArray[i] = arguments[i + 2];
        }
        if ('production' !== 'production') {
          if (Object.freeze) {
            Object.freeze(childArray);
          }
        }
        props.children = childArray;
      }
      if (type && type.defaultProps) {
        var defaultProps = type.defaultProps;
        for (propName in defaultProps) {
          if (props[propName] === undefined) {
            props[propName] = defaultProps[propName];
          }
        }
      }
      if ('production' !== 'production') {
        if (key || ref) {
          if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
            var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
            if (key) {
              defineKeyPropWarningGetter(props, displayName);
            }
            if (ref) {
              defineRefPropWarningGetter(props, displayName);
            }
          }
        }
      }
      return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
    };
    ReactElement.createFactory = function (type) {
      var factory = ReactElement.createElement.bind(null, type);
      factory.type = type;
      return factory;
    };
    ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
      var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
      return newElement;
    };
    ReactElement.cloneElement = function (element, config, children) {
      var propName;
      var props = _assign({}, element.props);
      var key = element.key;
      var ref = element.ref;
      var self = element._self;
      var source = element._source;
      var owner = element._owner;
      if (config != null) {
        if (hasValidRef(config)) {
          ref = config.ref;
          owner = ReactCurrentOwner.current;
        }
        if (hasValidKey(config)) {
          key = '' + config.key;
        }
        var defaultProps;
        if (element.type && element.type.defaultProps) {
          defaultProps = element.type.defaultProps;
        }
        for (propName in config) {
          if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
            if (config[propName] === undefined && defaultProps !== undefined) {
              props[propName] = defaultProps[propName];
            } else {
              props[propName] = config[propName];
            }
          }
        }
      }
      var childrenLength = arguments.length - 2;
      if (childrenLength === 1) {
        props.children = children;
      } else if (childrenLength > 1) {
        var childArray = Array(childrenLength);
        for (var i = 0; i < childrenLength; i++) {
          childArray[i] = arguments[i + 2];
        }
        props.children = childArray;
      }
      return ReactElement(element.type, key, ref, self, source, owner, props);
    };
    ReactElement.isValidElement = function (object) {
      return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
    };
    module.exports = ReactElement;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@15.6.1/lib/ReactPropTypeLocationNames.js', ['github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactPropTypeLocationNames = {};
    if ('production' !== 'production') {
      ReactPropTypeLocationNames = {
        prop: 'prop',
        context: 'context',
        childContext: 'child context'
      };
    }
    module.exports = ReactPropTypeLocationNames;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@15.6.1/lib/ReactPropTypesSecret.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

  module.exports = ReactPropTypesSecret;
});
System.registerDynamic('npm:react@15.6.1/lib/reactProdInvariant.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */
  'use strict';

  /**
   * WARNING: DO NOT manually require this module.
   * This is a replacement for `invariant(...)` used by the error code system
   * and will _only_ be required by the corresponding babel pass.
   * It always throws.
   */

  var global = this || self,
      GLOBAL = global;
  function reactProdInvariant(code) {
    var argCount = arguments.length - 1;

    var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

    for (var argIdx = 0; argIdx < argCount; argIdx++) {
      message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
    }

    message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

    var error = new Error(message);
    error.name = 'Invariant Violation';
    error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

    throw error;
  }

  module.exports = reactProdInvariant;
});
System.registerDynamic('npm:react@15.6.1/lib/ReactCurrentOwner.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  /**
   * Keeps track of the current owner.
   *
   * The current owner is the component who should own any components that are
   * currently being constructed.
   */

  var global = this || self,
      GLOBAL = global;
  var ReactCurrentOwner = {
    /**
     * @internal
     * @type {ReactComponent}
     */
    current: null
  };

  module.exports = ReactCurrentOwner;
});
System.registerDynamic('npm:fbjs@0.8.16/lib/invariant.js', ['github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var validateFormat = function validateFormat(format) {};
    if ('production' !== 'production') {
      validateFormat = function validateFormat(format) {
        if (format === undefined) {
          throw new Error('invariant requires an error message argument');
        }
      };
    }
    function invariant(condition, format, a, b, c, d, e, f) {
      validateFormat(format);
      if (!condition) {
        var error;
        if (format === undefined) {
          error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
        } else {
          var args = [a, b, c, d, e, f];
          var argIndex = 0;
          error = new Error(format.replace(/%s/g, function () {
            return args[argIndex++];
          }));
          error.name = 'Invariant Violation';
        }
        error.framesToPop = 1;
        throw error;
      }
    }
    module.exports = invariant;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@15.6.1/lib/ReactComponentTreeHook.js', ['npm:react@15.6.1/lib/reactProdInvariant.js', 'npm:react@15.6.1/lib/ReactCurrentOwner.js', 'npm:fbjs@0.8.16/lib/invariant.js', 'npm:fbjs@0.8.16/lib/warning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('npm:react@15.6.1/lib/reactProdInvariant.js');
    var ReactCurrentOwner = $__require('npm:react@15.6.1/lib/ReactCurrentOwner.js');
    var invariant = $__require('npm:fbjs@0.8.16/lib/invariant.js');
    var warning = $__require('npm:fbjs@0.8.16/lib/warning.js');
    function isNative(fn) {
      var funcToString = Function.prototype.toString;
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
      try {
        var source = funcToString.call(fn);
        return reIsNative.test(source);
      } catch (err) {
        return false;
      }
    }
    var canUseCollections = typeof Array.from === 'function' && typeof Map === 'function' && isNative(Map) && Map.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) && typeof Set === 'function' && isNative(Set) && Set.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);
    var setItem;
    var getItem;
    var removeItem;
    var getItemIDs;
    var addRoot;
    var removeRoot;
    var getRootIDs;
    if (canUseCollections) {
      var itemMap = new Map();
      var rootIDSet = new Set();
      setItem = function (id, item) {
        itemMap.set(id, item);
      };
      getItem = function (id) {
        return itemMap.get(id);
      };
      removeItem = function (id) {
        itemMap['delete'](id);
      };
      getItemIDs = function () {
        return Array.from(itemMap.keys());
      };
      addRoot = function (id) {
        rootIDSet.add(id);
      };
      removeRoot = function (id) {
        rootIDSet['delete'](id);
      };
      getRootIDs = function () {
        return Array.from(rootIDSet.keys());
      };
    } else {
      var itemByKey = {};
      var rootByKey = {};
      var getKeyFromID = function (id) {
        return '.' + id;
      };
      var getIDFromKey = function (key) {
        return parseInt(key.substr(1), 10);
      };
      setItem = function (id, item) {
        var key = getKeyFromID(id);
        itemByKey[key] = item;
      };
      getItem = function (id) {
        var key = getKeyFromID(id);
        return itemByKey[key];
      };
      removeItem = function (id) {
        var key = getKeyFromID(id);
        delete itemByKey[key];
      };
      getItemIDs = function () {
        return Object.keys(itemByKey).map(getIDFromKey);
      };
      addRoot = function (id) {
        var key = getKeyFromID(id);
        rootByKey[key] = true;
      };
      removeRoot = function (id) {
        var key = getKeyFromID(id);
        delete rootByKey[key];
      };
      getRootIDs = function () {
        return Object.keys(rootByKey).map(getIDFromKey);
      };
    }
    var unmountedIDs = [];
    function purgeDeep(id) {
      var item = getItem(id);
      if (item) {
        var childIDs = item.childIDs;
        removeItem(id);
        childIDs.forEach(purgeDeep);
      }
    }
    function describeComponentFrame(name, source, ownerName) {
      return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
    }
    function getDisplayName(element) {
      if (element == null) {
        return '#empty';
      } else if (typeof element === 'string' || typeof element === 'number') {
        return '#text';
      } else if (typeof element.type === 'string') {
        return element.type;
      } else {
        return element.type.displayName || element.type.name || 'Unknown';
      }
    }
    function describeID(id) {
      var name = ReactComponentTreeHook.getDisplayName(id);
      var element = ReactComponentTreeHook.getElement(id);
      var ownerID = ReactComponentTreeHook.getOwnerID(id);
      var ownerName;
      if (ownerID) {
        ownerName = ReactComponentTreeHook.getDisplayName(ownerID);
      }
      'production' !== 'production' ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
      return describeComponentFrame(name, element && element._source, ownerName);
    }
    var ReactComponentTreeHook = {
      onSetChildren: function (id, nextChildIDs) {
        var item = getItem(id);
        !item ? 'production' !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
        item.childIDs = nextChildIDs;
        for (var i = 0; i < nextChildIDs.length; i++) {
          var nextChildID = nextChildIDs[i];
          var nextChild = getItem(nextChildID);
          !nextChild ? 'production' !== 'production' ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;
          !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ? 'production' !== 'production' ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;
          !nextChild.isMounted ? 'production' !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
          if (nextChild.parentID == null) {
            nextChild.parentID = id;
          }
          !(nextChild.parentID === id) ? 'production' !== 'production' ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;
        }
      },
      onBeforeMountComponent: function (id, element, parentID) {
        var item = {
          element: element,
          parentID: parentID,
          text: null,
          childIDs: [],
          isMounted: false,
          updateCount: 0
        };
        setItem(id, item);
      },
      onBeforeUpdateComponent: function (id, element) {
        var item = getItem(id);
        if (!item || !item.isMounted) {
          return;
        }
        item.element = element;
      },
      onMountComponent: function (id) {
        var item = getItem(id);
        !item ? 'production' !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
        item.isMounted = true;
        var isRoot = item.parentID === 0;
        if (isRoot) {
          addRoot(id);
        }
      },
      onUpdateComponent: function (id) {
        var item = getItem(id);
        if (!item || !item.isMounted) {
          return;
        }
        item.updateCount++;
      },
      onUnmountComponent: function (id) {
        var item = getItem(id);
        if (item) {
          item.isMounted = false;
          var isRoot = item.parentID === 0;
          if (isRoot) {
            removeRoot(id);
          }
        }
        unmountedIDs.push(id);
      },
      purgeUnmountedComponents: function () {
        if (ReactComponentTreeHook._preventPurging) {
          return;
        }
        for (var i = 0; i < unmountedIDs.length; i++) {
          var id = unmountedIDs[i];
          purgeDeep(id);
        }
        unmountedIDs.length = 0;
      },
      isMounted: function (id) {
        var item = getItem(id);
        return item ? item.isMounted : false;
      },
      getCurrentStackAddendum: function (topElement) {
        var info = '';
        if (topElement) {
          var name = getDisplayName(topElement);
          var owner = topElement._owner;
          info += describeComponentFrame(name, topElement._source, owner && owner.getName());
        }
        var currentOwner = ReactCurrentOwner.current;
        var id = currentOwner && currentOwner._debugID;
        info += ReactComponentTreeHook.getStackAddendumByID(id);
        return info;
      },
      getStackAddendumByID: function (id) {
        var info = '';
        while (id) {
          info += describeID(id);
          id = ReactComponentTreeHook.getParentID(id);
        }
        return info;
      },
      getChildIDs: function (id) {
        var item = getItem(id);
        return item ? item.childIDs : [];
      },
      getDisplayName: function (id) {
        var element = ReactComponentTreeHook.getElement(id);
        if (!element) {
          return null;
        }
        return getDisplayName(element);
      },
      getElement: function (id) {
        var item = getItem(id);
        return item ? item.element : null;
      },
      getOwnerID: function (id) {
        var element = ReactComponentTreeHook.getElement(id);
        if (!element || !element._owner) {
          return null;
        }
        return element._owner._debugID;
      },
      getParentID: function (id) {
        var item = getItem(id);
        return item ? item.parentID : null;
      },
      getSource: function (id) {
        var item = getItem(id);
        var element = item ? item.element : null;
        var source = element != null ? element._source : null;
        return source;
      },
      getText: function (id) {
        var element = ReactComponentTreeHook.getElement(id);
        if (typeof element === 'string') {
          return element;
        } else if (typeof element === 'number') {
          return '' + element;
        } else {
          return null;
        }
      },
      getUpdateCount: function (id) {
        var item = getItem(id);
        return item ? item.updateCount : 0;
      },
      getRootIDs: getRootIDs,
      getRegisteredIDs: getItemIDs,
      pushNonStandardWarningStack: function (isCreatingElement, currentSource) {
        if (typeof console.reactStack !== 'function') {
          return;
        }
        var stack = [];
        var currentOwner = ReactCurrentOwner.current;
        var id = currentOwner && currentOwner._debugID;
        try {
          if (isCreatingElement) {
            stack.push({
              name: id ? ReactComponentTreeHook.getDisplayName(id) : null,
              fileName: currentSource ? currentSource.fileName : null,
              lineNumber: currentSource ? currentSource.lineNumber : null
            });
          }
          while (id) {
            var element = ReactComponentTreeHook.getElement(id);
            var parentID = ReactComponentTreeHook.getParentID(id);
            var ownerID = ReactComponentTreeHook.getOwnerID(id);
            var ownerName = ownerID ? ReactComponentTreeHook.getDisplayName(ownerID) : null;
            var source = element && element._source;
            stack.push({
              name: ownerName,
              fileName: source ? source.fileName : null,
              lineNumber: source ? source.lineNumber : null
            });
            id = parentID;
          }
        } catch (err) {}
        console.reactStack(stack);
      },
      popNonStandardWarningStack: function () {
        if (typeof console.reactStackEnd !== 'function') {
          return;
        }
        console.reactStackEnd();
      }
    };
    module.exports = ReactComponentTreeHook;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@15.6.1/lib/checkReactTypeSpec.js', ['npm:react@15.6.1/lib/reactProdInvariant.js', 'npm:react@15.6.1/lib/ReactPropTypeLocationNames.js', 'npm:react@15.6.1/lib/ReactPropTypesSecret.js', 'npm:fbjs@0.8.16/lib/invariant.js', 'npm:fbjs@0.8.16/lib/warning.js', 'npm:react@15.6.1/lib/ReactComponentTreeHook.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('npm:react@15.6.1/lib/reactProdInvariant.js');
    var ReactPropTypeLocationNames = $__require('npm:react@15.6.1/lib/ReactPropTypeLocationNames.js');
    var ReactPropTypesSecret = $__require('npm:react@15.6.1/lib/ReactPropTypesSecret.js');
    var invariant = $__require('npm:fbjs@0.8.16/lib/invariant.js');
    var warning = $__require('npm:fbjs@0.8.16/lib/warning.js');
    var ReactComponentTreeHook;
    if (typeof process !== 'undefined' && process.env && 'production' === 'test') {
      ReactComponentTreeHook = $__require('npm:react@15.6.1/lib/ReactComponentTreeHook.js');
    }
    var loggedTypeFailures = {};
    function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
      for (var typeSpecName in typeSpecs) {
        if (typeSpecs.hasOwnProperty(typeSpecName)) {
          var error;
          try {
            !(typeof typeSpecs[typeSpecName] === 'function') ? 'production' !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
            error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
          } catch (ex) {
            error = ex;
          }
          'production' !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
          if (error instanceof Error && !(error.message in loggedTypeFailures)) {
            loggedTypeFailures[error.message] = true;
            var componentStackInfo = '';
            if ('production' !== 'production') {
              if (!ReactComponentTreeHook) {
                ReactComponentTreeHook = $__require('npm:react@15.6.1/lib/ReactComponentTreeHook.js');
              }
              if (debugID !== null) {
                componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
              } else if (element !== null) {
                componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
              }
            }
            'production' !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
          }
        }
      }
    }
    module.exports = checkReactTypeSpec;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@15.6.1/lib/canDefineProperty.js', ['github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var canDefineProperty = false;
    if ('production' !== 'production') {
      try {
        Object.defineProperty({}, 'x', { get: function () {} });
        canDefineProperty = true;
      } catch (x) {}
    }
    module.exports = canDefineProperty;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@15.6.1/lib/getIteratorFn.js', [], true, function ($__require, exports, module) {
  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  /* global Symbol */

  var global = this || self,
      GLOBAL = global;
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  module.exports = getIteratorFn;
});
System.registerDynamic("npm:fbjs@0.8.16/lib/emptyFunction.js", [], true, function ($__require, exports, module) {
  /* */
  "use strict";

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * 
   */

  var global = this || self,
      GLOBAL = global;
  function makeEmptyFunction(arg) {
    return function () {
      return arg;
    };
  }

  /**
   * This function accepts and discards inputs; it has no side effects. This is
   * primarily useful idiomatically for overridable function endpoints which
   * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
   */
  var emptyFunction = function emptyFunction() {};

  emptyFunction.thatReturns = makeEmptyFunction;
  emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
  emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
  emptyFunction.thatReturnsNull = makeEmptyFunction(null);
  emptyFunction.thatReturnsThis = function () {
    return this;
  };
  emptyFunction.thatReturnsArgument = function (arg) {
    return arg;
  };

  module.exports = emptyFunction;
});
System.registerDynamic('npm:fbjs@0.8.16/lib/warning.js', ['npm:fbjs@0.8.16/lib/emptyFunction.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var emptyFunction = $__require('npm:fbjs@0.8.16/lib/emptyFunction.js');
    var warning = emptyFunction;
    if ('production' !== 'production') {
      var printWarning = function printWarning(format) {
        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }
        var argIndex = 0;
        var message = 'Warning: ' + format.replace(/%s/g, function () {
          return args[argIndex++];
        });
        if (typeof console !== 'undefined') {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {}
      };
      warning = function warning(condition, format) {
        if (format === undefined) {
          throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
        }
        if (format.indexOf('Failed Composite propType: ') === 0) {
          return;
        }
        if (!condition) {
          for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
            args[_key2 - 2] = arguments[_key2];
          }
          printWarning.apply(undefined, [format].concat(args));
        }
      };
    }
    module.exports = warning;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@15.6.1/lib/lowPriorityWarning.js', ['github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var lowPriorityWarning = function () {};
    if ('production' !== 'production') {
      var printWarning = function (format) {
        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }
        var argIndex = 0;
        var message = 'Warning: ' + format.replace(/%s/g, function () {
          return args[argIndex++];
        });
        if (typeof console !== 'undefined') {
          console.warn(message);
        }
        try {
          throw new Error(message);
        } catch (x) {}
      };
      lowPriorityWarning = function (condition, format) {
        if (format === undefined) {
          throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
        }
        if (!condition) {
          for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
            args[_key2 - 2] = arguments[_key2];
          }
          printWarning.apply(undefined, [format].concat(args));
        }
      };
    }
    module.exports = lowPriorityWarning;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@15.6.1/lib/ReactElementValidator.js', ['npm:react@15.6.1/lib/ReactCurrentOwner.js', 'npm:react@15.6.1/lib/ReactComponentTreeHook.js', 'npm:react@15.6.1/lib/ReactElement.js', 'npm:react@15.6.1/lib/checkReactTypeSpec.js', 'npm:react@15.6.1/lib/canDefineProperty.js', 'npm:react@15.6.1/lib/getIteratorFn.js', 'npm:fbjs@0.8.16/lib/warning.js', 'npm:react@15.6.1/lib/lowPriorityWarning.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactCurrentOwner = $__require('npm:react@15.6.1/lib/ReactCurrentOwner.js');
    var ReactComponentTreeHook = $__require('npm:react@15.6.1/lib/ReactComponentTreeHook.js');
    var ReactElement = $__require('npm:react@15.6.1/lib/ReactElement.js');
    var checkReactTypeSpec = $__require('npm:react@15.6.1/lib/checkReactTypeSpec.js');
    var canDefineProperty = $__require('npm:react@15.6.1/lib/canDefineProperty.js');
    var getIteratorFn = $__require('npm:react@15.6.1/lib/getIteratorFn.js');
    var warning = $__require('npm:fbjs@0.8.16/lib/warning.js');
    var lowPriorityWarning = $__require('npm:react@15.6.1/lib/lowPriorityWarning.js');
    function getDeclarationErrorAddendum() {
      if (ReactCurrentOwner.current) {
        var name = ReactCurrentOwner.current.getName();
        if (name) {
          return ' Check the render method of `' + name + '`.';
        }
      }
      return '';
    }
    function getSourceInfoErrorAddendum(elementProps) {
      if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {
        var source = elementProps.__source;
        var fileName = source.fileName.replace(/^.*[\\\/]/, '');
        var lineNumber = source.lineNumber;
        return ' Check your code at ' + fileName + ':' + lineNumber + '.';
      }
      return '';
    }
    var ownerHasKeyUseWarning = {};
    function getCurrentComponentErrorInfo(parentType) {
      var info = getDeclarationErrorAddendum();
      if (!info) {
        var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
        if (parentName) {
          info = ' Check the top-level render call using <' + parentName + '>.';
        }
      }
      return info;
    }
    function validateExplicitKey(element, parentType) {
      if (!element._store || element._store.validated || element.key != null) {
        return;
      }
      element._store.validated = true;
      var memoizer = ownerHasKeyUseWarning.uniqueKey || (ownerHasKeyUseWarning.uniqueKey = {});
      var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
      if (memoizer[currentComponentErrorInfo]) {
        return;
      }
      memoizer[currentComponentErrorInfo] = true;
      var childOwner = '';
      if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
        childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
      }
      'production' !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, ReactComponentTreeHook.getCurrentStackAddendum(element)) : void 0;
    }
    function validateChildKeys(node, parentType) {
      if (typeof node !== 'object') {
        return;
      }
      if (Array.isArray(node)) {
        for (var i = 0; i < node.length; i++) {
          var child = node[i];
          if (ReactElement.isValidElement(child)) {
            validateExplicitKey(child, parentType);
          }
        }
      } else if (ReactElement.isValidElement(node)) {
        if (node._store) {
          node._store.validated = true;
        }
      } else if (node) {
        var iteratorFn = getIteratorFn(node);
        if (iteratorFn) {
          if (iteratorFn !== node.entries) {
            var iterator = iteratorFn.call(node);
            var step;
            while (!(step = iterator.next()).done) {
              if (ReactElement.isValidElement(step.value)) {
                validateExplicitKey(step.value, parentType);
              }
            }
          }
        }
      }
    }
    function validatePropTypes(element) {
      var componentClass = element.type;
      if (typeof componentClass !== 'function') {
        return;
      }
      var name = componentClass.displayName || componentClass.name;
      if (componentClass.propTypes) {
        checkReactTypeSpec(componentClass.propTypes, element.props, 'prop', name, element, null);
      }
      if (typeof componentClass.getDefaultProps === 'function') {
        'production' !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
      }
    }
    var ReactElementValidator = {
      createElement: function (type, props, children) {
        var validType = typeof type === 'string' || typeof type === 'function';
        if (!validType) {
          if (typeof type !== 'function' && typeof type !== 'string') {
            var info = '';
            if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
              info += ' You likely forgot to export your component from the file ' + "it's defined in.";
            }
            var sourceInfo = getSourceInfoErrorAddendum(props);
            if (sourceInfo) {
              info += sourceInfo;
            } else {
              info += getDeclarationErrorAddendum();
            }
            info += ReactComponentTreeHook.getCurrentStackAddendum();
            var currentSource = props !== null && props !== undefined && props.__source !== undefined ? props.__source : null;
            ReactComponentTreeHook.pushNonStandardWarningStack(true, currentSource);
            'production' !== 'production' ? warning(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', type == null ? type : typeof type, info) : void 0;
            ReactComponentTreeHook.popNonStandardWarningStack();
          }
        }
        var element = ReactElement.createElement.apply(this, arguments);
        if (element == null) {
          return element;
        }
        if (validType) {
          for (var i = 2; i < arguments.length; i++) {
            validateChildKeys(arguments[i], type);
          }
        }
        validatePropTypes(element);
        return element;
      },
      createFactory: function (type) {
        var validatedFactory = ReactElementValidator.createElement.bind(null, type);
        validatedFactory.type = type;
        if ('production' !== 'production') {
          if (canDefineProperty) {
            Object.defineProperty(validatedFactory, 'type', {
              enumerable: false,
              get: function () {
                lowPriorityWarning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');
                Object.defineProperty(this, 'type', { value: type });
                return type;
              }
            });
          }
        }
        return validatedFactory;
      },
      cloneElement: function (element, props, children) {
        var newElement = ReactElement.cloneElement.apply(this, arguments);
        for (var i = 2; i < arguments.length; i++) {
          validateChildKeys(arguments[i], newElement.type);
        }
        validatePropTypes(newElement);
        return newElement;
      }
    };
    module.exports = ReactElementValidator;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:process@0.11.10/browser.js', [], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    // shim for using process in browser
    var process = module.exports = {};

    // cached from whatever global is present so that test runners that stub it
    // don't break things.  But we need to wrap it in a try catch in case it is
    // wrapped in strict mode code which doesn't define any globals.  It's inside a
    // function because try/catches deoptimize in certain engines.

    var cachedSetTimeout;
    var cachedClearTimeout;

    function defaultSetTimout() {
        throw new Error('setTimeout has not been defined');
    }
    function defaultClearTimeout() {
        throw new Error('clearTimeout has not been defined');
    }
    (function () {
        try {
            if (typeof setTimeout === 'function') {
                cachedSetTimeout = setTimeout;
            } else {
                cachedSetTimeout = defaultSetTimout;
            }
        } catch (e) {
            cachedSetTimeout = defaultSetTimout;
        }
        try {
            if (typeof clearTimeout === 'function') {
                cachedClearTimeout = clearTimeout;
            } else {
                cachedClearTimeout = defaultClearTimeout;
            }
        } catch (e) {
            cachedClearTimeout = defaultClearTimeout;
        }
    })();
    function runTimeout(fun) {
        if (cachedSetTimeout === setTimeout) {
            //normal enviroments in sane situations
            return setTimeout(fun, 0);
        }
        // if setTimeout wasn't available but was latter defined
        if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
            cachedSetTimeout = setTimeout;
            return setTimeout(fun, 0);
        }
        try {
            // when when somebody has screwed with setTimeout but no I.E. maddness
            return cachedSetTimeout(fun, 0);
        } catch (e) {
            try {
                // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
                return cachedSetTimeout.call(null, fun, 0);
            } catch (e) {
                // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
                return cachedSetTimeout.call(this, fun, 0);
            }
        }
    }
    function runClearTimeout(marker) {
        if (cachedClearTimeout === clearTimeout) {
            //normal enviroments in sane situations
            return clearTimeout(marker);
        }
        // if clearTimeout wasn't available but was latter defined
        if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
            cachedClearTimeout = clearTimeout;
            return clearTimeout(marker);
        }
        try {
            // when when somebody has screwed with setTimeout but no I.E. maddness
            return cachedClearTimeout(marker);
        } catch (e) {
            try {
                // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
                return cachedClearTimeout.call(null, marker);
            } catch (e) {
                // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
                // Some versions of I.E. have different rules for clearTimeout vs setTimeout
                return cachedClearTimeout.call(this, marker);
            }
        }
    }
    var queue = [];
    var draining = false;
    var currentQueue;
    var queueIndex = -1;

    function cleanUpNextTick() {
        if (!draining || !currentQueue) {
            return;
        }
        draining = false;
        if (currentQueue.length) {
            queue = currentQueue.concat(queue);
        } else {
            queueIndex = -1;
        }
        if (queue.length) {
            drainQueue();
        }
    }

    function drainQueue() {
        if (draining) {
            return;
        }
        var timeout = runTimeout(cleanUpNextTick);
        draining = true;

        var len = queue.length;
        while (len) {
            currentQueue = queue;
            queue = [];
            while (++queueIndex < len) {
                if (currentQueue) {
                    currentQueue[queueIndex].run();
                }
            }
            queueIndex = -1;
            len = queue.length;
        }
        currentQueue = null;
        draining = false;
        runClearTimeout(timeout);
    }

    process.nextTick = function (fun) {
        var args = new Array(arguments.length - 1);
        if (arguments.length > 1) {
            for (var i = 1; i < arguments.length; i++) {
                args[i - 1] = arguments[i];
            }
        }
        queue.push(new Item(fun, args));
        if (queue.length === 1 && !draining) {
            runTimeout(drainQueue);
        }
    };

    // v8 likes predictible objects
    function Item(fun, array) {
        this.fun = fun;
        this.array = array;
    }
    Item.prototype.run = function () {
        this.fun.apply(null, this.array);
    };
    process.title = 'browser';
    process.browser = true;
    process.env = {};
    process.argv = [];
    process.version = ''; // empty string to avoid regexp issues
    process.versions = {};

    function noop() {}

    process.on = noop;
    process.addListener = noop;
    process.once = noop;
    process.off = noop;
    process.removeListener = noop;
    process.removeAllListeners = noop;
    process.emit = noop;
    process.prependListener = noop;
    process.prependOnceListener = noop;

    process.listeners = function (name) {
        return [];
    };

    process.binding = function (name) {
        throw new Error('process.binding is not supported');
    };

    process.cwd = function () {
        return '/';
    };
    process.chdir = function (dir) {
        throw new Error('process.chdir is not supported');
    };
    process.umask = function () {
        return 0;
    };
});
System.registerDynamic("npm:process@0.11.10.js", ["npm:process@0.11.10/browser.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:process@0.11.10/browser.js");
});
System.registerDynamic('github:jspm/nodelibs-process@0.1.2/index.js', ['npm:process@0.11.10.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = System._nodeRequire ? process : $__require('npm:process@0.11.10.js');
});
System.registerDynamic("github:jspm/nodelibs-process@0.1.2.js", ["github:jspm/nodelibs-process@0.1.2/index.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("github:jspm/nodelibs-process@0.1.2/index.js");
});
System.registerDynamic('npm:react@15.6.1/lib/React.js', ['npm:object-assign@4.1.1.js', 'npm:react@15.6.1/lib/ReactBaseClasses.js', 'npm:react@15.6.1/lib/ReactChildren.js', 'npm:react@15.6.1/lib/ReactDOMFactories.js', 'npm:react@15.6.1/lib/ReactElement.js', 'npm:react@15.6.1/lib/ReactPropTypes.js', 'npm:react@15.6.1/lib/ReactVersion.js', 'npm:react@15.6.1/lib/createClass.js', 'npm:react@15.6.1/lib/onlyChild.js', 'npm:react@15.6.1/lib/lowPriorityWarning.js', 'npm:react@15.6.1/lib/canDefineProperty.js', 'npm:react@15.6.1/lib/ReactElementValidator.js', 'github:jspm/nodelibs-process@0.1.2.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _assign = $__require('npm:object-assign@4.1.1.js');
    var ReactBaseClasses = $__require('npm:react@15.6.1/lib/ReactBaseClasses.js');
    var ReactChildren = $__require('npm:react@15.6.1/lib/ReactChildren.js');
    var ReactDOMFactories = $__require('npm:react@15.6.1/lib/ReactDOMFactories.js');
    var ReactElement = $__require('npm:react@15.6.1/lib/ReactElement.js');
    var ReactPropTypes = $__require('npm:react@15.6.1/lib/ReactPropTypes.js');
    var ReactVersion = $__require('npm:react@15.6.1/lib/ReactVersion.js');
    var createReactClass = $__require('npm:react@15.6.1/lib/createClass.js');
    var onlyChild = $__require('npm:react@15.6.1/lib/onlyChild.js');
    var createElement = ReactElement.createElement;
    var createFactory = ReactElement.createFactory;
    var cloneElement = ReactElement.cloneElement;
    if ('production' !== 'production') {
      var lowPriorityWarning = $__require('npm:react@15.6.1/lib/lowPriorityWarning.js');
      var canDefineProperty = $__require('npm:react@15.6.1/lib/canDefineProperty.js');
      var ReactElementValidator = $__require('npm:react@15.6.1/lib/ReactElementValidator.js');
      var didWarnPropTypesDeprecated = false;
      createElement = ReactElementValidator.createElement;
      createFactory = ReactElementValidator.createFactory;
      cloneElement = ReactElementValidator.cloneElement;
    }
    var __spread = _assign;
    var createMixin = function (mixin) {
      return mixin;
    };
    if ('production' !== 'production') {
      var warnedForSpread = false;
      var warnedForCreateMixin = false;
      __spread = function () {
        lowPriorityWarning(warnedForSpread, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.');
        warnedForSpread = true;
        return _assign.apply(null, arguments);
      };
      createMixin = function (mixin) {
        lowPriorityWarning(warnedForCreateMixin, 'React.createMixin is deprecated and should not be used. ' + 'In React v16.0, it will be removed. ' + 'You can use this mixin directly instead. ' + 'See https://fb.me/createmixin-was-never-implemented for more info.');
        warnedForCreateMixin = true;
        return mixin;
      };
    }
    var React = {
      Children: {
        map: ReactChildren.map,
        forEach: ReactChildren.forEach,
        count: ReactChildren.count,
        toArray: ReactChildren.toArray,
        only: onlyChild
      },
      Component: ReactBaseClasses.Component,
      PureComponent: ReactBaseClasses.PureComponent,
      createElement: createElement,
      cloneElement: cloneElement,
      isValidElement: ReactElement.isValidElement,
      PropTypes: ReactPropTypes,
      createClass: createReactClass,
      createFactory: createFactory,
      createMixin: createMixin,
      DOM: ReactDOMFactories,
      version: ReactVersion,
      __spread: __spread
    };
    if ('production' !== 'production') {
      var warnedForCreateClass = false;
      if (canDefineProperty) {
        Object.defineProperty(React, 'PropTypes', { get: function () {
            lowPriorityWarning(didWarnPropTypesDeprecated, 'Accessing PropTypes via the main React package is deprecated,' + ' and will be removed in  React v16.0.' + ' Use the latest available v15.* prop-types package from npm instead.' + ' For info on usage, compatibility, migration and more, see ' + 'https://fb.me/prop-types-docs');
            didWarnPropTypesDeprecated = true;
            return ReactPropTypes;
          } });
        Object.defineProperty(React, 'createClass', { get: function () {
            lowPriorityWarning(warnedForCreateClass, 'Accessing createClass via the main React package is deprecated,' + ' and will be removed in React v16.0.' + " Use a plain JavaScript class instead. If you're not yet " + 'ready to migrate, create-react-class v15.* is available ' + 'on npm as a temporary, drop-in replacement. ' + 'For more info see https://fb.me/react-create-class');
            warnedForCreateClass = true;
            return createReactClass;
          } });
      }
      React.DOM = {};
      var warnedForFactories = false;
      Object.keys(ReactDOMFactories).forEach(function (factory) {
        React.DOM[factory] = function () {
          if (!warnedForFactories) {
            lowPriorityWarning(false, 'Accessing factories like React.DOM.%s has been deprecated ' + 'and will be removed in v16.0+. Use the ' + 'react-dom-factories package instead. ' + ' Version 1.0 provides a drop-in replacement.' + ' For more info, see https://fb.me/react-dom-factories', factory);
            warnedForFactories = true;
          }
          return ReactDOMFactories[factory].apply(ReactDOMFactories, arguments);
        };
      });
    }
    module.exports = React;
  })($__require('github:jspm/nodelibs-process@0.1.2.js'));
});
System.registerDynamic('npm:react@15.6.1/react.js', ['npm:react@15.6.1/lib/React.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  module.exports = $__require('npm:react@15.6.1/lib/React.js');
});
System.registerDynamic("npm:react@15.6.1.js", ["npm:react@15.6.1/react.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:react@15.6.1/react.js");
});
System.registerDynamic("uapp/components/Session.js", ["npm:react@15.6.1.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@15.6.1.js");
    const css = {
        body: {
            padding: '0 10px'
        },
        description: {
            opacity: 0.7
        },
        buttons: {
            marginTop: '15px'
        },
        button: {
            margin: '5px',
            width: '160px'
        }
    };
    class Session extends React.Component {
        render() {
            return React.createElement("div", null, React.createElement("div", { className: "pt-non-ideal-state", style: css.body }, React.createElement("h4", { className: "pt-non-ideal-state-title" }, "Pritunl Zero User Console"), React.createElement("span", { style: css.description }, "To validate an SSH key install the client and run \"pritunl-ssh\"")), React.createElement("div", { className: "layout horizontal center-justified wrap", style: css.buttons }, React.createElement("a", { className: "pt-button pt-large pt-intent-primary pt-icon-download", style: css.button, href: "https://docs.pritunl.com" }, "Install Client"), React.createElement("a", { className: "pt-button pt-large pt-intent-danger pt-icon-delete", style: css.button, href: "/logout" }, "Logout")));
        }
    }
    exports.default = Session;
    
});
System.registerDynamic("uapp/components/Validate.js", ["npm:react@15.6.1.js", "npm:superagent@3.8.1.js", "uapp/Csrf.js", "uapp/Alert.js", "uapp/components/Session.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@15.6.1.js");
    const SuperAgent = $__require("npm:superagent@3.8.1.js");
    const Csrf = $__require("uapp/Csrf.js");
    const Alert = $__require("uapp/Alert.js");
    const Session_1 = $__require("uapp/components/Session.js");
    const css = {
        body: {
            padding: '0 10px'
        },
        description: {
            opacity: 0.7
        },
        buttons: {
            marginTop: '15px'
        },
        button: {
            margin: '5px',
            width: '116px'
        }
    };
    class Validate extends React.Component {
        constructor(props, context) {
            super(props, context);
            this.state = {
                disabled: false,
                answered: false
            };
        }
        render() {
            if (this.state.answered) {
                return React.createElement(Session_1.default, null);
            }
            return React.createElement("div", null, React.createElement("div", { className: "pt-non-ideal-state", style: css.body }, React.createElement("div", { className: "pt-non-ideal-state-visual pt-non-ideal-state-icon" }, React.createElement("span", { className: "pt-icon pt-icon-endorsed" })), React.createElement("h4", { className: "pt-non-ideal-state-title" }, "Validate SSH Key"), React.createElement("span", { style: css.description }, "If you did not initiate this validation deny the request and report the incident to an administrator")), React.createElement("div", { className: "layout horizontal center-justified", style: css.buttons }, React.createElement("button", { className: "pt-button pt-large pt-intent-success pt-icon-add", style: css.button, type: "button", disabled: this.state.disabled, onClick: () => {
                    this.setState(Object.assign({}, this.state, { disabled: true }));
                    SuperAgent.put('/ssh/validate/' + this.props.token).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                        this.setState(Object.assign({}, this.state, { disabled: false }));
                        if (res.status === 404) {
                            Alert.error('SSH verification request has expired', 0);
                        } else if (err) {
                            Alert.errorRes(res, 'Failed to approve SSH key', 0);
                        } else {
                            Alert.success('Successfully approved SSH key', 0);
                        }
                        this.setState(Object.assign({}, this.state, { answered: true }));
                        window.history.replaceState(null, null, window.location.pathname);
                    });
                } }, "Approve"), React.createElement("button", { className: "pt-button pt-large pt-intent-danger pt-icon-delete", style: css.button, type: "button", disabled: this.state.disabled, onClick: () => {
                    this.setState(Object.assign({}, this.state, { disabled: true }));
                    SuperAgent.delete('/ssh/validate/' + this.props.token).set('Accept', 'application/json').set('Csrf-Token', Csrf.token).end((err, res) => {
                        this.setState(Object.assign({}, this.state, { disabled: false }));
                        if (res.status === 404) {
                            Alert.error('SSH verification request has expired', 0);
                        } else if (err) {
                            Alert.errorRes(res, 'Failed to deny SSH key', 0);
                            return;
                        } else {
                            Alert.error('Successfully denied SSH key. Report ' + 'this incident to an administrator.', 0);
                        }
                        this.setState(Object.assign({}, this.state, { answered: true }));
                        window.history.replaceState(null, null, window.location.pathname);
                    });
                } }, "Deny")));
        }
    }
    exports.default = Validate;
    
});
System.registerDynamic("uapp/components/Main.js", ["npm:react@15.6.1.js", "uapp/components/Session.js", "uapp/components/Validate.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@15.6.1.js");
    const Session_1 = $__require("uapp/components/Session.js");
    const Validate_1 = $__require("uapp/components/Validate.js");
    const css = {
        card: {
            padding: '20px 10px',
            minWidth: '260px',
            maxWidth: '300px',
            margin: '0 auto',
            position: 'absolute',
            top: '50%',
            left: '50%',
            width: '100%',
            transform: 'translate(-50%, -50%)'
        }
    };
    class Main extends React.Component {
        render() {
            let sshToken = '';
            let query = window.location.search.substring(1);
            let vals = query.split('&');
            for (let val of vals) {
                let keyval = val.split('=');
                console.log(val);
                if (keyval[0] === 'ssh-token') {
                    sshToken = keyval[1];
                    break;
                }
            }
            return React.createElement("div", { className: "pt-card pt-elevation-2", style: css.card }, sshToken ? React.createElement(Validate_1.default, { token: sshToken }) : React.createElement(Session_1.default, null));
        }
    }
    exports.default = Main;
    
});
System.registerDynamic('npm:component-emitter@1.2.1/index.js', [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;

  /**
   * Expose `Emitter`.
   */

  if (typeof module !== 'undefined') {
    module.exports = Emitter;
  }

  /**
   * Initialize a new `Emitter`.
   *
   * @api public
   */

  function Emitter(obj) {
    if (obj) return mixin(obj);
  };

  /**
   * Mixin the emitter properties.
   *
   * @param {Object} obj
   * @return {Object}
   * @api private
   */

  function mixin(obj) {
    for (var key in Emitter.prototype) {
      obj[key] = Emitter.prototype[key];
    }
    return obj;
  }

  /**
   * Listen on the given `event` with `fn`.
   *
   * @param {String} event
   * @param {Function} fn
   * @return {Emitter}
   * @api public
   */

  Emitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {
    this._callbacks = this._callbacks || {};
    (this._callbacks['$' + event] = this._callbacks['$' + event] || []).push(fn);
    return this;
  };

  /**
   * Adds an `event` listener that will be invoked a single
   * time then automatically removed.
   *
   * @param {String} event
   * @param {Function} fn
   * @return {Emitter}
   * @api public
   */

  Emitter.prototype.once = function (event, fn) {
    function on() {
      this.off(event, on);
      fn.apply(this, arguments);
    }

    on.fn = fn;
    this.on(event, on);
    return this;
  };

  /**
   * Remove the given callback for `event` or all
   * registered callbacks.
   *
   * @param {String} event
   * @param {Function} fn
   * @return {Emitter}
   * @api public
   */

  Emitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {
    this._callbacks = this._callbacks || {};

    // all
    if (0 == arguments.length) {
      this._callbacks = {};
      return this;
    }

    // specific event
    var callbacks = this._callbacks['$' + event];
    if (!callbacks) return this;

    // remove all handlers
    if (1 == arguments.length) {
      delete this._callbacks['$' + event];
      return this;
    }

    // remove specific handler
    var cb;
    for (var i = 0; i < callbacks.length; i++) {
      cb = callbacks[i];
      if (cb === fn || cb.fn === fn) {
        callbacks.splice(i, 1);
        break;
      }
    }
    return this;
  };

  /**
   * Emit `event` with the given args.
   *
   * @param {String} event
   * @param {Mixed} ...
   * @return {Emitter}
   */

  Emitter.prototype.emit = function (event) {
    this._callbacks = this._callbacks || {};
    var args = [].slice.call(arguments, 1),
        callbacks = this._callbacks['$' + event];

    if (callbacks) {
      callbacks = callbacks.slice(0);
      for (var i = 0, len = callbacks.length; i < len; ++i) {
        callbacks[i].apply(this, args);
      }
    }

    return this;
  };

  /**
   * Return array of callbacks for `event`.
   *
   * @param {String} event
   * @return {Array}
   * @api public
   */

  Emitter.prototype.listeners = function (event) {
    this._callbacks = this._callbacks || {};
    return this._callbacks['$' + event] || [];
  };

  /**
   * Check if this emitter has `event` handlers.
   *
   * @param {String} event
   * @return {Boolean}
   * @api public
   */

  Emitter.prototype.hasListeners = function (event) {
    return !!this.listeners(event).length;
  };
});
System.registerDynamic("npm:component-emitter@1.2.1.js", ["npm:component-emitter@1.2.1/index.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:component-emitter@1.2.1/index.js");
});
System.registerDynamic('npm:base64-js@1.2.1/index.js', [], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.byteLength = byteLength;
  exports.toByteArray = toByteArray;
  exports.fromByteArray = fromByteArray;

  var lookup = [];
  var revLookup = [];
  var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;

  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
  for (var i = 0, len = code.length; i < len; ++i) {
    lookup[i] = code[i];
    revLookup[code.charCodeAt(i)] = i;
  }

  revLookup['-'.charCodeAt(0)] = 62;
  revLookup['_'.charCodeAt(0)] = 63;

  function placeHoldersCount(b64) {
    var len = b64.length;
    if (len % 4 > 0) {
      throw new Error('Invalid string. Length must be a multiple of 4');
    }

    // the number of equal signs (place holders)
    // if there are two placeholders, than the two characters before it
    // represent one byte
    // if there is only one, then the three characters before it represent 2 bytes
    // this is just a cheap hack to not do indexOf twice
    return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0;
  }

  function byteLength(b64) {
    // base64 is 4/3 + up to two characters of the original data
    return b64.length * 3 / 4 - placeHoldersCount(b64);
  }

  function toByteArray(b64) {
    var i, l, tmp, placeHolders, arr;
    var len = b64.length;
    placeHolders = placeHoldersCount(b64);

    arr = new Arr(len * 3 / 4 - placeHolders);

    // if there are placeholders, only get up to the last complete 4 chars
    l = placeHolders > 0 ? len - 4 : len;

    var L = 0;

    for (i = 0; i < l; i += 4) {
      tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];
      arr[L++] = tmp >> 16 & 0xFF;
      arr[L++] = tmp >> 8 & 0xFF;
      arr[L++] = tmp & 0xFF;
    }

    if (placeHolders === 2) {
      tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;
      arr[L++] = tmp & 0xFF;
    } else if (placeHolders === 1) {
      tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;
      arr[L++] = tmp >> 8 & 0xFF;
      arr[L++] = tmp & 0xFF;
    }

    return arr;
  }

  function tripletToBase64(num) {
    return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];
  }

  function encodeChunk(uint8, start, end) {
    var tmp;
    var output = [];
    for (var i = start; i < end; i += 3) {
      tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + uint8[i + 2];
      output.push(tripletToBase64(tmp));
    }
    return output.join('');
  }

  function fromByteArray(uint8) {
    var tmp;
    var len = uint8.length;
    var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes
    var output = '';
    var parts = [];
    var maxChunkLength = 16383; // must be multiple of 3

    // go through the array every three bytes, we'll deal with trailing stuff later
    for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
      parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));
    }

    // pad the end with zeros, but make sure to not forget the extra bytes
    if (extraBytes === 1) {
      tmp = uint8[len - 1];
      output += lookup[tmp >> 2];
      output += lookup[tmp << 4 & 0x3F];
      output += '==';
    } else if (extraBytes === 2) {
      tmp = (uint8[len - 2] << 8) + uint8[len - 1];
      output += lookup[tmp >> 10];
      output += lookup[tmp >> 4 & 0x3F];
      output += lookup[tmp << 2 & 0x3F];
      output += '=';
    }

    parts.push(output);

    return parts.join('');
  }
});
System.registerDynamic("npm:base64-js@1.2.1.js", ["npm:base64-js@1.2.1/index.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:base64-js@1.2.1/index.js");
});
System.registerDynamic("npm:ieee754@1.1.8/index.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  exports.read = function (buffer, offset, isLE, mLen, nBytes) {
    var e, m;
    var eLen = nBytes * 8 - mLen - 1;
    var eMax = (1 << eLen) - 1;
    var eBias = eMax >> 1;
    var nBits = -7;
    var i = isLE ? nBytes - 1 : 0;
    var d = isLE ? -1 : 1;
    var s = buffer[offset + i];

    i += d;

    e = s & (1 << -nBits) - 1;
    s >>= -nBits;
    nBits += eLen;
    for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

    m = e & (1 << -nBits) - 1;
    e >>= -nBits;
    nBits += mLen;
    for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

    if (e === 0) {
      e = 1 - eBias;
    } else if (e === eMax) {
      return m ? NaN : (s ? -1 : 1) * Infinity;
    } else {
      m = m + Math.pow(2, mLen);
      e = e - eBias;
    }
    return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
  };

  exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
    var e, m, c;
    var eLen = nBytes * 8 - mLen - 1;
    var eMax = (1 << eLen) - 1;
    var eBias = eMax >> 1;
    var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
    var i = isLE ? 0 : nBytes - 1;
    var d = isLE ? 1 : -1;
    var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;

    value = Math.abs(value);

    if (isNaN(value) || value === Infinity) {
      m = isNaN(value) ? 1 : 0;
      e = eMax;
    } else {
      e = Math.floor(Math.log(value) / Math.LN2);
      if (value * (c = Math.pow(2, -e)) < 1) {
        e--;
        c *= 2;
      }
      if (e + eBias >= 1) {
        value += rt / c;
      } else {
        value += rt * Math.pow(2, 1 - eBias);
      }
      if (value * c >= 2) {
        e++;
        c /= 2;
      }

      if (e + eBias >= eMax) {
        m = 0;
        e = eMax;
      } else if (e + eBias >= 1) {
        m = (value * c - 1) * Math.pow(2, mLen);
        e = e + eBias;
      } else {
        m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
        e = 0;
      }
    }

    for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

    e = e << mLen | m;
    eLen += mLen;
    for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

    buffer[offset + i - d] |= s * 128;
  };
});
System.registerDynamic("npm:ieee754@1.1.8.js", ["npm:ieee754@1.1.8/index.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:ieee754@1.1.8/index.js");
});
System.registerDynamic('npm:buffer@5.0.8/index.js', ['npm:base64-js@1.2.1.js', 'npm:ieee754@1.1.8.js'], true, function ($__require, exports, module) {
  /*!
   * The buffer module from node.js, for the browser.
   *
   * @author   Feross Aboukhadijeh <https://feross.org>
   * @license  MIT
   */
  /* eslint-disable no-proto */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var base64 = $__require('npm:base64-js@1.2.1.js');
  var ieee754 = $__require('npm:ieee754@1.1.8.js');

  exports.Buffer = Buffer;
  exports.SlowBuffer = SlowBuffer;
  exports.INSPECT_MAX_BYTES = 50;

  var K_MAX_LENGTH = 0x7fffffff;
  exports.kMaxLength = K_MAX_LENGTH;

  /**
   * If `Buffer.TYPED_ARRAY_SUPPORT`:
   *   === true    Use Uint8Array implementation (fastest)
   *   === false   Print warning and recommend using `buffer` v4.x which has an Object
   *               implementation (most compatible, even IE6)
   *
   * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
   * Opera 11.6+, iOS 4.2+.
   *
   * We report that the browser does not support typed arrays if the are not subclassable
   * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
   * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
   * for __proto__ and has a buggy typed array implementation.
   */
  Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport();

  if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' && typeof console.error === 'function') {
    console.error('This browser lacks typed array (Uint8Array) support which is required by ' + '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.');
  }

  function typedArraySupport() {
    // Can typed array instances can be augmented?
    try {
      var arr = new Uint8Array(1);
      arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () {
          return 42;
        } };
      return arr.foo() === 42;
    } catch (e) {
      return false;
    }
  }

  function createBuffer(length) {
    if (length > K_MAX_LENGTH) {
      throw new RangeError('Invalid typed array length');
    }
    // Return an augmented `Uint8Array` instance
    var buf = new Uint8Array(length);
    buf.__proto__ = Buffer.prototype;
    return buf;
  }

  /**
   * The Buffer constructor returns instances of `Uint8Array` that have their
   * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
   * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
   * and the `Uint8Array` methods. Square bracket notation works as expected -- it
   * returns a single octet.
   *
   * The `Uint8Array` prototype remains unmodified.
   */

  function Buffer(arg, encodingOrOffset, length) {
    // Common case.
    if (typeof arg === 'number') {
      if (typeof encodingOrOffset === 'string') {
        throw new Error('If encoding is specified then the first argument must be a string');
      }
      return allocUnsafe(arg);
    }
    return from(arg, encodingOrOffset, length);
  }

  // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
  if (typeof Symbol !== 'undefined' && Symbol.species && Buffer[Symbol.species] === Buffer) {
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true,
      enumerable: false,
      writable: false
    });
  }

  Buffer.poolSize = 8192; // not used by this implementation

  function from(value, encodingOrOffset, length) {
    if (typeof value === 'number') {
      throw new TypeError('"value" argument must not be a number');
    }

    if (isArrayBuffer(value)) {
      return fromArrayBuffer(value, encodingOrOffset, length);
    }

    if (typeof value === 'string') {
      return fromString(value, encodingOrOffset);
    }

    return fromObject(value);
  }

  /**
   * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
   * if value is a number.
   * Buffer.from(str[, encoding])
   * Buffer.from(array)
   * Buffer.from(buffer)
   * Buffer.from(arrayBuffer[, byteOffset[, length]])
   **/
  Buffer.from = function (value, encodingOrOffset, length) {
    return from(value, encodingOrOffset, length);
  };

  // Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
  // https://github.com/feross/buffer/pull/148
  Buffer.prototype.__proto__ = Uint8Array.prototype;
  Buffer.__proto__ = Uint8Array;

  function assertSize(size) {
    if (typeof size !== 'number') {
      throw new TypeError('"size" argument must be a number');
    } else if (size < 0) {
      throw new RangeError('"size" argument must not be negative');
    }
  }

  function alloc(size, fill, encoding) {
    assertSize(size);
    if (size <= 0) {
      return createBuffer(size);
    }
    if (fill !== undefined) {
      // Only pay attention to encoding if it's a string. This
      // prevents accidentally sending in a number that would
      // be interpretted as a start offset.
      return typeof encoding === 'string' ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);
    }
    return createBuffer(size);
  }

  /**
   * Creates a new filled Buffer instance.
   * alloc(size[, fill[, encoding]])
   **/
  Buffer.alloc = function (size, fill, encoding) {
    return alloc(size, fill, encoding);
  };

  function allocUnsafe(size) {
    assertSize(size);
    return createBuffer(size < 0 ? 0 : checked(size) | 0);
  }

  /**
   * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
   * */
  Buffer.allocUnsafe = function (size) {
    return allocUnsafe(size);
  };
  /**
   * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
   */
  Buffer.allocUnsafeSlow = function (size) {
    return allocUnsafe(size);
  };

  function fromString(string, encoding) {
    if (typeof encoding !== 'string' || encoding === '') {
      encoding = 'utf8';
    }

    if (!Buffer.isEncoding(encoding)) {
      throw new TypeError('"encoding" must be a valid string encoding');
    }

    var length = byteLength(string, encoding) | 0;
    var buf = createBuffer(length);

    var actual = buf.write(string, encoding);

    if (actual !== length) {
      // Writing a hex string, for example, that contains invalid characters will
      // cause everything after the first invalid character to be ignored. (e.g.
      // 'abxxcd' will be treated as 'ab')
      buf = buf.slice(0, actual);
    }

    return buf;
  }

  function fromArrayLike(array) {
    var length = array.length < 0 ? 0 : checked(array.length) | 0;
    var buf = createBuffer(length);
    for (var i = 0; i < length; i += 1) {
      buf[i] = array[i] & 255;
    }
    return buf;
  }

  function fromArrayBuffer(array, byteOffset, length) {
    if (byteOffset < 0 || array.byteLength < byteOffset) {
      throw new RangeError('\'offset\' is out of bounds');
    }

    if (array.byteLength < byteOffset + (length || 0)) {
      throw new RangeError('\'length\' is out of bounds');
    }

    var buf;
    if (byteOffset === undefined && length === undefined) {
      buf = new Uint8Array(array);
    } else if (length === undefined) {
      buf = new Uint8Array(array, byteOffset);
    } else {
      buf = new Uint8Array(array, byteOffset, length);
    }

    // Return an augmented `Uint8Array` instance
    buf.__proto__ = Buffer.prototype;
    return buf;
  }

  function fromObject(obj) {
    if (Buffer.isBuffer(obj)) {
      var len = checked(obj.length) | 0;
      var buf = createBuffer(len);

      if (buf.length === 0) {
        return buf;
      }

      obj.copy(buf, 0, 0, len);
      return buf;
    }

    if (obj) {
      if (isArrayBufferView(obj) || 'length' in obj) {
        if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
          return createBuffer(0);
        }
        return fromArrayLike(obj);
      }

      if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
        return fromArrayLike(obj.data);
      }
    }

    throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');
  }

  function checked(length) {
    // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
    // length is NaN (which is otherwise coerced to zero.)
    if (length >= K_MAX_LENGTH) {
      throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes');
    }
    return length | 0;
  }

  function SlowBuffer(length) {
    if (+length != length) {
      // eslint-disable-line eqeqeq
      length = 0;
    }
    return Buffer.alloc(+length);
  }

  Buffer.isBuffer = function isBuffer(b) {
    return b != null && b._isBuffer === true;
  };

  Buffer.compare = function compare(a, b) {
    if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
      throw new TypeError('Arguments must be Buffers');
    }

    if (a === b) return 0;

    var x = a.length;
    var y = b.length;

    for (var i = 0, len = Math.min(x, y); i < len; ++i) {
      if (a[i] !== b[i]) {
        x = a[i];
        y = b[i];
        break;
      }
    }

    if (x < y) return -1;
    if (y < x) return 1;
    return 0;
  };

  Buffer.isEncoding = function isEncoding(encoding) {
    switch (String(encoding).toLowerCase()) {
      case 'hex':
      case 'utf8':
      case 'utf-8':
      case 'ascii':
      case 'latin1':
      case 'binary':
      case 'base64':
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return true;
      default:
        return false;
    }
  };

  Buffer.concat = function concat(list, length) {
    if (!Array.isArray(list)) {
      throw new TypeError('"list" argument must be an Array of Buffers');
    }

    if (list.length === 0) {
      return Buffer.alloc(0);
    }

    var i;
    if (length === undefined) {
      length = 0;
      for (i = 0; i < list.length; ++i) {
        length += list[i].length;
      }
    }

    var buffer = Buffer.allocUnsafe(length);
    var pos = 0;
    for (i = 0; i < list.length; ++i) {
      var buf = list[i];
      if (!Buffer.isBuffer(buf)) {
        throw new TypeError('"list" argument must be an Array of Buffers');
      }
      buf.copy(buffer, pos);
      pos += buf.length;
    }
    return buffer;
  };

  function byteLength(string, encoding) {
    if (Buffer.isBuffer(string)) {
      return string.length;
    }
    if (isArrayBufferView(string) || isArrayBuffer(string)) {
      return string.byteLength;
    }
    if (typeof string !== 'string') {
      string = '' + string;
    }

    var len = string.length;
    if (len === 0) return 0;

    // Use a for loop to avoid recursion
    var loweredCase = false;
    for (;;) {
      switch (encoding) {
        case 'ascii':
        case 'latin1':
        case 'binary':
          return len;
        case 'utf8':
        case 'utf-8':
        case undefined:
          return utf8ToBytes(string).length;
        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
          return len * 2;
        case 'hex':
          return len >>> 1;
        case 'base64':
          return base64ToBytes(string).length;
        default:
          if (loweredCase) return utf8ToBytes(string).length; // assume utf8
          encoding = ('' + encoding).toLowerCase();
          loweredCase = true;
      }
    }
  }
  Buffer.byteLength = byteLength;

  function slowToString(encoding, start, end) {
    var loweredCase = false;

    // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
    // property of a typed array.

    // This behaves neither like String nor Uint8Array in that we set start/end
    // to their upper/lower bounds if the value passed is out of range.
    // undefined is handled specially as per ECMA-262 6th Edition,
    // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
    if (start === undefined || start < 0) {
      start = 0;
    }
    // Return early if start > this.length. Done here to prevent potential uint32
    // coercion fail below.
    if (start > this.length) {
      return '';
    }

    if (end === undefined || end > this.length) {
      end = this.length;
    }

    if (end <= 0) {
      return '';
    }

    // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
    end >>>= 0;
    start >>>= 0;

    if (end <= start) {
      return '';
    }

    if (!encoding) encoding = 'utf8';

    while (true) {
      switch (encoding) {
        case 'hex':
          return hexSlice(this, start, end);

        case 'utf8':
        case 'utf-8':
          return utf8Slice(this, start, end);

        case 'ascii':
          return asciiSlice(this, start, end);

        case 'latin1':
        case 'binary':
          return latin1Slice(this, start, end);

        case 'base64':
          return base64Slice(this, start, end);

        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
          return utf16leSlice(this, start, end);

        default:
          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
          encoding = (encoding + '').toLowerCase();
          loweredCase = true;
      }
    }
  }

  // This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
  // to detect a Buffer instance. It's not possible to use `instanceof Buffer`
  // reliably in a browserify context because there could be multiple different
  // copies of the 'buffer' package in use. This method works even for Buffer
  // instances that were created from another copy of the `buffer` package.
  // See: https://github.com/feross/buffer/issues/154
  Buffer.prototype._isBuffer = true;

  function swap(b, n, m) {
    var i = b[n];
    b[n] = b[m];
    b[m] = i;
  }

  Buffer.prototype.swap16 = function swap16() {
    var len = this.length;
    if (len % 2 !== 0) {
      throw new RangeError('Buffer size must be a multiple of 16-bits');
    }
    for (var i = 0; i < len; i += 2) {
      swap(this, i, i + 1);
    }
    return this;
  };

  Buffer.prototype.swap32 = function swap32() {
    var len = this.length;
    if (len % 4 !== 0) {
      throw new RangeError('Buffer size must be a multiple of 32-bits');
    }
    for (var i = 0; i < len; i += 4) {
      swap(this, i, i + 3);
      swap(this, i + 1, i + 2);
    }
    return this;
  };

  Buffer.prototype.swap64 = function swap64() {
    var len = this.length;
    if (len % 8 !== 0) {
      throw new RangeError('Buffer size must be a multiple of 64-bits');
    }
    for (var i = 0; i < len; i += 8) {
      swap(this, i, i + 7);
      swap(this, i + 1, i + 6);
      swap(this, i + 2, i + 5);
      swap(this, i + 3, i + 4);
    }
    return this;
  };

  Buffer.prototype.toString = function toString() {
    var length = this.length;
    if (length === 0) return '';
    if (arguments.length === 0) return utf8Slice(this, 0, length);
    return slowToString.apply(this, arguments);
  };

  Buffer.prototype.equals = function equals(b) {
    if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');
    if (this === b) return true;
    return Buffer.compare(this, b) === 0;
  };

  Buffer.prototype.inspect = function inspect() {
    var str = '';
    var max = exports.INSPECT_MAX_BYTES;
    if (this.length > 0) {
      str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');
      if (this.length > max) str += ' ... ';
    }
    return '<Buffer ' + str + '>';
  };

  Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {
    if (!Buffer.isBuffer(target)) {
      throw new TypeError('Argument must be a Buffer');
    }

    if (start === undefined) {
      start = 0;
    }
    if (end === undefined) {
      end = target ? target.length : 0;
    }
    if (thisStart === undefined) {
      thisStart = 0;
    }
    if (thisEnd === undefined) {
      thisEnd = this.length;
    }

    if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
      throw new RangeError('out of range index');
    }

    if (thisStart >= thisEnd && start >= end) {
      return 0;
    }
    if (thisStart >= thisEnd) {
      return -1;
    }
    if (start >= end) {
      return 1;
    }

    start >>>= 0;
    end >>>= 0;
    thisStart >>>= 0;
    thisEnd >>>= 0;

    if (this === target) return 0;

    var x = thisEnd - thisStart;
    var y = end - start;
    var len = Math.min(x, y);

    var thisCopy = this.slice(thisStart, thisEnd);
    var targetCopy = target.slice(start, end);

    for (var i = 0; i < len; ++i) {
      if (thisCopy[i] !== targetCopy[i]) {
        x = thisCopy[i];
        y = targetCopy[i];
        break;
      }
    }

    if (x < y) return -1;
    if (y < x) return 1;
    return 0;
  };

  // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
  // OR the last index of `val` in `buffer` at offset <= `byteOffset`.
  //
  // Arguments:
  // - buffer - a Buffer to search
  // - val - a string, Buffer, or number
  // - byteOffset - an index into `buffer`; will be clamped to an int32
  // - encoding - an optional encoding, relevant is val is a string
  // - dir - true for indexOf, false for lastIndexOf
  function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
    // Empty buffer means no match
    if (buffer.length === 0) return -1;

    // Normalize byteOffset
    if (typeof byteOffset === 'string') {
      encoding = byteOffset;
      byteOffset = 0;
    } else if (byteOffset > 0x7fffffff) {
      byteOffset = 0x7fffffff;
    } else if (byteOffset < -0x80000000) {
      byteOffset = -0x80000000;
    }
    byteOffset = +byteOffset; // Coerce to Number.
    if (numberIsNaN(byteOffset)) {
      // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
      byteOffset = dir ? 0 : buffer.length - 1;
    }

    // Normalize byteOffset: negative offsets start from the end of the buffer
    if (byteOffset < 0) byteOffset = buffer.length + byteOffset;
    if (byteOffset >= buffer.length) {
      if (dir) return -1;else byteOffset = buffer.length - 1;
    } else if (byteOffset < 0) {
      if (dir) byteOffset = 0;else return -1;
    }

    // Normalize val
    if (typeof val === 'string') {
      val = Buffer.from(val, encoding);
    }

    // Finally, search either indexOf (if dir is true) or lastIndexOf
    if (Buffer.isBuffer(val)) {
      // Special case: looking for empty string/buffer always fails
      if (val.length === 0) {
        return -1;
      }
      return arrayIndexOf(buffer, val, byteOffset, encoding, dir);
    } else if (typeof val === 'number') {
      val = val & 0xFF; // Search for a byte value [0-255]
      if (typeof Uint8Array.prototype.indexOf === 'function') {
        if (dir) {
          return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);
        } else {
          return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);
        }
      }
      return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);
    }

    throw new TypeError('val must be string, number or Buffer');
  }

  function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
    var indexSize = 1;
    var arrLength = arr.length;
    var valLength = val.length;

    if (encoding !== undefined) {
      encoding = String(encoding).toLowerCase();
      if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {
        if (arr.length < 2 || val.length < 2) {
          return -1;
        }
        indexSize = 2;
        arrLength /= 2;
        valLength /= 2;
        byteOffset /= 2;
      }
    }

    function read(buf, i) {
      if (indexSize === 1) {
        return buf[i];
      } else {
        return buf.readUInt16BE(i * indexSize);
      }
    }

    var i;
    if (dir) {
      var foundIndex = -1;
      for (i = byteOffset; i < arrLength; i++) {
        if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
          if (foundIndex === -1) foundIndex = i;
          if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;
        } else {
          if (foundIndex !== -1) i -= i - foundIndex;
          foundIndex = -1;
        }
      }
    } else {
      if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;
      for (i = byteOffset; i >= 0; i--) {
        var found = true;
        for (var j = 0; j < valLength; j++) {
          if (read(arr, i + j) !== read(val, j)) {
            found = false;
            break;
          }
        }
        if (found) return i;
      }
    }

    return -1;
  }

  Buffer.prototype.includes = function includes(val, byteOffset, encoding) {
    return this.indexOf(val, byteOffset, encoding) !== -1;
  };

  Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
    return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
  };

  Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
    return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
  };

  function hexWrite(buf, string, offset, length) {
    offset = Number(offset) || 0;
    var remaining = buf.length - offset;
    if (!length) {
      length = remaining;
    } else {
      length = Number(length);
      if (length > remaining) {
        length = remaining;
      }
    }

    // must be an even number of digits
    var strLen = string.length;
    if (strLen % 2 !== 0) throw new TypeError('Invalid hex string');

    if (length > strLen / 2) {
      length = strLen / 2;
    }
    for (var i = 0; i < length; ++i) {
      var parsed = parseInt(string.substr(i * 2, 2), 16);
      if (numberIsNaN(parsed)) return i;
      buf[offset + i] = parsed;
    }
    return i;
  }

  function utf8Write(buf, string, offset, length) {
    return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);
  }

  function asciiWrite(buf, string, offset, length) {
    return blitBuffer(asciiToBytes(string), buf, offset, length);
  }

  function latin1Write(buf, string, offset, length) {
    return asciiWrite(buf, string, offset, length);
  }

  function base64Write(buf, string, offset, length) {
    return blitBuffer(base64ToBytes(string), buf, offset, length);
  }

  function ucs2Write(buf, string, offset, length) {
    return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);
  }

  Buffer.prototype.write = function write(string, offset, length, encoding) {
    // Buffer#write(string)
    if (offset === undefined) {
      encoding = 'utf8';
      length = this.length;
      offset = 0;
      // Buffer#write(string, encoding)
    } else if (length === undefined && typeof offset === 'string') {
      encoding = offset;
      length = this.length;
      offset = 0;
      // Buffer#write(string, offset[, length][, encoding])
    } else if (isFinite(offset)) {
      offset = offset >>> 0;
      if (isFinite(length)) {
        length = length >>> 0;
        if (encoding === undefined) encoding = 'utf8';
      } else {
        encoding = length;
        length = undefined;
      }
    } else {
      throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');
    }

    var remaining = this.length - offset;
    if (length === undefined || length > remaining) length = remaining;

    if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {
      throw new RangeError('Attempt to write outside buffer bounds');
    }

    if (!encoding) encoding = 'utf8';

    var loweredCase = false;
    for (;;) {
      switch (encoding) {
        case 'hex':
          return hexWrite(this, string, offset, length);

        case 'utf8':
        case 'utf-8':
          return utf8Write(this, string, offset, length);

        case 'ascii':
          return asciiWrite(this, string, offset, length);

        case 'latin1':
        case 'binary':
          return latin1Write(this, string, offset, length);

        case 'base64':
          // Warning: maxLength not taken into account in base64Write
          return base64Write(this, string, offset, length);

        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
          return ucs2Write(this, string, offset, length);

        default:
          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
          encoding = ('' + encoding).toLowerCase();
          loweredCase = true;
      }
    }
  };

  Buffer.prototype.toJSON = function toJSON() {
    return {
      type: 'Buffer',
      data: Array.prototype.slice.call(this._arr || this, 0)
    };
  };

  function base64Slice(buf, start, end) {
    if (start === 0 && end === buf.length) {
      return base64.fromByteArray(buf);
    } else {
      return base64.fromByteArray(buf.slice(start, end));
    }
  }

  function utf8Slice(buf, start, end) {
    end = Math.min(buf.length, end);
    var res = [];

    var i = start;
    while (i < end) {
      var firstByte = buf[i];
      var codePoint = null;
      var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;

      if (i + bytesPerSequence <= end) {
        var secondByte, thirdByte, fourthByte, tempCodePoint;

        switch (bytesPerSequence) {
          case 1:
            if (firstByte < 0x80) {
              codePoint = firstByte;
            }
            break;
          case 2:
            secondByte = buf[i + 1];
            if ((secondByte & 0xC0) === 0x80) {
              tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;
              if (tempCodePoint > 0x7F) {
                codePoint = tempCodePoint;
              }
            }
            break;
          case 3:
            secondByte = buf[i + 1];
            thirdByte = buf[i + 2];
            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
              tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;
              if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
                codePoint = tempCodePoint;
              }
            }
            break;
          case 4:
            secondByte = buf[i + 1];
            thirdByte = buf[i + 2];
            fourthByte = buf[i + 3];
            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
              tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;
              if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
                codePoint = tempCodePoint;
              }
            }
        }
      }

      if (codePoint === null) {
        // we did not generate a valid codePoint so insert a
        // replacement char (U+FFFD) and advance only 1 byte
        codePoint = 0xFFFD;
        bytesPerSequence = 1;
      } else if (codePoint > 0xFFFF) {
        // encode to utf16 (surrogate pair dance)
        codePoint -= 0x10000;
        res.push(codePoint >>> 10 & 0x3FF | 0xD800);
        codePoint = 0xDC00 | codePoint & 0x3FF;
      }

      res.push(codePoint);
      i += bytesPerSequence;
    }

    return decodeCodePointsArray(res);
  }

  // Based on http://stackoverflow.com/a/22747272/680742, the browser with
  // the lowest limit is Chrome, with 0x10000 args.
  // We go 1 magnitude less, for safety
  var MAX_ARGUMENTS_LENGTH = 0x1000;

  function decodeCodePointsArray(codePoints) {
    var len = codePoints.length;
    if (len <= MAX_ARGUMENTS_LENGTH) {
      return String.fromCharCode.apply(String, codePoints); // avoid extra slice()
    }

    // Decode in chunks to avoid "call stack size exceeded".
    var res = '';
    var i = 0;
    while (i < len) {
      res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));
    }
    return res;
  }

  function asciiSlice(buf, start, end) {
    var ret = '';
    end = Math.min(buf.length, end);

    for (var i = start; i < end; ++i) {
      ret += String.fromCharCode(buf[i] & 0x7F);
    }
    return ret;
  }

  function latin1Slice(buf, start, end) {
    var ret = '';
    end = Math.min(buf.length, end);

    for (var i = start; i < end; ++i) {
      ret += String.fromCharCode(buf[i]);
    }
    return ret;
  }

  function hexSlice(buf, start, end) {
    var len = buf.length;

    if (!start || start < 0) start = 0;
    if (!end || end < 0 || end > len) end = len;

    var out = '';
    for (var i = start; i < end; ++i) {
      out += toHex(buf[i]);
    }
    return out;
  }

  function utf16leSlice(buf, start, end) {
    var bytes = buf.slice(start, end);
    var res = '';
    for (var i = 0; i < bytes.length; i += 2) {
      res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
    }
    return res;
  }

  Buffer.prototype.slice = function slice(start, end) {
    var len = this.length;
    start = ~~start;
    end = end === undefined ? len : ~~end;

    if (start < 0) {
      start += len;
      if (start < 0) start = 0;
    } else if (start > len) {
      start = len;
    }

    if (end < 0) {
      end += len;
      if (end < 0) end = 0;
    } else if (end > len) {
      end = len;
    }

    if (end < start) end = start;

    var newBuf = this.subarray(start, end);
    // Return an augmented `Uint8Array` instance
    newBuf.__proto__ = Buffer.prototype;
    return newBuf;
  };

  /*
   * Need to make sure that buffer isn't trying to write out of bounds.
   */
  function checkOffset(offset, ext, length) {
    if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');
    if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');
  }

  Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) checkOffset(offset, byteLength, this.length);

    var val = this[offset];
    var mul = 1;
    var i = 0;
    while (++i < byteLength && (mul *= 0x100)) {
      val += this[offset + i] * mul;
    }

    return val;
  };

  Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) {
      checkOffset(offset, byteLength, this.length);
    }

    var val = this[offset + --byteLength];
    var mul = 1;
    while (byteLength > 0 && (mul *= 0x100)) {
      val += this[offset + --byteLength] * mul;
    }

    return val;
  };

  Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 1, this.length);
    return this[offset];
  };

  Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    return this[offset] | this[offset + 1] << 8;
  };

  Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    return this[offset] << 8 | this[offset + 1];
  };

  Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);

    return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;
  };

  Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);

    return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);
  };

  Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) checkOffset(offset, byteLength, this.length);

    var val = this[offset];
    var mul = 1;
    var i = 0;
    while (++i < byteLength && (mul *= 0x100)) {
      val += this[offset + i] * mul;
    }
    mul *= 0x80;

    if (val >= mul) val -= Math.pow(2, 8 * byteLength);

    return val;
  };

  Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) checkOffset(offset, byteLength, this.length);

    var i = byteLength;
    var mul = 1;
    var val = this[offset + --i];
    while (i > 0 && (mul *= 0x100)) {
      val += this[offset + --i] * mul;
    }
    mul *= 0x80;

    if (val >= mul) val -= Math.pow(2, 8 * byteLength);

    return val;
  };

  Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 1, this.length);
    if (!(this[offset] & 0x80)) return this[offset];
    return (0xff - this[offset] + 1) * -1;
  };

  Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    var val = this[offset] | this[offset + 1] << 8;
    return val & 0x8000 ? val | 0xFFFF0000 : val;
  };

  Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    var val = this[offset + 1] | this[offset] << 8;
    return val & 0x8000 ? val | 0xFFFF0000 : val;
  };

  Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);

    return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;
  };

  Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);

    return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];
  };

  Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return ieee754.read(this, offset, true, 23, 4);
  };

  Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return ieee754.read(this, offset, false, 23, 4);
  };

  Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 8, this.length);
    return ieee754.read(this, offset, true, 52, 8);
  };

  Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 8, this.length);
    return ieee754.read(this, offset, false, 52, 8);
  };

  function checkInt(buf, value, offset, ext, max, min) {
    if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance');
    if (value > max || value < min) throw new RangeError('"value" argument is out of bounds');
    if (offset + ext > buf.length) throw new RangeError('Index out of range');
  }

  Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) {
      var maxBytes = Math.pow(2, 8 * byteLength) - 1;
      checkInt(this, value, offset, byteLength, maxBytes, 0);
    }

    var mul = 1;
    var i = 0;
    this[offset] = value & 0xFF;
    while (++i < byteLength && (mul *= 0x100)) {
      this[offset + i] = value / mul & 0xFF;
    }

    return offset + byteLength;
  };

  Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) {
      var maxBytes = Math.pow(2, 8 * byteLength) - 1;
      checkInt(this, value, offset, byteLength, maxBytes, 0);
    }

    var i = byteLength - 1;
    var mul = 1;
    this[offset + i] = value & 0xFF;
    while (--i >= 0 && (mul *= 0x100)) {
      this[offset + i] = value / mul & 0xFF;
    }

    return offset + byteLength;
  };

  Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);
    this[offset] = value & 0xff;
    return offset + 1;
  };

  Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
    this[offset] = value & 0xff;
    this[offset + 1] = value >>> 8;
    return offset + 2;
  };

  Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
    this[offset] = value >>> 8;
    this[offset + 1] = value & 0xff;
    return offset + 2;
  };

  Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
    this[offset + 3] = value >>> 24;
    this[offset + 2] = value >>> 16;
    this[offset + 1] = value >>> 8;
    this[offset] = value & 0xff;
    return offset + 4;
  };

  Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
    this[offset] = value >>> 24;
    this[offset + 1] = value >>> 16;
    this[offset + 2] = value >>> 8;
    this[offset + 3] = value & 0xff;
    return offset + 4;
  };

  Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) {
      var limit = Math.pow(2, 8 * byteLength - 1);

      checkInt(this, value, offset, byteLength, limit - 1, -limit);
    }

    var i = 0;
    var mul = 1;
    var sub = 0;
    this[offset] = value & 0xFF;
    while (++i < byteLength && (mul *= 0x100)) {
      if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
        sub = 1;
      }
      this[offset + i] = (value / mul >> 0) - sub & 0xFF;
    }

    return offset + byteLength;
  };

  Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) {
      var limit = Math.pow(2, 8 * byteLength - 1);

      checkInt(this, value, offset, byteLength, limit - 1, -limit);
    }

    var i = byteLength - 1;
    var mul = 1;
    var sub = 0;
    this[offset + i] = value & 0xFF;
    while (--i >= 0 && (mul *= 0x100)) {
      if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
        sub = 1;
      }
      this[offset + i] = (value / mul >> 0) - sub & 0xFF;
    }

    return offset + byteLength;
  };

  Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);
    if (value < 0) value = 0xff + value + 1;
    this[offset] = value & 0xff;
    return offset + 1;
  };

  Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);
    this[offset] = value & 0xff;
    this[offset + 1] = value >>> 8;
    return offset + 2;
  };

  Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);
    this[offset] = value >>> 8;
    this[offset + 1] = value & 0xff;
    return offset + 2;
  };

  Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
    this[offset] = value & 0xff;
    this[offset + 1] = value >>> 8;
    this[offset + 2] = value >>> 16;
    this[offset + 3] = value >>> 24;
    return offset + 4;
  };

  Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
    if (value < 0) value = 0xffffffff + value + 1;
    this[offset] = value >>> 24;
    this[offset + 1] = value >>> 16;
    this[offset + 2] = value >>> 8;
    this[offset + 3] = value & 0xff;
    return offset + 4;
  };

  function checkIEEE754(buf, value, offset, ext, max, min) {
    if (offset + ext > buf.length) throw new RangeError('Index out of range');
    if (offset < 0) throw new RangeError('Index out of range');
  }

  function writeFloat(buf, value, offset, littleEndian, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) {
      checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);
    }
    ieee754.write(buf, value, offset, littleEndian, 23, 4);
    return offset + 4;
  }

  Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
    return writeFloat(this, value, offset, true, noAssert);
  };

  Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
    return writeFloat(this, value, offset, false, noAssert);
  };

  function writeDouble(buf, value, offset, littleEndian, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) {
      checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);
    }
    ieee754.write(buf, value, offset, littleEndian, 52, 8);
    return offset + 8;
  }

  Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
    return writeDouble(this, value, offset, true, noAssert);
  };

  Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
    return writeDouble(this, value, offset, false, noAssert);
  };

  // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
  Buffer.prototype.copy = function copy(target, targetStart, start, end) {
    if (!start) start = 0;
    if (!end && end !== 0) end = this.length;
    if (targetStart >= target.length) targetStart = target.length;
    if (!targetStart) targetStart = 0;
    if (end > 0 && end < start) end = start;

    // Copy 0 bytes; we're done
    if (end === start) return 0;
    if (target.length === 0 || this.length === 0) return 0;

    // Fatal error conditions
    if (targetStart < 0) {
      throw new RangeError('targetStart out of bounds');
    }
    if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds');
    if (end < 0) throw new RangeError('sourceEnd out of bounds');

    // Are we oob?
    if (end > this.length) end = this.length;
    if (target.length - targetStart < end - start) {
      end = target.length - targetStart + start;
    }

    var len = end - start;
    var i;

    if (this === target && start < targetStart && targetStart < end) {
      // descending copy from end
      for (i = len - 1; i >= 0; --i) {
        target[i + targetStart] = this[i + start];
      }
    } else if (len < 1000) {
      // ascending copy from start
      for (i = 0; i < len; ++i) {
        target[i + targetStart] = this[i + start];
      }
    } else {
      Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);
    }

    return len;
  };

  // Usage:
  //    buffer.fill(number[, offset[, end]])
  //    buffer.fill(buffer[, offset[, end]])
  //    buffer.fill(string[, offset[, end]][, encoding])
  Buffer.prototype.fill = function fill(val, start, end, encoding) {
    // Handle string cases:
    if (typeof val === 'string') {
      if (typeof start === 'string') {
        encoding = start;
        start = 0;
        end = this.length;
      } else if (typeof end === 'string') {
        encoding = end;
        end = this.length;
      }
      if (val.length === 1) {
        var code = val.charCodeAt(0);
        if (code < 256) {
          val = code;
        }
      }
      if (encoding !== undefined && typeof encoding !== 'string') {
        throw new TypeError('encoding must be a string');
      }
      if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
        throw new TypeError('Unknown encoding: ' + encoding);
      }
    } else if (typeof val === 'number') {
      val = val & 255;
    }

    // Invalid ranges are not set to a default, so can range check early.
    if (start < 0 || this.length < start || this.length < end) {
      throw new RangeError('Out of range index');
    }

    if (end <= start) {
      return this;
    }

    start = start >>> 0;
    end = end === undefined ? this.length : end >>> 0;

    if (!val) val = 0;

    var i;
    if (typeof val === 'number') {
      for (i = start; i < end; ++i) {
        this[i] = val;
      }
    } else {
      var bytes = Buffer.isBuffer(val) ? val : new Buffer(val, encoding);
      var len = bytes.length;
      for (i = 0; i < end - start; ++i) {
        this[i + start] = bytes[i % len];
      }
    }

    return this;
  };

  // HELPER FUNCTIONS
  // ================

  var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;

  function base64clean(str) {
    // Node strips out invalid characters like \n and \t from the string, base64-js does not
    str = str.trim().replace(INVALID_BASE64_RE, '');
    // Node converts strings with length < 2 to ''
    if (str.length < 2) return '';
    // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
    while (str.length % 4 !== 0) {
      str = str + '=';
    }
    return str;
  }

  function toHex(n) {
    if (n < 16) return '0' + n.toString(16);
    return n.toString(16);
  }

  function utf8ToBytes(string, units) {
    units = units || Infinity;
    var codePoint;
    var length = string.length;
    var leadSurrogate = null;
    var bytes = [];

    for (var i = 0; i < length; ++i) {
      codePoint = string.charCodeAt(i);

      // is surrogate component
      if (codePoint > 0xD7FF && codePoint < 0xE000) {
        // last char was a lead
        if (!leadSurrogate) {
          // no lead yet
          if (codePoint > 0xDBFF) {
            // unexpected trail
            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
            continue;
          } else if (i + 1 === length) {
            // unpaired lead
            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
            continue;
          }

          // valid lead
          leadSurrogate = codePoint;

          continue;
        }

        // 2 leads in a row
        if (codePoint < 0xDC00) {
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
          leadSurrogate = codePoint;
          continue;
        }

        // valid surrogate pair
        codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;
      } else if (leadSurrogate) {
        // valid bmp char, but last char was a lead
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
      }

      leadSurrogate = null;

      // encode utf8
      if (codePoint < 0x80) {
        if ((units -= 1) < 0) break;
        bytes.push(codePoint);
      } else if (codePoint < 0x800) {
        if ((units -= 2) < 0) break;
        bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);
      } else if (codePoint < 0x10000) {
        if ((units -= 3) < 0) break;
        bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
      } else if (codePoint < 0x110000) {
        if ((units -= 4) < 0) break;
        bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
      } else {
        throw new Error('Invalid code point');
      }
    }

    return bytes;
  }

  function asciiToBytes(str) {
    var byteArray = [];
    for (var i = 0; i < str.length; ++i) {
      // Node's code seems to be doing this and not & 0x7F..
      byteArray.push(str.charCodeAt(i) & 0xFF);
    }
    return byteArray;
  }

  function utf16leToBytes(str, units) {
    var c, hi, lo;
    var byteArray = [];
    for (var i = 0; i < str.length; ++i) {
      if ((units -= 2) < 0) break;

      c = str.charCodeAt(i);
      hi = c >> 8;
      lo = c % 256;
      byteArray.push(lo);
      byteArray.push(hi);
    }

    return byteArray;
  }

  function base64ToBytes(str) {
    return base64.toByteArray(base64clean(str));
  }

  function blitBuffer(src, dst, offset, length) {
    for (var i = 0; i < length; ++i) {
      if (i + offset >= dst.length || i >= src.length) break;
      dst[i + offset] = src[i];
    }
    return i;
  }

  // ArrayBuffers from another context (i.e. an iframe) do not pass the `instanceof` check
  // but they should be treated as valid. See: https://github.com/feross/buffer/issues/166
  function isArrayBuffer(obj) {
    return obj instanceof ArrayBuffer || obj != null && obj.constructor != null && obj.constructor.name === 'ArrayBuffer' && typeof obj.byteLength === 'number';
  }

  // Node 0.10 supports `ArrayBuffer` but lacks `ArrayBuffer.isView`
  function isArrayBufferView(obj) {
    return typeof ArrayBuffer.isView === 'function' && ArrayBuffer.isView(obj);
  }

  function numberIsNaN(obj) {
    return obj !== obj; // eslint-disable-line no-self-compare
  }
});
System.registerDynamic("npm:buffer@5.0.8.js", ["npm:buffer@5.0.8/index.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:buffer@5.0.8/index.js");
});
System.registerDynamic('github:jspm/nodelibs-buffer@0.1.1/index.js', ['npm:buffer@5.0.8.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = System._nodeRequire ? System._nodeRequire('buffer') : $__require('npm:buffer@5.0.8.js');
});
System.registerDynamic("github:jspm/nodelibs-buffer@0.1.1.js", ["github:jspm/nodelibs-buffer@0.1.1/index.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("github:jspm/nodelibs-buffer@0.1.1/index.js");
});
System.registerDynamic('npm:superagent@3.8.1/lib/request-base.js', ['npm:superagent@3.8.1/lib/is-object.js', 'github:jspm/nodelibs-buffer@0.1.1.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (Buffer) {
    'use strict';

    var isObject = $__require('npm:superagent@3.8.1/lib/is-object.js');
    module.exports = RequestBase;
    function RequestBase(obj) {
      if (obj) return mixin(obj);
    }
    function mixin(obj) {
      for (var key in RequestBase.prototype) {
        obj[key] = RequestBase.prototype[key];
      }
      return obj;
    }
    RequestBase.prototype.clearTimeout = function _clearTimeout() {
      clearTimeout(this._timer);
      clearTimeout(this._responseTimeoutTimer);
      delete this._timer;
      delete this._responseTimeoutTimer;
      return this;
    };
    RequestBase.prototype.parse = function parse(fn) {
      this._parser = fn;
      return this;
    };
    RequestBase.prototype.responseType = function (val) {
      this._responseType = val;
      return this;
    };
    RequestBase.prototype.serialize = function serialize(fn) {
      this._serializer = fn;
      return this;
    };
    RequestBase.prototype.timeout = function timeout(options) {
      if (!options || 'object' !== typeof options) {
        this._timeout = options;
        this._responseTimeout = 0;
        return this;
      }
      for (var option in options) {
        switch (option) {
          case 'deadline':
            this._timeout = options.deadline;
            break;
          case 'response':
            this._responseTimeout = options.response;
            break;
          default:
            console.warn("Unknown timeout option", option);
        }
      }
      return this;
    };
    RequestBase.prototype.retry = function retry(count, fn) {
      if (arguments.length === 0 || count === true) count = 1;
      if (count <= 0) count = 0;
      this._maxRetries = count;
      this._retries = 0;
      this._retryCallback = fn;
      return this;
    };
    var ERROR_CODES = ['ECONNRESET', 'ETIMEDOUT', 'EADDRINFO', 'ESOCKETTIMEDOUT'];
    RequestBase.prototype._shouldRetry = function (err, res) {
      if (!this._maxRetries || this._retries++ >= this._maxRetries) {
        return false;
      }
      if (this._retryCallback) {
        try {
          var override = this._retryCallback(err, res);
          if (override === true) return true;
          if (override === false) return false;
        } catch (e) {
          console.error(e);
        }
      }
      if (res && res.status && res.status >= 500 && res.status != 501) return true;
      if (err) {
        if (err.code && ~ERROR_CODES.indexOf(err.code)) return true;
        if (err.timeout && err.code == 'ECONNABORTED') return true;
        if (err.crossDomain) return true;
      }
      return false;
    };
    RequestBase.prototype._retry = function () {
      this.clearTimeout();
      if (this.req) {
        this.req = null;
        this.req = this.request();
      }
      this._aborted = false;
      this.timedout = false;
      return this._end();
    };
    RequestBase.prototype.then = function then(resolve, reject) {
      if (!this._fullfilledPromise) {
        var self = this;
        if (this._endCalled) {
          console.warn("Warning: superagent request was sent twice, because both .end() and .then() were called. Never call .end() if you use promises");
        }
        this._fullfilledPromise = new Promise(function (innerResolve, innerReject) {
          self.end(function (err, res) {
            if (err) innerReject(err);else innerResolve(res);
          });
        });
      }
      return this._fullfilledPromise.then(resolve, reject);
    };
    RequestBase.prototype.catch = function (cb) {
      return this.then(undefined, cb);
    };
    RequestBase.prototype.use = function use(fn) {
      fn(this);
      return this;
    };
    RequestBase.prototype.ok = function (cb) {
      if ('function' !== typeof cb) throw Error("Callback required");
      this._okCallback = cb;
      return this;
    };
    RequestBase.prototype._isResponseOK = function (res) {
      if (!res) {
        return false;
      }
      if (this._okCallback) {
        return this._okCallback(res);
      }
      return res.status >= 200 && res.status < 300;
    };
    RequestBase.prototype.get = function (field) {
      return this._header[field.toLowerCase()];
    };
    RequestBase.prototype.getHeader = RequestBase.prototype.get;
    RequestBase.prototype.set = function (field, val) {
      if (isObject(field)) {
        for (var key in field) {
          this.set(key, field[key]);
        }
        return this;
      }
      this._header[field.toLowerCase()] = val;
      this.header[field] = val;
      return this;
    };
    RequestBase.prototype.unset = function (field) {
      delete this._header[field.toLowerCase()];
      delete this.header[field];
      return this;
    };
    RequestBase.prototype.field = function (name, val) {
      if (null === name || undefined === name) {
        throw new Error('.field(name, val) name can not be empty');
      }
      if (this._data) {
        console.error(".field() can't be used if .send() is used. Please use only .send() or only .field() & .attach()");
      }
      if (isObject(name)) {
        for (var key in name) {
          this.field(key, name[key]);
        }
        return this;
      }
      if (Array.isArray(val)) {
        for (var i in val) {
          this.field(name, val[i]);
        }
        return this;
      }
      if (null === val || undefined === val) {
        throw new Error('.field(name, val) val can not be empty');
      }
      if ('boolean' === typeof val) {
        val = '' + val;
      }
      this._getFormData().append(name, val);
      return this;
    };
    RequestBase.prototype.abort = function () {
      if (this._aborted) {
        return this;
      }
      this._aborted = true;
      this.xhr && this.xhr.abort();
      this.req && this.req.abort();
      this.clearTimeout();
      this.emit('abort');
      return this;
    };
    RequestBase.prototype._auth = function (user, pass, options, base64Encoder) {
      switch (options.type) {
        case 'basic':
          this.set('Authorization', 'Basic ' + base64Encoder(user + ':' + pass));
          break;
        case 'auto':
          this.username = user;
          this.password = pass;
          break;
        case 'bearer':
          this.set('Authorization', 'Bearer ' + user);
          break;
      }
      return this;
    };
    RequestBase.prototype.withCredentials = function (on) {
      if (on == undefined) on = true;
      this._withCredentials = on;
      return this;
    };
    RequestBase.prototype.redirects = function (n) {
      this._maxRedirects = n;
      return this;
    };
    RequestBase.prototype.maxResponseSize = function (n) {
      if ('number' !== typeof n) {
        throw TypeError("Invalid argument");
      }
      this._maxResponseSize = n;
      return this;
    };
    RequestBase.prototype.toJSON = function () {
      return {
        method: this.method,
        url: this.url,
        data: this._data,
        headers: this._header
      };
    };
    RequestBase.prototype.send = function (data) {
      var isObj = isObject(data);
      var type = this._header['content-type'];
      if (this._formData) {
        console.error(".send() can't be used if .attach() or .field() is used. Please use only .send() or only .field() & .attach()");
      }
      if (isObj && !this._data) {
        if (Array.isArray(data)) {
          this._data = [];
        } else if (!this._isHost(data)) {
          this._data = {};
        }
      } else if (data && this._data && this._isHost(this._data)) {
        throw Error("Can't merge these send calls");
      }
      if (isObj && isObject(this._data)) {
        for (var key in data) {
          this._data[key] = data[key];
        }
      } else if ('string' == typeof data) {
        if (!type) this.type('form');
        type = this._header['content-type'];
        if ('application/x-www-form-urlencoded' == type) {
          this._data = this._data ? this._data + '&' + data : data;
        } else {
          this._data = (this._data || '') + data;
        }
      } else {
        this._data = data;
      }
      if (!isObj || this._isHost(data)) {
        return this;
      }
      if (!type) this.type('json');
      return this;
    };
    RequestBase.prototype.sortQuery = function (sort) {
      this._sort = typeof sort === 'undefined' ? true : sort;
      return this;
    };
    RequestBase.prototype._finalizeQueryString = function () {
      var query = this._query.join('&');
      if (query) {
        this.url += (this.url.indexOf('?') >= 0 ? '&' : '?') + query;
      }
      this._query.length = 0;
      if (this._sort) {
        var index = this.url.indexOf('?');
        if (index >= 0) {
          var queryArr = this.url.substring(index + 1).split('&');
          if ('function' === typeof this._sort) {
            queryArr.sort(this._sort);
          } else {
            queryArr.sort();
          }
          this.url = this.url.substring(0, index) + '?' + queryArr.join('&');
        }
      }
    };
    RequestBase.prototype._appendQueryString = function () {
      console.trace("Unsupported");
    };
    RequestBase.prototype._timeoutError = function (reason, timeout, errno) {
      if (this._aborted) {
        return;
      }
      var err = new Error(reason + timeout + 'ms exceeded');
      err.timeout = timeout;
      err.code = 'ECONNABORTED';
      err.errno = errno;
      this.timedout = true;
      this.abort();
      this.callback(err);
    };
    RequestBase.prototype._setTimeouts = function () {
      var self = this;
      if (this._timeout && !this._timer) {
        this._timer = setTimeout(function () {
          self._timeoutError('Timeout of ', self._timeout, 'ETIME');
        }, this._timeout);
      }
      if (this._responseTimeout && !this._responseTimeoutTimer) {
        this._responseTimeoutTimer = setTimeout(function () {
          self._timeoutError('Response timeout of ', self._responseTimeout, 'ETIMEDOUT');
        }, this._responseTimeout);
      }
    };
  })($__require('github:jspm/nodelibs-buffer@0.1.1.js').Buffer);
});
System.registerDynamic('npm:superagent@3.8.1/lib/is-object.js', [], true, function ($__require, exports, module) {
  /* */
  'use strict';

  /**
   * Check if `obj` is an object.
   *
   * @param {Object} obj
   * @return {Boolean}
   * @api private
   */

  var global = this || self,
      GLOBAL = global;
  function isObject(obj) {
    return null !== obj && 'object' === typeof obj;
  }

  module.exports = isObject;
});
System.registerDynamic('npm:superagent@3.8.1/lib/utils.js', [], true, function ($__require, exports, module) {
  /* */
  'use strict';

  /**
   * Return the mime type for the given `str`.
   *
   * @param {String} str
   * @return {String}
   * @api private
   */

  var global = this || self,
      GLOBAL = global;
  exports.type = function (str) {
    return str.split(/ *; */).shift();
  };

  /**
   * Return header field parameters.
   *
   * @param {String} str
   * @return {Object}
   * @api private
   */

  exports.params = function (str) {
    return str.split(/ *; */).reduce(function (obj, str) {
      var parts = str.split(/ *= */);
      var key = parts.shift();
      var val = parts.shift();

      if (key && val) obj[key] = val;
      return obj;
    }, {});
  };

  /**
   * Parse Link header fields.
   *
   * @param {String} str
   * @return {Object}
   * @api private
   */

  exports.parseLinks = function (str) {
    return str.split(/ *, */).reduce(function (obj, str) {
      var parts = str.split(/ *; */);
      var url = parts[0].slice(1, -1);
      var rel = parts[1].split(/ *= */)[1].slice(1, -1);
      obj[rel] = url;
      return obj;
    }, {});
  };

  /**
   * Strip content related fields from `header`.
   *
   * @param {Object} header
   * @return {Object} header
   * @api private
   */

  exports.cleanHeader = function (header, changesOrigin) {
    delete header['content-type'];
    delete header['content-length'];
    delete header['transfer-encoding'];
    delete header['host'];
    // secuirty
    if (changesOrigin) {
      delete header['authorization'];
      delete header['cookie'];
    }
    return header;
  };
});
System.registerDynamic('npm:superagent@3.8.1/lib/response-base.js', ['npm:superagent@3.8.1/lib/utils.js'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var utils = $__require('npm:superagent@3.8.1/lib/utils.js');
  module.exports = ResponseBase;
  function ResponseBase(obj) {
    if (obj) return mixin(obj);
  }
  function mixin(obj) {
    for (var key in ResponseBase.prototype) {
      obj[key] = ResponseBase.prototype[key];
    }
    return obj;
  }
  ResponseBase.prototype.get = function (field) {
    return this.header[field.toLowerCase()];
  };
  ResponseBase.prototype._setHeaderProperties = function (header) {
    var ct = header['content-type'] || '';
    this.type = utils.type(ct);
    var params = utils.params(ct);
    for (var key in params) this[key] = params[key];
    this.links = {};
    try {
      if (header.link) {
        this.links = utils.parseLinks(header.link);
      }
    } catch (err) {}
  };
  ResponseBase.prototype._setStatusProperties = function (status) {
    var type = status / 100 | 0;
    this.status = this.statusCode = status;
    this.statusType = type;
    this.info = 1 == type;
    this.ok = 2 == type;
    this.redirect = 3 == type;
    this.clientError = 4 == type;
    this.serverError = 5 == type;
    this.error = 4 == type || 5 == type ? this.toError() : false;
    this.accepted = 202 == status;
    this.noContent = 204 == status;
    this.badRequest = 400 == status;
    this.unauthorized = 401 == status;
    this.notAcceptable = 406 == status;
    this.forbidden = 403 == status;
    this.notFound = 404 == status;
  };
});
System.registerDynamic("npm:superagent@3.8.1/lib/agent-base.js", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  function Agent() {
    this._defaults = [];
  }

  ["use", "on", "once", "set", "query", "type", "accept", "auth", "withCredentials", "sortQuery", "retry", "ok", "redirects", "timeout", "buffer", "serialize", "parse", "ca", "key", "pfx", "cert"].forEach(function (fn) {
    /** Default setting for all requests from this agent */
    Agent.prototype[fn] = function () /*varargs*/{
      this._defaults.push({ fn: fn, arguments: arguments });
      return this;
    };
  });

  Agent.prototype._setDefaults = function (req) {
    this._defaults.forEach(function (def) {
      req[def.fn].apply(req, def.arguments);
    });
  };

  module.exports = Agent;
});
System.registerDynamic('npm:superagent@3.8.1/lib/client.js', ['npm:component-emitter@1.2.1.js', 'npm:superagent@3.8.1/lib/request-base.js', 'npm:superagent@3.8.1/lib/is-object.js', 'npm:superagent@3.8.1/lib/response-base.js', 'npm:superagent@3.8.1/lib/agent-base.js'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var root;
  if (typeof window !== 'undefined') {
    root = window;
  } else if (typeof self !== 'undefined') {
    root = self;
  } else {
    console.warn("Using browser-only version of superagent in non-browser environment");
    root = this;
  }
  var Emitter = $__require('npm:component-emitter@1.2.1.js');
  var RequestBase = $__require('npm:superagent@3.8.1/lib/request-base.js');
  var isObject = $__require('npm:superagent@3.8.1/lib/is-object.js');
  var ResponseBase = $__require('npm:superagent@3.8.1/lib/response-base.js');
  var Agent = $__require('npm:superagent@3.8.1/lib/agent-base.js');
  function noop() {}
  ;
  var request = exports = module.exports = function (method, url) {
    if ('function' == typeof url) {
      return new exports.Request('GET', method).end(url);
    }
    if (1 == arguments.length) {
      return new exports.Request('GET', method);
    }
    return new exports.Request(method, url);
  };
  exports.Request = Request;
  request.getXHR = function () {
    if (root.XMLHttpRequest && (!root.location || 'file:' != root.location.protocol || !root.ActiveXObject)) {
      return new XMLHttpRequest();
    } else {
      try {
        return new ActiveXObject('Microsoft.XMLHTTP');
      } catch (e) {}
      try {
        return new ActiveXObject('Msxml2.XMLHTTP.6.0');
      } catch (e) {}
      try {
        return new ActiveXObject('Msxml2.XMLHTTP.3.0');
      } catch (e) {}
      try {
        return new ActiveXObject('Msxml2.XMLHTTP');
      } catch (e) {}
    }
    throw Error("Browser-only version of superagent could not find XHR");
  };
  var trim = ''.trim ? function (s) {
    return s.trim();
  } : function (s) {
    return s.replace(/(^\s*|\s*$)/g, '');
  };
  function serialize(obj) {
    if (!isObject(obj)) return obj;
    var pairs = [];
    for (var key in obj) {
      pushEncodedKeyValuePair(pairs, key, obj[key]);
    }
    return pairs.join('&');
  }
  function pushEncodedKeyValuePair(pairs, key, val) {
    if (val != null) {
      if (Array.isArray(val)) {
        val.forEach(function (v) {
          pushEncodedKeyValuePair(pairs, key, v);
        });
      } else if (isObject(val)) {
        for (var subkey in val) {
          pushEncodedKeyValuePair(pairs, key + '[' + subkey + ']', val[subkey]);
        }
      } else {
        pairs.push(encodeURIComponent(key) + '=' + encodeURIComponent(val));
      }
    } else if (val === null) {
      pairs.push(encodeURIComponent(key));
    }
  }
  request.serializeObject = serialize;
  function parseString(str) {
    var obj = {};
    var pairs = str.split('&');
    var pair;
    var pos;
    for (var i = 0, len = pairs.length; i < len; ++i) {
      pair = pairs[i];
      pos = pair.indexOf('=');
      if (pos == -1) {
        obj[decodeURIComponent(pair)] = '';
      } else {
        obj[decodeURIComponent(pair.slice(0, pos))] = decodeURIComponent(pair.slice(pos + 1));
      }
    }
    return obj;
  }
  request.parseString = parseString;
  request.types = {
    html: 'text/html',
    json: 'application/json',
    xml: 'text/xml',
    urlencoded: 'application/x-www-form-urlencoded',
    'form': 'application/x-www-form-urlencoded',
    'form-data': 'application/x-www-form-urlencoded'
  };
  request.serialize = {
    'application/x-www-form-urlencoded': serialize,
    'application/json': JSON.stringify
  };
  request.parse = {
    'application/x-www-form-urlencoded': parseString,
    'application/json': JSON.parse
  };
  function parseHeader(str) {
    var lines = str.split(/\r?\n/);
    var fields = {};
    var index;
    var line;
    var field;
    var val;
    for (var i = 0, len = lines.length; i < len; ++i) {
      line = lines[i];
      index = line.indexOf(':');
      if (index === -1) {
        continue;
      }
      field = line.slice(0, index).toLowerCase();
      val = trim(line.slice(index + 1));
      fields[field] = val;
    }
    return fields;
  }
  function isJSON(mime) {
    return (/[\/+]json\b/.test(mime)
    );
  }
  function Response(req) {
    this.req = req;
    this.xhr = this.req.xhr;
    this.text = this.req.method != 'HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text') || typeof this.xhr.responseType === 'undefined' ? this.xhr.responseText : null;
    this.statusText = this.req.xhr.statusText;
    var status = this.xhr.status;
    if (status === 1223) {
      status = 204;
    }
    this._setStatusProperties(status);
    this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());
    this.header['content-type'] = this.xhr.getResponseHeader('content-type');
    this._setHeaderProperties(this.header);
    if (null === this.text && req._responseType) {
      this.body = this.xhr.response;
    } else {
      this.body = this.req.method != 'HEAD' ? this._parseBody(this.text ? this.text : this.xhr.response) : null;
    }
  }
  ResponseBase(Response.prototype);
  Response.prototype._parseBody = function (str) {
    var parse = request.parse[this.type];
    if (this.req._parser) {
      return this.req._parser(this, str);
    }
    if (!parse && isJSON(this.type)) {
      parse = request.parse['application/json'];
    }
    return parse && str && (str.length || str instanceof Object) ? parse(str) : null;
  };
  Response.prototype.toError = function () {
    var req = this.req;
    var method = req.method;
    var url = req.url;
    var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';
    var err = new Error(msg);
    err.status = this.status;
    err.method = method;
    err.url = url;
    return err;
  };
  request.Response = Response;
  function Request(method, url) {
    var self = this;
    this._query = this._query || [];
    this.method = method;
    this.url = url;
    this.header = {};
    this._header = {};
    this.on('end', function () {
      var err = null;
      var res = null;
      try {
        res = new Response(self);
      } catch (e) {
        err = new Error('Parser is unable to parse the response');
        err.parse = true;
        err.original = e;
        if (self.xhr) {
          err.rawResponse = typeof self.xhr.responseType == 'undefined' ? self.xhr.responseText : self.xhr.response;
          err.status = self.xhr.status ? self.xhr.status : null;
          err.statusCode = err.status;
        } else {
          err.rawResponse = null;
          err.status = null;
        }
        return self.callback(err);
      }
      self.emit('response', res);
      var new_err;
      try {
        if (!self._isResponseOK(res)) {
          new_err = new Error(res.statusText || 'Unsuccessful HTTP response');
        }
      } catch (custom_err) {
        new_err = custom_err;
      }
      if (new_err) {
        new_err.original = err;
        new_err.response = res;
        new_err.status = res.status;
        self.callback(new_err, res);
      } else {
        self.callback(null, res);
      }
    });
  }
  Emitter(Request.prototype);
  RequestBase(Request.prototype);
  Request.prototype.type = function (type) {
    this.set('Content-Type', request.types[type] || type);
    return this;
  };
  Request.prototype.accept = function (type) {
    this.set('Accept', request.types[type] || type);
    return this;
  };
  Request.prototype.auth = function (user, pass, options) {
    if (1 === arguments.length) pass = '';
    if (typeof pass === 'object' && pass !== null) {
      options = pass;
      pass = '';
    }
    if (!options) {
      options = { type: 'function' === typeof btoa ? 'basic' : 'auto' };
    }
    var encoder = function (string) {
      if ('function' === typeof btoa) {
        return btoa(string);
      }
      throw new Error('Cannot use basic auth, btoa is not a function');
    };
    return this._auth(user, pass, options, encoder);
  };
  Request.prototype.query = function (val) {
    if ('string' != typeof val) val = serialize(val);
    if (val) this._query.push(val);
    return this;
  };
  Request.prototype.attach = function (field, file, options) {
    if (file) {
      if (this._data) {
        throw Error("superagent can't mix .send() and .attach()");
      }
      this._getFormData().append(field, file, options || file.name);
    }
    return this;
  };
  Request.prototype._getFormData = function () {
    if (!this._formData) {
      this._formData = new root.FormData();
    }
    return this._formData;
  };
  Request.prototype.callback = function (err, res) {
    if (this._shouldRetry(err, res)) {
      return this._retry();
    }
    var fn = this._callback;
    this.clearTimeout();
    if (err) {
      if (this._maxRetries) err.retries = this._retries - 1;
      this.emit('error', err);
    }
    fn(err, res);
  };
  Request.prototype.crossDomainError = function () {
    var err = new Error('Request has been terminated\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');
    err.crossDomain = true;
    err.status = this.status;
    err.method = this.method;
    err.url = this.url;
    this.callback(err);
  };
  Request.prototype.buffer = Request.prototype.ca = Request.prototype.agent = function () {
    console.warn("This is not supported in browser version of superagent");
    return this;
  };
  Request.prototype.pipe = Request.prototype.write = function () {
    throw Error("Streaming is not supported in browser version of superagent");
  };
  Request.prototype._isHost = function _isHost(obj) {
    return obj && 'object' === typeof obj && !Array.isArray(obj) && Object.prototype.toString.call(obj) !== '[object Object]';
  };
  Request.prototype.end = function (fn) {
    if (this._endCalled) {
      console.warn("Warning: .end() was called twice. This is not supported in superagent");
    }
    this._endCalled = true;
    this._callback = fn || noop;
    this._finalizeQueryString();
    return this._end();
  };
  Request.prototype._end = function () {
    var self = this;
    var xhr = this.xhr = request.getXHR();
    var data = this._formData || this._data;
    this._setTimeouts();
    xhr.onreadystatechange = function () {
      var readyState = xhr.readyState;
      if (readyState >= 2 && self._responseTimeoutTimer) {
        clearTimeout(self._responseTimeoutTimer);
      }
      if (4 != readyState) {
        return;
      }
      var status;
      try {
        status = xhr.status;
      } catch (e) {
        status = 0;
      }
      if (!status) {
        if (self.timedout || self._aborted) return;
        return self.crossDomainError();
      }
      self.emit('end');
    };
    var handleProgress = function (direction, e) {
      if (e.total > 0) {
        e.percent = e.loaded / e.total * 100;
      }
      e.direction = direction;
      self.emit('progress', e);
    };
    if (this.hasListeners('progress')) {
      try {
        xhr.onprogress = handleProgress.bind(null, 'download');
        if (xhr.upload) {
          xhr.upload.onprogress = handleProgress.bind(null, 'upload');
        }
      } catch (e) {}
    }
    try {
      if (this.username && this.password) {
        xhr.open(this.method, this.url, true, this.username, this.password);
      } else {
        xhr.open(this.method, this.url, true);
      }
    } catch (err) {
      return this.callback(err);
    }
    if (this._withCredentials) xhr.withCredentials = true;
    if (!this._formData && 'GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !this._isHost(data)) {
      var contentType = this._header['content-type'];
      var serialize = this._serializer || request.serialize[contentType ? contentType.split(';')[0] : ''];
      if (!serialize && isJSON(contentType)) {
        serialize = request.serialize['application/json'];
      }
      if (serialize) data = serialize(data);
    }
    for (var field in this.header) {
      if (null == this.header[field]) continue;
      if (this.header.hasOwnProperty(field)) xhr.setRequestHeader(field, this.header[field]);
    }
    if (this._responseType) {
      xhr.responseType = this._responseType;
    }
    this.emit('request', this);
    xhr.send(typeof data !== 'undefined' ? data : null);
    return this;
  };
  request.agent = function () {
    return new Agent();
  };
  ["GET", "POST", "OPTIONS", "PATCH", "PUT", "DELETE"].forEach(function (method) {
    Agent.prototype[method.toLowerCase()] = function (url, fn) {
      var req = new request.Request(method, url);
      this._setDefaults(req);
      if (fn) {
        req.end(fn);
      }
      return req;
    };
  });
  Agent.prototype.del = Agent.prototype['delete'];
  request.get = function (url, data, fn) {
    var req = request('GET', url);
    if ('function' == typeof data) fn = data, data = null;
    if (data) req.query(data);
    if (fn) req.end(fn);
    return req;
  };
  request.head = function (url, data, fn) {
    var req = request('HEAD', url);
    if ('function' == typeof data) fn = data, data = null;
    if (data) req.query(data);
    if (fn) req.end(fn);
    return req;
  };
  request.options = function (url, data, fn) {
    var req = request('OPTIONS', url);
    if ('function' == typeof data) fn = data, data = null;
    if (data) req.send(data);
    if (fn) req.end(fn);
    return req;
  };
  function del(url, data, fn) {
    var req = request('DELETE', url);
    if ('function' == typeof data) fn = data, data = null;
    if (data) req.send(data);
    if (fn) req.end(fn);
    return req;
  }
  request['del'] = del;
  request['delete'] = del;
  request.patch = function (url, data, fn) {
    var req = request('PATCH', url);
    if ('function' == typeof data) fn = data, data = null;
    if (data) req.send(data);
    if (fn) req.end(fn);
    return req;
  };
  request.post = function (url, data, fn) {
    var req = request('POST', url);
    if ('function' == typeof data) fn = data, data = null;
    if (data) req.send(data);
    if (fn) req.end(fn);
    return req;
  };
  request.put = function (url, data, fn) {
    var req = request('PUT', url);
    if ('function' == typeof data) fn = data, data = null;
    if (data) req.send(data);
    if (fn) req.end(fn);
    return req;
  };
});
System.registerDynamic("npm:superagent@3.8.1.js", ["npm:superagent@3.8.1/lib/client.js"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("npm:superagent@3.8.1/lib/client.js");
});
System.registerDynamic("uapp/Csrf.js", ["npm:superagent@3.8.1.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const SuperAgent = $__require("npm:superagent@3.8.1.js");
    exports.token = '';
    function load() {
        return new Promise((resolve, reject) => {
            SuperAgent.get('/csrf').set('Accept', 'application/json').end((err, res) => {
                if (res.status === 401) {
                    window.location.href = '/login';
                    resolve();
                    return;
                }
                if (err) {
                    reject(err);
                    return;
                }
                exports.token = res.body.token;
                resolve();
            });
        });
    }
    exports.load = load;
    
});
System.registerDynamic("uapp/App.js", ["npm:react@15.6.1.js", "npm:react-dom@15.6.1.js", "npm:@blueprintjs/core@1.33.0.js", "uapp/components/Main.js", "uapp/Csrf.js"], true, function ($__require, exports, module) {
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", { value: true });
    const React = $__require("npm:react@15.6.1.js");
    const ReactDOM = $__require("npm:react-dom@15.6.1.js");
    const Blueprint = $__require("npm:@blueprintjs/core@1.33.0.js");
    const Main_1 = $__require("uapp/components/Main.js");
    const Csrf = $__require("uapp/Csrf.js");
    document.body.className = 'pt-dark';
    Csrf.load().then(() => {
        Blueprint.FocusStyleManager.onlyShowFocusOnTabs();
        ReactDOM.render(React.createElement("div", null, React.createElement(Main_1.default, null)), document.getElementById('app'));
    });
    
});
//# sourceMappingURL=build.js.map